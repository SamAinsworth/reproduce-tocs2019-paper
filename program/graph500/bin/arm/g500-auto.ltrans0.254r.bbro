
;; Function dcmp (dcmp.lto_priv.13, funcdef_no=8, decl_uid=2793, cgraph_uid=0, symbol_order=94)



try_optimize_cfg iteration 1

rescanning insn with uid = 15.
rescanning insn with uid = 15.
rescanning insn with uid = 18.
rescanning insn with uid = 18.
rescanning insn with uid = 21.
rescanning insn with uid = 21.
STC - round 1
Getting bb 2
Basic block 2 was visited in trace 0
  Possible start of next round: 6 (key: -3900)
Basic block 3 was visited in trace 0
  Possible start of next round: 7 (key: -244)
Basic block 4 was visited in trace 0
  Possible start of this round: 8 (key: -9998)
  Possible start of next round: 5 (key: -2)
Changing key for bb 8 from -9998 to -1595398.
Changing key for bb 5 from -2 to -1000202.
Getting bb 8
Basic block 8 was visited in trace 1
STC - round 2
Getting bb 5
  Possible start point of next round: 5 (key: -1000202)
Getting bb 6
Basic block 6 was visited in trace 2
Getting bb 7
  Possible start point of next round: 7 (key: -244)
STC - round 3
Getting bb 5
  Possible start point of next round: 5 (key: -1000202)
Getting bb 7
  Possible start point of next round: 7 (key: -244)
STC - round 4
Getting bb 5
Basic block 5 was visited in trace 3
Getting bb 7
Basic block 7 was visited in trace 4
Trace 1 (round 1):  2 [10000] 3 [6100] 4 [5856]
Trace 2 (round 1):  8 [9998]
Trace 3 (round 2):  6 [3900]
Trace 4 (round 4):  5 [2]
Trace 5 (round 4):  7 [244]
Connection: 4 8
Connection: 7 8 
changing bb of uid 104
  unscanned insn
changing bb of uid 103
  unscanned insn
scanning new insn with uid = 103.
Redirecting fallthru edge 7->8 to 9
Duplicated bb 8 (created bb 9)
Final order:
2 3 4 8 6 5 7 9 
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6100]
 4 bb 4  [5856]
 5 bb 8  [9754]
 6 bb 6  [3900]
 7 bb 5  [2]
 8 bb 7  [244]
 9 duplicate of 8  [244]

10 basic blocks, 11 edges.
basic block 0, loop depth 0, count 0, freq 10000, maybe hot
 prev block (nil), next block 2, flags: (RTL)
 pred:      
;; bb 0 artificial_defs: { d7(0){ }d11(1){ }d16(2){ }d19(3){ }d22(4){ }d25(5){ }d28(6){ }d31(7){ }d34(8){ }d59(18){ }d60(29){ }d63(30){ }d64(31){ }d68(32){ }d72(33){ }d75(34){ }d78(35){ }d81(36){ }d84(37){ }d87(38){ }d90(39){ }d123(64){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp]
;; live  in  	
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp]
;; live  kill	

;; lr  out 	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

 succ:       2 [100.0%]  (FALLTHRU)

basic block 2, loop depth 0, count 0, freq 10000, maybe hot
 prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
 pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp]
;; lr  def 	 32 [v0] 33 [v1] 66 [cc]
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 32 [v0] 33 [v1] 66 [cc]
;; live  kill	

(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 62 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 62 4 63 2 (var_location:DI D#6 (reg:DI 0 x0 [ a ])) -1
     (nil))
(debug_insn 63 62 10 2 (var_location:DI D#7 (reg:DI 1 x1 [ b ])) -1
     (nil))
(insn:TI 10 63 11 2 (set (reg/v:DF 33 v1 [orig:74 da ] [74])
        (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0 [ a ])
        (nil)))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 33 v1 [orig:74 da ] [74])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 32 v0 [orig:75 db ] [75])
        (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ b ])
        (nil)))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 32 v0 [orig:75 db ] [75])) graph500.c:240 -1
     (nil))
(insn:TI 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 33 v1 [orig:74 da ] [74])
            (reg/v:DF 32 v0 [orig:75 db ] [75]))) graph500.c:241 395 {*cmpedf}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
;; lr  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; live  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]

 succ:       6 [39.0%]  (CAN_FALLTHRU)
             3 [61.0%]  (FALLTHRU,CAN_FALLTHRU)

basic block 3, loop depth 0, count 0, freq 6100, maybe hot
 prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
 pred:       2 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; lr  use 	 29 [x29] 31 [sp] 66 [cc]
;; lr  def 	
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; live  gen 	
;; live  kill	

(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 18 16 19 3 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 57)
;; lr  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; live  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]

 succ:       8 [4.0%]  (CAN_FALLTHRU)
             4 [96.0%]  (FALLTHRU,CAN_FALLTHRU)

basic block 4, loop depth 0, count 0, freq 5856, maybe hot
 prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
 pred:       3 [96.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp] 32 [v0] 33 [v1]
;; lr  def 	 0 [x0] 66 [cc]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; live  gen 	 0 [x0] 66 [cc]
;; live  kill	

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 20 19 7 4 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 33 v1 [orig:74 da ] [74])
            (reg/v:DF 32 v0 [orig:75 db ] [75]))) graph500.c:243 393 {*cmpdf}
     (expr_list:REG_DEAD (reg/v:DF 33 v1 [orig:74 da ] [74])
        (expr_list:REG_DEAD (reg/v:DF 32 v0 [orig:75 db ] [75])
            (nil))))
(insn 7 20 21 4 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int 0 [0])) graph500.c:243 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn:TI 21 7 22 4 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) graph500.c:243 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFP 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 99)
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

 succ:       5 [100.0%]  (CAN_FALLTHRU)
             7 [0.0%]  (FALLTHRU,CAN_FALLTHRU)

basic block 5, loop depth 0, count 0, freq 9754, maybe hot
Invalid sum of incoming frequencies 5854, should be 9754
 prev block 4, next block 6, flags: (REACHABLE, RTL)
 pred:       4 [100.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	
;; live  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	

(code_label 99 50 98 5 7 "" [1 uses])
(note 98 99 97 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 97 98 104 5 (simple_return) graph500.c:247 21 {simple_return}
     (nil)
 -> simple_return)
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

 succ:       EXIT [100.0%] 

basic block 6, loop depth 0, count 0, freq 3900, maybe hot
 prev block 5, next block 7, flags: (REACHABLE, RTL)
 pred:       2 [39.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 0 [x0]
;; live  kill	

(code_label 53 41 52 6 3 "" [1 uses])
(note 52 53 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 52 94 6 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int 1 [0x1])) graph500.c:241 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 94 5 95 6 (use (reg/i:SI 0 x0)) -1
     (nil))
(jump_insn 95 94 57 6 (simple_return) 21 {simple_return}
     (nil)
 -> simple_return)
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

 succ:       EXIT [100.0%] 

basic block 7, loop depth 0, count 0, freq 2
 prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
 pred:       4 [0.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp]
;; lr  use 	 29 [x29] 30 [x30] 31 [sp]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 30 [x30] 31 [sp]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 29 [x29] 31 [sp]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]

(note 22 21 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 32 22 23 7 NOTE_INSN_DELETED)
(debug_insn 23 32 24 7 (var_location:DI D#2 (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 24 23 25 7 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 25 24 26 7 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 7 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 7 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 7 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 7 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 88 7 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn/f:TI 88 30 89 7 (parallel [
            (set (reg/f:DI 31 sp)
                (plus:DI (reg/f:DI 31 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (set/f (mem:DI (plus:DI (reg/f:DI 31 sp)
                        (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
                (reg/f:DI 29 x29))
            (set/f (mem:DI (plus:DI (reg/f:DI 31 sp)
                        (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
                (reg:DI 30 x30))
        ]) graph500.c:238 75 {storewb_pairdi_di}
     (expr_list:REG_DEAD (reg:DI 30 x30)
        (nil)))
(insn/f 89 88 90 7 (set (reg/f:DI 29 x29)
        (plus:DI (reg/f:DI 31 sp)
            (const_int 0 [0]))) graph500.c:238 95 {*adddi3_aarch64}
     (nil))
(insn:TI 90 89 91 7 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:DI 31 sp)
                (reg/f:DI 29 x29)
            ] UNSPEC_PRLG_STK)) graph500.c:238 862 {stack_tie}
     (nil))
(note 91 90 33 7 NOTE_INSN_PROLOGUE_END)
(insn 33 91 31 7 (set (reg/f:DI 0 x0 [83])
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 48 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))
        (nil)))
(insn:TI 31 33 35 7 (set (reg/f:DI 2 x2 [81])
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))
        (nil)))
(insn 35 31 36 7 (set (reg:DI 2 x2)
        (lo_sum:DI (reg/f:DI 2 x2 [81])
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
        (nil)))
(insn:TI 36 35 37 7 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 37 36 38 7 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 0 x0 [83])
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
        (nil)))
(call_insn:TI 38 37 39 7 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 7 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 7 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 53 7 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;; lr  out 	 31 [sp]
;; live  out 	 31 [sp]

 succ:      

basic block 8, loop depth 0, count 0, freq 244, maybe hot
 prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
 pred:       3 [4.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 0 [x0]
;; live  kill	

(code_label 57 95 56 8 4 "" [1 uses])
(note 56 57 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 6 56 50 8 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 47 {*movsi_aarch64}
     (nil))
(insn 50 6 99 8 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

 succ:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)

basic block 9, loop depth 0, count 0, freq 244, maybe hot
 prev block 8, next block 1, flags: (REACHABLE, RTL)
 pred:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	
;; lr  use 	
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	

(note 104 97 103 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 103 104 0 9 (simple_return) graph500.c:247 21 {simple_return}
     (nil)
 -> simple_return)
;; lr  out 	
;; live  out 	

 succ:       EXIT [100.0%] 

basic block 1, loop depth 0, count 0, freq 10000, maybe hot
Invalid sum of incoming frequencies 13898, should be 10000
 prev block 9, next block (nil), flags: (REACHABLE, RTL)
 pred:       5 [100.0%] 
             6 [100.0%] 
             9 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(29){ }u-1(30){ }u-1(31){ }u-1(64){ }}
;; lr  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  def 	
;; live  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	

;; lr  out 	
;; live  out 	

 succ:      




try_optimize_cfg iteration 1

Merging block 9 into block 8...
verify found no changes in insn with uid = 103.
Merged blocks 8 and 9.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

Emitting label for block 7
rescanning insn with uid = 21.
Reordered sequence:
 2 bb 2  [10000]
 3 bb 3  [6100]
 4 bb 4  [5856]
 5 bb 5  [9754]
 6 bb 6  [3900]
 7 bb 7  [2]
 8 bb 8  [244]


dcmp

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp]
;;  regular block artificial uses 	 29 [x29] 31 [sp]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp]
;;  exit block uses 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 16[x16] 17[x17] 29[x29] 30[x30] 31[sp] 32[v0] 33[v1] 66[cc]
;;  ref usage 	r0={8d,7u} r1={4d,3u} r2={5d,2u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={3d} r29={2d,10u} r30={3d,2u} r31={2d,16u} r32={4d,3u} r33={4d,3u} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,1u} r66={4d,3u} 
;;    total ref usage 180{130d,50u,0e} in 39{37 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp]
;; lr  def 	 32 [v0] 33 [v1] 66 [cc]
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 32 [v0] 33 [v1] 66 [cc]
;; live  kill	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 3 2 NOTE_INSN_DELETED)
(note 3 2 4 2 NOTE_INSN_DELETED)
(note 4 3 62 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 62 4 63 2 (var_location:DI D#6 (reg:DI 0 x0 [ a ])) -1
     (nil))
(debug_insn 63 62 10 2 (var_location:DI D#7 (reg:DI 1 x1 [ b ])) -1
     (nil))
(insn:TI 10 63 11 2 (set (reg/v:DF 33 v1 [orig:74 da ] [74])
        (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0 [ a ])
        (nil)))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 33 v1 [orig:74 da ] [74])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 32 v0 [orig:75 db ] [75])
        (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ b ])
        (nil)))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 32 v0 [orig:75 db ] [75])) graph500.c:240 -1
     (nil))
(insn:TI 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 33 v1 [orig:74 da ] [74])
            (reg/v:DF 32 v0 [orig:75 db ] [75]))) graph500.c:241 395 {*cmpedf}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
;;  succ:       6 [39.0%]  (CAN_FALLTHRU)
;;              3 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; live  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; lr  use 	 29 [x29] 31 [sp] 66 [cc]
;; lr  def 	
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp] 66 [cc]
;; live  gen 	
;; live  kill	
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 18 16 19 3 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 57)
;;  succ:       8 [4.0%]  (CAN_FALLTHRU)
;;              4 [96.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; live  out 	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]

;; basic block 4, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [96.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp] 32 [v0] 33 [v1]
;; lr  def 	 0 [x0] 66 [cc]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 64 [sfp]
;; live  gen 	 0 [x0] 66 [cc]
;; live  kill	
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 20 19 7 4 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 33 v1 [orig:74 da ] [74])
            (reg/v:DF 32 v0 [orig:75 db ] [75]))) graph500.c:243 393 {*cmpdf}
     (expr_list:REG_DEAD (reg/v:DF 33 v1 [orig:74 da ] [74])
        (expr_list:REG_DEAD (reg/v:DF 32 v0 [orig:75 db ] [75])
            (nil))))
(insn 7 20 21 4 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int 0 [0])) graph500.c:243 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn:TI 21 7 98 4 (set (pc)
        (if_then_else (ne (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 107)
            (pc))) graph500.c:243 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFP 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 107)
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              7 [0.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

;; basic block 5, loop depth 0, count 0, freq 9754, maybe hot
;; Invalid sum of incoming frequencies 5854, should be 9754
;;  prev block 4, next block 6, flags: (REACHABLE, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	
;; live  in  	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	
(note 98 21 97 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn:TI 97 98 96 5 (simple_return) graph500.c:247 21 {simple_return}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

(barrier 96 97 53)
;; basic block 6, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL)
;;  pred:       2 [39.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 0 [x0]
;; live  kill	
(code_label 53 96 52 6 3 "" [1 uses])
(note 52 53 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 52 94 6 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int 1 [0x1])) graph500.c:241 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 94 5 95 6 (use (reg/i:SI 0 x0)) -1
     (nil))
(jump_insn 95 94 85 6 (simple_return) 21 {simple_return}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

(barrier 85 95 107)
;; basic block 7, loop depth 0, count 0, freq 2
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp]
;; lr  use 	 29 [x29] 30 [x30] 31 [sp]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 30 [x30] 31 [sp]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 29 [x29] 31 [sp]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 107 85 22 7 9 "" [1 uses])
(note 22 107 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 32 22 23 7 NOTE_INSN_DELETED)
(debug_insn 23 32 24 7 (var_location:DI D#2 (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 24 23 25 7 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 25 24 26 7 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 7 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 7 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 7 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 7 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 88 7 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn/f:TI 88 30 89 7 (parallel [
            (set (reg/f:DI 31 sp)
                (plus:DI (reg/f:DI 31 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (set/f (mem:DI (plus:DI (reg/f:DI 31 sp)
                        (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
                (reg/f:DI 29 x29))
            (set/f (mem:DI (plus:DI (reg/f:DI 31 sp)
                        (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
                (reg:DI 30 x30))
        ]) graph500.c:238 75 {storewb_pairdi_di}
     (expr_list:REG_DEAD (reg:DI 30 x30)
        (nil)))
(insn/f 89 88 90 7 (set (reg/f:DI 29 x29)
        (plus:DI (reg/f:DI 31 sp)
            (const_int 0 [0]))) graph500.c:238 95 {*adddi3_aarch64}
     (nil))
(insn:TI 90 89 91 7 (set (mem:BLK (scratch) [0  A8])
        (unspec:BLK [
                (reg/f:DI 31 sp)
                (reg/f:DI 29 x29)
            ] UNSPEC_PRLG_STK)) graph500.c:238 862 {stack_tie}
     (nil))
(note 91 90 33 7 NOTE_INSN_PROLOGUE_END)
(insn 33 91 31 7 (set (reg/f:DI 0 x0 [83])
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 48 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))
        (nil)))
(insn:TI 31 33 35 7 (set (reg/f:DI 2 x2 [81])
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_EQUIV (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))
        (nil)))
(insn 35 31 36 7 (set (reg:DI 2 x2)
        (lo_sum:DI (reg/f:DI 2 x2 [81])
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
        (nil)))
(insn:TI 36 35 37 7 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 37 36 38 7 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 0 x0 [83])
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
        (nil)))
(call_insn:TI 38 37 39 7 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 7 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 7 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 42 7 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp]
;; live  out 	 31 [sp]

(barrier 42 41 57)
;; basic block 8, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(29){ }u-1(31){ }}
;; lr  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; lr  use 	 29 [x29] 31 [sp]
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  gen 	 0 [x0]
;; live  kill	
(code_label 57 42 56 8 4 "" [1 uses])
(note 56 57 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn:TI 6 56 50 8 (set (reg:SI 0 x0 [orig:73 D.3115 ] [73])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 47 {*movsi_aarch64}
     (nil))
(insn 50 6 103 8 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
(jump_insn 103 50 106 8 (simple_return) graph500.c:247 21 {simple_return}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]
;; live  out 	 0 [x0] 29 [x29] 30 [x30] 31 [sp] 64 [sfp]

(barrier 106 103 86)
(note 86 106 87 NOTE_INSN_DELETED)
(note 87 86 0 NOTE_INSN_DELETED)
