
;; Function dcmp (dcmp.lto_priv.13, funcdef_no=8, decl_uid=2793, cgraph_uid=0, symbol_order=94)

dcmp (const void * a, const void * b)
{
  const double db;
  const double da;
  int _1;
  struct _IO_FILE * _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  da_4 = MEM[(const double *)a_3(D)];
  # DEBUG da => da_4
  db_6 = MEM[(const double *)b_5(D)];
  # DEBUG db => db_6
  if (da_4 > db_6)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  if (da_4 < db_6)
    goto <bb 6>;
  else
    goto <bb 4>;
;;    succ:       6
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  if (da_4 == db_6)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  # DEBUG D#2 => a_3(D)
  # DEBUG D#3 => b_5(D)
  # DEBUG D#4 s=> b
  # DEBUG b => D#4
  # DEBUG D#5 s=> a
  # DEBUG a => D#5
  _9 = stderr;
  # DEBUG __stream => _9
  # DEBUG __fmt => "No NaNs permitted in output.\n"
  __fprintf_chk (_9, 1, "No NaNs permitted in output.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       2
;;                3
;;                4
  # _1 = PHI <1(2), -1(3), 0(4)>
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (a_3(D) - 3 )
Partition 4 (da_4 - 4 )
Partition 5 (b_5(D) - 5 )
Partition 6 (db_6 - 6 )
Partition 9 (_9 - 9 )


Partition map 

Partition 0 (a_3(D) - 3 )
Partition 1 (b_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (a_3(D) - 3 )
Partition 1 (b_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (a_3(D) - 3 )
Partition 2 (da_4 - 4 )
Partition 3 (b_5(D) - 5 )
Partition 4 (db_6 - 6 )
Partition 5 (_9 - 9 )


Replacing Expressions
_9 replace with --> _9 = stderr;


dcmp (const void * a, const void * b)
{
  const double db;
  const double da;
  int _1;
  struct _IO_FILE * _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  da_4 = MEM[(const double *)a_3(D)];
  # DEBUG da => da_4
  db_6 = MEM[(const double *)b_5(D)];
  # DEBUG db => db_6
  if (da_4 > db_6)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  if (da_4 < db_6)
    goto <bb 6>;
  else
    goto <bb 4>;
;;    succ:       6
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  if (da_4 == db_6)
    goto <bb 6>;
  else
    goto <bb 5>;
;;    succ:       6
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  # DEBUG D#2 => a_3(D)
  # DEBUG D#3 => b_5(D)
  # DEBUG D#4 s=> b
  # DEBUG b => D#4
  # DEBUG D#5 s=> a
  # DEBUG a => D#5
  _9 = stderr;
  # DEBUG __stream => _9
  # DEBUG __fmt => "No NaNs permitted in output.\n"
  __fprintf_chk (_9, 1, "No NaNs permitted in output.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       2
;;                3
;;                4
  # _1 = PHI <1(2), -1(3), 0(4)>
  return _1;
;;    succ:       EXIT

}


Inserting a value copy on edge BB2->BB6 : PART.0 = 1
Inserting a value copy on edge BB3->BB6 : PART.0 = -1
Inserting a value copy on edge BB4->BB6 : PART.0 = 0

;; Generating RTL for gimple basic block 2

;; da_4 = MEM[(const double *)a_3(D)];

(insn 10 9 0 (set (reg/v:DF 74 [ da ])
        (mem:DF (reg/v/f:DI 78 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 -1
     (nil))

;; # DEBUG da => da_4

(debug_insn 11 10 0 (var_location:DF da (const_int 0 [0])) graph500.c:239 -1
     (nil))
;; db_6 = MEM[(const double *)b_5(D)];

(insn 12 11 0 (set (reg/v:DF 75 [ db ])
        (mem:DF (reg/v/f:DI 79 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 -1
     (nil))

;; # DEBUG db => db_6

(debug_insn 13 12 0 (var_location:DF db (const_int 0 [0])) graph500.c:240 -1
     (nil))
;; if (da_4 > db_6)

(insn 14 13 15 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:241 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:241 -1
     (int_list:REG_BR_PROB 3900 (nil)))

;; Generating RTL for gimple basic block 3

;; if (da_4 < db_6)

(insn 17 16 18 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:242 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:242 -1
     (int_list:REG_BR_PROB 400 (nil)))

;; Generating RTL for gimple basic block 4

;; if (da_4 == db_6)

(insn 20 19 21 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:243 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:243 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 5

;; # DEBUG D#2 => a_3(D)

(debug_insn 23 22 0 (var_location:DI D#2 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#3 => b_5(D)

(debug_insn 24 23 0 (var_location:DI D#3 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#4 s=> b

(debug_insn 25 24 0 (var_location:DI D#4 (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG b => D#4

(debug_insn 26 25 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#5 s=> a

(debug_insn 27 26 0 (var_location:DI D#5 (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG a => D#5

(debug_insn 28 27 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG __stream => _9

(debug_insn 29 28 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:244 -1
     (nil))
;; # DEBUG __fmt => "No NaNs permitted in output.\n"

(debug_insn 30 29 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:244 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 82) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_9, 1, "No NaNs permitted in output.\n");

(insn 31 30 32 (set (reg:DI 81)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 32 31 33 (set (reg/f:DI 80)
        (lo_sum:DI (reg:DI 81)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
        (nil)))

(insn 33 32 34 (set (reg:DI 83)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 -1
     (nil))

(insn 34 33 35 (set (reg/f:DI 82)
        (lo_sum:DI (reg:DI 83)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 35 34 36 (set (reg:DI 2 x2)
        (reg/f:DI 80)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 36 35 37 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 37 36 38 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 82) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 38 37 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 39 38 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:244 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 40 39 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:244 -1
     (nil))
;; abort ();

(call_insn 41 40 42 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 42 41 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 43 42 44 2 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 45 44 46 (set (reg:SI 77 [ <retval> ])
        (reg:SI 73 [ D.3115 ])) -1
     (nil))

(jump_insn 46 45 47 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 47 46 0)
Edge 2->6 redirected to 9
Edge 3->6 redirected to 10
Edge 4->6 redirected to 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 46.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 78 [ a ])
        (reg:DI 0 x0 [ a ])) graph500.c:238 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 79 [ b ])
        (reg:DI 1 x1 [ b ])) graph500.c:238 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/v:DF 74 [ da ])
        (mem:DF (reg/v/f:DI 78 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 74 [ da ])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 75 [ db ])
        (mem:DF (reg/v/f:DI 79 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 75 [ db ])) graph500.c:240 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:241 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
;;  succ:       7 [39.0%] 
;;              4 [61.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:242 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (int_list:REG_BR_PROB 400 (nil))
 -> 57)
;;  succ:       8 [4.0%] 
;;              5 [96.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [96.0%]  (FALLTHRU)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:243 -1
     (nil))
(jump_insn 21 20 22 5 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) graph500.c:243 7 {condjump}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 61)
;;  succ:       9 [100.0%] 
;;              6 [0.0%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 2
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0%]  (FALLTHRU)
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 6 (var_location:DI D#2 (reg/v/f:DI 78 [ a ])) -1
     (nil))
(debug_insn 24 23 25 6 (var_location:DI D#3 (reg/v/f:DI 79 [ b ])) -1
     (nil))
(debug_insn 25 24 26 6 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 6 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 6 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 6 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 6 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 31 6 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 81)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 32 31 33 6 (set (reg/f:DI 80)
        (lo_sum:DI (reg:DI 81)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
        (nil)))
(insn 33 32 34 6 (set (reg:DI 83)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 82)
        (lo_sum:DI (reg:DI 83)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 35 34 36 6 (set (reg:DI 2 x2)
        (reg/f:DI 80)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 36 35 37 6 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 82) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 38 37 39 6 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 6 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 6 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 42 6 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 42 41 53)
;; basic block 7, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%] 
(code_label 53 42 52 7 3 "" [1 uses])
(note 52 53 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 52 54 7 (set (reg:SI 73 [ D.3115 ])
        (const_int 1 [0x1])) graph500.c:241 -1
     (nil))
(jump_insn 54 5 55 7 (set (pc)
        (label_ref 43)) -1
     (nil)
 -> 43)
;;  succ:       10 [100.0%] 

(barrier 55 54 57)
;; basic block 8, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [4.0%] 
(code_label 57 55 56 8 4 "" [1 uses])
(note 56 57 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 56 58 8 (set (reg:SI 73 [ D.3115 ])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 -1
     (nil))
(jump_insn 58 6 59 8 (set (pc)
        (label_ref 43)) -1
     (nil)
 -> 43)
;;  succ:       10 [100.0%] 

(barrier 59 58 61)
;; basic block 9, loop depth 0, count 0, freq 5854, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
(code_label 61 59 60 9 5 "" [1 uses])
(note 60 61 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 60 43 9 (set (reg:SI 73 [ D.3115 ])
        (const_int 0 [0])) graph500.c:243 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 9998, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
;;              8 [100.0%] 
(code_label 43 7 44 10 2 "" [2 uses])
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 49 10 (set (reg:SI 77 [ <retval> ])
        (reg:SI 73 [ D.3115 ])) -1
     (nil))
(insn 49 45 50 10 (set (reg/i:SI 0 x0)
        (reg:SI 77 [ <retval> ])) graph500.c:247 -1
     (nil))
(insn 50 49 0 10 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function main (main, funcdef_no=10, decl_uid=2796, cgraph_uid=2, symbol_order=92) (executed once)

main (int argc, char * * argv)
{
  unsigned long ivtmp.134;
  unsigned long ivtmp.110;
  unsigned long ivtmp.101;
  unsigned long ivtmp.94;
  unsigned long ivtmp.84;
  unsigned long ivtmp.64;
  vector(2) long int * vectp.48;
  vector(2) long int vect__599.46;
  vector(2) long int vect_patt_647.45;
  vector(2) long int vect_cst_.42;
  vector(2) unsigned long vect_patt_839.41;
  vector(2) long int vect_vec_iv_.40;
  vector(2) long int vect_cst_.38;
  long int stmp_var_.37;
  unsigned long ratio_mult_vf.35;
  unsigned long bnd.34;
  unsigned long niters.33;
  unsigned long prologue_after_cost_adjust.32;
  unsigned long prolog_loop_niters.31;
  unsigned long niters.29;
  uint_fast32_t prng_state_store_z2_lsm.17;
  uint_fast32_t prng_state_store_z3_lsm.15;
  uint_fast32_t prng_state_store_z4_lsm.13;
  uint_fast32_t prng_state_store_z5_lsm.11;
  bool prng_state_store_z1_lsm.10;
  uint_fast32_t prng_state_store_z1_lsm.9;
  long unsigned int state$z5;
  long unsigned int state$z2;
  long unsigned int state$z1;
  int64_t k;
  int64_t parent;
  int64_t nhop;
  int64_t lastlvl;
  static const char __PRETTY_FUNCTION__[15] = "compute_levels";
  int err;
  int nedge_traversed;
  int64_t * restrict seen_edge;
  int64_t * restrict level;
  const int64_t nv;
  int64_t k;
  const int64_t i;
  const int64_t j;
  int64_t lvldiff;
  double out;
  struct timespec ts;
  int m;
  int err;
  int64_t k;
  int64_t t;
  ssize_t sz;
  int64_t * bfs_tree;
  int64_t max_bfsvtx;
  static const char __PRETTY_FUNCTION__[8] = "run_bfs";
  uint64_t v;
  uint64_t x;
  uint64_t x;
  uint64_t v;
  uint64_t x;
  uint64_t x;
  uint32_t val;
  uint_least8_t val;
  int byte_index;
  uint_least64_t exponent_middle;
  int64_t base_tgt;
  int64_t base_src;
  int64_t nverts;
  int64_t start_edge;
  struct mrg_state new_state;
  struct mrg_state new_state;
  uint64_t val1;
  uint64_t val0;
  struct packed_edge * edges;
  long int seed;
  int c;
  int err;
  int nset;
  int whichset;
  long double sum;
  ssize_t sz;
  static const char __PRETTY_FUNCTION__[5] = "main";
  int64_t desired_nedge;
  int _1;
  long int _11;
  unsigned int _12;
  long int _13;
  long int _17;
  char * _19;
  int _20;
  struct _IO_FILE * _21;
  int _22;
  long unsigned int _24;
  long unsigned int _25;
  struct packed_edge * _30;
  long int _31;
  long int _32;
  int _33;
  double _34;
  double _35;
  double _36;
  double _39;
  long int _42;
  int _43;
  long unsigned int _44;
  double _47;
  int _49;
  struct _IO_FILE * _50;
  long int _52;
  long unsigned int _53;
  long unsigned int _54;
  struct packed_edge * _56;
  struct packed_edge * _61;
  long int _63;
  long int _64;
  long int _65;
  double _66;
  double _67;
  double _68;
  double _69;
  double _70;
  double _71;
  int _72;
  int _76;
  sizetype _78;
  long int _80;
  char * _89;
  long unsigned int _101;
  void * _103;
  void * _112;
  int _113;
  char * _117;
  char * _119;
  char * _120;
  struct _IO_FILE * _121;
  char * _122;
  char * _123;
  struct _IO_FILE * _124;
  int * _125;
  char * _126;
  long int _127;
  int _128;
  struct _IO_FILE * _129;
  char * _130;
  long int _131;
  struct _IO_FILE * _132;
  int * _133;
  char * _134;
  long int _135;
  int _136;
  struct _IO_FILE * _137;
  char * _138;
  long int _139;
  struct _IO_FILE * _140;
  int * _141;
  char * _142;
  double _143;
  int _145;
  struct _IO_FILE * _146;
  int _147;
  struct _IO_FILE * _148;
  char * _149;
  double _150;
  struct _IO_FILE * _151;
  int * _155;
  char * _156;
  double _157;
  int _158;
  struct _IO_FILE * _159;
  int _160;
  struct _IO_FILE * _161;
  char * _162;
  double _163;
  struct _IO_FILE * _164;
  int * _167;
  char * _168;
  double _169;
  int _170;
  struct _IO_FILE * _171;
  int _172;
  struct _IO_FILE * _173;
  char * _174;
  double _175;
  struct _IO_FILE * _176;
  int * _179;
  char * _180;
  double _181;
  int _182;
  struct _IO_FILE * _183;
  int _184;
  struct _IO_FILE * _185;
  char * _186;
  double _187;
  struct _IO_FILE * _188;
  struct _IO_FILE * _191;
  double _193;
  double _194;
  double _195;
  double _196;
  double _197;
  double _198;
  double _199;
  double _200;
  double _201;
  double _202;
  double _203;
  double _204;
  double _205;
  double _206;
  double _207;
  double _208;
  double _209;
  double _210;
  double _211;
  double _212;
  double _213;
  double _214;
  double _215;
  double _216;
  struct _IO_FILE * _217;
  double _218;
  double _219;
  double _220;
  double _221;
  struct _IO_FILE * _222;
  double _223;
  double _224;
  double _225;
  double _226;
  double _228;
  long double _229;
  double _231;
  long double _232;
  double _234;
  long double _235;
  long double _237;
  double _238;
  long double _239;
  double _240;
  long double _241;
  double _242;
  double _243;
  double _244;
  double _245;
  int * _266;
  char * _267;
  int _269;
  bool _270;
  long unsigned int _272;
  long unsigned int _273;
  long unsigned int _274;
  long unsigned int _275;
  long unsigned int _276;
  long unsigned int _277;
  long unsigned int _278;
  long unsigned int _279;
  long unsigned int _281;
  long unsigned int _282;
  long unsigned int _283;
  long unsigned int _284;
  long unsigned int _286;
  long unsigned int _302;
  long unsigned int _304;
  long unsigned int _305;
  long unsigned int _312;
  long unsigned int _313;
  long unsigned int _315;
  long unsigned int _317;
  long unsigned int _318;
  long unsigned int _319;
  long unsigned int _320;
  long unsigned int _322;
  bool _323;
  bool _324;
  long int prephitmp_329;
  unsigned long _333;
  long unsigned int prephitmp_348;
  int _352;
  const struct mrg_transition_matrix * _354;
  int64_t * _363;
  long int prephitmp_364;
  long unsigned int _368;
  long unsigned int _379;
  long unsigned int _380;
  long unsigned int prephitmp_382;
  long unsigned int _386;
  long unsigned int _387;
  long unsigned int _388;
  long unsigned int _391;
  long unsigned int _392;
  long unsigned int _398;
  long unsigned int _399;
  long unsigned int _400;
  long unsigned int _407;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _412;
  long unsigned int _413;
  long unsigned int _414;
  long unsigned int _415;
  long unsigned int _417;
  long unsigned int _418;
  long unsigned int _419;
  long unsigned int _420;
  long unsigned int _424;
  long unsigned int _428;
  long unsigned int _429;
  long unsigned int _430;
  long unsigned int _431;
  long unsigned int _433;
  long unsigned int _434;
  long unsigned int _435;
  long unsigned int _436;
  long unsigned int _438;
  long unsigned int _439;
  long unsigned int _440;
  long unsigned int _441;
  long unsigned int _444;
  long int _445;
  long unsigned int _447;
  long unsigned int _449;
  long unsigned int _452;
  long unsigned int _453;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _462;
  long unsigned int _463;
  long unsigned int _464;
  long unsigned int _465;
  int _467;
  long unsigned int _469;
  long unsigned int _470;
  long unsigned int _473;
  long unsigned int _474;
  long unsigned int _475;
  long unsigned int _476;
  long unsigned int _478;
  long unsigned int _479;
  long unsigned int _480;
  long unsigned int _481;
  long unsigned int _483;
  long unsigned int _484;
  long unsigned int _485;
  long unsigned int _486;
  long unsigned int _489;
  long int _490;
  struct _IO_FILE * _491;
  struct packed_edge * _492;
  long int _493;
  double _495;
  int _496;
  struct _IO_FILE * _497;
  struct _IO_FILE * _498;
  char * _499;
  long int _500;
  long unsigned int _501;
  long unsigned int _502;
  struct packed_edge * _510;
  sizetype _512;
  void * _513;
  long int _515;
  long int _516;
  long unsigned int _517;
  long unsigned int _518;
  int * _519;
  long unsigned int _520;
  long unsigned int _521;
  int * _522;
  long int _524;
  int _531;
  double _534;
  double _535;
  int _538;
  double _539;
  int _543;
  struct _IO_FILE * _546;
  struct _IO_FILE * _547;
  int _548;
  int _549;
  long unsigned int _550;
  long unsigned int _551;
  long int _554;
  long int _558;
  long unsigned int _559;
  long unsigned int _560;
  long int _563;
  int _565;
  struct _IO_FILE * _566;
  long int _567;
  int _570;
  struct _IO_FILE * _571;
  int _572;
  struct _IO_FILE * _573;
  long int _574;
  long int _575;
  struct packed_edge * _576;
  long int _577;
  struct _IO_FILE * _580;
  struct _IO_FILE * _582;
  long int _583;
  int _585;
  sizetype _592;
  double _593;
  double _594;
  double _596;
  double _597;
  double _598;
  long unsigned int _600;
  long unsigned int _601;
  long unsigned int _608;
  long unsigned int _609;
  long unsigned int _615;
  long unsigned int _616;
  long unsigned int _617;
  long unsigned int _618;
  long unsigned int _619;
  long unsigned int _620;
  long int _623;
  double _624;
  long int _625;
  double _626;
  double _627;
  long int _629;
  double _630;
  long int _631;
  double _632;
  double _633;
  long unsigned int _636;
  long unsigned int _637;
  int64_t * _638;
  long int _639;
  long unsigned int _640;
  long unsigned int _641;
  long unsigned int _643;
  struct packed_edge * _647;
  unsigned long _649;
  long int _654;
  _Bool _660;
  _Bool _661;
  _Bool _662;
  _Bool _663;
  _Bool _664;
  _Bool _665;
  _Bool _666;
  _Bool _667;
  _Bool _668;
  _Bool _670;
  _Bool _671;
  long unsigned int _672;
  long unsigned int _673;
  int64_t * _674;
  long int _675;
  long unsigned int _676;
  long unsigned int _677;
  int64_t * _678;
  long int _679;
  long unsigned int prephitmp_685;
  int64_t * _687;
  int64_t * _689;
  int64_t * _690;
  long int _691;
  int64_t * _692;
  long int _693;
  unsigned long _695;
  unsigned long _696;
  _Bool _702;
  _Bool _704;
  _Bool _705;
  const int64_t * _708;
  long int _709;
  long int _711;
  long int _715;
  long int _717;
  long unsigned int prephitmp_725;
  long int _733;
  long int _737;
  long int _738;
  unsigned long _741;
  unsigned long _742;
  sizetype _743;
  unsigned int _744;
  int64_t * _745;
  long int _746;
  unsigned int _748;
  long int _749;
  long unsigned int _750;
  int _753;
  long unsigned int _756;
  int64_t * _757;
  long int _758;
  int _759;
  int64_t * _767;
  long unsigned int _768;
  long unsigned int _772;
  long int _773;
  long unsigned int prephitmp_775;
  long int _777;
  long unsigned int _779;
  long unsigned int _783;
  int64_t * _784;
  long unsigned int prephitmp_838;
  sizetype _839;
  bool _847;
  long unsigned int _934;
  long unsigned int _935;
  long unsigned int _936;
  long unsigned int prephitmp_961;
  long unsigned int prephitmp_989;
  long int _1012;
  long unsigned int prephitmp_1035;
  bool _1048;
  int64_t * _1073;
  long unsigned int _1074;
  long unsigned int _1076;
  _Bool _1098;
  _Bool _1105;
  _Bool _1106;
  long int _1108;
  bool _1118;
  bool _1119;
  sizetype _1140;
  signed long _1146;
  signed long _1147;
  long int prephitmp_1156;
  int _1193;
  void * _1250;
  long int _1252;
  unsigned long _1253;
  bool _1257;
  unsigned long ivtmp_1259;
  unsigned long ivtmp_1260;
  long unsigned int _1265;
  long unsigned int _1266;
  long int _1268;
  long int _1270;
  bool _1272;
  sizetype _1276;
  long int pretmp_1286;
  long int _1315;
  long unsigned int _1321;
  unsigned long _1325;
  int64_t * pretmp_1332;
  long int pretmp_1333;
  int64_t * _1336;
  bool _1343;
  unsigned long _1344;
  int64_t * pretmp_1346;
  long int pretmp_1347;
  long int prephitmp_1348;
  long int _1353;
  int64_t * pretmp_1354;
  long int pretmp_1355;
  long int prephitmp_1356;
  unsigned long _1357;
  sizetype _1361;
  long int _1362;
  long unsigned int _1363;
  unsigned long _1364;
  unsigned long _1368;
  long int prephitmp_1395;
  int64_t * _1397;
  void * _1398;
  unsigned long _1401;
  unsigned long _1402;
  long int _1404;
  long int _1405;
  unsigned long _1407;
  unsigned long _1409;
  unsigned long _1412;
  unsigned long _1426;
  sizetype _1429;
  long unsigned int prephitmp_1436;
  long unsigned int prephitmp_1437;
  long unsigned int prephitmp_1438;
  long unsigned int prephitmp_1439;
  long unsigned int prephitmp_1440;
  long int _1441;
  long int prephitmp_1443;
  long int prephitmp_1444;
  long int pretmp_1446;
  long int pretmp_1448;
  long int pretmp_1449;
  long unsigned int prephitmp_1453;
  long unsigned int prephitmp_1454;
  long unsigned int prephitmp_1455;
  long unsigned int prephitmp_1456;
  long unsigned int prephitmp_1457;
  long unsigned int pretmp_1466;
  long unsigned int prephitmp_1467;
  long unsigned int pretmp_1468;
  long unsigned int prephitmp_1469;
  long unsigned int pretmp_1470;
  long unsigned int prephitmp_1471;
  long int pretmp_1472;
  long int prephitmp_1478;
  long int prephitmp_1479;
  int _1517;
  long int _1520;
  int _1523;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (argc_7(D) > 1)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                67
;;                69
  goto <bb 71>;
;;    succ:       71

;;   basic block 4, loop depth 0
;;    pred:       2
  # DEBUG argc => argc_7(D)
  # DEBUG argv => argv_9(D)
  # DEBUG err => 0
  # DEBUG nset => 0
  # DEBUG whichset => 0
  _117 = getenv ("VERBOSE");
  if (_117 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  VERBOSE = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  goto <bb 54>;
;;    succ:       54

;;   basic block 7, loop depth 1
;;    pred:       54
  switch (c_118) <default: <L12>, case 63: <L1>, case 65: <L8>, case 66: <L9>, case 67: <L10>, case 68: <L11>, case 82: <L3>, case 86: <L2>, case 97: <L8>, case 98: <L9>, case 99: <L10>, case 100: <L11>, case 101: <L7>, case 104: <L1>, case 111: <L4>, case 114: <L5>, case 115: <L6>, case 118: <L0>>
;;    succ:       52
;;                9
;;                24
;;                31
;;                38
;;                45
;;                11
;;                10
;;                20
;;                12
;;                14
;;                16
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
<L0>:
  # DEBUG __fmt => "%s version %d\n"
  __printf_chk (1, "%s version %d\n", "Graph500 sequential list", 0);
  # DEBUG __fmt => NULL
  exit (0);
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       7
<L1>:
  # DEBUG __fmt => "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n"
  __printf_chk (1, "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n", 14, 16, 5.6999999999999995115018691649311222136020660400390625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 5.00000000000000444089209850062616169452667236328125e-2);
  # DEBUG __fmt => NULL
  exit (0);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       7
<L2>:
  VERBOSE = 1;
  goto <bb 53>;
;;    succ:       53

;;   basic block 11, loop depth 1
;;    pred:       7
<L3>:
  use_RMAT = 1;
  goto <bb 53>;
;;    succ:       53

;;   basic block 12, loop depth 1
;;    pred:       7
<L4>:
  _119 = optarg;
  _120 = __strdup (_119);
  dumpname = _120;
  if (_120 == 0B)
    goto <bb 13>;
  else
    goto <bb 53>;
;;    succ:       13
;;                53

;;   basic block 13, loop depth 1
;;    pred:       12
  _121 = stderr;
  # DEBUG __stream => _121
  # DEBUG __fmt => "Cannot copy dump file name.\n"
  __fprintf_chk (_121, 1, "Cannot copy dump file name.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => 1
  goto <bb 53>;
;;    succ:       53

;;   basic block 14, loop depth 1
;;    pred:       7
<L5>:
  _122 = optarg;
  _123 = __strdup (_122);
  rootname = _123;
  if (_123 == 0B)
    goto <bb 15>;
  else
    goto <bb 53>;
;;    succ:       15
;;                53

;;   basic block 15, loop depth 1
;;    pred:       14
  _124 = stderr;
  # DEBUG __stream => _124
  # DEBUG __fmt => "Cannot copy BFS root file name.\n"
  __fprintf_chk (_124, 1, "Cannot copy BFS root file name.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => 1
  goto <bb 53>;
;;    succ:       53

;;   basic block 16, loop depth 1
;;    pred:       7
<L6>:
  _125 = __errno_location ();
  *_125 = 0;
  _126 = optarg;
  _127 = strtol (_126, 0B, 10);
  SCALE = _127;
  _128 = *_125;
  if (_128 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _129 = stderr;
  _130 = optarg;
  # DEBUG __stream => _129
  # DEBUG __fmt => "Error parsing scale %s\n"
  __fprintf_chk (_129, 1, "Error parsing scale %s\n", _130);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       16
;;                17
  # err_249 = PHI <err_192(16), -1(17)>
  # DEBUG err => err_249
  _131 = SCALE;
  if (_131 <= 0)
    goto <bb 19>;
  else
    goto <bb 53>;
;;    succ:       19
;;                53

;;   basic block 19, loop depth 1
;;    pred:       18
  _132 = stderr;
  # DEBUG __stream => _132
  # DEBUG __fmt => "Scale must be non-negative.\n"
  __fprintf_chk (_132, 1, "Scale must be non-negative.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
  goto <bb 53>;
;;    succ:       53

;;   basic block 20, loop depth 1
;;    pred:       7
<L7>:
  _133 = __errno_location ();
  *_133 = 0;
  _134 = optarg;
  _135 = strtol (_134, 0B, 10);
  edgefactor = _135;
  _136 = *_133;
  if (_136 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 1
;;    pred:       20
  _137 = stderr;
  _138 = optarg;
  # DEBUG __stream => _137
  # DEBUG __fmt => "Error parsing edge factor %s\n"
  __fprintf_chk (_137, 1, "Error parsing edge factor %s\n", _138);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       20
;;                21
  # err_250 = PHI <err_192(20), -1(21)>
  # DEBUG err => err_250
  _139 = edgefactor;
  if (_139 <= 0)
    goto <bb 23>;
  else
    goto <bb 53>;
;;    succ:       23
;;                53

;;   basic block 23, loop depth 1
;;    pred:       22
  _140 = stderr;
  # DEBUG __stream => _140
  # DEBUG __fmt => "Edge factor must be non-negative.\n"
  __fprintf_chk (_140, 1, "Edge factor must be non-negative.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
  goto <bb 53>;
;;    succ:       53

;;   basic block 24, loop depth 1
;;    pred:       7
<L8>:
  _141 = __errno_location ();
  *_141 = 0;
  _142 = optarg;
  _143 = strtod (_142, 0B);
  A = _143;
  _145 = whichset_144 & 1;
  if (_145 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 1
;;    pred:       24
  _146 = stderr;
  # DEBUG __stream => _146
  # DEBUG __fmt => "A already set\n"
  __fprintf_chk (_146, 1, "A already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       26

;;   basic block 26, loop depth 1
;;    pred:       24
;;                25
  # err_251 = PHI <err_192(24), -1(25)>
  # DEBUG err => err_251
  _147 = *_141;
  if (_147 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27
;;                28

;;   basic block 27, loop depth 1
;;    pred:       26
  _148 = stderr;
  _149 = optarg;
  # DEBUG __stream => _148
  # DEBUG __fmt => "Error parsing A %s\n"
  __fprintf_chk (_148, 1, "Error parsing A %s\n", _149);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       26
;;                27
  # err_252 = PHI <err_251(26), -1(27)>
  # DEBUG err => err_252
  _150 = A;
  if (_150 < 0.0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 1
;;    pred:       28
  _151 = stderr;
  # DEBUG __stream => _151
  # DEBUG __fmt => "A must be non-negative\n"
  __fprintf_chk (_151, 1, "A must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       30

;;   basic block 30, loop depth 1
;;    pred:       28
;;                29
  # err_253 = PHI <err_252(28), -1(29)>
  # DEBUG err => err_253
  whichset_152 = whichset_144 | 1;
  # DEBUG whichset => whichset_152
  nset_154 = nset_153 + 1;
  # DEBUG nset => nset_154
  goto <bb 53>;
;;    succ:       53

;;   basic block 31, loop depth 1
;;    pred:       7
<L9>:
  _155 = __errno_location ();
  *_155 = 0;
  _156 = optarg;
  _157 = strtod (_156, 0B);
  B = _157;
  _158 = whichset_144 & 2;
  if (_158 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32
;;                33

;;   basic block 32, loop depth 1
;;    pred:       31
  _159 = stderr;
  # DEBUG __stream => _159
  # DEBUG __fmt => "B already set\n"
  __fprintf_chk (_159, 1, "B already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       33

;;   basic block 33, loop depth 1
;;    pred:       31
;;                32
  # err_254 = PHI <err_192(31), -1(32)>
  # DEBUG err => err_254
  _160 = *_155;
  if (_160 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34
;;                35

;;   basic block 34, loop depth 1
;;    pred:       33
  _161 = stderr;
  _162 = optarg;
  # DEBUG __stream => _161
  # DEBUG __fmt => "Error parsing B %s\n"
  __fprintf_chk (_161, 1, "Error parsing B %s\n", _162);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       33
;;                34
  # err_255 = PHI <err_254(33), -1(34)>
  # DEBUG err => err_255
  _163 = B;
  if (_163 < 0.0)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36
;;                37

;;   basic block 36, loop depth 1
;;    pred:       35
  _164 = stderr;
  # DEBUG __stream => _164
  # DEBUG __fmt => "B must be non-negative\n"
  __fprintf_chk (_164, 1, "B must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       37

;;   basic block 37, loop depth 1
;;    pred:       35
;;                36
  # err_256 = PHI <err_255(35), -1(36)>
  # DEBUG err => err_256
  whichset_165 = whichset_144 | 2;
  # DEBUG whichset => whichset_165
  nset_166 = nset_153 + 1;
  # DEBUG nset => nset_166
  goto <bb 53>;
;;    succ:       53

;;   basic block 38, loop depth 1
;;    pred:       7
<L10>:
  _167 = __errno_location ();
  *_167 = 0;
  _168 = optarg;
  _169 = strtod (_168, 0B);
  C = _169;
  _170 = whichset_144 & 4;
  if (_170 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39
;;                40

;;   basic block 39, loop depth 1
;;    pred:       38
  _171 = stderr;
  # DEBUG __stream => _171
  # DEBUG __fmt => "C already set\n"
  __fprintf_chk (_171, 1, "C already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       40

;;   basic block 40, loop depth 1
;;    pred:       38
;;                39
  # err_257 = PHI <err_192(38), -1(39)>
  # DEBUG err => err_257
  _172 = *_167;
  if (_172 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 1
;;    pred:       40
  _173 = stderr;
  _174 = optarg;
  # DEBUG __stream => _173
  # DEBUG __fmt => "Error parsing C %s\n"
  __fprintf_chk (_173, 1, "Error parsing C %s\n", _174);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       42

;;   basic block 42, loop depth 1
;;    pred:       40
;;                41
  # err_258 = PHI <err_257(40), -1(41)>
  # DEBUG err => err_258
  _175 = C;
  if (_175 < 0.0)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43
;;                44

;;   basic block 43, loop depth 1
;;    pred:       42
  _176 = stderr;
  # DEBUG __stream => _176
  # DEBUG __fmt => "C must be non-negative\n"
  __fprintf_chk (_176, 1, "C must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       44

;;   basic block 44, loop depth 1
;;    pred:       42
;;                43
  # err_259 = PHI <err_258(42), -1(43)>
  # DEBUG err => err_259
  whichset_177 = whichset_144 | 4;
  # DEBUG whichset => whichset_177
  nset_178 = nset_153 + 1;
  # DEBUG nset => nset_178
  goto <bb 53>;
;;    succ:       53

;;   basic block 45, loop depth 1
;;    pred:       7
<L11>:
  _179 = __errno_location ();
  *_179 = 0;
  _180 = optarg;
  _181 = strtod (_180, 0B);
  D = _181;
  _182 = whichset_144 & 8;
  if (_182 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46
;;                47

;;   basic block 46, loop depth 1
;;    pred:       45
  _183 = stderr;
  # DEBUG __stream => _183
  # DEBUG __fmt => "D already set\n"
  __fprintf_chk (_183, 1, "D already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       47

;;   basic block 47, loop depth 1
;;    pred:       45
;;                46
  # err_260 = PHI <err_192(45), -1(46)>
  # DEBUG err => err_260
  _184 = *_179;
  if (_184 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48
;;                49

;;   basic block 48, loop depth 1
;;    pred:       47
  _185 = stderr;
  _186 = optarg;
  # DEBUG __stream => _185
  # DEBUG __fmt => "Error parsing D %s\n"
  __fprintf_chk (_185, 1, "Error parsing D %s\n", _186);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       49

;;   basic block 49, loop depth 1
;;    pred:       47
;;                48
  # err_261 = PHI <err_260(47), -1(48)>
  # DEBUG err => err_261
  _187 = D;
  if (_187 < 0.0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50
;;                51

;;   basic block 50, loop depth 1
;;    pred:       49
  _188 = stderr;
  # DEBUG __stream => _188
  # DEBUG __fmt => "D must be non-negative\n"
  __fprintf_chk (_188, 1, "D must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       51

;;   basic block 51, loop depth 1
;;    pred:       49
;;                50
  # err_262 = PHI <err_261(49), -1(50)>
  # DEBUG err => err_262
  whichset_189 = whichset_144 | 8;
  # DEBUG whichset => whichset_189
  nset_190 = nset_153 + 1;
  # DEBUG nset => nset_190
  goto <bb 53>;
;;    succ:       53

;;   basic block 52, loop depth 1
;;    pred:       7
<L12>:
  _191 = stderr;
  # DEBUG __stream => _191
  # DEBUG __fmt => "Unrecognized option\n"
  __fprintf_chk (_191, 1, "Unrecognized option\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       53

;;   basic block 53, loop depth 1
;;    pred:       12
;;                11
;;                10
;;                52
;;                51
;;                44
;;                37
;;                30
;;                23
;;                22
;;                19
;;                18
;;                15
;;                14
;;                13
  # err_264 = PHI <err_192(12), err_192(11), err_192(10), -1(52), err_262(51), err_259(44), err_256(37), err_253(30), -1(23), err_250(22), -1(19), err_249(18), 1(15), err_192(14), 1(13)>
  # nset_263 = PHI <nset_153(12), nset_153(11), nset_153(10), nset_153(52), nset_190(51), nset_178(44), nset_166(37), nset_154(30), nset_153(23), nset_153(22), nset_153(19), nset_153(18), nset_153(15), nset_153(14), nset_153(13)>
  # whichset_974 = PHI <whichset_144(12), whichset_144(11), whichset_144(10), whichset_144(52), whichset_189(51), whichset_177(44), whichset_165(37), whichset_152(30), whichset_144(23), whichset_144(22), whichset_144(19), whichset_144(18), whichset_144(15), whichset_144(14), whichset_144(13)>
;;    succ:       54

;;   basic block 54, loop depth 1
;;    pred:       6
;;                53
  # err_192 = PHI <0(6), err_264(53)>
  # nset_153 = PHI <0(6), nset_263(53)>
  # whichset_144 = PHI <0(6), whichset_974(53)>
  # DEBUG whichset => whichset_144
  # DEBUG nset => nset_153
  # DEBUG err => err_192
  c_118 = getopt (argc_7(D), argv_9(D), "v?hRs:e:A:a:B:b:C:c:D:d:Vo:r:");
  # DEBUG c => c_118
  if (c_118 != -1)
    goto <bb 7>;
  else
    goto <bb 55>;
;;    succ:       7
;;                55

;;   basic block 55, loop depth 0
;;    pred:       54
  if (err_192 != 0)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56
;;                57

;;   basic block 56, loop depth 0
;;    pred:       55
  exit (1);
;;    succ:      

;;   basic block 57, loop depth 0
;;    pred:       55
  if (nset_153 == 3)
    goto <bb 58>;
  else
    goto <bb 69>;
;;    succ:       58
;;                69

;;   basic block 58, loop depth 0
;;    pred:       57
  switch (whichset_144) <default: <L17>, case 7: <L13>, case 11: <L14>, case 13: <L15>, case 14: <L16>>
;;    succ:       63
;;                59
;;                60
;;                61
;;                62

;;   basic block 59, loop depth 0
;;    pred:       58
<L13>:
  _193 = A;
  _194 = B;
  _195 = _193 + _194;
  _196 = C;
  _197 = _195 + _196;
  _198 = 1.0e+0 - _197;
  D = _198;
  goto <bb 64>;
;;    succ:       64

;;   basic block 60, loop depth 0
;;    pred:       58
<L14>:
  _199 = A;
  _200 = B;
  _201 = _199 + _200;
  _202 = D;
  _203 = _201 + _202;
  _204 = 1.0e+0 - _203;
  C = _204;
  goto <bb 64>;
;;    succ:       64

;;   basic block 61, loop depth 0
;;    pred:       58
<L15>:
  _205 = A;
  _206 = C;
  _207 = _205 + _206;
  _208 = D;
  _209 = _207 + _208;
  _210 = 1.0e+0 - _209;
  B = _210;
  goto <bb 64>;
;;    succ:       64

;;   basic block 62, loop depth 0
;;    pred:       58
<L16>:
  _211 = B;
  _212 = C;
  _213 = _211 + _212;
  _214 = D;
  _215 = _213 + _214;
  _216 = 1.0e+0 - _215;
  A = _216;
  goto <bb 64>;
;;    succ:       64

;;   basic block 63, loop depth 0
;;    pred:       58
<L17>:
  _217 = stderr;
  # DEBUG __stream => _217
  # DEBUG __fmt => "Impossible combination of three bits...\n"
  __fprintf_chk (_217, 1, "Impossible combination of three bits...\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 64, loop depth 0
;;    pred:       59
;;                60
;;                61
;;                62
  _218 = A;
  if (_218 < 0.0)
    goto <bb 68>;
  else
    goto <bb 65>;
;;    succ:       68
;;                65

;;   basic block 65, loop depth 0
;;    pred:       64
  _219 = B;
  if (_219 < 0.0)
    goto <bb 68>;
  else
    goto <bb 66>;
;;    succ:       68
;;                66

;;   basic block 66, loop depth 0
;;    pred:       65
  _220 = C;
  if (_220 < 0.0)
    goto <bb 68>;
  else
    goto <bb 67>;
;;    succ:       68
;;                67

;;   basic block 67, loop depth 0
;;    pred:       66
  _221 = D;
  if (_221 < 0.0)
    goto <bb 68>;
  else
    goto <bb 3>;
;;    succ:       68
;;                3

;;   basic block 68, loop depth 0
;;    pred:       65
;;                64
;;                67
;;                66
  _222 = stderr;
  _223 = B;
  _224 = C;
  _225 = D;
  # DEBUG __stream => _222
  # DEBUG __fmt => "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n"
  __fprintf_chk (_222, 1, "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n", _218, _223, _224, _225);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 69, loop depth 0
;;    pred:       57
  if (nset_153 != 0)
    goto <bb 70>;
  else
    goto <bb 3>;
;;    succ:       70
;;                3

;;   basic block 70, loop depth 0
;;    pred:       69
  _226 = A;
  sum_227 = (long double) _226;
  # DEBUG sum => sum_227
  _228 = B;
  _229 = (long double) _228;
  sum_230 = sum_227 + _229;
  # DEBUG sum => sum_230
  _231 = C;
  _232 = (long double) _231;
  sum_233 = sum_230 + _232;
  # DEBUG sum => sum_233
  _234 = D;
  _235 = (long double) _234;
  sum_236 = sum_233 + _235;
  # DEBUG sum => sum_236
  _237 = sum_227 / sum_236;
  _238 = (double) _237;
  A = _238;
  _239 = _229 / sum_236;
  _240 = (double) _239;
  B = _240;
  _241 = _232 / sum_236;
  _242 = (double) _241;
  C = _242;
  _243 = _238 + _240;
  _244 = _242 + _243;
  _245 = 1.0e+0 - _244;
  D = _245;
;;    succ:       71

;;   basic block 71, loop depth 0
;;    pred:       3
;;                70
  _11 = SCALE;
  _12 = (unsigned int) _11;
  _13 = 1 << _12;
  nvtx_scale = _13;
  # DEBUG seed => -1
  _89 = getenv ("SEED");
  if (_89 != 0B)
    goto <bb 72>;
  else
    goto <bb 272>;
;;    succ:       72
;;                272

;;   basic block 72, loop depth 0
;;    pred:       71
  _266 = __errno_location ();
  *_266 = 0;
  _267 = getenv ("SEED");
  seed_268 = strtol (_267, 0B, 10);
  # DEBUG seed => seed_268
  _269 = *_266;
  if (_269 != 0)
    goto <bb 272>;
  else
    goto <bb 73>;
;;    succ:       272
;;                73

;;   basic block 73, loop depth 0
;;    pred:       72
  # DEBUG seed => seed_268
  if (seed_268 < 0)
    goto <bb 273>;
  else
    goto <bb 74>;
;;    succ:       273
;;                74

;;   basic block 74, loop depth 0
;;    pred:       73
;;                273
  # seed_271 = PHI <seed_268(73), 3737844653(273)>
  # DEBUG seed => seed_271
  _272 = (long unsigned int) seed_271;
  userseed = _272;
  # DEBUG userseed => _272
  # DEBUG seed => &prng_seed
  _273 = _272 & 1073741823;
  _274 = _273 + 1;
  MEM[(uint_fast32_t *)&prng_seed] = _274;
  _275 = _272 >> 30;
  _276 = _275 & 1073741823;
  _277 = _276 + 1;
  MEM[(uint_fast32_t *)&prng_seed + 8B] = _277;
  MEM[(uint_fast32_t *)&prng_seed + 16B] = _274;
  MEM[(uint_fast32_t *)&prng_seed + 24B] = _277;
  _278 = _272 >> 60;
  _279 = _278 << 4;
  _315 = _278 + 1;
  _281 = _279 + _315;
  MEM[(uint_fast32_t *)&prng_seed + 32B] = _281;
  # DEBUG userseed => NULL
  # DEBUG seed => NULL
  # DEBUG st => &prng_state_store
  # DEBUG seed => &prng_seed
  prng_state_store.z1 = _274;
  prng_state_store.z2 = _277;
  prng_state_store.z3 = _274;
  prng_state_store.z4 = _277;
  prng_state_store.z5 = _281;
  # DEBUG st => NULL
  # DEBUG seed => NULL
  # DEBUG seed => NULL
  _17 = edgefactor;
  desired_nedge_18 = _13 * _17;
  # DEBUG desired_nedge => desired_nedge_18
  if (_13 > desired_nedge_18)
    goto <bb 75>;
  else
    goto <bb 76>;
;;    succ:       75
;;                76

;;   basic block 75, loop depth 0
;;    pred:       74
  __assert_fail ("desired_nedge >= nvtx_scale", "graph500.c", 74, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 76, loop depth 0
;;    pred:       74
  if (_17 > desired_nedge_18)
    goto <bb 77>;
  else
    goto <bb 78>;
;;    succ:       77
;;                78

;;   basic block 77, loop depth 0
;;    pred:       76
  __assert_fail ("desired_nedge >= edgefactor", "graph500.c", 75, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 78, loop depth 0
;;    pred:       76
  _19 = dumpname;
  if (_19 == 0B)
    goto <bb 79>;
  else
    goto <bb 128>;
;;    succ:       79
;;                128

;;   basic block 79, loop depth 0
;;    pred:       78
  _20 = VERBOSE;
  if (_20 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80
;;                81

;;   basic block 80, loop depth 0
;;    pred:       79
  _21 = stderr;
  # DEBUG __stream => _21
  # DEBUG __fmt => "Generating edge list..."
  __fprintf_chk (_21, 1, "Generating edge list...");
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       79
;;                80
  _22 = use_RMAT;
  if (_22 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;
;;    succ:       82
;;                83

;;   basic block 82, loop depth 0
;;    pred:       81
  nedge = desired_nedge_18;
  _24 = (long unsigned int) desired_nedge_18;
  _25 = _24 * 16;
  # DEBUG sz => _25
  _103 = xmalloc (_25);
  # DEBUG sz => NULL
  IJ = _103;
  clock_gettime (1, &tic_ts);
  _30 = IJ;
  _31 = nedge;
  _32 = SCALE;
  _33 = (int) _32;
  _34 = A;
  _35 = B;
  _36 = C;
  rmat_edgelist (_30, _31, _33, _34, _35, _36);
  _39 = toc ();
  generation_time = _39;
  goto <bb 125>;
;;    succ:       125

;;   basic block 83, loop depth 0
;;    pred:       81
  clock_gettime (1, &tic_ts);
  _42 = SCALE;
  _43 = (int) _42;
  _44 = userseed;
  # DEBUG log_numverts => _43
  # DEBUG M => desired_nedge_18
  # DEBUG userseed1 => _44
  # DEBUG userseed2 => _44
  # DEBUG result_ptr_in => &IJ
  # DEBUG nedges_ptr_in => &nedge
  # DEBUG nedges_ptr => &nedge
  # DEBUG result_ptr => &IJ
  # DEBUG userseed1 => _44
  # DEBUG userseed2 => _44
  # DEBUG seed => &seed
  _302 = _44 & 1073741823;
  state$z1_303 = _302 + 1;
  _304 = _44 >> 30;
  _305 = _304 & 1073741823;
  state$z2_306 = _305 + 1;
  _312 = _44 >> 60;
  _313 = _312 << 4;
  _322 = _312 + 1;
  state$z5_316 = _313 + _322;
  # DEBUG userseed1 => NULL
  # DEBUG userseed2 => NULL
  # DEBUG seed => NULL
  nedge = desired_nedge_18;
  _101 = (long unsigned int) desired_nedge_18;
  _286 = _101 * 16;
  edges_287 = xmalloc (_286);
  # DEBUG edges => edges_287
  IJ = edges_287;
  # DEBUG seed => &seed
  # DEBUG logN => _43
  # DEBUG end_edge => desired_nedge_18
  # DEBUG edges => edges_287
  # DEBUG start_edge => 0
  nverts_107 = 1 << _43;
  # DEBUG nverts => nverts_107
  # DEBUG st => &state
  # DEBUG seed => &seed
  # DEBUG state$z1 => state$z1_303
  # DEBUG state$z2 => state$z2_306
  # DEBUG state$z3 => state$z1_303
  # DEBUG state$z4 => state$z2_306
  # DEBUG state$z5 => state$z5_316
  # DEBUG st => NULL
  # DEBUG seed => NULL
  MEM[(struct mrg_state *)&new_state] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;
  mrg_skip.constprop (&new_state, 50, 7);
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _320 = new_state.z1;
  # DEBUG state => NULL
  # DEBUG val0 => NULL
  val0_288 = _320 * 4294967295;
  # DEBUG val0 => val0_288
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _319 = new_state.z1;
  # DEBUG state => NULL
  val0_290 = val0_288 + _319;
  # DEBUG val0 => val0_290
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _318 = new_state.z1;
  # DEBUG state => NULL
  # DEBUG val1 => NULL
  val1_292 = _318 * 4294967295;
  # DEBUG val1 => val1_292
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _317 = new_state.z1;
  # DEBUG state => NULL
  val1_294 = val1_292 + _317;
  # DEBUG val1 => val1_294
  new_state ={v} {CLOBBER};
  # DEBUG ei => 0
  ivtmp.134_507 = (unsigned long) edges_287;
  goto <bb 123>;
;;    succ:       123

;;   basic block 84, loop depth 1
;;    pred:       123
  MEM[(struct mrg_state *)&new_state] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;
  exponent_middle_296 = (uint_least64_t) start_edge_295;
  # DEBUG state => &new_state
  # DEBUG exponent_high => 0
  # DEBUG exponent_middle => exponent_middle_296
  # DEBUG exponent_low => 0
  # DEBUG byte_index => 0
  # DEBUG exponent_low => 0
  # DEBUG byte_index => 8
  # DEBUG exponent_middle => exponent_middle_296
  if (exponent_middle_296 != 0)
    goto <bb 86>;
  else
    goto <bb 85>;
;;    succ:       86
;;                85

;;   basic block 85, loop depth 1
;;    pred:       84
;;                89
  # DEBUG byte_index => 16
  # DEBUG exponent_high => 0
  # DEBUG state => NULL
  # DEBUG exponent_high => NULL
  # DEBUG exponent_middle => NULL
  # DEBUG byte_index => NULL
  # DEBUG val => NULL
  # DEBUG val => NULL
  # DEBUG val => NULL
  # DEBUG exponent_low => NULL
  # DEBUG D#37 => exponent_middle_296 * 16
  # DEBUG D#36 => edges_287 + D#37
  # DEBUG D#1 => 0
  # DEBUG nverts => nverts_107
  # DEBUG lgN => _43
  # DEBUG st => &new_state
  # DEBUG result => D#36
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  # DEBUG base_tgt => 0
  # DEBUG base_src => 0
  # DEBUG level => NULL
  # DEBUG nverts => nverts_107
  if (nverts_107 > 1)
    goto <bb 90>;
  else
    goto <bb 116>;
;;    succ:       90
;;                116

;;   basic block 86, loop depth 1
;;    pred:       84
  # exponent_middle_1094 = PHI <exponent_middle_296(84)>
  # byte_index_327 = PHI <8(84)>
;;    succ:       87

;;   basic block 87, loop depth 2
;;    pred:       86
;;                89
  # exponent_middle_51 = PHI <exponent_middle_1094(86), exponent_middle_356(89)>
  # byte_index_933 = PHI <byte_index_327(86), byte_index_355(89)>
  # DEBUG byte_index => byte_index_933
  # DEBUG exponent_middle => exponent_middle_51
  val_351 = (uint_least8_t) exponent_middle_51;
  # DEBUG val => val_351
  if (val_351 != 0)
    goto <bb 88>;
  else
    goto <bb 89>;
;;    succ:       88
;;                89

;;   basic block 88, loop depth 2
;;    pred:       87
  _352 = (int) val_351;
  _354 = &mrg_skip_matrices[byte_index_933][_352];
  # DEBUG mat => _354
  # DEBUG state => &new_state
  mrg_apply_transition (_354, &new_state, &new_state);
;;    succ:       89

;;   basic block 89, loop depth 2
;;    pred:       87
;;                88
  byte_index_355 = byte_index_933 + 1;
  # DEBUG byte_index => byte_index_355
  exponent_middle_356 = exponent_middle_51 >> 8;
  # DEBUG exponent_middle => exponent_middle_356
  # DEBUG byte_index => byte_index_355
  # DEBUG exponent_middle => exponent_middle_356
  if (exponent_middle_356 != 0)
    goto <bb 87>;
  else
    goto <bb 85>;
;;    succ:       87
;;                85

;;   basic block 90, loop depth 1
;;    pred:       85
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  _368 = new_state.z1;
  # DEBUG a => _368
  # DEBUG a => _368
  # DEBUG b => 107374182
  if (_368 > 2147483646)
    goto <bb 93>;
  else
    goto <bb 91>;
;;    succ:       93
;;                91

;;   basic block 91, loop depth 1
;;    pred:       90
  _284 = _368 * 107374182;
  _283 = _284 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  _282 = new_state.z5;
  # DEBUG sum => NULL
  # DEBUG a => _282
  # DEBUG sum => _283
  # DEBUG a => _282
  # DEBUG b => 104480
  if (_282 > 2147483646)
    goto <bb 92>;
  else
    goto <bb 98>;
;;    succ:       92
;;                98

;;   basic block 92, loop depth 0
;;    pred:       91
;;                95
  goto <bb 97>;
;;    succ:       97

;;   basic block 93, loop depth 0
;;    pred:       152
;;                90
  # DEBUG D#11 => 107374182
  mod_mul.part.1 ();
;;    succ:      

;;   basic block 94, loop depth 2
;;    pred:       291
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#30 => new_state.z1
  # DEBUG a => D#30
  # DEBUG a => D#30
  # DEBUG b => 107374182
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#30 => new_state.z1
  # DEBUG a => D#30
  # DEBUG a => D#30
  # DEBUG b => 107374182
  _379 = prephitmp_1436 * 107374182;
  _380 = _379 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG D#29 => new_state.z5
  # DEBUG sum => NULL
  # DEBUG a => D#29
  # DEBUG sum => _380
  # DEBUG a => D#29
  # DEBUG b => 104480
  if (prephitmp_1437 > 2147483646)
    goto <bb 95>;
  else
    goto <bb 99>;
;;    succ:       95
;;                99

;;   basic block 95, loop depth 0
;;    pred:       94
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
  goto <bb 92>;
;;    succ:       92

;;   basic block 96, loop depth 0
;;    pred:       101
  new_state.z5 = prephitmp_1454;
  new_state.z4 = prephitmp_1455;
  new_state.z3 = prephitmp_1456;
  new_state.z2 = prephitmp_1457;
  new_state.z1 = prephitmp_1453;
;;    succ:       97

;;   basic block 97, loop depth 0
;;    pred:       158
;;                92
;;                96
;;                156
  __assert_fail ("a <= 0x7FFFFFFE", "generator/mod_arith_64bit.h", 34, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 98, loop depth 1
;;    pred:       91
  pretmp_1466 = new_state.z4;
  pretmp_1468 = new_state.z3;
  pretmp_1470 = new_state.z2;
;;    succ:       99

;;   basic block 99, loop depth 2
;;    pred:       98
;;                94
  # base_src_819 = PHI <0(98), base_src_1482(94)>
  # base_tgt_310 = PHI <0(98), base_tgt_1490(94)>
  # nverts_308 = PHI <nverts_107(98), nverts_1481(94)>
  # _934 = PHI <_368(98), prephitmp_1436(94)>
  # _935 = PHI <_283(98), _380(94)>
  # _936 = PHI <_282(98), prephitmp_1437(94)>
  # prephitmp_1467 = PHI <pretmp_1466(98), prephitmp_1438(94)>
  # prephitmp_1469 = PHI <pretmp_1468(98), prephitmp_1439(94)>
  # prephitmp_1471 = PHI <pretmp_1470(98), prephitmp_1440(94)>
  # DEBUG base_tgt => base_tgt_310
  # DEBUG base_src => base_src_819
  # DEBUG level => NULL
  # DEBUG nverts => nverts_308
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => _936
  # DEBUG sum => _935
  # DEBUG a => _936
  # DEBUG b => 104480
  _386 = _936 * 104480;
  _387 = _386 + _935;
  _388 = _387 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG val => (uint32_t) _388
  if (_388 <= 7294)
    goto <bb 100>;
  else
    goto <bb 104>;
;;    succ:       100
;;                104

;;   basic block 100, loop depth 2
;;    pred:       99
  # prephitmp_382 = PHI <_388(99)>
  # prephitmp_775 = PHI <prephitmp_1467(99)>
  # prephitmp_838 = PHI <prephitmp_1469(99)>
  # prephitmp_961 = PHI <prephitmp_1471(99)>
  # prephitmp_1035 = PHI <_934(99)>
;;    succ:       101

;;   basic block 101, loop depth 3
;;    pred:       100
;;                102
  # prephitmp_1453 = PHI <prephitmp_382(100), _400(102)>
  # prephitmp_1454 = PHI <prephitmp_775(100), prephitmp_725(102)>
  # prephitmp_1455 = PHI <prephitmp_838(100), prephitmp_685(102)>
  # prephitmp_1456 = PHI <prephitmp_961(100), prephitmp_989(102)>
  # prephitmp_1457 = PHI <prephitmp_1035(100), prephitmp_348(102)>
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#33 => new_state.z1
  # DEBUG a => D#33
  # DEBUG a => D#33
  # DEBUG b => 107374182
  _391 = prephitmp_1453 * 107374182;
  _392 = _391 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG D#32 => new_state.z5
  # DEBUG sum => NULL
  # DEBUG a => D#32
  # DEBUG sum => _392
  # DEBUG a => D#32
  # DEBUG b => 104480
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => D#32
  # DEBUG sum => _392
  # DEBUG a => D#32
  # DEBUG b => 104480
  if (prephitmp_1454 > 2147483646)
    goto <bb 96>;
  else
    goto <bb 102>;
;;    succ:       96
;;                102

;;   basic block 102, loop depth 3
;;    pred:       101
  _398 = prephitmp_1454 * 104480;
  _399 = _392 + _398;
  _400 = _399 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG val => (uint32_t) _400
  prephitmp_725 = prephitmp_1455;
  prephitmp_685 = prephitmp_1456;
  prephitmp_989 = prephitmp_1457;
  prephitmp_348 = prephitmp_1453;
  if (_400 <= 7294)
    goto <bb 101>;
  else
    goto <bb 103>;
;;    succ:       101
;;                103

;;   basic block 103, loop depth 2
;;    pred:       102
  val_371 = (uint32_t) _400;
  goto <bb 105>;
;;    succ:       105

;;   basic block 104, loop depth 2
;;    pred:       99
  val_369 = (uint32_t) _388;
;;    succ:       105

;;   basic block 105, loop depth 2
;;    pred:       104
;;                103
  # val_372 = PHI <val_369(104), val_371(103)>
  # prephitmp_1436 = PHI <_388(104), _400(103)>
  # prephitmp_1437 = PHI <prephitmp_1467(104), prephitmp_1455(103)>
  # prephitmp_1438 = PHI <prephitmp_1469(104), prephitmp_1456(103)>
  # prephitmp_1439 = PHI <prephitmp_1471(104), prephitmp_1457(103)>
  # prephitmp_1440 = PHI <_934(104), prephitmp_1453(103)>
  # DEBUG val => val_372
  # DEBUG spk_noise_factor => 0
  # DEBUG adjusted_bc_numerator => 1900
  val_373 = val_372 % 10000;
  # DEBUG val => val_373
  if (val_373 <= 1899)
    goto <bb 280>;
  else
    goto <bb 106>;
;;    succ:       280
;;                106

;;   basic block 106, loop depth 2
;;    pred:       105
  val_374 = val_373 + 4294965396;
  # DEBUG val => val_374
  if (val_374 <= 1899)
    goto <bb 109>;
  else
    goto <bb 107>;
;;    succ:       109
;;                107

;;   basic block 107, loop depth 2
;;    pred:       106
  val_375 = val_373 + 4294963496;
  # DEBUG val => val_375
  if (val_375 <= 5699)
    goto <bb 108>;
  else
    goto <bb 280>;
;;    succ:       108
;;                280

;;   basic block 108, loop depth 2
;;    pred:       107
  goto <bb 280>;
;;    succ:       280

;;   basic block 109, loop depth 2
;;    pred:       106
  # DEBUG st => NULL
  # DEBUG val => NULL
  # DEBUG square => NULL
  # DEBUG src_offset => 1
  # DEBUG tgt_offset => 0
  if (base_tgt_310 < base_src_819)
    goto <bb 110>;
  else
    goto <bb 112>;
;;    succ:       110
;;                112

;;   basic block 110, loop depth 0
;;    pred:       109
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
;;    succ:       111

;;   basic block 111, loop depth 0
;;    pred:       281
;;                110
  __assert_fail ("base_src <= base_tgt", "generator/graph_generator.c", 140, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 112, loop depth 2
;;    pred:       109
  if (base_tgt_310 == base_src_819)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113
;;                114

;;   basic block 113, loop depth 2
;;    pred:       112
  pretmp_1472 = nverts_308 >> 1;
  goto <bb 291>;
;;    succ:       291

;;   basic block 114, loop depth 2
;;    pred:       112
  pretmp_1446 = nverts_308 >> 1;
  goto <bb 291>;
;;    succ:       291

;;   basic block 115, loop depth 1
;;    pred:       291
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
;;    succ:       116

;;   basic block 116, loop depth 1
;;    pred:       115
;;                85
  # base_src_813 = PHI <base_src_1482(115), 0(85)>
  # base_tgt_309 = PHI <base_tgt_1490(115), 0(85)>
  # DEBUG v0 => base_src_813
  # DEBUG lgN => _43
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  v_446 = (uint64_t) base_src_813;
  # DEBUG v => v_446
  _447 = val0_290 + val1_294;
  v_448 = v_446 + _447;
  # DEBUG v => v_448
  _449 = val0_290 | 4979156007449604625;
  v_450 = v_448 * _449;
  # DEBUG v => v_450
  # DEBUG x => v_450
  x_451 = __builtin_bswap64 (v_450);
  # DEBUG x => x_451
  _452 = x_451 >> 4;
  _453 = _452 & 1085102592571150095;
  _454 = x_451 & 1085102592571150095;
  _455 = _454 << 4;
  x_456 = _453 | _455;
  # DEBUG x => x_456
  _457 = x_456 >> 2;
  _458 = _457 & 3689348814741910323;
  _459 = x_456 & 3689348814741910323;
  _460 = _459 << 2;
  x_461 = _458 | _460;
  # DEBUG x => x_461
  _462 = x_461 >> 1;
  _463 = _462 & 6148914691236517205;
  _464 = x_461 & 6148914691236517205;
  _465 = _464 << 1;
  x_466 = _463 | _465;
  # DEBUG x => x_466
  # DEBUG x => NULL
  _467 = 64 - _43;
  v_468 = x_466 >> _467;
  # DEBUG v => v_468
  _469 = v_468 >> _43;
  if (_469 != 0)
    goto <bb 117>;
  else
    goto <bb 118>;
;;    succ:       117
;;                118

;;   basic block 117, loop depth 0
;;    pred:       116
;;                120
  # DEBUG D#12 => base_src_813
  # DEBUG D#13 => _43
  # DEBUG D#14 => val0_290
  # DEBUG D#15 => val1_294
  scramble.part.1 ();
;;    succ:      

;;   basic block 118, loop depth 1
;;    pred:       116
  _470 = val1_294 | 3481428888784487333;
  v_471 = v_468 * _470;
  # DEBUG v => v_471
  # DEBUG x => v_471
  x_472 = __builtin_bswap64 (v_471);
  # DEBUG x => x_472
  _473 = x_472 >> 4;
  _474 = _473 & 1085102592571150095;
  _475 = x_472 & 1085102592571150095;
  _476 = _475 << 4;
  x_477 = _474 | _476;
  # DEBUG x => x_477
  _478 = x_477 >> 2;
  _479 = _478 & 3689348814741910323;
  _480 = x_477 & 3689348814741910323;
  _481 = _480 << 2;
  x_482 = _479 | _481;
  # DEBUG x => x_482
  _483 = x_482 >> 1;
  _484 = _483 & 6148914691236517205;
  _485 = x_482 & 6148914691236517205;
  _486 = _485 << 1;
  x_487 = _484 | _486;
  # DEBUG x => x_487
  # DEBUG x => NULL
  v_488 = x_487 >> _467;
  # DEBUG v => v_488
  _489 = v_488 >> _43;
  if (_489 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;
;;    succ:       119
;;                120

;;   basic block 119, loop depth 0
;;    pred:       118
;;                121
  __assert_fail ("(v >> lgN) == 0", "generator/graph_generator.c", 128, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 120, loop depth 1
;;    pred:       118
  _490 = (long int) v_488;
  # DEBUG v0 => NULL
  # DEBUG lgN => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG x => NULL
  # DEBUG x => NULL
  # DEBUG v => NULL
  # DEBUG v0 => base_tgt_309
  # DEBUG lgN => _43
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  v_401 = (uint64_t) base_tgt_309;
  # DEBUG v => v_401
  v_403 = v_401 + _447;
  # DEBUG v => v_403
  v_405 = v_403 * _449;
  # DEBUG v => v_405
  # DEBUG x => v_405
  x_406 = __builtin_bswap64 (v_405);
  # DEBUG x => x_406
  _407 = x_406 >> 4;
  _408 = _407 & 1085102592571150095;
  _409 = x_406 & 1085102592571150095;
  _410 = _409 << 4;
  x_411 = _408 | _410;
  # DEBUG x => x_411
  _412 = x_411 >> 2;
  _413 = _412 & 3689348814741910323;
  _414 = x_411 & 3689348814741910323;
  _415 = _414 << 2;
  x_416 = _413 | _415;
  # DEBUG x => x_416
  _417 = x_416 >> 1;
  _418 = _417 & 6148914691236517205;
  _419 = x_416 & 6148914691236517205;
  _420 = _419 << 1;
  x_421 = _418 | _420;
  # DEBUG x => x_421
  # DEBUG x => NULL
  v_423 = x_421 >> _467;
  # DEBUG v => v_423
  _424 = v_423 >> _43;
  if (_424 != 0)
    goto <bb 117>;
  else
    goto <bb 121>;
;;    succ:       117
;;                121

;;   basic block 121, loop depth 1
;;    pred:       120
  v_426 = v_423 * _470;
  # DEBUG v => v_426
  # DEBUG x => v_426
  x_427 = __builtin_bswap64 (v_426);
  # DEBUG x => x_427
  _428 = x_427 >> 4;
  _429 = _428 & 1085102592571150095;
  _430 = x_427 & 1085102592571150095;
  _431 = _430 << 4;
  x_432 = _429 | _431;
  # DEBUG x => x_432
  _433 = x_432 >> 2;
  _434 = _433 & 3689348814741910323;
  _435 = x_432 & 3689348814741910323;
  _436 = _435 << 2;
  x_437 = _434 | _436;
  # DEBUG x => x_437
  _438 = x_437 >> 1;
  _439 = _438 & 6148914691236517205;
  _440 = x_437 & 6148914691236517205;
  _441 = _440 << 1;
  x_442 = _439 | _441;
  # DEBUG x => x_442
  # DEBUG x => NULL
  v_443 = x_442 >> _467;
  # DEBUG v => v_443
  _444 = v_443 >> _43;
  if (_444 != 0)
    goto <bb 119>;
  else
    goto <bb 122>;
;;    succ:       119
;;                122

;;   basic block 122, loop depth 1
;;    pred:       121
  _445 = (long int) v_443;
  # DEBUG v0 => NULL
  # DEBUG lgN => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG x => NULL
  # DEBUG x => NULL
  # DEBUG v => NULL
  # DEBUG p => D#36
  # DEBUG v0 => NULL
  # DEBUG v1 => NULL
  _513 = (void *) ivtmp.134_505;
  MEM[base: _513, offset: 0B] = _490;
  MEM[base: _513, offset: 8B] = _445;
  # DEBUG p => NULL
  # DEBUG v0 => NULL
  # DEBUG v1 => NULL
  # DEBUG nverts => NULL
  # DEBUG lgN => NULL
  # DEBUG st => NULL
  # DEBUG result => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG base_src => NULL
  # DEBUG base_tgt => NULL
  # DEBUG square => NULL
  # DEBUG tgt_offset => NULL
  new_state ={v} {CLOBBER};
  start_edge_301 = start_edge_295 + 1;
  # DEBUG ei => start_edge_301
  ivtmp.134_506 = ivtmp.134_505 + 16;
;;    succ:       123

;;   basic block 123, loop depth 1
;;    pred:       83
;;                122
  # start_edge_295 = PHI <0(83), start_edge_301(122)>
  # ivtmp.134_505 = PHI <ivtmp.134_507(83), ivtmp.134_506(122)>
  # DEBUG ei => start_edge_295
  if (desired_nedge_18 > start_edge_295)
    goto <bb 84>;
  else
    goto <bb 124>;
;;    succ:       84
;;                124

;;   basic block 124, loop depth 0
;;    pred:       123
  # DEBUG D#18 => {CLOBBER}
  # DEBUG state$z1 => D#18
  # DEBUG D#19 => {CLOBBER}
  # DEBUG state$z2 => D#19
  # DEBUG D#20 => {CLOBBER}
  # DEBUG state$z3 => D#20
  # DEBUG D#21 => {CLOBBER}
  # DEBUG state$z4 => D#21
  # DEBUG D#22 => {CLOBBER}
  # DEBUG state$z5 => D#22
  # DEBUG seed => NULL
  # DEBUG logN => NULL
  # DEBUG end_edge => NULL
  # DEBUG edges => NULL
  # DEBUG nverts => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG start_edge => NULL
  # DEBUG log_numverts => NULL
  # DEBUG M => NULL
  # DEBUG userseed1 => NULL
  # DEBUG userseed2 => NULL
  # DEBUG edges => NULL
  # DEBUG nedges_ptr_in => NULL
  # DEBUG result_ptr_in => NULL
  _47 = toc ();
  generation_time = _47;
;;    succ:       125

;;   basic block 125, loop depth 0
;;    pred:       82
;;                124
  _49 = VERBOSE;
  if (_49 != 0)
    goto <bb 127>;
  else
    goto <bb 126>;
;;    succ:       127
;;                126

;;   basic block 126, loop depth 0
;;    pred:       125
;;                133
  goto <bb 135>;
;;    succ:       135

;;   basic block 127, loop depth 0
;;    pred:       125
  _50 = stderr;
  # DEBUG __stream => _50
  # DEBUG __fmt => " done.\n"
  __fprintf_chk (_50, 1, " done.\n");
  goto <bb 133>;
;;    succ:       133

;;   basic block 128, loop depth 0
;;    pred:       78
  # DEBUG __path => _19
  # DEBUG __oflag => 0
  _76 = __open_alias (_19, 0);
  # DEBUG __path => NULL
  # DEBUG __oflag => NULL
  # DEBUG fd => NULL
  if (_76 < 0)
    goto <bb 129>;
  else
    goto <bb 130>;
;;    succ:       129
;;                130

;;   basic block 129, loop depth 0
;;    pred:       128
  perror ("Cannot open input graph file");
  goto <bb 271>;
;;    succ:       271

;;   basic block 130, loop depth 0
;;    pred:       128
  _52 = nedge;
  _53 = (long unsigned int) _52;
  _54 = _53 * 16;
  sz_55 = (ssize_t) _54;
  # DEBUG sz => sz_55
  _56 = IJ;
  # DEBUG __fd => _76
  # DEBUG __buf => _56
  # DEBUG __nbytes => _54
  _80 = __read_alias (_76, _56, _54);
  # DEBUG __fd => NULL
  # DEBUG __buf => NULL
  # DEBUG __nbytes => NULL
  if (sz_55 != _80)
    goto <bb 131>;
  else
    goto <bb 132>;
;;    succ:       131
;;                132

;;   basic block 131, loop depth 0
;;    pred:       130
  perror ("Error reading input graph file");
  goto <bb 271>;
;;    succ:       271

;;   basic block 132, loop depth 0
;;    pred:       130
  close (_76);
;;    succ:       133

;;   basic block 133, loop depth 0
;;    pred:       132
;;                127
  _113 = VERBOSE;
  if (_113 != 0)
    goto <bb 134>;
  else
    goto <bb 126>;
;;    succ:       134
;;                126

;;   basic block 134, loop depth 0
;;    pred:       133
  _491 = stderr;
  # DEBUG __stream => _491
  # DEBUG __fmt => "Creating graph..."
  __fprintf_chk (_491, 1, "Creating graph...");
;;    succ:       135

;;   basic block 135, loop depth 0
;;    pred:       134
;;                126
  clock_gettime (1, &tic_ts);
  _492 = IJ;
  _493 = nedge;
  err_494 = create_graph_from_edgelist (_492, _493);
  # DEBUG err => err_494
  _495 = toc ();
  construction_time = _495;
  _496 = VERBOSE;
  if (_496 != 0)
    goto <bb 136>;
  else
    goto <bb 137>;
;;    succ:       136
;;                137

;;   basic block 136, loop depth 0
;;    pred:       135
  _497 = stderr;
  # DEBUG __stream => _497
  # DEBUG __fmt => "done.\n"
  __fprintf_chk (_497, 1, "done.\n");
;;    succ:       137

;;   basic block 137, loop depth 0
;;    pred:       135
;;                136
  if (err_494 != 0)
    goto <bb 138>;
  else
    goto <bb 139>;
;;    succ:       138
;;                139

;;   basic block 138, loop depth 0
;;    pred:       137
  _498 = stderr;
  # DEBUG __stream => _498
  # DEBUG __fmt => "Failure creating graph.\n"
  __fprintf_chk (_498, 1, "Failure creating graph.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 139, loop depth 0
;;    pred:       137
  _499 = rootname;
  if (_499 == 0B)
    goto <bb 140>;
  else
    goto <bb 176>;
;;    succ:       140
;;                176

;;   basic block 140, loop depth 0
;;    pred:       139
  _500 = nvtx_scale;
  _501 = (long unsigned int) _500;
  _502 = _501 * 4;
  # DEBUG sz => _502
  _112 = xmalloc (_502);
  # DEBUG sz => NULL
  # DEBUG has_adj => NULL
  # DEBUG k => 0
  goto <bb 142>;
;;    succ:       142

;;   basic block 141, loop depth 1
;;    pred:       142
  _512 = (sizetype) k_504;
  MEM[base: _112, index: _512, step: 4, offset: 0B] = 0;
  k_508 = k_504 + 1;
  # DEBUG k => k_508
;;    succ:       142

;;   basic block 142, loop depth 1
;;    pred:       140
;;                141
  # k_504 = PHI <0(140), k_508(141)>
  # DEBUG k => k_504
  if (_500 > k_504)
    goto <bb 141>;
  else
    goto <bb 143>;
;;    succ:       141
;;                143

;;   basic block 143, loop depth 0
;;    pred:       142
  _524 = nedge;
  _510 = IJ;
  ivtmp.110_530 = (unsigned long) _510;
  goto <bb 147>;
;;    succ:       147

;;   basic block 144, loop depth 1
;;    pred:       147
  # DEBUG D#43 => (struct packed_edge *) ivtmp.110_528
  _1250 = (void *) ivtmp.110_528;
  _515 = MEM[base: _1250, offset: 0B];
  # DEBUG D#16 => D#43
  # DEBUG p => D#16
  # DEBUG i => NULL
  _516 = MEM[base: _1250, offset: 8B];
  # DEBUG D#17 => D#43
  # DEBUG p => D#17
  # DEBUG j => NULL
  if (_515 != _516)
    goto <bb 145>;
  else
    goto <bb 146>;
;;    succ:       145
;;                146

;;   basic block 145, loop depth 1
;;    pred:       144
  _517 = (long unsigned int) _515;
  _518 = _517 * 4;
  _519 = _112 + _518;
  _520 = (long unsigned int) _516;
  _521 = _520 * 4;
  _522 = _112 + _521;
  *_522 = 1;
  *_519 = 1;
;;    succ:       146

;;   basic block 146, loop depth 1
;;    pred:       144
;;                145
  k_523 = k_511 + 1;
  # DEBUG k => k_523
  ivtmp.110_529 = ivtmp.110_528 + 16;
;;    succ:       147

;;   basic block 147, loop depth 1
;;    pred:       143
;;                146
  # k_511 = PHI <0(143), k_523(146)>
  # ivtmp.110_528 = PHI <ivtmp.110_530(143), ivtmp.110_529(146)>
  # DEBUG k => k_511
  if (k_511 < _524)
    goto <bb 144>;
  else
    goto <bb 148>;
;;    succ:       144
;;                148

;;   basic block 148, loop depth 0
;;    pred:       147
  _543 = NBFS;
  prng_state_store_z1_lsm.9_1211 = prng_state_store.z1;
  prng_state_store_z5_lsm.11_1209 = prng_state_store.z5;
  prng_state_store_z4_lsm.13_1207 = prng_state_store.z4;
  prng_state_store_z3_lsm.15_1205 = prng_state_store.z3;
  prng_state_store_z2_lsm.17_1203 = prng_state_store.z2;
  goto <bb 163>;
;;    succ:       163

;;   basic block 149, loop depth 1
;;    pred:       164
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG a => prng_state_store_z1_lsm.9_1313
  # DEBUG a => prng_state_store_z1_lsm.9_1313
  # DEBUG b => 107374182
  if (prng_state_store_z1_lsm.9_1313 > 2147483646)
    goto <bb 150>;
  else
    goto <bb 153>;
;;    succ:       150
;;                153

;;   basic block 150, loop depth 0
;;    pred:       149
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 151>;
  else
    goto <bb 152>;
;;    succ:       152
;;                151

;;   basic block 151, loop depth 0
;;    pred:       150
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       152

;;   basic block 152, loop depth 0
;;    pred:       150
;;                151
  goto <bb 93>;
;;    succ:       93

;;   basic block 153, loop depth 1
;;    pred:       149
  _608 = prng_state_store_z1_lsm.9_1313 * 107374182;
  _609 = _608 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => prng_state_store_z5_lsm.11_1311
  # DEBUG sum => _609
  # DEBUG a => prng_state_store_z5_lsm.11_1311
  # DEBUG b => 104480
  if (prng_state_store_z5_lsm.11_1311 > 2147483646)
    goto <bb 154>;
  else
    goto <bb 157>;
;;    succ:       154
;;                157

;;   basic block 154, loop depth 0
;;    pred:       153
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;
;;    succ:       156
;;                155

;;   basic block 155, loop depth 0
;;    pred:       154
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       156

;;   basic block 156, loop depth 0
;;    pred:       154
;;                155
  goto <bb 97>;
;;    succ:       97

;;   basic block 157, loop depth 1
;;    pred:       153
  _615 = prng_state_store_z5_lsm.11_1311 * 104480;
  _616 = _609 + _615;
  _617 = _616 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG a => _617
  # DEBUG a => _617
  # DEBUG b => 107374182
  _600 = _617 * 107374182;
  _601 = _600 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => prng_state_store_z4_lsm.13_1309
  # DEBUG sum => _601
  # DEBUG a => prng_state_store_z4_lsm.13_1309
  # DEBUG b => 104480
  if (prng_state_store_z4_lsm.13_1309 > 2147483646)
    goto <bb 158>;
  else
    goto <bb 159>;
;;    succ:       158
;;                159

;;   basic block 158, loop depth 0
;;    pred:       157
  prng_state_store.z1 = _617;
  prng_state_store.z5 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z4 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z3 = prng_state_store_z2_lsm.17_1305;
  prng_state_store.z2 = prng_state_store_z1_lsm.9_1313;
  goto <bb 97>;
;;    succ:       97

;;   basic block 159, loop depth 1
;;    pred:       157
  _618 = prng_state_store_z4_lsm.13_1309 * 104480;
  _619 = _601 + _618;
  _620 = _619 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG R => NULL
  _531 = MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B];
  if (_531 == 0)
    goto <bb 162>;
  else
    goto <bb 160>;
;;    succ:       162
;;                160

;;   basic block 160, loop depth 1
;;    pred:       159
  _1253 = _501 - ivtmp.101_1291;
  _1252 = (long int) _1253;
  _534 = (double) _1252;
  _1147 = (signed long) _620;
  _596 = (double) _1147;
  _597 = _596 * 2.16840434699049278538069582359390854997549524796340847388e-19;
  _1146 = (signed long) _617;
  _593 = (double) _1146;
  _594 = _593 * 4.6566128752457969230960088680149056017398834228515625e-10;
  _598 = _594 + _597;
  _535 = _534 * _598;
  _538 = _543 - m_537;
  _539 = (double) _538;
  if (_535 > _539)
    goto <bb 162>;
  else
    goto <bb 161>;
;;    succ:       162
;;                161

;;   basic block 161, loop depth 1
;;    pred:       160
  m_541 = m_537 + 1;
  # DEBUG m => m_541
  # DEBUG D#45 => ivtmp.101_1291 + 1
  # DEBUG t => (long int) D#45
  bfs_root[m_537] = t_527;
;;    succ:       162

;;   basic block 162, loop depth 1
;;    pred:       159
;;                161
;;                160
  # m_795 = PHI <m_537(159), m_541(161), m_537(160)>
  ivtmp.101_1285 = ivtmp.101_1291 + 1;
  prng_state_store_z1_lsm.9_1110 = _620;
  prng_state_store_z1_lsm.10_1111 = 1;
  prng_state_store_z5_lsm.11_95 = prng_state_store_z3_lsm.15_1307;
  prng_state_store_z4_lsm.13_1274 = prng_state_store_z2_lsm.17_1305;
  prng_state_store_z3_lsm.15_1258 = prng_state_store_z1_lsm.9_1313;
  prng_state_store_z2_lsm.17_1461 = _617;
;;    succ:       163

;;   basic block 163, loop depth 1
;;    pred:       148
;;                162
  # m_537 = PHI <0(148), m_795(162)>
  # prng_state_store_z1_lsm.9_1313 = PHI <prng_state_store_z1_lsm.9_1211(148), prng_state_store_z1_lsm.9_1110(162)>
  # prng_state_store_z1_lsm.10_1312 = PHI <0(148), prng_state_store_z1_lsm.10_1111(162)>
  # prng_state_store_z5_lsm.11_1311 = PHI <prng_state_store_z5_lsm.11_1209(148), prng_state_store_z5_lsm.11_95(162)>
  # prng_state_store_z4_lsm.13_1309 = PHI <prng_state_store_z4_lsm.13_1207(148), prng_state_store_z4_lsm.13_1274(162)>
  # prng_state_store_z3_lsm.15_1307 = PHI <prng_state_store_z3_lsm.15_1205(148), prng_state_store_z3_lsm.15_1258(162)>
  # prng_state_store_z2_lsm.17_1305 = PHI <prng_state_store_z2_lsm.17_1203(148), prng_state_store_z2_lsm.17_1461(162)>
  # ivtmp.101_1291 = PHI <0(148), ivtmp.101_1285(162)>
  t_527 = (int64_t) ivtmp.101_1291;
  # DEBUG t => t_527
  # DEBUG m => m_537
  if (m_537 < _543)
    goto <bb 164>;
  else
    goto <bb 170>;
;;    succ:       164
;;                170

;;   basic block 164, loop depth 1
;;    pred:       163
  if (_500 > t_527)
    goto <bb 149>;
  else
    goto <bb 165>;
;;    succ:       149
;;                165

;;   basic block 165, loop depth 0
;;    pred:       164
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 166>;
  else
    goto <bb 167>;
;;    succ:       167
;;                166

;;   basic block 166, loop depth 0
;;    pred:       165
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       167

;;   basic block 167, loop depth 0
;;    pred:       165
;;                166
  if (m_537 > 0)
    goto <bb 168>;
  else
    goto <bb 169>;
;;    succ:       168
;;                169

;;   basic block 168, loop depth 0
;;    pred:       167
  _546 = stderr;
  # DEBUG __stream => _546
  # DEBUG __fmt => "Cannot find %d sample roots of non-self degree > 0, using %d.\n"
  __fprintf_chk (_546, 1, "Cannot find %d sample roots of non-self degree > 0, using %d.\n", _543, m_537);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  NBFS = m_537;
  goto <bb 173>;
;;    succ:       173

;;   basic block 169, loop depth 0
;;    pred:       167
  _547 = stderr;
  # DEBUG __stream => _547
  # DEBUG __fmt => "Cannot find any sample roots of non-self degree > 0.\n"
  __fprintf_chk (_547, 1, "Cannot find any sample roots of non-self degree > 0.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 170, loop depth 0
;;    pred:       163
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 171>;
  else
    goto <bb 172>;
;;    succ:       172
;;                171

;;   basic block 171, loop depth 0
;;    pred:       170
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       172

;;   basic block 172, loop depth 0
;;    pred:       170
;;                171
;;    succ:       173

;;   basic block 173, loop depth 0
;;    pred:       168
;;                172
  # DEBUG p => _112
  free (_112);
;;    succ:       174

;;   basic block 174, loop depth 0
;;    pred:       180
;;                173
  # DEBUG m => 0
  _753 = NBFS;
  if (_753 > 0)
    goto <bb 181>;
  else
    goto <bb 175>;
;;    succ:       181
;;                175

;;   basic block 175, loop depth 0
;;    pred:       174
;;                270
  destroy_graph ();
  # DEBUG max_bfsvtx => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG sz => NULL
  # DEBUG R => NULL
  # DEBUG t => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG m => NULL
  # DEBUG has_adj => NULL
  _61 = IJ;
  # DEBUG p => _61
  free (_61);
  # DEBUG p => NULL
  _63 = SCALE;
  _64 = nvtx_scale;
  _65 = edgefactor;
  _66 = A;
  _67 = B;
  _68 = C;
  _69 = D;
  _70 = generation_time;
  _71 = construction_time;
  _72 = NBFS;
  output_results.constprop (_63, _64, _65, _66, _67, _68, _69, _70, _71, _72);
  goto <bb 271>;
;;    succ:       271

;;   basic block 176, loop depth 0
;;    pred:       139
  # DEBUG __path => _499
  # DEBUG __oflag => 0
  _548 = __open_alias (_499, 0);
  # DEBUG __path => NULL
  # DEBUG __oflag => NULL
  # DEBUG fd => NULL
  if (_548 < 0)
    goto <bb 177>;
  else
    goto <bb 178>;
;;    succ:       177
;;                178

;;   basic block 177, loop depth 0
;;    pred:       176
  perror ("Cannot open input BFS root file");
  exit (1);
;;    succ:      

;;   basic block 178, loop depth 0
;;    pred:       176
  _549 = NBFS;
  _550 = (long unsigned int) _549;
  _551 = _549 w* 8;
  sz_552 = (ssize_t) _551;
  # DEBUG sz => sz_552
  # DEBUG __fd => _548
  # DEBUG __buf => &bfs_root
  # DEBUG __nbytes => _551
  _554 = __read_chk_warn (_548, &bfs_root, _551, 512);
  # DEBUG __fd => NULL
  # DEBUG __buf => NULL
  # DEBUG __nbytes => NULL
  if (sz_552 != _554)
    goto <bb 179>;
  else
    goto <bb 180>;
;;    succ:       179
;;                180

;;   basic block 179, loop depth 0
;;    pred:       178
  perror ("Error reading input BFS root file");
  exit (1);
;;    succ:      

;;   basic block 180, loop depth 0
;;    pred:       178
  close (_548);
  goto <bb 174>;
;;    succ:       174

;;   basic block 181, loop depth 0
;;    pred:       174
  # ivtmp.94_1210 = PHI <0(174)>
;;    succ:       182

;;   basic block 182, loop depth 1
;;    pred:       181
;;                270
  # ivtmp.94_1264 = PHI <ivtmp.94_1210(181), ivtmp.94_1263(270)>
  m_937 = (int) ivtmp.94_1264;
  # DEBUG m => m_937
  _558 = nvtx_scale;
  _559 = (long unsigned int) _558;
  _560 = _559 * 8;
  # DEBUG sz => _560
  # DEBUG n => _560
  bfs_tree_622 = malloc (_560);
  # DEBUG p => bfs_tree_622
  if (bfs_tree_622 == 0B)
    goto <bb 183>;
  else
    goto <bb 184>;
;;    succ:       183
;;                184

;;   basic block 183, loop depth 0
;;    pred:       182
  xmalloc.part.0 (_560);
;;    succ:      

;;   basic block 184, loop depth 1
;;    pred:       182
  # DEBUG n => NULL
  # DEBUG p => NULL
  # DEBUG sz => NULL
  # DEBUG bfs_tree => NULL
  _1361 = ivtmp.94_1264 * 8;
  _563 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  if (_558 <= _563)
    goto <bb 185>;
  else
    goto <bb 186>;
;;    succ:       185
;;                186

;;   basic block 185, loop depth 0
;;    pred:       184
  __assert_fail ("bfs_root[m] < nvtx_scale", "graph500.c", 192, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 186, loop depth 1
;;    pred:       184
  _565 = VERBOSE;
  if (_565 != 0)
    goto <bb 187>;
  else
    goto <bb 188>;
;;    succ:       187
;;                188

;;   basic block 187, loop depth 1
;;    pred:       186
  _566 = stderr;
  # DEBUG __stream => _566
  # DEBUG __fmt => "Running bfs %d..."
  __fprintf_chk (_566, 1, "Running bfs %d...", m_937);
;;    succ:       188

;;   basic block 188, loop depth 1
;;    pred:       187
;;                186
  clock_gettime (1, &tic_ts);
  _567 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  err_568 = make_bfs_tree (bfs_tree_622, &max_bfsvtx, _567);
  # DEBUG err => err_568
  clock_gettime (1, &ts);
  _623 = ts.tv_nsec;
  _624 = (double) _623;
  _625 = tic_ts.tv_nsec;
  _626 = (double) _625;
  _627 = _624 - _626;
  out_628 = _627 * 1.00000000000000006228159145777985641889706869278597878292e-9;
  # DEBUG out => out_628
  _629 = ts.tv_sec;
  _630 = (double) _629;
  _631 = tic_ts.tv_sec;
  _632 = (double) _631;
  _633 = _630 - _632;
  out_634 = out_628 + _633;
  # DEBUG out => out_634
  ts ={v} {CLOBBER};
  # DEBUG out => NULL
  MEM[symbol: bfs_time, index: _1361, offset: 0B] = out_634;
  _570 = VERBOSE;
  if (_570 != 0)
    goto <bb 189>;
  else
    goto <bb 283>;
;;    succ:       189
;;                283

;;   basic block 189, loop depth 1
;;    pred:       188
  _571 = stderr;
  # DEBUG __stream => _571
  # DEBUG __fmt => "done\n"
  __fprintf_chk (_571, 1, "done\n");
  if (err_568 != 0)
    goto <bb 190>;
  else
    goto <bb 191>;
;;    succ:       190
;;                191

;;   basic block 190, loop depth 0
;;    pred:       189
;;                283
  perror ("make_bfs_tree failed");
  abort ();
;;    succ:      

;;   basic block 191, loop depth 1
;;    pred:       189
  _572 = VERBOSE;
  if (_572 != 0)
    goto <bb 193>;
  else
    goto <bb 192>;
;;    succ:       193
;;                192

;;   basic block 192, loop depth 1
;;    pred:       191
;;                283
  goto <bb 194>;
;;    succ:       194

;;   basic block 193, loop depth 1
;;    pred:       191
  _573 = stderr;
  # DEBUG __stream => _573
  # DEBUG __fmt => "Verifying bfs %d..."
  __fprintf_chk (_573, 1, "Verifying bfs %d...", m_937);
;;    succ:       194

;;   basic block 194, loop depth 1
;;    pred:       192
;;                193
  _574 = max_bfsvtx;
  _575 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  # DEBUG D#35 => IJ
  # DEBUG D#34 => nedge
  # DEBUG bfs_tree_in => bfs_tree_622
  # DEBUG max_bfsvtx => _574
  # DEBUG root => _575
  # DEBUG IJ_in => D#35
  # DEBUG nedge => D#34
  # DEBUG bfs_tree => bfs_tree_622
  # DEBUG IJ => D#35
  nv_635 = _574 + 1;
  # DEBUG nv => nv_635
  if (_574 < _575)
    goto <bb 290>;
  else
    goto <bb 195>;
;;    succ:       290
;;                195

;;   basic block 195, loop depth 1
;;    pred:       194
  _636 = (long unsigned int) _575;
  _637 = _636 * 8;
  _638 = bfs_tree_622 + _637;
  _639 = *_638;
  if (_575 != _639)
    goto <bb 290>;
  else
    goto <bb 196>;
;;    succ:       290
;;                196

;;   basic block 196, loop depth 1
;;    pred:       195
  _576 = IJ;
  _577 = nedge;
  # DEBUG err => 0
  # DEBUG nedge_traversed => 0
  _640 = (long unsigned int) nv_635;
  _641 = _640 * 16;
  # DEBUG sz => _641
  # DEBUG n => _641
  seen_edge_794 = malloc (_641);
  # DEBUG p => seen_edge_794
  if (seen_edge_794 == 0B)
    goto <bb 197>;
  else
    goto <bb 198>;
;;    succ:       197
;;                198

;;   basic block 197, loop depth 0
;;    pred:       196
  xmalloc.part.0 (_641);
;;    succ:      

;;   basic block 198, loop depth 1
;;    pred:       196
  # DEBUG n => NULL
  # DEBUG p => NULL
  # DEBUG sz => NULL
  # DEBUG seen_edge => NULL
  _643 = _640 * 8;
  level_644 = seen_edge_794 + _643;
  # DEBUG level => level_644
  # DEBUG level => level_644
  # DEBUG nv => nv_635
  # DEBUG bfs_tree => bfs_tree_622
  # DEBUG root => _575
  # DEBUG k => 0
  if (nv_635 > 0)
    goto <bb 199>;
  else
    goto <bb 238>;
;;    succ:       199
;;                238

;;   basic block 199, loop depth 1
;;    pred:       198
  _649 = (unsigned long) _574;
  niters.29_648 = _649 + 1;
  _1426 = (unsigned long) level_644;
  _1412 = _1426 & 15;
  _742 = _1412 >> 3;
  _1409 = -_742;
  _1407 = _1409 & 1;
  prolog_loop_niters.31_782 = MIN_EXPR <niters.29_648, _1407>;
  if (niters.29_648 <= 3)
    goto <bb 200>;
  else
    goto <bb 201>;
;;    succ:       200
;;                201

;;   basic block 200, loop depth 1
;;    pred:       199
;;    succ:       201

;;   basic block 201, loop depth 1
;;    pred:       200
;;                199
  # prologue_after_cost_adjust.32_780 = PHI <niters.29_648(200), prolog_loop_niters.31_782(199)>
  if (prologue_after_cost_adjust.32_780 == 0)
    goto <bb 206>;
  else
    goto <bb 202>;
;;    succ:       202
;;                206

;;   basic block 202, loop depth 1
;;    pred:       201
  # DEBUG k => 0
  _1048 = _575 != 0;
  _737 = (long int) _1048;
  _738 = -_737;
  *level_644 = _738;
  # DEBUG k => 1
  # DEBUG k => 1
  if (prologue_after_cost_adjust.32_780 != 1)
    goto <bb 203>;
  else
    goto <bb 205>;
;;    succ:       203
;;                205

;;   basic block 203, loop depth 1
;;    pred:       202
  # DEBUG k => 1
  _1257 = _575 != 1;
  _1405 = (long int) _1257;
  _1404 = -_1405;
  MEM[(int64_t *)level_644 + 8B] = _1404;
  # DEBUG k => 2
  # DEBUG k => 2
  if (prologue_after_cost_adjust.32_780 == 3)
    goto <bb 204>;
  else
    goto <bb 205>;
;;    succ:       204
;;                205

;;   basic block 204, loop depth 1
;;    pred:       203
  # DEBUG k => 2
  _1272 = _575 != 2;
  _1270 = (long int) _1272;
  _1268 = -_1270;
  MEM[(int64_t *)level_644 + 16B] = _1268;
  # DEBUG k => 3
  # DEBUG k => 3
;;    succ:       205

;;   basic block 205, loop depth 1
;;    pred:       204
;;                202
;;                203
  # k_1326 = PHI <3(204), 1(202), 2(203)>
  if (niters.29_648 == prologue_after_cost_adjust.32_780)
    goto <bb 212>;
  else
    goto <bb 206>;
;;    succ:       206
;;                212

;;   basic block 206, loop depth 1
;;    pred:       205
;;                201
  # k_1365 = PHI <k_1326(205), 0(201)>
  niters.33_1004 = niters.29_648 - prologue_after_cost_adjust.32_780;
  _1364 = niters.33_1004 + 18446744073709551614;
  _1325 = _1364 >> 1;
  bnd.34_962 = _1325 + 1;
  ratio_mult_vf.35_1337 = bnd.34_962 << 1;
  if (_649 == prologue_after_cost_adjust.32_780)
    goto <bb 210>;
  else
    goto <bb 207>;
;;    succ:       207
;;                210

;;   basic block 207, loop depth 1
;;    pred:       206
  stmp_var_.37_1340 = k_1365 + 1;
  vect_cst_.38_1350 = {k_1365, stmp_var_.37_1340};
  vect_cst_.42_1339 = {_575, _575};
  _1266 = niters.29_648 + prologue_after_cost_adjust.32_780;
  _1265 = _1266 * 8;
  vectp.48_1271 = seen_edge_794 + _1265;
;;    succ:       208

;;   basic block 208, loop depth 2
;;    pred:       207
;;                208
  # vect_vec_iv_.40_1314 = PHI <vect_cst_.38_1350(207), vect_vec_iv_.40_1202(208)>
  # ivtmp_1260 = PHI <0(207), ivtmp_1259(208)>
  vect_vec_iv_.40_1327 = vect_vec_iv_.40_1314 + { 2, 2 };
  # DEBUG k => NULL
  vect_patt_839.41_1399 = VEC_COND_EXPR <vect_cst_.42_1339 != vect_vec_iv_.40_1314, { 1, 1 }, { 0, 0 }>;
  vect_patt_647.45_1275 = VIEW_CONVERT_EXPR<vector(2) long int>(vect_patt_839.41_1399);
  vect__599.46_1273 = -vect_patt_647.45_1275;
  _743 = ivtmp_1260 * 16;
  MEM[base: vectp.48_1271, index: _743, offset: 0B] = vect__599.46_1273;
  # DEBUG k => D#41
  # DEBUG k => D#41
  ivtmp_1259 = ivtmp_1260 + 1;
  vect_vec_iv_.40_1202 = vect_vec_iv_.40_1327;
  if (bnd.34_962 > ivtmp_1259)
    goto <bb 208>;
  else
    goto <bb 209>;
;;    succ:       208
;;                209

;;   basic block 209, loop depth 1
;;    pred:       208
  _1315 = (long int) ratio_mult_vf.35_1337;
  k_1360 = _1315 + k_1365;
  if (niters.33_1004 == ratio_mult_vf.35_1337)
    goto <bb 211>;
  else
    goto <bb 210>;
;;    succ:       210
;;                211

;;   basic block 210, loop depth 1
;;    pred:       209
;;                206
  # k_1352 = PHI <k_1360(209), k_1365(206)>
  # DEBUG k => k_1352
  _1363 = (long unsigned int) k_1352;
  _1321 = _1363 * 8;
  _1336 = level_644 + _1321;
  _1343 = _575 != k_1352;
  _1353 = (long int) _1343;
  _1362 = -_1353;
  *_1336 = _1362;
  # DEBUG D#44 => k_1352 + 1
  # DEBUG k => D#44
  # DEBUG k => D#44
;;    succ:       211

;;   basic block 211, loop depth 1
;;    pred:       210
;;                209
;;    succ:       212

;;   basic block 212, loop depth 1
;;    pred:       211
;;                205
  _654 = (long int) niters.29_648;
;;    succ:       213

;;   basic block 213, loop depth 2
;;    pred:       212
;;                237
  # parent_1089 = PHI <0(212), parent_786(237)>
  # err_1084 = PHI <0(212), err_792(237)>
  # ivtmp.84_785 = PHI <_1426(212), ivtmp.84_652(237)>
  # DEBUG k => parent_1089
  # DEBUG err => err_1084
  _745 = (int64_t *) ivtmp.84_785;
  _746 = MEM[base: _745, offset: 0B];
  if (_746 >= 0)
    goto <bb 237>;
  else
    goto <bb 214>;
;;    succ:       237
;;                214

;;   basic block 214, loop depth 2
;;    pred:       213
  # DEBUG terr => err_1084
  if (err_1084 == 0)
    goto <bb 215>;
  else
    goto <bb 275>;
;;    succ:       215
;;                275

;;   basic block 215, loop depth 2
;;    pred:       214
  # DEBUG terr => err_1084
  # DEBUG terr => 0
  _592 = (sizetype) parent_1089;
  _749 = MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B];
  _270 = _575 != parent_1089;
  _323 = _749 >= 0;
  _324 = _270 & _323;
  if (_324 != 0)
    goto <bb 216>;
  else
    goto <bb 274>;
;;    succ:       216
;;                274

;;   basic block 216, loop depth 2
;;    pred:       215
  # parent_344 = PHI <parent_1089(215)>
  # nhop_357 = PHI <0(215)>
  # prephitmp_364 = PHI <_749(215)>
  goto <bb 218>;
;;    succ:       218

;;   basic block 217, loop depth 3
;;    pred:       221
  pretmp_1332 = bfs_tree_622 + _750;
  pretmp_1333 = MEM[(const int64_t *)pretmp_1332];
  parent_341 = parent_1334;
  parent_514 = pretmp_1333;
;;    succ:       218

;;   basic block 218, loop depth 3
;;    pred:       216
;;                217
  # parent_968 = PHI <parent_344(216), parent_341(217)>
  # nhop_556 = PHI <nhop_357(216), nhop_755(217)>
  # parent_1334 = PHI <prephitmp_364(216), parent_514(217)>
  # DEBUG nhop => nhop_556
  # DEBUG parent => parent_968
  # DEBUG D#28 => *D#40
  if (parent_968 == parent_1334)
    goto <bb 219>;
  else
    goto <bb 220>;
;;    succ:       219
;;                220

;;   basic block 219, loop depth 0
;;    pred:       218
  __assert_fail ("parent != bfs_tree[parent]", "verify.c", 39, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 220, loop depth 3
;;    pred:       218
  # DEBUG parent => D#28
  nhop_755 = nhop_556 + 1;
  # DEBUG nhop => nhop_755
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  if (parent_1334 >= 0)
    goto <bb 221>;
  else
    goto <bb 275>;
;;    succ:       221
;;                275

;;   basic block 221, loop depth 3
;;    pred:       220
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  _756 = (long unsigned int) parent_1334;
  _750 = _756 * 8;
  _757 = level_644 + _750;
  _758 = *_757;
  _847 = nv_635 > nhop_755;
  _1119 = _758 < 0;
  _1118 = _847 & _1119;
  if (_1118 != 0)
    goto <bb 217>;
  else
    goto <bb 222>;
;;    succ:       217
;;                222

;;   basic block 222, loop depth 2
;;    pred:       221
  # DEBUG D#49 => nv_635 <= nhop_755
  # DEBUG D#48 => (int) D#49
  # DEBUG D#47 => -D#48
  # DEBUG terr => D#47
  # DEBUG terr => D#47
  if (nv_635 > nhop_755)
    goto <bb 223>;
  else
    goto <bb 275>;
;;    succ:       223
;;                275

;;   basic block 223, loop depth 2
;;    pred:       222
  nhop_764 = nhop_755 + _758;
  # DEBUG nhop => nhop_764
  # DEBUG parent => parent_1089
  # DEBUG nhop => nhop_764
  # DEBUG parent => parent_1089
  if (nhop_764 <= 0)
    goto <bb 225>;
  else
    goto <bb 224>;
;;    succ:       225
;;                224

;;   basic block 224, loop depth 2
;;    pred:       223
  # nhop_1396 = PHI <nhop_764(223)>
  # _1397 = PHI <_745(223)>
  # prephitmp_329 = PHI <_749(223)>
  goto <bb 228>;
;;    succ:       228

;;   basic block 225, loop depth 0
;;    pred:       223
;;                226
  __assert_fail ("nhop > 0", "verify.c", 52, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 226, loop depth 3
;;    pred:       228
  if (nhop_766 == 0)
    goto <bb 225>;
  else
    goto <bb 227>;
;;    succ:       225
;;                227

;;   basic block 227, loop depth 3
;;    pred:       226
  pretmp_1346 = bfs_tree_622 + _768;
  pretmp_1347 = MEM[(const int64_t *)pretmp_1346];
  nhop_1249 = nhop_766;
;;    succ:       228

;;   basic block 228, loop depth 3
;;    pred:       224
;;                227
  # nhop_1083 = PHI <nhop_1396(224), nhop_1249(227)>
  # _363 = PHI <_1397(224), _767(227)>
  # prephitmp_1348 = PHI <prephitmp_329(224), pretmp_1347(227)>
  # DEBUG nhop => nhop_1083
  # DEBUG parent => parent_1089
  nhop_766 = nhop_1083 + -1;
  # DEBUG nhop => nhop_766
  *_363 = nhop_1083;
  # DEBUG D#27 => *D#39
  # DEBUG parent => D#27
  # DEBUG nhop => nhop_766
  # DEBUG parent => D#27
  _772 = (long unsigned int) prephitmp_1348;
  _768 = _772 * 8;
  _767 = level_644 + _768;
  _773 = *_767;
  if (_773 < 0)
    goto <bb 226>;
  else
    goto <bb 229>;
;;    succ:       226
;;                229

;;   basic block 229, loop depth 2
;;    pred:       228
  if (nhop_766 != _773)
    goto <bb 230>;
  else
    goto <bb 231>;
;;    succ:       230
;;                231

;;   basic block 230, loop depth 0
;;    pred:       229
  __assert_fail ("nhop == level[parent]", "verify.c", 56, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 231, loop depth 2
;;    pred:       229
  # DEBUG nhop => 0
  # DEBUG parent => parent_1089
  lastlvl_774 = MEM[base: _745, offset: 0B];
  # DEBUG D#23 => lastlvl_774 + 1
  # DEBUG lastlvl => D#23
  # DEBUG lastlvl => D#23
  # DEBUG nhop => NULL
  # DEBUG parent => parent_1089
  if (lastlvl_774 > 0)
    goto <bb 232>;
  else
    goto <bb 274>;
;;    succ:       232
;;                274

;;   basic block 232, loop depth 2
;;    pred:       231
  # lastlvl_1371 = PHI <lastlvl_774(231)>
  # prephitmp_1395 = PHI <_749(231)>
  goto <bb 236>;
;;    succ:       236

;;   basic block 233, loop depth 3
;;    pred:       236
  _777 = lastlvl_776 + 1;
  if (_777 != lastlvl_1142)
    goto <bb 235>;
  else
    goto <bb 234>;
;;    succ:       235
;;                234

;;   basic block 234, loop depth 3
;;    pred:       233
  pretmp_1354 = bfs_tree_622 + _779;
  pretmp_1355 = MEM[(const int64_t *)pretmp_1354];
  lastlvl_1341 = lastlvl_776;
  goto <bb 236>;
;;    succ:       236

;;   basic block 235, loop depth 0
;;    pred:       233
  __assert_fail ("lastlvl == 1 + level[parent]", "verify.c", 64, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 236, loop depth 3
;;    pred:       232
;;                234
  # lastlvl_1142 = PHI <lastlvl_1371(232), lastlvl_1341(234)>
  # prephitmp_1356 = PHI <prephitmp_1395(232), pretmp_1355(234)>
  # DEBUG nhop => NULL
  # DEBUG parent => parent_1089
  # DEBUG lastlvl => lastlvl_1142
  # DEBUG D#26 => *D#38
  # DEBUG parent => D#26
  # DEBUG nhop => NULL
  # DEBUG lastlvl => lastlvl_1142
  # DEBUG nhop => NULL
  # DEBUG parent => D#26
  _783 = (long unsigned int) prephitmp_1356;
  _779 = _783 * 8;
  _784 = level_644 + _779;
  lastlvl_776 = *_784;
  if (lastlvl_776 > 0)
    goto <bb 233>;
  else
    goto <bb 274>;
;;    succ:       233
;;                274

;;   basic block 237, loop depth 2
;;    pred:       213
;;                274
;;                275
  # err_792 = PHI <err_1084(213), err_1084(274), err_1109(275)>
  # DEBUG err => err_792
  parent_786 = parent_1089 + 1;
  # DEBUG k => parent_786
  # DEBUG k => parent_786
  # DEBUG err => err_792
  ivtmp.84_652 = ivtmp.84_785 + 8;
  if (_654 != parent_786)
    goto <bb 213>;
  else
    goto <bb 284>;
;;    succ:       213
;;                284

;;   basic block 238, loop depth 1
;;    pred:       198
;;                239
  # DEBUG terr => 0
  # DEBUG k => 0
  # DEBUG nedge_traversed => 0
  # DEBUG err => 0
  _1108 = _577 * 2;
  if (_1108 > 0)
    goto <bb 240>;
  else
    goto <bb 289>;
;;    succ:       240
;;                289

;;   basic block 239, loop depth 1
;;    pred:       284
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG k => 0
  _1441 = MAX_EXPR <_574, 0>;
  _78 = (sizetype) _1441;
  _1429 = _78 + 1;
  _1140 = _1429 * 8;
  __builtin_memset (seen_edge_794, 0, _1140);
  goto <bb 238>;
;;    succ:       238

;;   basic block 240, loop depth 1
;;    pred:       238
  _708 = _576 + 8;
  ivtmp.64_710 = (unsigned long) _708;
  _1368 = (unsigned long) _1108;
  _333 = _1368 + 18446744073709551615;
  _1401 = _333 >> 1;
  _1402 = _1401 * 16;
  _839 = _1402 + 24;
  _647 = _576 + _839;
  _741 = (unsigned long) _647;
;;    succ:       241

;;   basic block 241, loop depth 2
;;    pred:       240
;;                254
  # nedge_traversed_728 = PHI <0(240), nedge_traversed_730(254)>
  # err_788 = PHI <0(240), err_729(254)>
  # ivtmp.64_706 = PHI <ivtmp.64_710(240), ivtmp.64_707(254)>
  # DEBUG terr => 0
  # DEBUG k => NULL
  # DEBUG nedge_traversed => nedge_traversed_728
  # DEBUG err => err_788
  _1398 = (void *) ivtmp.64_706;
  i_655 = MEM[base: _1398, offset: -8B];
  # DEBUG i => i_655
  j_659 = MEM[base: _1398, offset: 0B];
  # DEBUG j => j_659
  # DEBUG terr => err_788
  _660 = i_655 < 0;
  _661 = j_659 < 0;
  _662 = _660 | _661;
  if (_662 != 0)
    goto <bb 254>;
  else
    goto <bb 242>;
;;    succ:       254
;;                242

;;   basic block 242, loop depth 2
;;    pred:       241
  _663 = _574 < i_655;
  _664 = _574 >= j_659;
  _665 = _663 & _664;
  if (_665 != 0)
    goto <bb 276>;
  else
    goto <bb 243>;
;;    succ:       276
;;                243

;;   basic block 243, loop depth 2
;;    pred:       242
  # DEBUG terr => err_788
  _666 = _574 < j_659;
  _667 = _574 >= i_655;
  _668 = _666 & _667;
  if (_668 != 0)
    goto <bb 285>;
  else
    goto <bb 244>;
;;    succ:       285
;;                244

;;   basic block 244, loop depth 2
;;    pred:       243
  # DEBUG err => err_788
  _670 = err_788 != 0;
  _671 = _663 | _670;
  if (_671 != 0)
    goto <bb 254>;
  else
    goto <bb 245>;
;;    succ:       254
;;                245

;;   basic block 245, loop depth 2
;;    pred:       244
  _672 = (long unsigned int) i_655;
  _673 = _672 * 8;
  _674 = bfs_tree_622 + _673;
  _675 = *_674;
  if (_675 >= 0)
    goto <bb 246>;
  else
    goto <bb 287>;
;;    succ:       246
;;                287

;;   basic block 246, loop depth 2
;;    pred:       245
  _676 = (long unsigned int) j_659;
  _677 = _676 * 8;
  _678 = bfs_tree_622 + _677;
  _679 = *_678;
  if (_679 < 0)
    goto <bb 278>;
  else
    goto <bb 286>;
;;    succ:       278
;;                286

;;   basic block 247, loop depth 2
;;    pred:       286
  if (j_659 == _675)
    goto <bb 248>;
  else
    goto <bb 249>;
;;    succ:       248
;;                249

;;   basic block 248, loop depth 2
;;    pred:       247
  _687 = seen_edge_794 + _673;
  *_687 = 1;
;;    succ:       249

;;   basic block 249, loop depth 2
;;    pred:       247
;;                248
  if (i_655 == _679)
    goto <bb 251>;
  else
    goto <bb 250>;
;;    succ:       251
;;                250

;;   basic block 250, loop depth 2
;;    pred:       249
;;                286
  goto <bb 252>;
;;    succ:       252

;;   basic block 251, loop depth 2
;;    pred:       249
  _689 = seen_edge_794 + _677;
  *_689 = 1;
;;    succ:       252

;;   basic block 252, loop depth 2
;;    pred:       251
;;                250
  _690 = level_644 + _673;
  _691 = *_690;
  _692 = level_644 + _677;
  _693 = *_692;
  lvldiff_694 = _691 - _693;
  # DEBUG lvldiff => lvldiff_694
  _695 = (unsigned long) lvldiff_694;
  _696 = _695 + 1;
  if (_696 > 2)
    goto <bb 254>;
  else
    goto <bb 253>;
;;    succ:       254
;;                253

;;   basic block 253, loop depth 2
;;    pred:       252
;;    succ:       254

;;   basic block 254, loop depth 2
;;    pred:       241
;;                244
;;                287
;;                253
;;                252
;;                278
;;                285
  # err_729 = PHI <err_788(241), err_788(244), 0(287), 0(253), -14(252), err_1099(278), err_1143(285)>
  # nedge_traversed_730 = PHI <nedge_traversed_728(241), nedge_traversed_728(244), nedge_traversed_728(287), nedge_traversed_686(253), nedge_traversed_686(252), nedge_traversed_728(278), nedge_traversed_728(285)>
  # err_731 = PHI <err_788(241), err_788(244), 0(287), 0(253), -14(252), err_1099(278), err_1143(285)>
  # DEBUG terr => err_731
  # DEBUG nedge_traversed => nedge_traversed_730
  # DEBUG err => err_729
  # DEBUG k => D#42
  # DEBUG terr => err_731
  # DEBUG k => D#42
  # DEBUG nedge_traversed => nedge_traversed_730
  # DEBUG err => err_729
  ivtmp.64_707 = ivtmp.64_706 + 16;
  if (ivtmp.64_707 != _741)
    goto <bb 241>;
  else
    goto <bb 255>;
;;    succ:       241
;;                255

;;   basic block 255, loop depth 1
;;    pred:       254
  if (err_731 == 0)
    goto <bb 256>;
  else
    goto <bb 265> (done);
;;    succ:       256
;;                265

;;   basic block 256, loop depth 1
;;    pred:       255
  # DEBUG k => 0
  # DEBUG err => err_729
  if (nv_635 > 0)
    goto <bb 257>;
  else
    goto <bb 265> (done);
;;    succ:       257
;;                265

;;   basic block 257, loop depth 1
;;    pred:       256
;;                289
  # err_1190 = PHI <err_729(256), 0(289)>
  # nedge_traversed_1189 = PHI <nedge_traversed_730(256), 0(289)>
  _1357 = (unsigned long) _574;
  _1344 = _1357 + 1;
  _1012 = (long int) _1344;
;;    succ:       258

;;   basic block 258, loop depth 2
;;    pred:       257
;;                264
  # err_325 = PHI <err_1190(257), err_735(264)>
  # k_298 = PHI <0(257), k_713(264)>
  # DEBUG k => k_298
  # DEBUG err => err_325
  # DEBUG terr => err_325
  _702 = err_325 == 0;
  _704 = k_298 != _575;
  _705 = _702 & _704;
  if (_705 != 0)
    goto <bb 259>;
  else
    goto <bb 264>;
;;    succ:       259
;;                264

;;   basic block 259, loop depth 2
;;    pred:       258
  _1276 = (sizetype) k_298;
  _709 = MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B];
  if (_709 >= 0)
    goto <bb 260>;
  else
    goto <bb 263>;
;;    succ:       260
;;                263

;;   basic block 260, loop depth 2
;;    pred:       259
  _711 = MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B];
  if (_711 == 0)
    goto <bb 262>;
  else
    goto <bb 261>;
;;    succ:       262
;;                261

;;   basic block 261, loop depth 2
;;    pred:       260
;;    succ:       262

;;   basic block 262, loop depth 2
;;    pred:       260
;;                261
  # err_734 = PHI <-15(260), 0(261)>
  # DEBUG terr => err_734
  if (k_298 == _709)
    goto <bb 264>;
  else
    goto <bb 263>;
;;    succ:       264
;;                263

;;   basic block 263, loop depth 2
;;    pred:       259
;;                262
  # err_712 = PHI <0(259), err_734(262)>
  # DEBUG terr => NULL
  # DEBUG terr => err_712
;;    succ:       264

;;   basic block 264, loop depth 2
;;    pred:       258
;;                263
;;                262
  # err_735 = PHI <err_325(258), err_712(263), -16(262)>
  # DEBUG err => err_735
  k_713 = k_298 + 1;
  # DEBUG k => k_713
  # DEBUG k => k_713
  # DEBUG err => err_735
  if (k_713 != _1012)
    goto <bb 258>;
  else
    goto <bb 265> (done);
;;    succ:       258
;;                265

;;   basic block 265, loop depth 1
;;    pred:       264
;;                255
;;                256
  # err_714 = PHI <err_735(264), err_729(255), err_729(256)>
  # nedge_traversed_557 = PHI <nedge_traversed_1189(264), nedge_traversed_730(255), nedge_traversed_730(256)>
done:
  # DEBUG nedge_traversed => nedge_traversed_557
  # DEBUG err => err_714
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  if (err_714 != 0)
    goto <bb 266>;
  else
    goto <bb 267>;
;;    succ:       266
;;                267

;;   basic block 266, loop depth 1
;;    pred:       265
;;                279
  # err_976 = PHI <err_714(265), err_792(279)>
  # DEBUG nedge_traversed => NULL
  # DEBUG err => err_976
  # DEBUG p => NULL
  _715 = (long int) err_976;
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _715;
  _1517 = VERBOSE;
  if (_1517 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;
;;    succ:       268
;;                269

;;   basic block 267, loop depth 1
;;    pred:       265
;;                288
  # nedge_traversed_1191 = PHI <nedge_traversed_557(265), 0(288)>
  # DEBUG nedge_traversed => nedge_traversed_1191
  # DEBUG err => NULL
  # DEBUG p => NULL
  _717 = (long int) nedge_traversed_1191;
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _717;
  _1523 = VERBOSE;
  if (_1523 != 0)
    goto <bb 268>;
  else
    goto <bb 270>;
;;    succ:       268
;;                270

;;   basic block 268, loop depth 1
;;    pred:       267
;;                290
;;                266
  _580 = stderr;
  # DEBUG __stream => _580
  # DEBUG __fmt => "done\n"
  __fprintf_chk (_580, 1, "done\n");
  pretmp_1286 = MEM[symbol: bfs_nedge, index: _1361, offset: 0B];
  if (pretmp_1286 < 0)
    goto <bb 269>;
  else
    goto <bb 270>;
;;    succ:       269
;;                270

;;   basic block 269, loop depth 0
;;    pred:       266
;;                290
;;                268
  # prephitmp_1156 = PHI <_715(266), -999(290), pretmp_1286(268)>
  _582 = stderr;
  _583 = bfs_root[m_937];
  # DEBUG __stream => _582
  # DEBUG __fmt => "bfs %d from %ld failed verification (%ld)\n"
  __fprintf_chk (_582, 1, "bfs %d from %ld failed verification (%ld)\n", m_937, _583, prephitmp_1156);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 270, loop depth 1
;;    pred:       268
;;                267
  # DEBUG p => bfs_tree_622
  free (bfs_tree_622);
  # DEBUG p => NULL
  max_bfsvtx ={v} {CLOBBER};
  _744 = (unsigned int) ivtmp.94_1264;
  _748 = _744 + 1;
  _759 = (int) _748;
  # DEBUG m => _759
  # DEBUG m => _759
  _585 = NBFS;
  ivtmp.94_1263 = ivtmp.94_1264 + 1;
  if (_585 > _759)
    goto <bb 182>;
  else
    goto <bb 175>;
;;    succ:       182
;;                175

;;   basic block 271, loop depth 0
;;    pred:       129
;;                131
;;                175
  # _1 = PHI <1(129), 1(131), 0(175)>
  return _1;
;;    succ:       EXIT

;;   basic block 272, loop depth 0
;;    pred:       71
;;                72
;;    succ:       273

;;   basic block 273, loop depth 0
;;    pred:       272
;;                73
  # DEBUG seed => -1
  goto <bb 74>;
;;    succ:       74

;;   basic block 274, loop depth 2
;;    pred:       215
;;                231
;;                236
  # DEBUG terr => 0
  goto <bb 237>;
;;    succ:       237

;;   basic block 275, loop depth 2
;;    pred:       220
;;                214
;;                222
  # err_1109 = PHI <-2(220), err_1084(214), -1(222)>
  # DEBUG terr => err_1109
  goto <bb 237>;
;;    succ:       237

;;   basic block 276, loop depth 2
;;    pred:       242
  # DEBUG terr => -10
  # DEBUG terr => -10
  _1098 = _574 < j_659;
  _1106 = _574 >= i_655;
  _1105 = _1098 & _1106;
  if (_1105 != 0)
    goto <bb 285>;
  else
    goto <bb 277>;
;;    succ:       285
;;                277

;;   basic block 277, loop depth 2
;;    pred:       276
  goto <bb 285>;
;;    succ:       285

;;   basic block 278, loop depth 2
;;    pred:       246
;;                287
  # err_1099 = PHI <-12(246), -13(287)>
  # DEBUG terr => err_1099
  # DEBUG err => err_1099
  # DEBUG err => err_1099
  goto <bb 254>;
;;    succ:       254

;;   basic block 279, loop depth 1
;;    pred:       284
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG nedge_traversed => 0
  # DEBUG err => err_792
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  goto <bb 266>;
;;    succ:       266

;;   basic block 280, loop depth 2
;;    pred:       107
;;                108
;;                105
  # prephitmp_1443 = PHI <1(107), 0(108), 0(105)>
  # prephitmp_1444 = PHI <1(107), 0(108), 1(105)>
  # DEBUG st => NULL
  # DEBUG val => NULL
  # DEBUG square => NULL
  # DEBUG src_offset => NULL
  # DEBUG tgt_offset => NULL
  if (base_tgt_310 < base_src_819)
    goto <bb 281>;
  else
    goto <bb 282>;
;;    succ:       281
;;                282

;;   basic block 281, loop depth 0
;;    pred:       280
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
  goto <bb 111>;
;;    succ:       111

;;   basic block 282, loop depth 2
;;    pred:       280
  pretmp_1448 = nverts_308 >> 1;
  pretmp_1449 = prephitmp_1443 * pretmp_1448;
  goto <bb 291>;
;;    succ:       291

;;   basic block 283, loop depth 1
;;    pred:       188
  if (err_568 != 0)
    goto <bb 190>;
  else
    goto <bb 192>;
;;    succ:       190
;;                192

;;   basic block 284, loop depth 1
;;    pred:       237
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  if (err_792 != 0)
    goto <bb 279>;
  else
    goto <bb 239>;
;;    succ:       279
;;                239

;;   basic block 285, loop depth 2
;;    pred:       277
;;                276
;;                243
  # err_1143 = PHI <-10(277), -11(276), -11(243)>
  # DEBUG err => err_1143
  goto <bb 254>;
;;    succ:       254

;;   basic block 286, loop depth 2
;;    pred:       246
  # DEBUG terr => 0
  # DEBUG terr => 0
  # DEBUG err => 0
  nedge_traversed_686 = nedge_traversed_728 + 1;
  # DEBUG nedge_traversed => nedge_traversed_686
  if (i_655 != j_659)
    goto <bb 247>;
  else
    goto <bb 250>;
;;    succ:       247
;;                250

;;   basic block 287, loop depth 2
;;    pred:       245
  # DEBUG terr => 0
  _1076 = (long unsigned int) j_659;
  _1074 = _1076 * 8;
  _1073 = bfs_tree_622 + _1074;
  _733 = *_1073;
  if (_733 >= 0)
    goto <bb 278>;
  else
    goto <bb 254>;
;;    succ:       278
;;                254

;;   basic block 288, loop depth 1
;;    pred:       289
  # DEBUG nedge_traversed => 0
  # DEBUG err => 0
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  goto <bb 267>;
;;    succ:       267

;;   basic block 289, loop depth 1
;;    pred:       238
  # DEBUG k => 0
  # DEBUG err => 0
  if (nv_635 > 0)
    goto <bb 257>;
  else
    goto <bb 288>;
;;    succ:       257
;;                288

;;   basic block 290, loop depth 1
;;    pred:       194
;;                195
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = -999;
  _1193 = VERBOSE;
  if (_1193 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;
;;    succ:       268
;;                269

;;   basic block 291, loop depth 2
;;    pred:       282
;;                114
;;                113
  # prephitmp_1478 = PHI <pretmp_1449(282), pretmp_1446(114), 0(113)>
  # prephitmp_1479 = PHI <prephitmp_1444(282), 0(114), 1(113)>
  # nverts_1481 = PHI <pretmp_1448(282), pretmp_1446(114), pretmp_1472(113)>
  # DEBUG tgt_offset => NULL
  # DEBUG src_offset => NULL
  # DEBUG D#31 => nverts_308 >> 1
  # DEBUG nverts => D#31
  # DEBUG level => NULL
  base_src_1482 = base_src_819 + prephitmp_1478;
  # DEBUG base_src => base_src_1482
  _1520 = prephitmp_1479 * nverts_1481;
  base_tgt_1490 = base_tgt_310 + _1520;
  # DEBUG base_tgt => base_tgt_1490
  # DEBUG base_tgt => base_tgt_1490
  # DEBUG base_src => base_src_1482
  # DEBUG level => NULL
  # DEBUG nverts => D#31
  if (nverts_1481 != 1)
    goto <bb 94>;
  else
    goto <bb 115>;
;;    succ:       94
;;                115

}



Partition map 

Partition 1 (_1 - 1 )
Partition 7 (argc_7(D) - 7 )
Partition 9 (argv_9(D) - 9 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 17 (_17 - 17 )
Partition 18 (desired_nedge_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 39 (_39 - 39 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 47 (_47 - 47 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (exponent_middle_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (sz_55 - 55 )
Partition 56 (_56 - 56 )
Partition 61 (_61 - 61 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 76 (_76 - 76 )
Partition 78 (_78 - 78 )
Partition 80 (_80 - 80 )
Partition 89 (_89 - 89 )
Partition 95 (prng_state_store_z5_lsm.11_95 - 95 )
Partition 101 (_101 - 101 )
Partition 103 (_103 - 103 )
Partition 107 (nverts_107 - 107 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 117 (_117 - 117 )
Partition 118 (c_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (whichset_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (whichset_152 - 152 )
Partition 153 (nset_153 - 153 )
Partition 154 (nset_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (whichset_165 - 165 )
Partition 166 (nset_166 - 166 )
Partition 167 (_167 - 167 )
Partition 168 (_168 - 168 )
Partition 169 (_169 - 169 )
Partition 170 (_170 - 170 )
Partition 171 (_171 - 171 )
Partition 172 (_172 - 172 )
Partition 173 (_173 - 173 )
Partition 174 (_174 - 174 )
Partition 175 (_175 - 175 )
Partition 176 (_176 - 176 )
Partition 177 (whichset_177 - 177 )
Partition 178 (nset_178 - 178 )
Partition 179 (_179 - 179 )
Partition 180 (_180 - 180 )
Partition 181 (_181 - 181 )
Partition 182 (_182 - 182 )
Partition 183 (_183 - 183 )
Partition 184 (_184 - 184 )
Partition 185 (_185 - 185 )
Partition 186 (_186 - 186 )
Partition 187 (_187 - 187 )
Partition 188 (_188 - 188 )
Partition 189 (whichset_189 - 189 )
Partition 190 (nset_190 - 190 )
Partition 191 (_191 - 191 )
Partition 192 (err_192 - 192 )
Partition 193 (_193 - 193 )
Partition 194 (_194 - 194 )
Partition 195 (_195 - 195 )
Partition 196 (_196 - 196 )
Partition 197 (_197 - 197 )
Partition 198 (_198 - 198 )
Partition 199 (_199 - 199 )
Partition 200 (_200 - 200 )
Partition 201 (_201 - 201 )
Partition 202 (_202 - 202 )
Partition 203 (_203 - 203 )
Partition 204 (_204 - 204 )
Partition 205 (_205 - 205 )
Partition 206 (_206 - 206 )
Partition 207 (_207 - 207 )
Partition 208 (_208 - 208 )
Partition 209 (_209 - 209 )
Partition 210 (_210 - 210 )
Partition 211 (_211 - 211 )
Partition 212 (_212 - 212 )
Partition 213 (_213 - 213 )
Partition 214 (_214 - 214 )
Partition 215 (_215 - 215 )
Partition 216 (_216 - 216 )
Partition 217 (_217 - 217 )
Partition 218 (_218 - 218 )
Partition 219 (_219 - 219 )
Partition 220 (_220 - 220 )
Partition 221 (_221 - 221 )
Partition 222 (_222 - 222 )
Partition 223 (_223 - 223 )
Partition 224 (_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (_226 - 226 )
Partition 227 (sum_227 - 227 )
Partition 228 (_228 - 228 )
Partition 229 (_229 - 229 )
Partition 230 (sum_230 - 230 )
Partition 231 (_231 - 231 )
Partition 232 (_232 - 232 )
Partition 233 (sum_233 - 233 )
Partition 234 (_234 - 234 )
Partition 235 (_235 - 235 )
Partition 236 (sum_236 - 236 )
Partition 237 (_237 - 237 )
Partition 238 (_238 - 238 )
Partition 239 (_239 - 239 )
Partition 240 (_240 - 240 )
Partition 241 (_241 - 241 )
Partition 242 (_242 - 242 )
Partition 243 (_243 - 243 )
Partition 244 (_244 - 244 )
Partition 245 (_245 - 245 )
Partition 249 (err_249 - 249 )
Partition 250 (err_250 - 250 )
Partition 251 (err_251 - 251 )
Partition 252 (err_252 - 252 )
Partition 253 (err_253 - 253 )
Partition 254 (err_254 - 254 )
Partition 255 (err_255 - 255 )
Partition 256 (err_256 - 256 )
Partition 257 (err_257 - 257 )
Partition 258 (err_258 - 258 )
Partition 259 (err_259 - 259 )
Partition 260 (err_260 - 260 )
Partition 261 (err_261 - 261 )
Partition 262 (err_262 - 262 )
Partition 263 (nset_263 - 263 )
Partition 264 (err_264 - 264 )
Partition 266 (_266 - 266 )
Partition 267 (_267 - 267 )
Partition 268 (seed_268 - 268 )
Partition 269 (_269 - 269 )
Partition 270 (_270 - 270 )
Partition 271 (seed_271 - 271 )
Partition 272 (_272 - 272 )
Partition 273 (_273 - 273 )
Partition 274 (_274 - 274 )
Partition 275 (_275 - 275 )
Partition 276 (_276 - 276 )
Partition 277 (_277 - 277 )
Partition 278 (_278 - 278 )
Partition 279 (_279 - 279 )
Partition 281 (_281 - 281 )
Partition 282 (_282 - 282 )
Partition 283 (_283 - 283 )
Partition 284 (_284 - 284 )
Partition 286 (_286 - 286 )
Partition 287 (edges_287 - 287 )
Partition 288 (val0_288 - 288 )
Partition 290 (val0_290 - 290 )
Partition 292 (val1_292 - 292 )
Partition 294 (val1_294 - 294 )
Partition 295 (start_edge_295 - 295 )
Partition 296 (exponent_middle_296 - 296 )
Partition 298 (k_298 - 298 )
Partition 301 (start_edge_301 - 301 )
Partition 302 (_302 - 302 )
Partition 303 (state$z1_303 - 303 )
Partition 304 (_304 - 304 )
Partition 305 (_305 - 305 )
Partition 306 (state$z2_306 - 306 )
Partition 308 (nverts_308 - 308 )
Partition 309 (base_tgt_309 - 309 )
Partition 310 (base_tgt_310 - 310 )
Partition 312 (_312 - 312 )
Partition 313 (_313 - 313 )
Partition 315 (_315 - 315 )
Partition 316 (state$z5_316 - 316 )
Partition 317 (_317 - 317 )
Partition 318 (_318 - 318 )
Partition 319 (_319 - 319 )
Partition 320 (_320 - 320 )
Partition 322 (_322 - 322 )
Partition 323 (_323 - 323 )
Partition 324 (_324 - 324 )
Partition 325 (err_325 - 325 )
Partition 327 (byte_index_327 - 327 )
Partition 329 (prephitmp_329 - 329 )
Partition 333 (_333 - 333 )
Partition 341 (parent_341 - 341 )
Partition 344 (parent_344 - 344 )
Partition 348 (prephitmp_348 - 348 )
Partition 351 (val_351 - 351 )
Partition 352 (_352 - 352 )
Partition 354 (_354 - 354 )
Partition 355 (byte_index_355 - 355 )
Partition 356 (exponent_middle_356 - 356 )
Partition 357 (nhop_357 - 357 )
Partition 363 (_363 - 363 )
Partition 364 (prephitmp_364 - 364 )
Partition 368 (_368 - 368 )
Partition 369 (val_369 - 369 )
Partition 371 (val_371 - 371 )
Partition 372 (val_372 - 372 )
Partition 373 (val_373 - 373 )
Partition 374 (val_374 - 374 )
Partition 375 (val_375 - 375 )
Partition 379 (_379 - 379 )
Partition 380 (_380 - 380 )
Partition 382 (prephitmp_382 - 382 )
Partition 386 (_386 - 386 )
Partition 387 (_387 - 387 )
Partition 388 (_388 - 388 )
Partition 391 (_391 - 391 )
Partition 392 (_392 - 392 )
Partition 398 (_398 - 398 )
Partition 399 (_399 - 399 )
Partition 400 (_400 - 400 )
Partition 401 (v_401 - 401 )
Partition 403 (v_403 - 403 )
Partition 405 (v_405 - 405 )
Partition 406 (x_406 - 406 )
Partition 407 (_407 - 407 )
Partition 408 (_408 - 408 )
Partition 409 (_409 - 409 )
Partition 410 (_410 - 410 )
Partition 411 (x_411 - 411 )
Partition 412 (_412 - 412 )
Partition 413 (_413 - 413 )
Partition 414 (_414 - 414 )
Partition 415 (_415 - 415 )
Partition 416 (x_416 - 416 )
Partition 417 (_417 - 417 )
Partition 418 (_418 - 418 )
Partition 419 (_419 - 419 )
Partition 420 (_420 - 420 )
Partition 421 (x_421 - 421 )
Partition 423 (v_423 - 423 )
Partition 424 (_424 - 424 )
Partition 426 (v_426 - 426 )
Partition 427 (x_427 - 427 )
Partition 428 (_428 - 428 )
Partition 429 (_429 - 429 )
Partition 430 (_430 - 430 )
Partition 431 (_431 - 431 )
Partition 432 (x_432 - 432 )
Partition 433 (_433 - 433 )
Partition 434 (_434 - 434 )
Partition 435 (_435 - 435 )
Partition 436 (_436 - 436 )
Partition 437 (x_437 - 437 )
Partition 438 (_438 - 438 )
Partition 439 (_439 - 439 )
Partition 440 (_440 - 440 )
Partition 441 (_441 - 441 )
Partition 442 (x_442 - 442 )
Partition 443 (v_443 - 443 )
Partition 444 (_444 - 444 )
Partition 445 (_445 - 445 )
Partition 446 (v_446 - 446 )
Partition 447 (_447 - 447 )
Partition 448 (v_448 - 448 )
Partition 449 (_449 - 449 )
Partition 450 (v_450 - 450 )
Partition 451 (x_451 - 451 )
Partition 452 (_452 - 452 )
Partition 453 (_453 - 453 )
Partition 454 (_454 - 454 )
Partition 455 (_455 - 455 )
Partition 456 (x_456 - 456 )
Partition 457 (_457 - 457 )
Partition 458 (_458 - 458 )
Partition 459 (_459 - 459 )
Partition 460 (_460 - 460 )
Partition 461 (x_461 - 461 )
Partition 462 (_462 - 462 )
Partition 463 (_463 - 463 )
Partition 464 (_464 - 464 )
Partition 465 (_465 - 465 )
Partition 466 (x_466 - 466 )
Partition 467 (_467 - 467 )
Partition 468 (v_468 - 468 )
Partition 469 (_469 - 469 )
Partition 470 (_470 - 470 )
Partition 471 (v_471 - 471 )
Partition 472 (x_472 - 472 )
Partition 473 (_473 - 473 )
Partition 474 (_474 - 474 )
Partition 475 (_475 - 475 )
Partition 476 (_476 - 476 )
Partition 477 (x_477 - 477 )
Partition 478 (_478 - 478 )
Partition 479 (_479 - 479 )
Partition 480 (_480 - 480 )
Partition 481 (_481 - 481 )
Partition 482 (x_482 - 482 )
Partition 483 (_483 - 483 )
Partition 484 (_484 - 484 )
Partition 485 (_485 - 485 )
Partition 486 (_486 - 486 )
Partition 487 (x_487 - 487 )
Partition 488 (v_488 - 488 )
Partition 489 (_489 - 489 )
Partition 490 (_490 - 490 )
Partition 491 (_491 - 491 )
Partition 492 (_492 - 492 )
Partition 493 (_493 - 493 )
Partition 494 (err_494 - 494 )
Partition 495 (_495 - 495 )
Partition 496 (_496 - 496 )
Partition 497 (_497 - 497 )
Partition 498 (_498 - 498 )
Partition 499 (_499 - 499 )
Partition 500 (_500 - 500 )
Partition 501 (_501 - 501 )
Partition 502 (_502 - 502 )
Partition 504 (k_504 - 504 )
Partition 505 (ivtmp.134_505 - 505 )
Partition 506 (ivtmp.134_506 - 506 )
Partition 507 (ivtmp.134_507 - 507 )
Partition 508 (k_508 - 508 )
Partition 510 (_510 - 510 )
Partition 511 (k_511 - 511 )
Partition 512 (_512 - 512 )
Partition 513 (_513 - 513 )
Partition 514 (parent_514 - 514 )
Partition 515 (_515 - 515 )
Partition 516 (_516 - 516 )
Partition 517 (_517 - 517 )
Partition 518 (_518 - 518 )
Partition 519 (_519 - 519 )
Partition 520 (_520 - 520 )
Partition 521 (_521 - 521 )
Partition 522 (_522 - 522 )
Partition 523 (k_523 - 523 )
Partition 524 (_524 - 524 )
Partition 527 (t_527 - 527 )
Partition 528 (ivtmp.110_528 - 528 )
Partition 529 (ivtmp.110_529 - 529 )
Partition 530 (ivtmp.110_530 - 530 )
Partition 531 (_531 - 531 )
Partition 534 (_534 - 534 )
Partition 535 (_535 - 535 )
Partition 537 (m_537 - 537 )
Partition 538 (_538 - 538 )
Partition 539 (_539 - 539 )
Partition 541 (m_541 - 541 )
Partition 543 (_543 - 543 )
Partition 546 (_546 - 546 )
Partition 547 (_547 - 547 )
Partition 548 (_548 - 548 )
Partition 549 (_549 - 549 )
Partition 550 (_550 - 550 )
Partition 551 (_551 - 551 )
Partition 552 (sz_552 - 552 )
Partition 554 (_554 - 554 )
Partition 556 (nhop_556 - 556 )
Partition 557 (nedge_traversed_557 - 557 )
Partition 558 (_558 - 558 )
Partition 559 (_559 - 559 )
Partition 560 (_560 - 560 )
Partition 563 (_563 - 563 )
Partition 565 (_565 - 565 )
Partition 566 (_566 - 566 )
Partition 567 (_567 - 567 )
Partition 568 (err_568 - 568 )
Partition 570 (_570 - 570 )
Partition 571 (_571 - 571 )
Partition 572 (_572 - 572 )
Partition 573 (_573 - 573 )
Partition 574 (_574 - 574 )
Partition 575 (_575 - 575 )
Partition 576 (_576 - 576 )
Partition 577 (_577 - 577 )
Partition 580 (_580 - 580 )
Partition 582 (_582 - 582 )
Partition 583 (_583 - 583 )
Partition 585 (_585 - 585 )
Partition 592 (_592 - 592 )
Partition 593 (_593 - 593 )
Partition 594 (_594 - 594 )
Partition 596 (_596 - 596 )
Partition 597 (_597 - 597 )
Partition 598 (_598 - 598 )
Partition 600 (_600 - 600 )
Partition 601 (_601 - 601 )
Partition 608 (_608 - 608 )
Partition 609 (_609 - 609 )
Partition 615 (_615 - 615 )
Partition 616 (_616 - 616 )
Partition 617 (_617 - 617 )
Partition 618 (_618 - 618 )
Partition 619 (_619 - 619 )
Partition 620 (_620 - 620 )
Partition 622 (bfs_tree_622 - 622 )
Partition 623 (_623 - 623 )
Partition 624 (_624 - 624 )
Partition 625 (_625 - 625 )
Partition 626 (_626 - 626 )
Partition 627 (_627 - 627 )
Partition 628 (out_628 - 628 )
Partition 629 (_629 - 629 )
Partition 630 (_630 - 630 )
Partition 631 (_631 - 631 )
Partition 632 (_632 - 632 )
Partition 633 (_633 - 633 )
Partition 634 (out_634 - 634 )
Partition 635 (nv_635 - 635 )
Partition 636 (_636 - 636 )
Partition 637 (_637 - 637 )
Partition 638 (_638 - 638 )
Partition 639 (_639 - 639 )
Partition 640 (_640 - 640 )
Partition 641 (_641 - 641 )
Partition 643 (_643 - 643 )
Partition 644 (level_644 - 644 )
Partition 647 (_647 - 647 )
Partition 648 (niters.29_648 - 648 )
Partition 649 (_649 - 649 )
Partition 651 (state$z2_651(D) - 651 )
Partition 652 (ivtmp.84_652 - 652 )
Partition 654 (_654 - 654 )
Partition 655 (i_655 - 655 )
Partition 659 (j_659 - 659 )
Partition 660 (_660 - 660 )
Partition 661 (_661 - 661 )
Partition 662 (_662 - 662 )
Partition 663 (_663 - 663 )
Partition 664 (_664 - 664 )
Partition 665 (_665 - 665 )
Partition 666 (_666 - 666 )
Partition 667 (_667 - 667 )
Partition 668 (_668 - 668 )
Partition 670 (_670 - 670 )
Partition 671 (_671 - 671 )
Partition 672 (_672 - 672 )
Partition 673 (_673 - 673 )
Partition 674 (_674 - 674 )
Partition 675 (_675 - 675 )
Partition 676 (_676 - 676 )
Partition 677 (_677 - 677 )
Partition 678 (_678 - 678 )
Partition 679 (_679 - 679 )
Partition 685 (prephitmp_685 - 685 )
Partition 686 (nedge_traversed_686 - 686 )
Partition 687 (_687 - 687 )
Partition 689 (_689 - 689 )
Partition 690 (_690 - 690 )
Partition 691 (_691 - 691 )
Partition 692 (_692 - 692 )
Partition 693 (_693 - 693 )
Partition 694 (lvldiff_694 - 694 )
Partition 695 (_695 - 695 )
Partition 696 (_696 - 696 )
Partition 700 (state$z1_700(D) - 700 )
Partition 702 (_702 - 702 )
Partition 704 (_704 - 704 )
Partition 705 (_705 - 705 )
Partition 706 (ivtmp.64_706 - 706 )
Partition 707 (ivtmp.64_707 - 707 )
Partition 708 (_708 - 708 )
Partition 709 (_709 - 709 )
Partition 710 (ivtmp.64_710 - 710 )
Partition 711 (_711 - 711 )
Partition 712 (err_712 - 712 )
Partition 713 (k_713 - 713 )
Partition 714 (err_714 - 714 )
Partition 715 (_715 - 715 )
Partition 717 (_717 - 717 )
Partition 725 (prephitmp_725 - 725 )
Partition 728 (nedge_traversed_728 - 728 )
Partition 729 (err_729 - 729 )
Partition 730 (nedge_traversed_730 - 730 )
Partition 731 (err_731 - 731 )
Partition 733 (_733 - 733 )
Partition 734 (err_734 - 734 )
Partition 735 (err_735 - 735 )
Partition 737 (_737 - 737 )
Partition 738 (_738 - 738 )
Partition 741 (_741 - 741 )
Partition 742 (_742 - 742 )
Partition 743 (_743 - 743 )
Partition 744 (_744 - 744 )
Partition 745 (_745 - 745 )
Partition 746 (_746 - 746 )
Partition 748 (_748 - 748 )
Partition 749 (_749 - 749 )
Partition 750 (_750 - 750 )
Partition 753 (_753 - 753 )
Partition 755 (nhop_755 - 755 )
Partition 756 (_756 - 756 )
Partition 757 (_757 - 757 )
Partition 758 (_758 - 758 )
Partition 759 (_759 - 759 )
Partition 764 (nhop_764 - 764 )
Partition 766 (nhop_766 - 766 )
Partition 767 (_767 - 767 )
Partition 768 (_768 - 768 )
Partition 772 (_772 - 772 )
Partition 773 (_773 - 773 )
Partition 774 (lastlvl_774 - 774 )
Partition 775 (prephitmp_775 - 775 )
Partition 776 (lastlvl_776 - 776 )
Partition 777 (_777 - 777 )
Partition 779 (_779 - 779 )
Partition 780 (prologue_after_cost_adjust.32_780 - 780 )
Partition 782 (prolog_loop_niters.31_782 - 782 )
Partition 783 (_783 - 783 )
Partition 784 (_784 - 784 )
Partition 785 (ivtmp.84_785 - 785 )
Partition 786 (parent_786 - 786 )
Partition 788 (err_788 - 788 )
Partition 792 (err_792 - 792 )
Partition 794 (seen_edge_794 - 794 )
Partition 795 (m_795 - 795 )
Partition 813 (base_src_813 - 813 )
Partition 819 (base_src_819 - 819 )
Partition 838 (prephitmp_838 - 838 )
Partition 839 (_839 - 839 )
Partition 847 (_847 - 847 )
Partition 933 (byte_index_933 - 933 )
Partition 934 (_934 - 934 )
Partition 935 (_935 - 935 )
Partition 936 (_936 - 936 )
Partition 937 (m_937 - 937 )
Partition 961 (prephitmp_961 - 961 )
Partition 962 (bnd.34_962 - 962 )
Partition 968 (parent_968 - 968 )
Partition 974 (whichset_974 - 974 )
Partition 976 (err_976 - 976 )
Partition 989 (prephitmp_989 - 989 )
Partition 1004 (niters.33_1004 - 1004 )
Partition 1012 (_1012 - 1012 )
Partition 1035 (prephitmp_1035 - 1035 )
Partition 1048 (_1048 - 1048 )
Partition 1073 (_1073 - 1073 )
Partition 1074 (_1074 - 1074 )
Partition 1076 (_1076 - 1076 )
Partition 1083 (nhop_1083 - 1083 )
Partition 1084 (err_1084 - 1084 )
Partition 1089 (parent_1089 - 1089 )
Partition 1094 (exponent_middle_1094 - 1094 )
Partition 1098 (_1098 - 1098 )
Partition 1099 (err_1099 - 1099 )
Partition 1105 (_1105 - 1105 )
Partition 1106 (_1106 - 1106 )
Partition 1107 (state$z5_1107(D) - 1107 )
Partition 1108 (_1108 - 1108 )
Partition 1109 (err_1109 - 1109 )
Partition 1110 (prng_state_store_z1_lsm.9_1110 - 1110 )
Partition 1111 (prng_state_store_z1_lsm.10_1111 - 1111 )
Partition 1118 (_1118 - 1118 )
Partition 1119 (_1119 - 1119 )
Partition 1140 (_1140 - 1140 )
Partition 1142 (lastlvl_1142 - 1142 )
Partition 1143 (err_1143 - 1143 )
Partition 1146 (_1146 - 1146 )
Partition 1147 (_1147 - 1147 )
Partition 1156 (prephitmp_1156 - 1156 )
Partition 1189 (nedge_traversed_1189 - 1189 )
Partition 1190 (err_1190 - 1190 )
Partition 1191 (nedge_traversed_1191 - 1191 )
Partition 1193 (_1193 - 1193 )
Partition 1202 (vect_vec_iv_.40_1202 - 1202 )
Partition 1203 (prng_state_store_z2_lsm.17_1203 - 1203 )
Partition 1205 (prng_state_store_z3_lsm.15_1205 - 1205 )
Partition 1207 (prng_state_store_z4_lsm.13_1207 - 1207 )
Partition 1209 (prng_state_store_z5_lsm.11_1209 - 1209 )
Partition 1210 (ivtmp.94_1210 - 1210 )
Partition 1211 (prng_state_store_z1_lsm.9_1211 - 1211 )
Partition 1249 (nhop_1249 - 1249 )
Partition 1250 (_1250 - 1250 )
Partition 1252 (_1252 - 1252 )
Partition 1253 (_1253 - 1253 )
Partition 1257 (_1257 - 1257 )
Partition 1258 (prng_state_store_z3_lsm.15_1258 - 1258 )
Partition 1259 (ivtmp_1259 - 1259 )
Partition 1260 (ivtmp_1260 - 1260 )
Partition 1263 (ivtmp.94_1263 - 1263 )
Partition 1264 (ivtmp.94_1264 - 1264 )
Partition 1265 (_1265 - 1265 )
Partition 1266 (_1266 - 1266 )
Partition 1268 (_1268 - 1268 )
Partition 1270 (_1270 - 1270 )
Partition 1271 (vectp.48_1271 - 1271 )
Partition 1272 (_1272 - 1272 )
Partition 1273 (vect__599.46_1273 - 1273 )
Partition 1274 (prng_state_store_z4_lsm.13_1274 - 1274 )
Partition 1275 (vect_patt_647.45_1275 - 1275 )
Partition 1276 (_1276 - 1276 )
Partition 1285 (ivtmp.101_1285 - 1285 )
Partition 1286 (pretmp_1286 - 1286 )
Partition 1291 (ivtmp.101_1291 - 1291 )
Partition 1305 (prng_state_store_z2_lsm.17_1305 - 1305 )
Partition 1307 (prng_state_store_z3_lsm.15_1307 - 1307 )
Partition 1309 (prng_state_store_z4_lsm.13_1309 - 1309 )
Partition 1311 (prng_state_store_z5_lsm.11_1311 - 1311 )
Partition 1312 (prng_state_store_z1_lsm.10_1312 - 1312 )
Partition 1313 (prng_state_store_z1_lsm.9_1313 - 1313 )
Partition 1314 (vect_vec_iv_.40_1314 - 1314 )
Partition 1315 (_1315 - 1315 )
Partition 1321 (_1321 - 1321 )
Partition 1325 (_1325 - 1325 )
Partition 1326 (k_1326 - 1326 )
Partition 1327 (vect_vec_iv_.40_1327 - 1327 )
Partition 1332 (pretmp_1332 - 1332 )
Partition 1333 (pretmp_1333 - 1333 )
Partition 1334 (parent_1334 - 1334 )
Partition 1336 (_1336 - 1336 )
Partition 1337 (ratio_mult_vf.35_1337 - 1337 )
Partition 1339 (vect_cst_.42_1339 - 1339 )
Partition 1340 (stmp_var_.37_1340 - 1340 )
Partition 1341 (lastlvl_1341 - 1341 )
Partition 1343 (_1343 - 1343 )
Partition 1344 (_1344 - 1344 )
Partition 1346 (pretmp_1346 - 1346 )
Partition 1347 (pretmp_1347 - 1347 )
Partition 1348 (prephitmp_1348 - 1348 )
Partition 1350 (vect_cst_.38_1350 - 1350 )
Partition 1352 (k_1352 - 1352 )
Partition 1353 (_1353 - 1353 )
Partition 1354 (pretmp_1354 - 1354 )
Partition 1355 (pretmp_1355 - 1355 )
Partition 1356 (prephitmp_1356 - 1356 )
Partition 1357 (_1357 - 1357 )
Partition 1360 (k_1360 - 1360 )
Partition 1361 (_1361 - 1361 )
Partition 1362 (_1362 - 1362 )
Partition 1363 (_1363 - 1363 )
Partition 1364 (_1364 - 1364 )
Partition 1365 (k_1365 - 1365 )
Partition 1368 (_1368 - 1368 )
Partition 1371 (lastlvl_1371 - 1371 )
Partition 1395 (prephitmp_1395 - 1395 )
Partition 1396 (nhop_1396 - 1396 )
Partition 1397 (_1397 - 1397 )
Partition 1398 (_1398 - 1398 )
Partition 1399 (vect_patt_839.41_1399 - 1399 )
Partition 1401 (_1401 - 1401 )
Partition 1402 (_1402 - 1402 )
Partition 1404 (_1404 - 1404 )
Partition 1405 (_1405 - 1405 )
Partition 1407 (_1407 - 1407 )
Partition 1409 (_1409 - 1409 )
Partition 1412 (_1412 - 1412 )
Partition 1426 (_1426 - 1426 )
Partition 1429 (_1429 - 1429 )
Partition 1436 (prephitmp_1436 - 1436 )
Partition 1437 (prephitmp_1437 - 1437 )
Partition 1438 (prephitmp_1438 - 1438 )
Partition 1439 (prephitmp_1439 - 1439 )
Partition 1440 (prephitmp_1440 - 1440 )
Partition 1441 (_1441 - 1441 )
Partition 1443 (prephitmp_1443 - 1443 )
Partition 1444 (prephitmp_1444 - 1444 )
Partition 1446 (pretmp_1446 - 1446 )
Partition 1448 (pretmp_1448 - 1448 )
Partition 1449 (pretmp_1449 - 1449 )
Partition 1453 (prephitmp_1453 - 1453 )
Partition 1454 (prephitmp_1454 - 1454 )
Partition 1455 (prephitmp_1455 - 1455 )
Partition 1456 (prephitmp_1456 - 1456 )
Partition 1457 (prephitmp_1457 - 1457 )
Partition 1461 (prng_state_store_z2_lsm.17_1461 - 1461 )
Partition 1466 (pretmp_1466 - 1466 )
Partition 1467 (prephitmp_1467 - 1467 )
Partition 1468 (pretmp_1468 - 1468 )
Partition 1469 (prephitmp_1469 - 1469 )
Partition 1470 (pretmp_1470 - 1470 )
Partition 1471 (prephitmp_1471 - 1471 )
Partition 1472 (pretmp_1472 - 1472 )
Partition 1478 (prephitmp_1478 - 1478 )
Partition 1479 (prephitmp_1479 - 1479 )
Partition 1481 (nverts_1481 - 1481 )
Partition 1482 (base_src_1482 - 1482 )
Partition 1490 (base_tgt_1490 - 1490 )
Partition 1517 (_1517 - 1517 )
Partition 1520 (_1520 - 1520 )
Partition 1523 (_1523 - 1523 )


Partition map 

Partition 0 (argc_7(D) - 7 )
Partition 1 (argv_9(D) - 9 )
Partition 2 (exponent_middle_51 - 51 )
Partition 3 (prng_state_store_z5_lsm.11_95 - 95 )
Partition 4 (nverts_107 - 107 )
Partition 5 (whichset_144 - 144 )
Partition 6 (whichset_152 - 152 )
Partition 7 (nset_153 - 153 )
Partition 8 (nset_154 - 154 )
Partition 9 (whichset_165 - 165 )
Partition 10 (nset_166 - 166 )
Partition 11 (whichset_177 - 177 )
Partition 12 (nset_178 - 178 )
Partition 13 (whichset_189 - 189 )
Partition 14 (nset_190 - 190 )
Partition 15 (err_192 - 192 )
Partition 16 (err_249 - 249 )
Partition 17 (err_250 - 250 )
Partition 18 (err_251 - 251 )
Partition 19 (err_252 - 252 )
Partition 20 (err_253 - 253 )
Partition 21 (err_254 - 254 )
Partition 22 (err_255 - 255 )
Partition 23 (err_256 - 256 )
Partition 24 (err_257 - 257 )
Partition 25 (err_258 - 258 )
Partition 26 (err_259 - 259 )
Partition 27 (err_260 - 260 )
Partition 28 (err_261 - 261 )
Partition 29 (err_262 - 262 )
Partition 30 (nset_263 - 263 )
Partition 31 (err_264 - 264 )
Partition 32 (seed_268 - 268 )
Partition 33 (seed_271 - 271 )
Partition 34 (_282 - 282 )
Partition 35 (_283 - 283 )
Partition 36 (start_edge_295 - 295 )
Partition 37 (exponent_middle_296 - 296 )
Partition 38 (k_298 - 298 )
Partition 39 (start_edge_301 - 301 )
Partition 40 (nverts_308 - 308 )
Partition 41 (base_tgt_309 - 309 )
Partition 42 (base_tgt_310 - 310 )
Partition 43 (err_325 - 325 )
Partition 44 (byte_index_327 - 327 )
Partition 45 (prephitmp_329 - 329 )
Partition 46 (parent_341 - 341 )
Partition 47 (parent_344 - 344 )
Partition 48 (prephitmp_348 - 348 )
Partition 49 (byte_index_355 - 355 )
Partition 50 (exponent_middle_356 - 356 )
Partition 51 (nhop_357 - 357 )
Partition 52 (_363 - 363 )
Partition 53 (prephitmp_364 - 364 )
Partition 54 (_368 - 368 )
Partition 55 (val_369 - 369 )
Partition 56 (val_371 - 371 )
Partition 57 (val_372 - 372 )
Partition 58 (_380 - 380 )
Partition 59 (prephitmp_382 - 382 )
Partition 60 (_388 - 388 )
Partition 61 (_400 - 400 )
Partition 62 (k_504 - 504 )
Partition 63 (ivtmp.134_505 - 505 )
Partition 64 (ivtmp.134_506 - 506 )
Partition 65 (ivtmp.134_507 - 507 )
Partition 66 (k_508 - 508 )
Partition 67 (k_511 - 511 )
Partition 68 (parent_514 - 514 )
Partition 69 (k_523 - 523 )
Partition 70 (ivtmp.110_528 - 528 )
Partition 71 (ivtmp.110_529 - 529 )
Partition 72 (ivtmp.110_530 - 530 )
Partition 73 (m_537 - 537 )
Partition 74 (m_541 - 541 )
Partition 75 (nhop_556 - 556 )
Partition 76 (nedge_traversed_557 - 557 )
Partition 77 (_617 - 617 )
Partition 78 (_620 - 620 )
Partition 79 (niters.29_648 - 648 )
Partition 80 (ivtmp.84_652 - 652 )
Partition 81 (prephitmp_685 - 685 )
Partition 82 (nedge_traversed_686 - 686 )
Partition 83 (ivtmp.64_706 - 706 )
Partition 84 (ivtmp.64_707 - 707 )
Partition 85 (ivtmp.64_710 - 710 )
Partition 86 (err_712 - 712 )
Partition 87 (k_713 - 713 )
Partition 88 (err_714 - 714 )
Partition 89 (_715 - 715 )
Partition 90 (prephitmp_725 - 725 )
Partition 91 (nedge_traversed_728 - 728 )
Partition 92 (err_729 - 729 )
Partition 93 (nedge_traversed_730 - 730 )
Partition 94 (err_731 - 731 )
Partition 95 (err_734 - 734 )
Partition 96 (err_735 - 735 )
Partition 97 (_745 - 745 )
Partition 98 (_749 - 749 )
Partition 99 (nhop_755 - 755 )
Partition 100 (nhop_764 - 764 )
Partition 101 (nhop_766 - 766 )
Partition 102 (_767 - 767 )
Partition 103 (lastlvl_774 - 774 )
Partition 104 (prephitmp_775 - 775 )
Partition 105 (lastlvl_776 - 776 )
Partition 106 (prologue_after_cost_adjust.32_780 - 780 )
Partition 107 (prolog_loop_niters.31_782 - 782 )
Partition 108 (ivtmp.84_785 - 785 )
Partition 109 (parent_786 - 786 )
Partition 110 (err_788 - 788 )
Partition 111 (err_792 - 792 )
Partition 112 (m_795 - 795 )
Partition 113 (base_src_813 - 813 )
Partition 114 (base_src_819 - 819 )
Partition 115 (prephitmp_838 - 838 )
Partition 116 (byte_index_933 - 933 )
Partition 117 (_934 - 934 )
Partition 118 (_935 - 935 )
Partition 119 (_936 - 936 )
Partition 120 (prephitmp_961 - 961 )
Partition 121 (parent_968 - 968 )
Partition 122 (whichset_974 - 974 )
Partition 123 (err_976 - 976 )
Partition 124 (prephitmp_989 - 989 )
Partition 125 (prephitmp_1035 - 1035 )
Partition 126 (nhop_1083 - 1083 )
Partition 127 (err_1084 - 1084 )
Partition 128 (parent_1089 - 1089 )
Partition 129 (exponent_middle_1094 - 1094 )
Partition 130 (err_1099 - 1099 )
Partition 131 (err_1109 - 1109 )
Partition 132 (prng_state_store_z1_lsm.9_1110 - 1110 )
Partition 133 (prng_state_store_z1_lsm.10_1111 - 1111 )
Partition 134 (lastlvl_1142 - 1142 )
Partition 135 (err_1143 - 1143 )
Partition 136 (prephitmp_1156 - 1156 )
Partition 137 (nedge_traversed_1189 - 1189 )
Partition 138 (err_1190 - 1190 )
Partition 139 (nedge_traversed_1191 - 1191 )
Partition 140 (vect_vec_iv_.40_1202 - 1202 )
Partition 141 (prng_state_store_z2_lsm.17_1203 - 1203 )
Partition 142 (prng_state_store_z3_lsm.15_1205 - 1205 )
Partition 143 (prng_state_store_z4_lsm.13_1207 - 1207 )
Partition 144 (prng_state_store_z5_lsm.11_1209 - 1209 )
Partition 145 (ivtmp.94_1210 - 1210 )
Partition 146 (prng_state_store_z1_lsm.9_1211 - 1211 )
Partition 147 (nhop_1249 - 1249 )
Partition 148 (prng_state_store_z3_lsm.15_1258 - 1258 )
Partition 149 (ivtmp_1259 - 1259 )
Partition 150 (ivtmp_1260 - 1260 )
Partition 151 (ivtmp.94_1263 - 1263 )
Partition 152 (ivtmp.94_1264 - 1264 )
Partition 153 (prng_state_store_z4_lsm.13_1274 - 1274 )
Partition 154 (ivtmp.101_1285 - 1285 )
Partition 155 (pretmp_1286 - 1286 )
Partition 156 (ivtmp.101_1291 - 1291 )
Partition 157 (prng_state_store_z2_lsm.17_1305 - 1305 )
Partition 158 (prng_state_store_z3_lsm.15_1307 - 1307 )
Partition 159 (prng_state_store_z4_lsm.13_1309 - 1309 )
Partition 160 (prng_state_store_z5_lsm.11_1311 - 1311 )
Partition 161 (prng_state_store_z1_lsm.10_1312 - 1312 )
Partition 162 (prng_state_store_z1_lsm.9_1313 - 1313 )
Partition 163 (vect_vec_iv_.40_1314 - 1314 )
Partition 164 (k_1326 - 1326 )
Partition 165 (vect_vec_iv_.40_1327 - 1327 )
Partition 166 (parent_1334 - 1334 )
Partition 167 (lastlvl_1341 - 1341 )
Partition 168 (pretmp_1347 - 1347 )
Partition 169 (prephitmp_1348 - 1348 )
Partition 170 (vect_cst_.38_1350 - 1350 )
Partition 171 (k_1352 - 1352 )
Partition 172 (pretmp_1355 - 1355 )
Partition 173 (prephitmp_1356 - 1356 )
Partition 174 (k_1360 - 1360 )
Partition 175 (k_1365 - 1365 )
Partition 176 (lastlvl_1371 - 1371 )
Partition 177 (prephitmp_1395 - 1395 )
Partition 178 (nhop_1396 - 1396 )
Partition 179 (_1397 - 1397 )
Partition 180 (_1426 - 1426 )
Partition 181 (prephitmp_1436 - 1436 )
Partition 182 (prephitmp_1437 - 1437 )
Partition 183 (prephitmp_1438 - 1438 )
Partition 184 (prephitmp_1439 - 1439 )
Partition 185 (prephitmp_1440 - 1440 )
Partition 186 (prephitmp_1444 - 1444 )
Partition 187 (pretmp_1446 - 1446 )
Partition 188 (pretmp_1449 - 1449 )
Partition 189 (prephitmp_1453 - 1453 )
Partition 190 (prephitmp_1454 - 1454 )
Partition 191 (prephitmp_1455 - 1455 )
Partition 192 (prephitmp_1456 - 1456 )
Partition 193 (prephitmp_1457 - 1457 )
Partition 194 (prng_state_store_z2_lsm.17_1461 - 1461 )
Partition 195 (pretmp_1466 - 1466 )
Partition 196 (prephitmp_1467 - 1467 )
Partition 197 (pretmp_1468 - 1468 )
Partition 198 (prephitmp_1469 - 1469 )
Partition 199 (pretmp_1470 - 1470 )
Partition 200 (prephitmp_1471 - 1471 )
Partition 201 (prephitmp_1478 - 1478 )
Partition 202 (prephitmp_1479 - 1479 )
Partition 203 (nverts_1481 - 1481 )
Partition 204 (base_src_1482 - 1482 )
Partition 205 (base_tgt_1490 - 1490 )


Conflict graph:
3: 77, 132, 148, 153, 154, 157, 162, 194
4: 40, 203
34: 35, 54, 63, 195, 197, 199
35: 34, 54, 63, 195, 197, 199
40: 4
45: 98
46: 68, 128
47: 128
48: 61, 63, 81, 90, 124, 191, 192, 193
52: 97
53: 98
54: 34, 35, 63, 195, 197, 199
58: 63, 181, 182, 183, 184, 185
59: 63, 104, 115, 120, 125
60: 63, 117, 196, 198, 200
61: 48, 63, 81, 90, 124, 189, 191, 192, 193
63: 34, 35, 48, 54, 58, 59, 60, 61, 81, 90, 104, 115, 117, 118, 119, 120, 124, 125, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200
68: 46, 128
73: 74
74: 73
77: 3, 78, 132, 148, 153, 154, 156, 157, 158, 159, 162
78: 77, 154, 156, 157, 158, 162
79: 106, 107, 149, 150, 152, 180
80: 152
81: 48, 61, 63, 90, 124, 189, 191, 193
83: 152
84: 152
85: 152
90: 48, 61, 63, 81, 124, 189, 192, 193
92: 94
94: 92
97: 52, 102, 179
98: 45, 53, 168, 169
101: 126
102: 97
104: 59, 63, 115, 120, 125
105: 134
106: 79, 152, 180
107: 79, 152, 180
108: 152
115: 59, 63, 104, 120, 125
117: 60, 63, 118, 119, 196, 198, 200
118: 63, 117, 119, 196, 198, 200
119: 63, 117, 118, 196, 198, 200
120: 59, 63, 104, 115, 125
121: 128, 166
124: 48, 61, 63, 81, 90, 189, 191, 192
125: 59, 63, 104, 115, 120
126: 101
128: 46, 47, 68, 121, 166
132: 3, 77, 148, 153, 154, 157, 158, 162, 194
134: 105
141: 142, 143, 144, 146
142: 141, 143, 144, 146
143: 141, 142, 144, 146
144: 141, 142, 143, 146
146: 141, 142, 143, 144
148: 3, 77, 132, 153, 154, 194
149: 79, 152, 180
150: 79, 152, 180
152: 79, 80, 83, 84, 85, 106, 107, 108, 149, 150, 180
153: 3, 77, 132, 148, 154, 162, 194
154: 3, 77, 78, 132, 148, 153, 157, 158, 162, 194
156: 77, 78, 157, 158, 159, 160, 162
157: 3, 77, 78, 132, 154, 156, 158, 159, 160, 162
158: 77, 78, 132, 154, 156, 157, 159, 160, 162
159: 77, 156, 157, 158, 160, 162
160: 156, 157, 158, 159, 162
162: 3, 77, 78, 132, 153, 154, 156, 157, 158, 159, 160
163: 165
165: 163
166: 121, 128
168: 98
169: 98
179: 97
180: 79, 106, 107, 149, 150, 152
181: 58, 63, 182, 183, 184, 185
182: 58, 63, 181, 183, 184, 185
183: 58, 63, 181, 182, 184, 185
184: 58, 63, 181, 182, 183, 185
185: 58, 63, 181, 182, 183, 184
186: 188
188: 186
189: 61, 63, 81, 90, 124, 190, 191, 192, 193
190: 63, 189, 191, 192, 193
191: 48, 61, 63, 81, 124, 189, 190, 192, 193
192: 48, 61, 63, 90, 124, 189, 190, 191, 193
193: 48, 61, 63, 81, 90, 189, 190, 191, 192
194: 3, 132, 148, 153, 154
195: 34, 35, 54, 63, 197, 199
196: 60, 63, 117, 118, 119, 198, 200
197: 34, 35, 54, 63, 195, 199
198: 60, 63, 117, 118, 119, 196, 200
199: 34, 35, 54, 63, 195, 197
200: 60, 63, 117, 118, 119, 196, 198
201: 202
202: 201
203: 4

After sorting:
Sorted Coalesce list:
(23591) err_792 <-> err_1084
(13188) ivtmp.84_652 <-> ivtmp.84_785
(13188) parent_786 <-> parent_1089
(8646) parent_341 <-> parent_968
(8646) parent_341 <-> parent_1334
(8646) parent_514 <-> parent_1334
(8646) nhop_556 <-> nhop_755
(6629) _363 <-> _767
(6629) nhop_766 <-> nhop_1249
(6629) nhop_1083 <-> nhop_1249
(6629) pretmp_1347 <-> prephitmp_1348
(6569) lastlvl_776 <-> lastlvl_1341
(6569) lastlvl_1142 <-> lastlvl_1341
(6569) pretmp_1355 <-> prephitmp_1356
(3464) prephitmp_348 <-> prephitmp_1457
(3464) _400 <-> prephitmp_1453
(3464) prephitmp_685 <-> prephitmp_1455
(3464) prephitmp_725 <-> prephitmp_1454
(3464) prephitmp_989 <-> prephitmp_1456
(2312) nedge_traversed_728 <-> nedge_traversed_730
(1962) err_729 <-> err_788
(1903) prephitmp_348 <-> prephitmp_1453
(1903) prephitmp_685 <-> prephitmp_1456
(1903) prephitmp_725 <-> prephitmp_1455
(1903) prephitmp_989 <-> prephitmp_1457
(1820) err_1084 <-> err_1109
(1264) ivtmp.64_706 <-> ivtmp.64_707
(1240) err_792 <-> err_1109
(980) err_325 <-> err_735
(909) parent_344 <-> parent_968
(909) parent_344 <-> parent_1089
(909) nhop_357 <-> nhop_556
(909) prephitmp_364 <-> _749
(698) err_731 <-> err_788
(632) k_298 <-> k_713
(552) vect_vec_iv_.40_1202 <-> vect_vec_iv_.40_1314
(552) ivtmp_1259 <-> ivtmp_1260
(360) ivtmp.94_1263 <-> ivtmp.94_1264
(354) exponent_middle_51 <-> exponent_middle_356
(354) byte_index_355 <-> byte_index_933
(345) vect_vec_iv_.40_1202 <-> vect_vec_iv_.40_1327
(330) prephitmp_329 <-> _749
(330) prephitmp_329 <-> prephitmp_1348
(330) _363 <-> _1397
(330) _745 <-> _1397
(330) nhop_764 <-> nhop_1396
(330) nhop_1083 <-> nhop_1396
(312) _749 <-> prephitmp_1395
(312) lastlvl_774 <-> lastlvl_1371
(312) lastlvl_1142 <-> lastlvl_1371
(312) prephitmp_1356 <-> prephitmp_1395
(286) nverts_308 <-> nverts_1481
(286) base_tgt_310 <-> base_tgt_1490
(286) _380 <-> _935
(286) base_src_819 <-> base_src_1482
(286) _934 <-> prephitmp_1436
(286) _936 <-> prephitmp_1437
(286) prephitmp_1438 <-> prephitmp_1467
(286) prephitmp_1439 <-> prephitmp_1469
(286) prephitmp_1440 <-> prephitmp_1471
(261) err_729 <-> err_1143
(261) err_731 <-> err_1143
(204) nverts_107 <-> nverts_308
(204) _282 <-> _936
(204) _283 <-> _935
(204) _368 <-> _934
(204) pretmp_1466 <-> prephitmp_1467
(204) pretmp_1468 <-> prephitmp_1469
(204) pretmp_1470 <-> prephitmp_1471
(195) exponent_middle_51 <-> exponent_middle_1094
(195) exponent_middle_296 <-> exponent_middle_1094
(195) byte_index_327 <-> byte_index_933
(174) val_369 <-> val_372
(174) prephitmp_382 <-> _388
(174) prephitmp_382 <-> prephitmp_1453
(174) _388 <-> prephitmp_1436
(174) prephitmp_775 <-> prephitmp_1454
(174) prephitmp_775 <-> prephitmp_1467
(174) prephitmp_838 <-> prephitmp_1455
(174) prephitmp_838 <-> prephitmp_1469
(174) _934 <-> prephitmp_1035
(174) _934 <-> prephitmp_1440
(174) prephitmp_961 <-> prephitmp_1456
(174) prephitmp_961 <-> prephitmp_1471
(174) prephitmp_1035 <-> prephitmp_1457
(174) prephitmp_1437 <-> prephitmp_1467
(174) prephitmp_1438 <-> prephitmp_1469
(174) prephitmp_1439 <-> prephitmp_1471
(171) val_371 <-> val_372
(171) _400 <-> prephitmp_1436
(171) prephitmp_1437 <-> prephitmp_1455
(171) prephitmp_1438 <-> prephitmp_1456
(171) prephitmp_1439 <-> prephitmp_1457
(171) prephitmp_1440 <-> prephitmp_1453
(156) err_712 <-> err_734
(147) whichset_144 <-> whichset_974
(147) nset_153 <-> nset_263
(138) err_192 <-> err_264
(134) nedge_traversed_557 <-> nedge_traversed_1191
(134) ivtmp.84_785 <-> _1426
(125) err_712 <-> err_735
(118) k_1326 <-> k_1365
(92) k_1352 <-> k_1360
(90) prologue_after_cost_adjust.32_780 <-> prolog_loop_niters.31_782
(89) niters.29_648 <-> prologue_after_cost_adjust.32_780
(87) err_729 <-> err_1099
(87) err_731 <-> err_1099
(69) err_792 <-> err_976
(69) vect_vec_iv_.40_1314 <-> vect_cst_.38_1350
(63) ivtmp.64_706 <-> ivtmp.64_710
(49) prephitmp_1444 <-> prephitmp_1479
(49) pretmp_1449 <-> prephitmp_1478
(4) m_537 <-> m_795
(4) nedge_traversed_557 <-> nedge_traversed_730
(4) err_714 <-> err_729
(3) nedge_traversed_686 <-> nedge_traversed_730
(2) err_192 <-> err_249
(2) err_192 <-> err_250
(2) err_192 <-> err_251
(2) err_192 <-> err_254
(2) err_192 <-> err_257
(2) err_192 <-> err_260
(2) err_249 <-> err_264
(2) err_250 <-> err_264
(2) err_251 <-> err_252
(2) err_252 <-> err_253
(2) err_254 <-> err_255
(2) err_255 <-> err_256
(2) err_257 <-> err_258
(2) err_258 <-> err_259
(2) err_260 <-> err_261
(2) err_261 <-> err_262
(2) seed_268 <-> seed_271
(2) nedge_traversed_557 <-> nedge_traversed_1189
(2) err_714 <-> err_735
(2) err_714 <-> err_976
(2) _715 <-> prephitmp_1156
(2) err_729 <-> err_1190
(2) nedge_traversed_730 <-> nedge_traversed_1189
(2) prephitmp_1156 <-> pretmp_1286
(2) k_1352 <-> k_1365
(1) prng_state_store_z5_lsm.11_95 <-> prng_state_store_z3_lsm.15_1307
(1) base_tgt_309 <-> base_tgt_1490
(1) _617 <-> prng_state_store_z2_lsm.17_1461
(1) _620 <-> prng_state_store_z1_lsm.9_1110
(1) base_src_813 <-> base_src_1482
(1) prng_state_store_z3_lsm.15_1258 <-> prng_state_store_z1_lsm.9_1313
(1) prng_state_store_z4_lsm.13_1274 <-> prng_state_store_z2_lsm.17_1305
(1) pretmp_1446 <-> prephitmp_1478

Partition map 

Partition 0 (argc_7(D) - 7 )
Partition 1 (argv_9(D) - 9 )
Partition 2 (exponent_middle_51 - 51 )
Partition 3 (prng_state_store_z5_lsm.11_95 - 95 )
Partition 4 (nverts_107 - 107 )
Partition 5 (whichset_144 - 144 )
Partition 6 (whichset_152 - 152 )
Partition 7 (nset_153 - 153 )
Partition 8 (nset_154 - 154 )
Partition 9 (whichset_165 - 165 )
Partition 10 (nset_166 - 166 )
Partition 11 (whichset_177 - 177 )
Partition 12 (nset_178 - 178 )
Partition 13 (whichset_189 - 189 )
Partition 14 (nset_190 - 190 )
Partition 15 (err_192 - 192 )
Partition 16 (err_249 - 249 )
Partition 17 (err_250 - 250 )
Partition 18 (err_251 - 251 )
Partition 19 (err_252 - 252 )
Partition 20 (err_253 - 253 )
Partition 21 (err_254 - 254 )
Partition 22 (err_255 - 255 )
Partition 23 (err_256 - 256 )
Partition 24 (err_257 - 257 )
Partition 25 (err_258 - 258 )
Partition 26 (err_259 - 259 )
Partition 27 (err_260 - 260 )
Partition 28 (err_261 - 261 )
Partition 29 (err_262 - 262 )
Partition 30 (nset_263 - 263 )
Partition 31 (err_264 - 264 )
Partition 32 (seed_268 - 268 )
Partition 33 (seed_271 - 271 )
Partition 34 (_282 - 282 )
Partition 35 (_283 - 283 )
Partition 36 (start_edge_295 - 295 )
Partition 37 (exponent_middle_296 - 296 )
Partition 38 (k_298 - 298 )
Partition 39 (start_edge_301 - 301 )
Partition 40 (nverts_308 - 308 )
Partition 41 (base_tgt_309 - 309 )
Partition 42 (base_tgt_310 - 310 )
Partition 43 (err_325 - 325 )
Partition 44 (byte_index_327 - 327 )
Partition 45 (prephitmp_329 - 329 )
Partition 46 (parent_341 - 341 )
Partition 47 (parent_344 - 344 )
Partition 48 (prephitmp_348 - 348 )
Partition 49 (byte_index_355 - 355 )
Partition 50 (exponent_middle_356 - 356 )
Partition 51 (nhop_357 - 357 )
Partition 52 (_363 - 363 )
Partition 53 (prephitmp_364 - 364 )
Partition 54 (_368 - 368 )
Partition 55 (val_369 - 369 )
Partition 56 (val_371 - 371 )
Partition 57 (val_372 - 372 )
Partition 58 (_380 - 380 )
Partition 59 (prephitmp_382 - 382 )
Partition 60 (_388 - 388 )
Partition 61 (_400 - 400 )
Partition 62 (k_504 - 504 )
Partition 63 (ivtmp.134_505 - 505 )
Partition 64 (ivtmp.134_506 - 506 )
Partition 65 (ivtmp.134_507 - 507 )
Partition 66 (k_508 - 508 )
Partition 67 (k_511 - 511 )
Partition 68 (parent_514 - 514 )
Partition 69 (k_523 - 523 )
Partition 70 (ivtmp.110_528 - 528 )
Partition 71 (ivtmp.110_529 - 529 )
Partition 72 (ivtmp.110_530 - 530 )
Partition 73 (m_537 - 537 )
Partition 74 (m_541 - 541 )
Partition 75 (nhop_556 - 556 )
Partition 76 (nedge_traversed_557 - 557 )
Partition 77 (_617 - 617 )
Partition 78 (_620 - 620 )
Partition 79 (niters.29_648 - 648 )
Partition 80 (ivtmp.84_652 - 652 )
Partition 81 (prephitmp_685 - 685 )
Partition 82 (nedge_traversed_686 - 686 )
Partition 83 (ivtmp.64_706 - 706 )
Partition 84 (ivtmp.64_707 - 707 )
Partition 85 (ivtmp.64_710 - 710 )
Partition 86 (err_712 - 712 )
Partition 87 (k_713 - 713 )
Partition 88 (err_714 - 714 )
Partition 89 (_715 - 715 )
Partition 90 (prephitmp_725 - 725 )
Partition 91 (nedge_traversed_728 - 728 )
Partition 92 (err_729 - 729 )
Partition 93 (nedge_traversed_730 - 730 )
Partition 94 (err_731 - 731 )
Partition 95 (err_734 - 734 )
Partition 96 (err_735 - 735 )
Partition 97 (_745 - 745 )
Partition 98 (_749 - 749 )
Partition 99 (nhop_755 - 755 )
Partition 100 (nhop_764 - 764 )
Partition 101 (nhop_766 - 766 )
Partition 102 (_767 - 767 )
Partition 103 (lastlvl_774 - 774 )
Partition 104 (prephitmp_775 - 775 )
Partition 105 (lastlvl_776 - 776 )
Partition 106 (prologue_after_cost_adjust.32_780 - 780 )
Partition 107 (prolog_loop_niters.31_782 - 782 )
Partition 108 (ivtmp.84_785 - 785 )
Partition 109 (parent_786 - 786 )
Partition 110 (err_788 - 788 )
Partition 111 (err_792 - 792 )
Partition 112 (m_795 - 795 )
Partition 113 (base_src_813 - 813 )
Partition 114 (base_src_819 - 819 )
Partition 115 (prephitmp_838 - 838 )
Partition 116 (byte_index_933 - 933 )
Partition 117 (_934 - 934 )
Partition 118 (_935 - 935 )
Partition 119 (_936 - 936 )
Partition 120 (prephitmp_961 - 961 )
Partition 121 (parent_968 - 968 )
Partition 122 (whichset_974 - 974 )
Partition 123 (err_976 - 976 )
Partition 124 (prephitmp_989 - 989 )
Partition 125 (prephitmp_1035 - 1035 )
Partition 126 (nhop_1083 - 1083 )
Partition 127 (err_1084 - 1084 )
Partition 128 (parent_1089 - 1089 )
Partition 129 (exponent_middle_1094 - 1094 )
Partition 130 (err_1099 - 1099 )
Partition 131 (err_1109 - 1109 )
Partition 132 (prng_state_store_z1_lsm.9_1110 - 1110 )
Partition 133 (prng_state_store_z1_lsm.10_1111 - 1111 )
Partition 134 (lastlvl_1142 - 1142 )
Partition 135 (err_1143 - 1143 )
Partition 136 (prephitmp_1156 - 1156 )
Partition 137 (nedge_traversed_1189 - 1189 )
Partition 138 (err_1190 - 1190 )
Partition 139 (nedge_traversed_1191 - 1191 )
Partition 140 (vect_vec_iv_.40_1202 - 1202 )
Partition 141 (prng_state_store_z2_lsm.17_1203 - 1203 )
Partition 142 (prng_state_store_z3_lsm.15_1205 - 1205 )
Partition 143 (prng_state_store_z4_lsm.13_1207 - 1207 )
Partition 144 (prng_state_store_z5_lsm.11_1209 - 1209 )
Partition 145 (ivtmp.94_1210 - 1210 )
Partition 146 (prng_state_store_z1_lsm.9_1211 - 1211 )
Partition 147 (nhop_1249 - 1249 )
Partition 148 (prng_state_store_z3_lsm.15_1258 - 1258 )
Partition 149 (ivtmp_1259 - 1259 )
Partition 150 (ivtmp_1260 - 1260 )
Partition 151 (ivtmp.94_1263 - 1263 )
Partition 152 (ivtmp.94_1264 - 1264 )
Partition 153 (prng_state_store_z4_lsm.13_1274 - 1274 )
Partition 154 (ivtmp.101_1285 - 1285 )
Partition 155 (pretmp_1286 - 1286 )
Partition 156 (ivtmp.101_1291 - 1291 )
Partition 157 (prng_state_store_z2_lsm.17_1305 - 1305 )
Partition 158 (prng_state_store_z3_lsm.15_1307 - 1307 )
Partition 159 (prng_state_store_z4_lsm.13_1309 - 1309 )
Partition 160 (prng_state_store_z5_lsm.11_1311 - 1311 )
Partition 161 (prng_state_store_z1_lsm.10_1312 - 1312 )
Partition 162 (prng_state_store_z1_lsm.9_1313 - 1313 )
Partition 163 (vect_vec_iv_.40_1314 - 1314 )
Partition 164 (k_1326 - 1326 )
Partition 165 (vect_vec_iv_.40_1327 - 1327 )
Partition 166 (parent_1334 - 1334 )
Partition 167 (lastlvl_1341 - 1341 )
Partition 168 (pretmp_1347 - 1347 )
Partition 169 (prephitmp_1348 - 1348 )
Partition 170 (vect_cst_.38_1350 - 1350 )
Partition 171 (k_1352 - 1352 )
Partition 172 (pretmp_1355 - 1355 )
Partition 173 (prephitmp_1356 - 1356 )
Partition 174 (k_1360 - 1360 )
Partition 175 (k_1365 - 1365 )
Partition 176 (lastlvl_1371 - 1371 )
Partition 177 (prephitmp_1395 - 1395 )
Partition 178 (nhop_1396 - 1396 )
Partition 179 (_1397 - 1397 )
Partition 180 (_1426 - 1426 )
Partition 181 (prephitmp_1436 - 1436 )
Partition 182 (prephitmp_1437 - 1437 )
Partition 183 (prephitmp_1438 - 1438 )
Partition 184 (prephitmp_1439 - 1439 )
Partition 185 (prephitmp_1440 - 1440 )
Partition 186 (prephitmp_1444 - 1444 )
Partition 187 (pretmp_1446 - 1446 )
Partition 188 (pretmp_1449 - 1449 )
Partition 189 (prephitmp_1453 - 1453 )
Partition 190 (prephitmp_1454 - 1454 )
Partition 191 (prephitmp_1455 - 1455 )
Partition 192 (prephitmp_1456 - 1456 )
Partition 193 (prephitmp_1457 - 1457 )
Partition 194 (prng_state_store_z2_lsm.17_1461 - 1461 )
Partition 195 (pretmp_1466 - 1466 )
Partition 196 (prephitmp_1467 - 1467 )
Partition 197 (pretmp_1468 - 1468 )
Partition 198 (prephitmp_1469 - 1469 )
Partition 199 (pretmp_1470 - 1470 )
Partition 200 (prephitmp_1471 - 1471 )
Partition 201 (prephitmp_1478 - 1478 )
Partition 202 (prephitmp_1479 - 1479 )
Partition 203 (nverts_1481 - 1481 )
Partition 204 (base_src_1482 - 1482 )
Partition 205 (base_tgt_1490 - 1490 )

Coalesce list: (792)err_792 & (1084)err_1084 [map: 111, 127] : Success -> 111
Coalesce list: (652)ivtmp.84_652 & (785)ivtmp.84_785 [map: 80, 108] : Success -> 80
Coalesce list: (786)parent_786 & (1089)parent_1089 [map: 109, 128] : Success -> 109
Coalesce list: (341)parent_341 & (968)parent_968 [map: 46, 121] : Success -> 46
Coalesce list: (341)parent_341 & (1334)parent_1334 [map: 46, 166] : Fail due to conflict
Coalesce list: (514)parent_514 & (1334)parent_1334 [map: 68, 166] : Success -> 68
Coalesce list: (556)nhop_556 & (755)nhop_755 [map: 75, 99] : Success -> 75
Coalesce list: (363)_363 & (767)_767 [map: 52, 102] : Success -> 52
Coalesce list: (766)nhop_766 & (1249)nhop_1249 [map: 101, 147] : Success -> 101
Coalesce list: (1083)nhop_1083 & (1249)nhop_766 [map: 126, 101] : Fail due to conflict
Coalesce list: (1347)pretmp_1347 & (1348)prephitmp_1348 [map: 168, 169] : Success -> 168
Coalesce list: (776)lastlvl_776 & (1341)lastlvl_1341 [map: 105, 167] : Success -> 105
Coalesce list: (1142)lastlvl_1142 & (1341)lastlvl_776 [map: 134, 105] : Fail due to conflict
Coalesce list: (1355)pretmp_1355 & (1356)prephitmp_1356 [map: 172, 173] : Success -> 172
Coalesce list: (348)prephitmp_348 & (1457)prephitmp_1457 [map: 48, 193] : Fail due to conflict
Coalesce list: (400)_400 & (1453)prephitmp_1453 [map: 61, 189] : Fail due to conflict
Coalesce list: (685)prephitmp_685 & (1455)prephitmp_1455 [map: 81, 191] : Fail due to conflict
Coalesce list: (725)prephitmp_725 & (1454)prephitmp_1454 [map: 90, 190] : Success -> 90
Coalesce list: (989)prephitmp_989 & (1456)prephitmp_1456 [map: 124, 192] : Fail due to conflict
Coalesce list: (728)nedge_traversed_728 & (730)nedge_traversed_730 [map: 91, 93] : Success -> 91
Coalesce list: (729)err_729 & (788)err_788 [map: 92, 110] : Success -> 92
Coalesce list: (348)prephitmp_348 & (1453)prephitmp_1453 [map: 48, 189] : Success -> 48
Coalesce list: (685)prephitmp_685 & (1456)prephitmp_1456 [map: 81, 192] : Success -> 81
Coalesce list: (725)prephitmp_725 & (1455)prephitmp_1455 [map: 90, 191] : Fail due to conflict
Coalesce list: (989)prephitmp_989 & (1457)prephitmp_1457 [map: 124, 193] : Success -> 124
Coalesce list: (1084)err_792 & (1109)err_1109 [map: 111, 131] : Success -> 111
Coalesce list: (706)ivtmp.64_706 & (707)ivtmp.64_707 [map: 83, 84] : Success -> 83
Coalesce list: (792)err_792 & (1109)err_792: Already Coalesced.
Coalesce list: (325)err_325 & (735)err_735 [map: 43, 96] : Success -> 43
Coalesce list: (344)parent_344 & (968)parent_341 [map: 47, 46] : Success -> 46
Coalesce list: (344)parent_341 & (1089)parent_786 [map: 46, 109] : Fail due to conflict
Coalesce list: (357)nhop_357 & (556)nhop_556 [map: 51, 75] : Success -> 75
Coalesce list: (364)prephitmp_364 & (749)_749 [map: 53, 98] : Fail due to conflict
Coalesce list: (731)err_731 & (788)err_729 [map: 94, 92] : Fail due to conflict
Coalesce list: (298)k_298 & (713)k_713 [map: 38, 87] : Success -> 38
Coalesce list: (1202)vect_vec_iv_.40_1202 & (1314)vect_vec_iv_.40_1314 [map: 140, 163] : Success -> 140
Coalesce list: (1259)ivtmp_1259 & (1260)ivtmp_1260 [map: 149, 150] : Success -> 149
Coalesce list: (1263)ivtmp.94_1263 & (1264)ivtmp.94_1264 [map: 151, 152] : Success -> 151
Coalesce list: (51)exponent_middle_51 & (356)exponent_middle_356 [map: 2, 50] : Success -> 2
Coalesce list: (355)byte_index_355 & (933)byte_index_933 [map: 49, 116] : Success -> 49
Coalesce list: (1202)vect_vec_iv_.40_1202 & (1327)vect_vec_iv_.40_1327 [map: 140, 165] : Fail due to conflict
Coalesce list: (329)prephitmp_329 & (749)_749 [map: 45, 98] : Fail due to conflict
Coalesce list: (329)prephitmp_329 & (1348)pretmp_1347 [map: 45, 168] : Success -> 168
Coalesce list: (363)_363 & (1397)_1397 [map: 52, 179] : Success -> 52
Coalesce list: (745)_745 & (1397)_363 [map: 97, 52] : Fail due to conflict
Coalesce list: (764)nhop_764 & (1396)nhop_1396 [map: 100, 178] : Success -> 100
Coalesce list: (1083)nhop_1083 & (1396)nhop_764 [map: 126, 100] : Success -> 100
Coalesce list: (749)_749 & (1395)prephitmp_1395 [map: 98, 177] : Success -> 98
Coalesce list: (774)lastlvl_774 & (1371)lastlvl_1371 [map: 103, 176] : Success -> 103
Coalesce list: (1142)lastlvl_1142 & (1371)lastlvl_774 [map: 134, 103] : Success -> 103
Coalesce list: (1356)pretmp_1355 & (1395)_749 [map: 172, 98] : Success -> 172
Coalesce list: (308)nverts_308 & (1481)nverts_1481 [map: 40, 203] : Success -> 40
Coalesce list: (310)base_tgt_310 & (1490)base_tgt_1490 [map: 42, 205] : Success -> 42
Coalesce list: (380)_380 & (935)_935 [map: 58, 118] : Success -> 58
Coalesce list: (819)base_src_819 & (1482)base_src_1482 [map: 114, 204] : Success -> 114
Coalesce list: (934)_934 & (1436)prephitmp_1436 [map: 117, 181] : Success -> 117
Coalesce list: (936)_936 & (1437)prephitmp_1437 [map: 119, 182] : Success -> 119
Coalesce list: (1438)prephitmp_1438 & (1467)prephitmp_1467 [map: 183, 196] : Success -> 183
Coalesce list: (1439)prephitmp_1439 & (1469)prephitmp_1469 [map: 184, 198] : Success -> 184
Coalesce list: (1440)prephitmp_1440 & (1471)prephitmp_1471 [map: 185, 200] : Success -> 185
Coalesce list: (729)err_729 & (1143)err_1143 [map: 92, 135] : Success -> 92
Coalesce list: (731)err_731 & (1143)err_729 [map: 94, 92] : Fail due to conflict
Coalesce list: (107)nverts_107 & (308)nverts_308 [map: 4, 40] : Fail due to conflict
Coalesce list: (282)_282 & (936)_936 [map: 34, 119] : Success -> 119
Coalesce list: (283)_283 & (935)_380 [map: 35, 58] : Success -> 58
Coalesce list: (368)_368 & (934)_934 [map: 54, 117] : Success -> 117
Coalesce list: (1466)pretmp_1466 & (1467)prephitmp_1438 [map: 195, 183] : Success -> 183
Coalesce list: (1468)pretmp_1468 & (1469)prephitmp_1439 [map: 197, 184] : Success -> 184
Coalesce list: (1470)pretmp_1470 & (1471)prephitmp_1440 [map: 199, 185] : Success -> 185
Coalesce list: (51)exponent_middle_51 & (1094)exponent_middle_1094 [map: 2, 129] : Success -> 2
Coalesce list: (296)exponent_middle_296 & (1094)exponent_middle_51 [map: 37, 2] : Success -> 2
Coalesce list: (327)byte_index_327 & (933)byte_index_355 [map: 44, 49] : Success -> 49
Coalesce list: (369)val_369 & (372)val_372 [map: 55, 57] : Success -> 55
Coalesce list: (382)prephitmp_382 & (388)_388 [map: 59, 60] : Success -> 59
Coalesce list: (382)prephitmp_382 & (1453)prephitmp_348 [map: 59, 48] : Success -> 59
Coalesce list: (388)prephitmp_382 & (1436)_934 [map: 59, 117] : Fail due to conflict
Coalesce list: (775)prephitmp_775 & (1454)prephitmp_725 [map: 104, 90] : Success -> 90
Coalesce list: (775)prephitmp_725 & (1467)prephitmp_1438 [map: 90, 183] : Success -> 90
Coalesce list: (838)prephitmp_838 & (1455)prephitmp_1455 [map: 115, 191] : Success -> 115
Coalesce list: (838)prephitmp_838 & (1469)prephitmp_1439 [map: 115, 184] : Success -> 184
Coalesce list: (934)_934 & (1035)prephitmp_1035 [map: 117, 125] : Success -> 117
Coalesce list: (934)_934 & (1440)prephitmp_1440 [map: 117, 185] : Fail due to conflict
Coalesce list: (961)prephitmp_961 & (1456)prephitmp_685 [map: 120, 81] : Success -> 81
Coalesce list: (961)prephitmp_685 & (1471)prephitmp_1440 [map: 81, 185] : Success -> 81
Coalesce list: (1035)_934 & (1457)prephitmp_989 [map: 117, 124] : Success -> 117
Coalesce list: (1437)_936 & (1467)prephitmp_725 [map: 119, 90] : Fail due to conflict
Coalesce list: (1438)prephitmp_725 & (1469)prephitmp_1439 [map: 90, 184] : Fail due to conflict
Coalesce list: (1439)prephitmp_1439 & (1471)prephitmp_685 [map: 184, 81] : Fail due to conflict
Coalesce list: (371)val_371 & (372)val_369 [map: 56, 55] : Success -> 55
Coalesce list: (400)_400 & (1436)_934 [map: 61, 117] : Fail due to conflict
Coalesce list: (1437)_936 & (1455)prephitmp_1439 [map: 119, 184] : Fail due to conflict
Coalesce list: (1438)prephitmp_725 & (1456)prephitmp_685 [map: 90, 81] : Fail due to conflict
Coalesce list: (1439)prephitmp_1439 & (1457)_934 [map: 184, 117] : Fail due to conflict
Coalesce list: (1440)prephitmp_685 & (1453)prephitmp_382 [map: 81, 59] : Fail due to conflict
Coalesce list: (712)err_712 & (734)err_734 [map: 86, 95] : Success -> 86
Coalesce list: (144)whichset_144 & (974)whichset_974 [map: 5, 122] : Success -> 5
Coalesce list: (153)nset_153 & (263)nset_263 [map: 7, 30] : Success -> 7
Coalesce list: (192)err_192 & (264)err_264 [map: 15, 31] : Success -> 15
Coalesce list: (557)nedge_traversed_557 & (1191)nedge_traversed_1191 [map: 76, 139] : Success -> 76
Coalesce list: (785)ivtmp.84_652 & (1426)_1426 [map: 80, 180] : Success -> 80
Coalesce list: (712)err_712 & (735)err_325 [map: 86, 43] : Success -> 86
Coalesce list: (1326)k_1326 & (1365)k_1365 [map: 164, 175] : Success -> 164
Coalesce list: (1352)k_1352 & (1360)k_1360 [map: 171, 174] : Success -> 171
Coalesce list: (780)prologue_after_cost_adjust.32_780 & (782)prolog_loop_niters.31_782 [map: 106, 107] : Success -> 106
Coalesce list: (648)niters.29_648 & (780)prologue_after_cost_adjust.32_780 [map: 79, 106] : Fail due to conflict
Coalesce list: (729)err_729 & (1099)err_1099 [map: 92, 130] : Success -> 92
Coalesce list: (731)err_731 & (1099)err_729 [map: 94, 92] : Fail due to conflict
Coalesce list: (792)err_792 & (976)err_976 [map: 111, 123] : Success -> 111
Coalesce list: (1314)vect_vec_iv_.40_1202 & (1350)vect_cst_.38_1350 [map: 140, 170] : Success -> 140
Coalesce list: (706)ivtmp.64_706 & (710)ivtmp.64_710 [map: 83, 85] : Success -> 83
Coalesce list: (1444)prephitmp_1444 & (1479)prephitmp_1479 [map: 186, 202] : Success -> 186
Coalesce list: (1449)pretmp_1449 & (1478)prephitmp_1478 [map: 188, 201] : Success -> 188
Coalesce list: (537)m_537 & (795)m_795 [map: 73, 112] : Success -> 73
Coalesce list: (557)nedge_traversed_557 & (730)nedge_traversed_728 [map: 76, 91] : Success -> 76
Coalesce list: (714)err_714 & (729)err_729 [map: 88, 92] : Success -> 92
Coalesce list: (686)nedge_traversed_686 & (730)nedge_traversed_557 [map: 82, 76] : Success -> 76
Coalesce list: (192)err_192 & (249)err_249 [map: 15, 16] : Success -> 15
Coalesce list: (192)err_192 & (250)err_250 [map: 15, 17] : Success -> 15
Coalesce list: (192)err_192 & (251)err_251 [map: 15, 18] : Success -> 15
Coalesce list: (192)err_192 & (254)err_254 [map: 15, 21] : Success -> 15
Coalesce list: (192)err_192 & (257)err_257 [map: 15, 24] : Success -> 15
Coalesce list: (192)err_192 & (260)err_260 [map: 15, 27] : Success -> 15
Coalesce list: (249)err_192 & (264)err_192: Already Coalesced.
Coalesce list: (250)err_192 & (264)err_192: Already Coalesced.
Coalesce list: (251)err_192 & (252)err_252 [map: 15, 19] : Success -> 15
Coalesce list: (252)err_192 & (253)err_253 [map: 15, 20] : Success -> 15
Coalesce list: (254)err_192 & (255)err_255 [map: 15, 22] : Success -> 15
Coalesce list: (255)err_192 & (256)err_256 [map: 15, 23] : Success -> 15
Coalesce list: (257)err_192 & (258)err_258 [map: 15, 25] : Success -> 15
Coalesce list: (258)err_192 & (259)err_259 [map: 15, 26] : Success -> 15
Coalesce list: (260)err_192 & (261)err_261 [map: 15, 28] : Success -> 15
Coalesce list: (261)err_192 & (262)err_262 [map: 15, 29] : Success -> 15
Coalesce list: (268)seed_268 & (271)seed_271 [map: 32, 33] : Success -> 32
Coalesce list: (557)nedge_traversed_557 & (1189)nedge_traversed_1189 [map: 76, 137] : Success -> 76
Coalesce list: (714)err_729 & (735)err_712 [map: 92, 86] : Success -> 92
Coalesce list: (714)err_729 & (976)err_792 [map: 92, 111] : Success -> 92
Coalesce list: (715)_715 & (1156)prephitmp_1156 [map: 89, 136] : Success -> 89
Coalesce list: (729)err_729 & (1190)err_1190 [map: 92, 138] : Success -> 92
Coalesce list: (730)nedge_traversed_557 & (1189)nedge_traversed_557: Already Coalesced.
Coalesce list: (1156)_715 & (1286)pretmp_1286 [map: 89, 155] : Success -> 89
Coalesce list: (1352)k_1352 & (1365)k_1326 [map: 171, 164] : Success -> 171
Coalesce list: (95)prng_state_store_z5_lsm.11_95 & (1307)prng_state_store_z3_lsm.15_1307 [map: 3, 158] : Success -> 3
Coalesce list: (309)base_tgt_309 & (1490)base_tgt_310 [map: 41, 42] : Success -> 42
Coalesce list: (617)_617 & (1461)prng_state_store_z2_lsm.17_1461 [map: 77, 194] : Success -> 77
Coalesce list: (620)_620 & (1110)prng_state_store_z1_lsm.9_1110 [map: 78, 132] : Success -> 78
Coalesce list: (813)base_src_813 & (1482)base_src_819 [map: 113, 114] : Success -> 114
Coalesce list: (1258)prng_state_store_z3_lsm.15_1258 & (1313)prng_state_store_z1_lsm.9_1313 [map: 148, 162] : Success -> 148
Coalesce list: (1274)prng_state_store_z4_lsm.13_1274 & (1305)prng_state_store_z2_lsm.17_1305 [map: 153, 157] : Success -> 153
Coalesce list: (1446)pretmp_1446 & (1478)pretmp_1449 [map: 187, 188] : Success -> 188
Coalesce list: (325)err_729 & (1190)err_729: Already Coalesced.
Coalesce list: (1264)ivtmp.94_1263 & (1210)ivtmp.94_1210 [map: 151, 145] : Success -> 151
Coalesce list: (1291)ivtmp.101_1291 & (1285)ivtmp.101_1285 [map: 156, 154] : Success -> 156
Coalesce list: (1305)prng_state_store_z4_lsm.13_1274 & (1461)_617 [map: 153, 77] : Fail due to conflict
Coalesce list: (1305)prng_state_store_z4_lsm.13_1274 & (1203)prng_state_store_z2_lsm.17_1203 [map: 153, 141] : Success -> 153
Coalesce list: (1307)prng_state_store_z5_lsm.11_95 & (1258)prng_state_store_z3_lsm.15_1258 [map: 3, 148] : Fail due to conflict
Coalesce list: (1307)prng_state_store_z5_lsm.11_95 & (1205)prng_state_store_z3_lsm.15_1205 [map: 3, 142] : Success -> 3
Coalesce list: (1309)prng_state_store_z4_lsm.13_1309 & (1274)prng_state_store_z4_lsm.13_1274 [map: 159, 153] : Fail due to conflict
Coalesce list: (1309)prng_state_store_z4_lsm.13_1309 & (1207)prng_state_store_z4_lsm.13_1207 [map: 159, 143] : Success -> 159
Coalesce list: (1311)prng_state_store_z5_lsm.11_1311 & (95)prng_state_store_z5_lsm.11_95 [map: 160, 3] : Fail due to conflict
Coalesce list: (1311)prng_state_store_z5_lsm.11_1311 & (1209)prng_state_store_z5_lsm.11_1209 [map: 160, 144] : Success -> 160
Coalesce list: (1312)prng_state_store_z1_lsm.10_1312 & (1111)prng_state_store_z1_lsm.10_1111 [map: 161, 133] : Success -> 161
Coalesce list: (1313)prng_state_store_z3_lsm.15_1258 & (1110)_620 [map: 148, 78] : Fail due to conflict
Coalesce list: (1313)prng_state_store_z3_lsm.15_1258 & (1211)prng_state_store_z1_lsm.9_1211 [map: 148, 146] : Success -> 148
Coalesce list: (537)m_537 & (795)m_537: Already Coalesced.
Coalesce list: (795)m_537 & (541)m_541 [map: 73, 74] : Fail due to conflict
Coalesce list: (528)ivtmp.110_528 & (529)ivtmp.110_529 [map: 70, 71] : Success -> 70
Coalesce list: (528)ivtmp.110_528 & (530)ivtmp.110_530 [map: 70, 72] : Success -> 70
Coalesce list: (511)k_511 & (523)k_523 [map: 67, 69] : Success -> 67
Coalesce list: (504)k_504 & (508)k_508 [map: 62, 66] : Success -> 62
Coalesce list: (505)ivtmp.134_505 & (506)ivtmp.134_506 [map: 63, 64] : Success -> 63
Coalesce list: (505)ivtmp.134_505 & (507)ivtmp.134_507 [map: 63, 65] : Success -> 63
Coalesce list: (295)start_edge_295 & (301)start_edge_301 [map: 36, 39] : Success -> 36
Coalesce list: (974)whichset_144 & (152)whichset_152 [map: 5, 6] : Success -> 5
Coalesce list: (974)whichset_144 & (165)whichset_165 [map: 5, 9] : Success -> 5
Coalesce list: (974)whichset_144 & (177)whichset_177 [map: 5, 11] : Success -> 5
Coalesce list: (974)whichset_144 & (189)whichset_189 [map: 5, 13] : Success -> 5
Coalesce list: (263)nset_153 & (154)nset_154 [map: 7, 8] : Success -> 7
Coalesce list: (263)nset_153 & (166)nset_166 [map: 7, 10] : Success -> 7
Coalesce list: (263)nset_153 & (178)nset_178 [map: 7, 12] : Success -> 7
Coalesce list: (263)nset_153 & (190)nset_190 [map: 7, 14] : Success -> 7
Coalesce list: (264)err_192 & (253)err_192: Already Coalesced.
Coalesce list: (264)err_192 & (256)err_192: Already Coalesced.
Coalesce list: (264)err_192 & (259)err_192: Already Coalesced.
Coalesce list: (264)err_192 & (262)err_192: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (argc_7(D) - 7 )
Partition 2 (argv_9(D) - 9 )
Partition 3 (_11 - 11 )
Partition 4 (_12 - 12 )
Partition 5 (_13 - 13 )
Partition 6 (_17 - 17 )
Partition 7 (desired_nedge_18 - 18 )
Partition 8 (_19 - 19 )
Partition 9 (_20 - 20 )
Partition 10 (_21 - 21 )
Partition 11 (_22 - 22 )
Partition 12 (_24 - 24 )
Partition 13 (_25 - 25 )
Partition 14 (_30 - 30 )
Partition 15 (_31 - 31 )
Partition 16 (_32 - 32 )
Partition 17 (_33 - 33 )
Partition 18 (_34 - 34 )
Partition 19 (_35 - 35 )
Partition 20 (_36 - 36 )
Partition 21 (_39 - 39 )
Partition 22 (_42 - 42 )
Partition 23 (_43 - 43 )
Partition 24 (_44 - 44 )
Partition 25 (_47 - 47 )
Partition 26 (_49 - 49 )
Partition 27 (_50 - 50 )
Partition 28 (exponent_middle_51 - 51 296 356 1094 )
Partition 29 (_52 - 52 )
Partition 30 (_53 - 53 )
Partition 31 (_54 - 54 )
Partition 32 (sz_55 - 55 )
Partition 33 (_56 - 56 )
Partition 34 (_61 - 61 )
Partition 35 (_63 - 63 )
Partition 36 (_64 - 64 )
Partition 37 (_65 - 65 )
Partition 38 (_66 - 66 )
Partition 39 (_67 - 67 )
Partition 40 (_68 - 68 )
Partition 41 (_69 - 69 )
Partition 42 (_70 - 70 )
Partition 43 (_71 - 71 )
Partition 44 (_72 - 72 )
Partition 45 (_76 - 76 )
Partition 46 (_78 - 78 )
Partition 47 (_80 - 80 )
Partition 48 (_89 - 89 )
Partition 49 (prng_state_store_z5_lsm.11_95 - 95 1205 1307 )
Partition 50 (_101 - 101 )
Partition 51 (_103 - 103 )
Partition 52 (nverts_107 - 107 )
Partition 53 (_112 - 112 )
Partition 54 (_113 - 113 )
Partition 55 (_117 - 117 )
Partition 56 (c_118 - 118 )
Partition 57 (_119 - 119 )
Partition 58 (_120 - 120 )
Partition 59 (_121 - 121 )
Partition 60 (_122 - 122 )
Partition 61 (_123 - 123 )
Partition 62 (_124 - 124 )
Partition 63 (_125 - 125 )
Partition 64 (_126 - 126 )
Partition 65 (_127 - 127 )
Partition 66 (_128 - 128 )
Partition 67 (_129 - 129 )
Partition 68 (_130 - 130 )
Partition 69 (_131 - 131 )
Partition 70 (_132 - 132 )
Partition 71 (_133 - 133 )
Partition 72 (_134 - 134 )
Partition 73 (_135 - 135 )
Partition 74 (_136 - 136 )
Partition 75 (_137 - 137 )
Partition 76 (_138 - 138 )
Partition 77 (_139 - 139 )
Partition 78 (_140 - 140 )
Partition 79 (_141 - 141 )
Partition 80 (_142 - 142 )
Partition 81 (_143 - 143 )
Partition 82 (whichset_144 - 144 152 165 177 189 974 )
Partition 83 (_145 - 145 )
Partition 84 (_146 - 146 )
Partition 85 (_147 - 147 )
Partition 86 (_148 - 148 )
Partition 87 (_149 - 149 )
Partition 88 (_150 - 150 )
Partition 89 (_151 - 151 )
Partition 90 (nset_153 - 153 154 166 178 190 263 )
Partition 91 (_155 - 155 )
Partition 92 (_156 - 156 )
Partition 93 (_157 - 157 )
Partition 94 (_158 - 158 )
Partition 95 (_159 - 159 )
Partition 96 (_160 - 160 )
Partition 97 (_161 - 161 )
Partition 98 (_162 - 162 )
Partition 99 (_163 - 163 )
Partition 100 (_164 - 164 )
Partition 101 (_167 - 167 )
Partition 102 (_168 - 168 )
Partition 103 (_169 - 169 )
Partition 104 (_170 - 170 )
Partition 105 (_171 - 171 )
Partition 106 (_172 - 172 )
Partition 107 (_173 - 173 )
Partition 108 (_174 - 174 )
Partition 109 (_175 - 175 )
Partition 110 (_176 - 176 )
Partition 111 (_179 - 179 )
Partition 112 (_180 - 180 )
Partition 113 (_181 - 181 )
Partition 114 (_182 - 182 )
Partition 115 (_183 - 183 )
Partition 116 (_184 - 184 )
Partition 117 (_185 - 185 )
Partition 118 (_186 - 186 )
Partition 119 (_187 - 187 )
Partition 120 (_188 - 188 )
Partition 121 (_191 - 191 )
Partition 122 (err_192 - 192 249 250 251 252 253 254 255 256 257 258 259 260 261 262 264 )
Partition 123 (_193 - 193 )
Partition 124 (_194 - 194 )
Partition 125 (_195 - 195 )
Partition 126 (_196 - 196 )
Partition 127 (_197 - 197 )
Partition 128 (_198 - 198 )
Partition 129 (_199 - 199 )
Partition 130 (_200 - 200 )
Partition 131 (_201 - 201 )
Partition 132 (_202 - 202 )
Partition 133 (_203 - 203 )
Partition 134 (_204 - 204 )
Partition 135 (_205 - 205 )
Partition 136 (_206 - 206 )
Partition 137 (_207 - 207 )
Partition 138 (_208 - 208 )
Partition 139 (_209 - 209 )
Partition 140 (_210 - 210 )
Partition 141 (_211 - 211 )
Partition 142 (_212 - 212 )
Partition 143 (_213 - 213 )
Partition 144 (_214 - 214 )
Partition 145 (_215 - 215 )
Partition 146 (_216 - 216 )
Partition 147 (_217 - 217 )
Partition 148 (_218 - 218 )
Partition 149 (_219 - 219 )
Partition 150 (_220 - 220 )
Partition 151 (_221 - 221 )
Partition 152 (_222 - 222 )
Partition 153 (_223 - 223 )
Partition 154 (_224 - 224 )
Partition 155 (_225 - 225 )
Partition 156 (_226 - 226 )
Partition 157 (sum_227 - 227 )
Partition 158 (_228 - 228 )
Partition 159 (_229 - 229 )
Partition 160 (sum_230 - 230 )
Partition 161 (_231 - 231 )
Partition 162 (_232 - 232 )
Partition 163 (sum_233 - 233 )
Partition 164 (_234 - 234 )
Partition 165 (_235 - 235 )
Partition 166 (sum_236 - 236 )
Partition 167 (_237 - 237 )
Partition 168 (_238 - 238 )
Partition 169 (_239 - 239 )
Partition 170 (_240 - 240 )
Partition 171 (_241 - 241 )
Partition 172 (_242 - 242 )
Partition 173 (_243 - 243 )
Partition 174 (_244 - 244 )
Partition 175 (_245 - 245 )
Partition 176 (_266 - 266 )
Partition 177 (_267 - 267 )
Partition 178 (seed_268 - 268 271 )
Partition 179 (_269 - 269 )
Partition 180 (_270 - 270 )
Partition 181 (_272 - 272 )
Partition 182 (_273 - 273 )
Partition 183 (_274 - 274 )
Partition 184 (_275 - 275 )
Partition 185 (_276 - 276 )
Partition 186 (_277 - 277 )
Partition 187 (_278 - 278 )
Partition 188 (_279 - 279 )
Partition 189 (_281 - 281 )
Partition 190 (_284 - 284 )
Partition 191 (_286 - 286 )
Partition 192 (edges_287 - 287 )
Partition 193 (val0_288 - 288 )
Partition 194 (val0_290 - 290 )
Partition 195 (val1_292 - 292 )
Partition 196 (val1_294 - 294 )
Partition 197 (start_edge_295 - 295 301 )
Partition 198 (k_298 - 298 713 )
Partition 199 (_302 - 302 )
Partition 200 (state$z1_303 - 303 )
Partition 201 (_304 - 304 )
Partition 202 (_305 - 305 )
Partition 203 (state$z2_306 - 306 )
Partition 204 (nverts_308 - 308 1481 )
Partition 205 (base_tgt_310 - 309 310 1490 )
Partition 206 (_312 - 312 )
Partition 207 (_313 - 313 )
Partition 208 (_315 - 315 )
Partition 209 (state$z5_316 - 316 )
Partition 210 (_317 - 317 )
Partition 211 (_318 - 318 )
Partition 212 (_319 - 319 )
Partition 213 (_320 - 320 )
Partition 214 (_322 - 322 )
Partition 215 (_323 - 323 )
Partition 216 (_324 - 324 )
Partition 217 (_333 - 333 )
Partition 218 (parent_341 - 341 344 968 )
Partition 219 (val_351 - 351 )
Partition 220 (_352 - 352 )
Partition 221 (_354 - 354 )
Partition 222 (byte_index_355 - 327 355 933 )
Partition 223 (_363 - 363 767 1397 )
Partition 224 (prephitmp_364 - 364 )
Partition 225 (val_369 - 369 371 372 )
Partition 226 (val_373 - 373 )
Partition 227 (val_374 - 374 )
Partition 228 (val_375 - 375 )
Partition 229 (_379 - 379 )
Partition 230 (_380 - 283 380 935 )
Partition 231 (prephitmp_382 - 348 382 388 1453 )
Partition 232 (_386 - 386 )
Partition 233 (_387 - 387 )
Partition 234 (_391 - 391 )
Partition 235 (_392 - 392 )
Partition 236 (_398 - 398 )
Partition 237 (_399 - 399 )
Partition 238 (_400 - 400 )
Partition 239 (v_401 - 401 )
Partition 240 (v_403 - 403 )
Partition 241 (v_405 - 405 )
Partition 242 (x_406 - 406 )
Partition 243 (_407 - 407 )
Partition 244 (_408 - 408 )
Partition 245 (_409 - 409 )
Partition 246 (_410 - 410 )
Partition 247 (x_411 - 411 )
Partition 248 (_412 - 412 )
Partition 249 (_413 - 413 )
Partition 250 (_414 - 414 )
Partition 251 (_415 - 415 )
Partition 252 (x_416 - 416 )
Partition 253 (_417 - 417 )
Partition 254 (_418 - 418 )
Partition 255 (_419 - 419 )
Partition 256 (_420 - 420 )
Partition 257 (x_421 - 421 )
Partition 258 (v_423 - 423 )
Partition 259 (_424 - 424 )
Partition 260 (v_426 - 426 )
Partition 261 (x_427 - 427 )
Partition 262 (_428 - 428 )
Partition 263 (_429 - 429 )
Partition 264 (_430 - 430 )
Partition 265 (_431 - 431 )
Partition 266 (x_432 - 432 )
Partition 267 (_433 - 433 )
Partition 268 (_434 - 434 )
Partition 269 (_435 - 435 )
Partition 270 (_436 - 436 )
Partition 271 (x_437 - 437 )
Partition 272 (_438 - 438 )
Partition 273 (_439 - 439 )
Partition 274 (_440 - 440 )
Partition 275 (_441 - 441 )
Partition 276 (x_442 - 442 )
Partition 277 (v_443 - 443 )
Partition 278 (_444 - 444 )
Partition 279 (_445 - 445 )
Partition 280 (v_446 - 446 )
Partition 281 (_447 - 447 )
Partition 282 (v_448 - 448 )
Partition 283 (_449 - 449 )
Partition 284 (v_450 - 450 )
Partition 285 (x_451 - 451 )
Partition 286 (_452 - 452 )
Partition 287 (_453 - 453 )
Partition 288 (_454 - 454 )
Partition 289 (_455 - 455 )
Partition 290 (x_456 - 456 )
Partition 291 (_457 - 457 )
Partition 292 (_458 - 458 )
Partition 293 (_459 - 459 )
Partition 294 (_460 - 460 )
Partition 295 (x_461 - 461 )
Partition 296 (_462 - 462 )
Partition 297 (_463 - 463 )
Partition 298 (_464 - 464 )
Partition 299 (_465 - 465 )
Partition 300 (x_466 - 466 )
Partition 301 (_467 - 467 )
Partition 302 (v_468 - 468 )
Partition 303 (_469 - 469 )
Partition 304 (_470 - 470 )
Partition 305 (v_471 - 471 )
Partition 306 (x_472 - 472 )
Partition 307 (_473 - 473 )
Partition 308 (_474 - 474 )
Partition 309 (_475 - 475 )
Partition 310 (_476 - 476 )
Partition 311 (x_477 - 477 )
Partition 312 (_478 - 478 )
Partition 313 (_479 - 479 )
Partition 314 (_480 - 480 )
Partition 315 (_481 - 481 )
Partition 316 (x_482 - 482 )
Partition 317 (_483 - 483 )
Partition 318 (_484 - 484 )
Partition 319 (_485 - 485 )
Partition 320 (_486 - 486 )
Partition 321 (x_487 - 487 )
Partition 322 (v_488 - 488 )
Partition 323 (_489 - 489 )
Partition 324 (_490 - 490 )
Partition 325 (_491 - 491 )
Partition 326 (_492 - 492 )
Partition 327 (_493 - 493 )
Partition 328 (err_494 - 494 )
Partition 329 (_495 - 495 )
Partition 330 (_496 - 496 )
Partition 331 (_497 - 497 )
Partition 332 (_498 - 498 )
Partition 333 (_499 - 499 )
Partition 334 (_500 - 500 )
Partition 335 (_501 - 501 )
Partition 336 (_502 - 502 )
Partition 337 (k_504 - 504 508 )
Partition 338 (ivtmp.134_505 - 505 506 507 )
Partition 339 (_510 - 510 )
Partition 340 (k_511 - 511 523 )
Partition 341 (_512 - 512 )
Partition 342 (_513 - 513 )
Partition 343 (parent_514 - 514 1334 )
Partition 344 (_515 - 515 )
Partition 345 (_516 - 516 )
Partition 346 (_517 - 517 )
Partition 347 (_518 - 518 )
Partition 348 (_519 - 519 )
Partition 349 (_520 - 520 )
Partition 350 (_521 - 521 )
Partition 351 (_522 - 522 )
Partition 352 (_524 - 524 )
Partition 353 (t_527 - 527 )
Partition 354 (ivtmp.110_528 - 528 529 530 )
Partition 355 (_531 - 531 )
Partition 356 (_534 - 534 )
Partition 357 (_535 - 535 )
Partition 358 (m_537 - 537 795 )
Partition 359 (_538 - 538 )
Partition 360 (_539 - 539 )
Partition 361 (m_541 - 541 )
Partition 362 (_543 - 543 )
Partition 363 (_546 - 546 )
Partition 364 (_547 - 547 )
Partition 365 (_548 - 548 )
Partition 366 (_549 - 549 )
Partition 367 (_550 - 550 )
Partition 368 (_551 - 551 )
Partition 369 (sz_552 - 552 )
Partition 370 (_554 - 554 )
Partition 371 (nhop_556 - 357 556 755 )
Partition 372 (nedge_traversed_557 - 557 686 728 730 1189 1191 )
Partition 373 (_558 - 558 )
Partition 374 (_559 - 559 )
Partition 375 (_560 - 560 )
Partition 376 (_563 - 563 )
Partition 377 (_565 - 565 )
Partition 378 (_566 - 566 )
Partition 379 (_567 - 567 )
Partition 380 (err_568 - 568 )
Partition 381 (_570 - 570 )
Partition 382 (_571 - 571 )
Partition 383 (_572 - 572 )
Partition 384 (_573 - 573 )
Partition 385 (_574 - 574 )
Partition 386 (_575 - 575 )
Partition 387 (_576 - 576 )
Partition 388 (_577 - 577 )
Partition 389 (_580 - 580 )
Partition 390 (_582 - 582 )
Partition 391 (_583 - 583 )
Partition 392 (_585 - 585 )
Partition 393 (_592 - 592 )
Partition 394 (_593 - 593 )
Partition 395 (_594 - 594 )
Partition 396 (_596 - 596 )
Partition 397 (_597 - 597 )
Partition 398 (_598 - 598 )
Partition 399 (_600 - 600 )
Partition 400 (_601 - 601 )
Partition 401 (_608 - 608 )
Partition 402 (_609 - 609 )
Partition 403 (_615 - 615 )
Partition 404 (_616 - 616 )
Partition 405 (_617 - 617 1461 )
Partition 406 (_618 - 618 )
Partition 407 (_619 - 619 )
Partition 408 (_620 - 620 1110 )
Partition 409 (bfs_tree_622 - 622 )
Partition 410 (_623 - 623 )
Partition 411 (_624 - 624 )
Partition 412 (_625 - 625 )
Partition 413 (_626 - 626 )
Partition 414 (_627 - 627 )
Partition 415 (out_628 - 628 )
Partition 416 (_629 - 629 )
Partition 417 (_630 - 630 )
Partition 418 (_631 - 631 )
Partition 419 (_632 - 632 )
Partition 420 (_633 - 633 )
Partition 421 (out_634 - 634 )
Partition 422 (nv_635 - 635 )
Partition 423 (_636 - 636 )
Partition 424 (_637 - 637 )
Partition 425 (_638 - 638 )
Partition 426 (_639 - 639 )
Partition 427 (_640 - 640 )
Partition 428 (_641 - 641 )
Partition 429 (_643 - 643 )
Partition 430 (level_644 - 644 )
Partition 431 (_647 - 647 )
Partition 432 (niters.29_648 - 648 )
Partition 433 (_649 - 649 )
Partition 434 (ivtmp.84_652 - 652 785 1426 )
Partition 435 (_654 - 654 )
Partition 436 (i_655 - 655 )
Partition 437 (j_659 - 659 )
Partition 438 (_660 - 660 )
Partition 439 (_661 - 661 )
Partition 440 (_662 - 662 )
Partition 441 (_663 - 663 )
Partition 442 (_664 - 664 )
Partition 443 (_665 - 665 )
Partition 444 (_666 - 666 )
Partition 445 (_667 - 667 )
Partition 446 (_668 - 668 )
Partition 447 (_670 - 670 )
Partition 448 (_671 - 671 )
Partition 449 (_672 - 672 )
Partition 450 (_673 - 673 )
Partition 451 (_674 - 674 )
Partition 452 (_675 - 675 )
Partition 453 (_676 - 676 )
Partition 454 (_677 - 677 )
Partition 455 (_678 - 678 )
Partition 456 (_679 - 679 )
Partition 457 (prephitmp_685 - 685 961 1440 1456 1470 1471 )
Partition 458 (_687 - 687 )
Partition 459 (_689 - 689 )
Partition 460 (_690 - 690 )
Partition 461 (_691 - 691 )
Partition 462 (_692 - 692 )
Partition 463 (_693 - 693 )
Partition 464 (lvldiff_694 - 694 )
Partition 465 (_695 - 695 )
Partition 466 (_696 - 696 )
Partition 467 (_702 - 702 )
Partition 468 (_704 - 704 )
Partition 469 (_705 - 705 )
Partition 470 (ivtmp.64_706 - 706 707 710 )
Partition 471 (_708 - 708 )
Partition 472 (_709 - 709 )
Partition 473 (_711 - 711 )
Partition 474 (_715 - 715 1156 1286 )
Partition 475 (_717 - 717 )
Partition 476 (prephitmp_725 - 725 775 1438 1454 1466 1467 )
Partition 477 (err_729 - 325 712 714 729 734 735 788 792 976 1084 1099 1109 1143 1190 )
Partition 478 (err_731 - 731 )
Partition 479 (_733 - 733 )
Partition 480 (_737 - 737 )
Partition 481 (_738 - 738 )
Partition 482 (_741 - 741 )
Partition 483 (_742 - 742 )
Partition 484 (_743 - 743 )
Partition 485 (_744 - 744 )
Partition 486 (_745 - 745 )
Partition 487 (_746 - 746 )
Partition 488 (_748 - 748 )
Partition 489 (_750 - 750 )
Partition 490 (_753 - 753 )
Partition 491 (_756 - 756 )
Partition 492 (_757 - 757 )
Partition 493 (_758 - 758 )
Partition 494 (_759 - 759 )
Partition 495 (nhop_764 - 764 1083 1396 )
Partition 496 (nhop_766 - 766 1249 )
Partition 497 (_768 - 768 )
Partition 498 (_772 - 772 )
Partition 499 (_773 - 773 )
Partition 500 (lastlvl_774 - 774 1142 1371 )
Partition 501 (lastlvl_776 - 776 1341 )
Partition 502 (_777 - 777 )
Partition 503 (_779 - 779 )
Partition 504 (prologue_after_cost_adjust.32_780 - 780 782 )
Partition 505 (_783 - 783 )
Partition 506 (_784 - 784 )
Partition 507 (parent_786 - 786 1089 )
Partition 508 (seen_edge_794 - 794 )
Partition 509 (base_src_819 - 813 819 1482 )
Partition 510 (_839 - 839 )
Partition 511 (_847 - 847 )
Partition 512 (_934 - 368 934 989 1035 1436 1457 )
Partition 513 (_936 - 282 936 1437 )
Partition 514 (m_937 - 937 )
Partition 515 (bnd.34_962 - 962 )
Partition 516 (niters.33_1004 - 1004 )
Partition 517 (_1012 - 1012 )
Partition 518 (_1048 - 1048 )
Partition 519 (_1073 - 1073 )
Partition 520 (_1074 - 1074 )
Partition 521 (_1076 - 1076 )
Partition 522 (_1098 - 1098 )
Partition 523 (_1105 - 1105 )
Partition 524 (_1106 - 1106 )
Partition 525 (_1108 - 1108 )
Partition 526 (_1118 - 1118 )
Partition 527 (_1119 - 1119 )
Partition 528 (_1140 - 1140 )
Partition 529 (_1146 - 1146 )
Partition 530 (_1147 - 1147 )
Partition 531 (_1193 - 1193 )
Partition 532 (vect_vec_iv_.40_1202 - 1202 1314 1350 )
Partition 533 (_1250 - 1250 )
Partition 534 (_1252 - 1252 )
Partition 535 (_1253 - 1253 )
Partition 536 (_1257 - 1257 )
Partition 537 (prng_state_store_z3_lsm.15_1258 - 1211 1258 1313 )
Partition 538 (ivtmp_1259 - 1259 1260 )
Partition 539 (ivtmp.94_1263 - 1210 1263 1264 )
Partition 540 (_1265 - 1265 )
Partition 541 (_1266 - 1266 )
Partition 542 (_1268 - 1268 )
Partition 543 (_1270 - 1270 )
Partition 544 (vectp.48_1271 - 1271 )
Partition 545 (_1272 - 1272 )
Partition 546 (vect__599.46_1273 - 1273 )
Partition 547 (prng_state_store_z4_lsm.13_1274 - 1203 1274 1305 )
Partition 548 (vect_patt_647.45_1275 - 1275 )
Partition 549 (_1276 - 1276 )
Partition 550 (ivtmp.101_1291 - 1285 1291 )
Partition 551 (prng_state_store_z4_lsm.13_1309 - 1207 1309 )
Partition 552 (prng_state_store_z5_lsm.11_1311 - 1209 1311 )
Partition 553 (prng_state_store_z1_lsm.10_1312 - 1111 1312 )
Partition 554 (_1315 - 1315 )
Partition 555 (_1321 - 1321 )
Partition 556 (_1325 - 1325 )
Partition 557 (vect_vec_iv_.40_1327 - 1327 )
Partition 558 (pretmp_1332 - 1332 )
Partition 559 (pretmp_1333 - 1333 )
Partition 560 (_1336 - 1336 )
Partition 561 (ratio_mult_vf.35_1337 - 1337 )
Partition 562 (vect_cst_.42_1339 - 1339 )
Partition 563 (stmp_var_.37_1340 - 1340 )
Partition 564 (_1343 - 1343 )
Partition 565 (_1344 - 1344 )
Partition 566 (pretmp_1346 - 1346 )
Partition 567 (pretmp_1347 - 329 1347 1348 )
Partition 568 (k_1352 - 1326 1352 1360 1365 )
Partition 569 (_1353 - 1353 )
Partition 570 (pretmp_1354 - 1354 )
Partition 571 (pretmp_1355 - 749 1355 1356 1395 )
Partition 572 (_1357 - 1357 )
Partition 573 (_1361 - 1361 )
Partition 574 (_1362 - 1362 )
Partition 575 (_1363 - 1363 )
Partition 576 (_1364 - 1364 )
Partition 577 (_1368 - 1368 )
Partition 578 (_1398 - 1398 )
Partition 579 (vect_patt_839.41_1399 - 1399 )
Partition 580 (_1401 - 1401 )
Partition 581 (_1402 - 1402 )
Partition 582 (_1404 - 1404 )
Partition 583 (_1405 - 1405 )
Partition 584 (_1407 - 1407 )
Partition 585 (_1409 - 1409 )
Partition 586 (_1412 - 1412 )
Partition 587 (_1429 - 1429 )
Partition 588 (prephitmp_1439 - 838 1439 1455 1468 1469 )
Partition 589 (_1441 - 1441 )
Partition 590 (prephitmp_1443 - 1443 )
Partition 591 (prephitmp_1444 - 1444 1479 )
Partition 592 (pretmp_1448 - 1448 )
Partition 593 (pretmp_1449 - 1446 1449 1478 )
Partition 594 (pretmp_1472 - 1472 )
Partition 595 (_1517 - 1517 )
Partition 596 (_1520 - 1520 )
Partition 597 (_1523 - 1523 )


Replacing Expressions
_11 replace with --> _11 = SCALE;

_12 replace with --> _12 = (unsigned int) _11;

_20 replace with --> _20 = VERBOSE;

_21 replace with --> _21 = stderr;

_22 replace with --> _22 = use_RMAT;

_24 replace with --> _24 = (long unsigned int) desired_nedge_18;

_25 replace with --> _25 = _24 * 16;

_30 replace with --> _30 = IJ;

_31 replace with --> _31 = nedge;

_32 replace with --> _32 = SCALE;

_33 replace with --> _33 = (int) _32;

_34 replace with --> _34 = A;

_35 replace with --> _35 = B;

_36 replace with --> _36 = C;

_42 replace with --> _42 = SCALE;

_49 replace with --> _49 = VERBOSE;

_50 replace with --> _50 = stderr;

_52 replace with --> _52 = nedge;

_53 replace with --> _53 = (long unsigned int) _52;

sz_55 replace with --> sz_55 = (ssize_t) _54;

_56 replace with --> _56 = IJ;

_61 replace with --> _61 = IJ;

_63 replace with --> _63 = SCALE;

_64 replace with --> _64 = nvtx_scale;

_65 replace with --> _65 = edgefactor;

_66 replace with --> _66 = A;

_67 replace with --> _67 = B;

_68 replace with --> _68 = C;

_69 replace with --> _69 = D;

_70 replace with --> _70 = generation_time;

_71 replace with --> _71 = construction_time;

_72 replace with --> _72 = NBFS;

_78 replace with --> _78 = (sizetype) _1441;

_101 replace with --> _101 = (long unsigned int) desired_nedge_18;

_113 replace with --> _113 = VERBOSE;

_119 replace with --> _119 = optarg;

_121 replace with --> _121 = stderr;

_122 replace with --> _122 = optarg;

_124 replace with --> _124 = stderr;

_126 replace with --> _126 = optarg;

_128 replace with --> _128 = *_125;

_129 replace with --> _129 = stderr;

_130 replace with --> _130 = optarg;

_131 replace with --> _131 = SCALE;

_132 replace with --> _132 = stderr;

_134 replace with --> _134 = optarg;

_136 replace with --> _136 = *_133;

_137 replace with --> _137 = stderr;

_138 replace with --> _138 = optarg;

_139 replace with --> _139 = edgefactor;

_140 replace with --> _140 = stderr;

_142 replace with --> _142 = optarg;

_145 replace with --> _145 = whichset_144 & 1;

_146 replace with --> _146 = stderr;

_147 replace with --> _147 = *_141;

_148 replace with --> _148 = stderr;

_149 replace with --> _149 = optarg;

_150 replace with --> _150 = A;

_151 replace with --> _151 = stderr;

_156 replace with --> _156 = optarg;

_158 replace with --> _158 = whichset_144 & 2;

_159 replace with --> _159 = stderr;

_160 replace with --> _160 = *_155;

_161 replace with --> _161 = stderr;

_162 replace with --> _162 = optarg;

_163 replace with --> _163 = B;

_164 replace with --> _164 = stderr;

_168 replace with --> _168 = optarg;

_170 replace with --> _170 = whichset_144 & 4;

_171 replace with --> _171 = stderr;

_172 replace with --> _172 = *_167;

_173 replace with --> _173 = stderr;

_174 replace with --> _174 = optarg;

_175 replace with --> _175 = C;

_176 replace with --> _176 = stderr;

_180 replace with --> _180 = optarg;

_182 replace with --> _182 = whichset_144 & 8;

_183 replace with --> _183 = stderr;

_184 replace with --> _184 = *_179;

_185 replace with --> _185 = stderr;

_186 replace with --> _186 = optarg;

_187 replace with --> _187 = D;

_188 replace with --> _188 = stderr;

_191 replace with --> _191 = stderr;

_193 replace with --> _193 = A;

_194 replace with --> _194 = B;

_195 replace with --> _195 = _193 + _194;

_196 replace with --> _196 = C;

_197 replace with --> _197 = _195 + _196;

_198 replace with --> _198 = 1.0e+0 - _197;

_199 replace with --> _199 = A;

_200 replace with --> _200 = B;

_201 replace with --> _201 = _199 + _200;

_202 replace with --> _202 = D;

_203 replace with --> _203 = _201 + _202;

_204 replace with --> _204 = 1.0e+0 - _203;

_205 replace with --> _205 = A;

_206 replace with --> _206 = C;

_207 replace with --> _207 = _205 + _206;

_208 replace with --> _208 = D;

_209 replace with --> _209 = _207 + _208;

_210 replace with --> _210 = 1.0e+0 - _209;

_211 replace with --> _211 = B;

_212 replace with --> _212 = C;

_213 replace with --> _213 = _211 + _212;

_214 replace with --> _214 = D;

_215 replace with --> _215 = _213 + _214;

_216 replace with --> _216 = 1.0e+0 - _215;

_217 replace with --> _217 = stderr;

_219 replace with --> _219 = B;

_220 replace with --> _220 = C;

_221 replace with --> _221 = D;

_222 replace with --> _222 = stderr;

_223 replace with --> _223 = B;

_224 replace with --> _224 = C;

_225 replace with --> _225 = D;

_226 replace with --> _226 = A;

_228 replace with --> _228 = B;

_231 replace with --> _231 = C;

_234 replace with --> _234 = D;

_235 replace with --> _235 = (long double) _234;

_237 replace with --> _237 = sum_227 / sum_236;

_239 replace with --> _239 = _229 / sum_236;

_241 replace with --> _241 = _232 / sum_236;

_243 replace with --> _243 = _238 + _240;

_244 replace with --> _244 = _242 + _243;

_245 replace with --> _245 = 1.0e+0 - _244;

_269 replace with --> _269 = *_266;

_270 replace with --> _270 = _575 != parent_1089;

_273 replace with --> _273 = _272 & 1073741823;

_275 replace with --> _275 = _272 >> 30;

_276 replace with --> _276 = _275 & 1073741823;

_279 replace with --> _279 = _278 << 4;

_284 replace with --> _284 = _368 * 107374182;

_286 replace with --> _286 = _101 * 16;

_302 replace with --> _302 = _44 & 1073741823;

_304 replace with --> _304 = _44 >> 30;

_305 replace with --> _305 = _304 & 1073741823;

_313 replace with --> _313 = _312 << 4;

_315 replace with --> _315 = _278 + 1;

_317 replace with --> _317 = new_state.z1;

_318 replace with --> _318 = new_state.z1;

_319 replace with --> _319 = new_state.z1;

_320 replace with --> _320 = new_state.z1;

_322 replace with --> _322 = _312 + 1;

_323 replace with --> _323 = _749 >= 0;

_324 replace with --> _324 = _270 & _323;

_333 replace with --> _333 = _1368 + 18446744073709551615;

_352 replace with --> _352 = (int) val_351;

_354 replace with --> _354 = &mrg_skip_matrices[byte_index_933][_352];

val_374 replace with --> val_374 = val_373 + 4294965396;

val_375 replace with --> val_375 = val_373 + 4294963496;

_379 replace with --> _379 = prephitmp_1436 * 107374182;

_386 replace with --> _386 = _936 * 104480;

_387 replace with --> _387 = _386 + _935;

_391 replace with --> _391 = prephitmp_1453 * 107374182;

_398 replace with --> _398 = prephitmp_1454 * 104480;

_399 replace with --> _399 = _392 + _398;

v_405 replace with --> v_405 = v_403 * _449;

_407 replace with --> _407 = x_406 >> 4;

_409 replace with --> _409 = x_406 & 1085102592571150095;

_412 replace with --> _412 = x_411 >> 2;

_414 replace with --> _414 = x_411 & 3689348814741910323;

_417 replace with --> _417 = x_416 >> 1;

_419 replace with --> _419 = x_416 & 6148914691236517205;

x_421 replace with --> x_421 = _418 | _420;

_424 replace with --> _424 = v_423 >> _43;

v_426 replace with --> v_426 = v_423 * _470;

_428 replace with --> _428 = x_427 >> 4;

_430 replace with --> _430 = x_427 & 1085102592571150095;

_433 replace with --> _433 = x_432 >> 2;

_435 replace with --> _435 = x_432 & 3689348814741910323;

_438 replace with --> _438 = x_437 >> 1;

_440 replace with --> _440 = x_437 & 6148914691236517205;

x_442 replace with --> x_442 = _439 | _441;

_444 replace with --> _444 = v_443 >> _43;

_445 replace with --> _445 = (long int) v_443;

v_450 replace with --> v_450 = v_448 * _449;

_452 replace with --> _452 = x_451 >> 4;

_454 replace with --> _454 = x_451 & 1085102592571150095;

_457 replace with --> _457 = x_456 >> 2;

_459 replace with --> _459 = x_456 & 3689348814741910323;

_462 replace with --> _462 = x_461 >> 1;

_464 replace with --> _464 = x_461 & 6148914691236517205;

x_466 replace with --> x_466 = _463 | _465;

_469 replace with --> _469 = v_468 >> _43;

v_471 replace with --> v_471 = v_468 * _470;

_473 replace with --> _473 = x_472 >> 4;

_475 replace with --> _475 = x_472 & 1085102592571150095;

_478 replace with --> _478 = x_477 >> 2;

_480 replace with --> _480 = x_477 & 3689348814741910323;

_483 replace with --> _483 = x_482 >> 1;

_485 replace with --> _485 = x_482 & 6148914691236517205;

x_487 replace with --> x_487 = _484 | _486;

_489 replace with --> _489 = v_488 >> _43;

_491 replace with --> _491 = stderr;

_492 replace with --> _492 = IJ;

_493 replace with --> _493 = nedge;

_496 replace with --> _496 = VERBOSE;

_497 replace with --> _497 = stderr;

_498 replace with --> _498 = stderr;

_502 replace with --> _502 = _501 * 4;

_510 replace with --> _510 = IJ;

_512 replace with --> _512 = (sizetype) k_504;

_517 replace with --> _517 = (long unsigned int) _515;

_518 replace with --> _518 = _517 * 4;

_519 replace with --> _519 = _112 + _518;

_520 replace with --> _520 = (long unsigned int) _516;

_521 replace with --> _521 = _520 * 4;

_522 replace with --> _522 = _112 + _521;

_531 replace with --> _531 = MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B];

_534 replace with --> _534 = (double) _1252;

_535 replace with --> _535 = _534 * _598;

_538 replace with --> _538 = _543 - m_537;

_539 replace with --> _539 = (double) _538;

_546 replace with --> _546 = stderr;

_547 replace with --> _547 = stderr;

sz_552 replace with --> sz_552 = (ssize_t) _551;

_559 replace with --> _559 = (long unsigned int) _558;

_563 replace with --> _563 = MEM[symbol: bfs_root, index: _1361, offset: 0B];

_565 replace with --> _565 = VERBOSE;

_566 replace with --> _566 = stderr;

_567 replace with --> _567 = MEM[symbol: bfs_root, index: _1361, offset: 0B];

_570 replace with --> _570 = VERBOSE;

_571 replace with --> _571 = stderr;

_572 replace with --> _572 = VERBOSE;

_573 replace with --> _573 = stderr;

_580 replace with --> _580 = stderr;

_582 replace with --> _582 = stderr;

_583 replace with --> _583 = bfs_root[m_937];

_585 replace with --> _585 = NBFS;

_592 replace with --> _592 = (sizetype) parent_1089;

_593 replace with --> _593 = (double) _1146;

_594 replace with --> _594 = _593 * 4.6566128752457969230960088680149056017398834228515625e-10;

_596 replace with --> _596 = (double) _1147;

_597 replace with --> _597 = _596 * 2.16840434699049278538069582359390854997549524796340847388e-19;

_598 replace with --> _598 = _594 + _597;

_600 replace with --> _600 = _617 * 107374182;

_608 replace with --> _608 = prng_state_store_z1_lsm.9_1313 * 107374182;

_615 replace with --> _615 = prng_state_store_z5_lsm.11_1311 * 104480;

_616 replace with --> _616 = _609 + _615;

_618 replace with --> _618 = prng_state_store_z4_lsm.13_1309 * 104480;

_619 replace with --> _619 = _601 + _618;

_623 replace with --> _623 = ts.tv_nsec;

_624 replace with --> _624 = (double) _623;

_625 replace with --> _625 = tic_ts.tv_nsec;

_626 replace with --> _626 = (double) _625;

_627 replace with --> _627 = _624 - _626;

_629 replace with --> _629 = ts.tv_sec;

_630 replace with --> _630 = (double) _629;

_631 replace with --> _631 = tic_ts.tv_sec;

_632 replace with --> _632 = (double) _631;

_633 replace with --> _633 = _630 - _632;

_636 replace with --> _636 = (long unsigned int) _575;

_637 replace with --> _637 = _636 * 8;

_638 replace with --> _638 = bfs_tree_622 + _637;

_639 replace with --> _639 = *_638;

_643 replace with --> _643 = _640 * 8;

_647 replace with --> _647 = _576 + _839;

_660 replace with --> _660 = i_655 < 0;

_661 replace with --> _661 = j_659 < 0;

_662 replace with --> _662 = _660 | _661;

_664 replace with --> _664 = _574 >= j_659;

_665 replace with --> _665 = _663 & _664;

_666 replace with --> _666 = _574 < j_659;

_667 replace with --> _667 = _574 >= i_655;

_668 replace with --> _668 = _666 & _667;

_670 replace with --> _670 = err_788 != 0;

_671 replace with --> _671 = _663 | _670;

_672 replace with --> _672 = (long unsigned int) i_655;

_674 replace with --> _674 = bfs_tree_622 + _673;

_676 replace with --> _676 = (long unsigned int) j_659;

_678 replace with --> _678 = bfs_tree_622 + _677;

_687 replace with --> _687 = seen_edge_794 + _673;

_689 replace with --> _689 = seen_edge_794 + _677;

_690 replace with --> _690 = level_644 + _673;

_691 replace with --> _691 = *_690;

_692 replace with --> _692 = level_644 + _677;

_693 replace with --> _693 = *_692;

lvldiff_694 replace with --> lvldiff_694 = _691 - _693;

_695 replace with --> _695 = (unsigned long) lvldiff_694;

_696 replace with --> _696 = _695 + 1;

_702 replace with --> _702 = err_325 == 0;

_704 replace with --> _704 = k_298 != _575;

_705 replace with --> _705 = _702 & _704;

_708 replace with --> _708 = _576 + 8;

_711 replace with --> _711 = MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B];

_717 replace with --> _717 = (long int) nedge_traversed_1191;

_733 replace with --> _733 = *_1073;

_737 replace with --> _737 = (long int) _1048;

_738 replace with --> _738 = -_737;

_742 replace with --> _742 = _1412 >> 3;

_743 replace with --> _743 = ivtmp_1260 * 16;

_744 replace with --> _744 = (unsigned int) ivtmp.94_1264;

_746 replace with --> _746 = MEM[base: _745, offset: 0B];

_748 replace with --> _748 = _744 + 1;

_753 replace with --> _753 = NBFS;

_756 replace with --> _756 = (long unsigned int) parent_1334;

_757 replace with --> _757 = level_644 + _750;

_772 replace with --> _772 = (long unsigned int) prephitmp_1348;

_777 replace with --> _777 = lastlvl_776 + 1;

_783 replace with --> _783 = (long unsigned int) prephitmp_1356;

_784 replace with --> _784 = level_644 + _779;

_839 replace with --> _839 = _1402 + 24;

_847 replace with --> _847 = nv_635 > nhop_755;

_1048 replace with --> _1048 = _575 != 0;

_1073 replace with --> _1073 = bfs_tree_622 + _1074;

_1074 replace with --> _1074 = _1076 * 8;

_1076 replace with --> _1076 = (long unsigned int) j_659;

_1098 replace with --> _1098 = _574 < j_659;

_1105 replace with --> _1105 = _1098 & _1106;

_1106 replace with --> _1106 = _574 >= i_655;

_1118 replace with --> _1118 = _847 & _1119;

_1119 replace with --> _1119 = _758 < 0;

_1140 replace with --> _1140 = _1429 * 8;

_1146 replace with --> _1146 = (signed long) _617;

_1147 replace with --> _1147 = (signed long) _620;

_1193 replace with --> _1193 = VERBOSE;

_1252 replace with --> _1252 = (long int) _1253;

_1253 replace with --> _1253 = _501 - ivtmp.101_1291;

_1257 replace with --> _1257 = _575 != 1;

_1265 replace with --> _1265 = _1266 * 8;

_1266 replace with --> _1266 = niters.29_648 + prologue_after_cost_adjust.32_780;

_1268 replace with --> _1268 = -_1270;

_1270 replace with --> _1270 = (long int) _1272;

_1272 replace with --> _1272 = _575 != 2;

vect__599.46_1273 replace with --> vect__599.46_1273 = -vect_patt_647.45_1275;

vect_patt_647.45_1275 replace with --> vect_patt_647.45_1275 = VIEW_CONVERT_EXPR<vector(2) long int>(vect_patt_839.41_1399);

_1315 replace with --> _1315 = (long int) ratio_mult_vf.35_1337;

_1321 replace with --> _1321 = _1363 * 8;

_1325 replace with --> _1325 = _1364 >> 1;

pretmp_1332 replace with --> pretmp_1332 = bfs_tree_622 + _750;

pretmp_1333 replace with --> pretmp_1333 = MEM[(const int64_t *)pretmp_1332];

_1336 replace with --> _1336 = level_644 + _1321;

stmp_var_.37_1340 replace with --> stmp_var_.37_1340 = k_1365 + 1;

_1343 replace with --> _1343 = _575 != k_1352;

_1344 replace with --> _1344 = _1357 + 1;

pretmp_1346 replace with --> pretmp_1346 = bfs_tree_622 + _768;

_1353 replace with --> _1353 = (long int) _1343;

pretmp_1354 replace with --> pretmp_1354 = bfs_tree_622 + _779;

_1357 replace with --> _1357 = (unsigned long) _574;

_1362 replace with --> _1362 = -_1353;

_1363 replace with --> _1363 = (long unsigned int) k_1352;

_1364 replace with --> _1364 = niters.33_1004 + 18446744073709551614;

_1368 replace with --> _1368 = (unsigned long) _1108;

vect_patt_839.41_1399 replace with --> vect_patt_839.41_1399 = VEC_COND_EXPR <vect_cst_.42_1339 != vect_vec_iv_.40_1314, { 1, 1 }, { 0, 0 }>;

_1401 replace with --> _1401 = _333 >> 1;

_1402 replace with --> _1402 = _1401 * 16;

_1404 replace with --> _1404 = -_1405;

_1405 replace with --> _1405 = (long int) _1257;

_1407 replace with --> _1407 = _1409 & 1;

_1409 replace with --> _1409 = -_742;

_1412 replace with --> _1412 = _1426 & 15;

_1429 replace with --> _1429 = _78 + 1;

_1441 replace with --> _1441 = MAX_EXPR <_574, 0>;

_1517 replace with --> _1517 = VERBOSE;

_1520 replace with --> _1520 = prephitmp_1479 * nverts_1481;

_1523 replace with --> _1523 = VERBOSE;


main (int argc, char * * argv)
{
  unsigned long ivtmp.134;
  unsigned long ivtmp.110;
  unsigned long ivtmp.101;
  unsigned long ivtmp.94;
  unsigned long ivtmp.84;
  unsigned long ivtmp.64;
  vector(2) long int * vectp.48;
  vector(2) long int vect__599.46;
  vector(2) long int vect_patt_647.45;
  vector(2) long int vect_cst_.42;
  vector(2) unsigned long vect_patt_839.41;
  vector(2) long int vect_vec_iv_.40;
  vector(2) long int vect_cst_.38;
  long int stmp_var_.37;
  unsigned long ratio_mult_vf.35;
  unsigned long bnd.34;
  unsigned long niters.33;
  unsigned long prologue_after_cost_adjust.32;
  unsigned long prolog_loop_niters.31;
  unsigned long niters.29;
  uint_fast32_t prng_state_store_z2_lsm.17;
  uint_fast32_t prng_state_store_z3_lsm.15;
  uint_fast32_t prng_state_store_z4_lsm.13;
  uint_fast32_t prng_state_store_z5_lsm.11;
  bool prng_state_store_z1_lsm.10;
  uint_fast32_t prng_state_store_z1_lsm.9;
  long unsigned int state$z5;
  long unsigned int state$z2;
  long unsigned int state$z1;
  int64_t k;
  int64_t parent;
  int64_t nhop;
  int64_t lastlvl;
  static const char __PRETTY_FUNCTION__[15] = "compute_levels";
  int err;
  int nedge_traversed;
  int64_t * restrict seen_edge;
  int64_t * restrict level;
  const int64_t nv;
  int64_t k;
  const int64_t i;
  const int64_t j;
  int64_t lvldiff;
  double out;
  struct timespec ts;
  int m;
  int err;
  int64_t k;
  int64_t t;
  ssize_t sz;
  int64_t * bfs_tree;
  int64_t max_bfsvtx;
  static const char __PRETTY_FUNCTION__[8] = "run_bfs";
  uint64_t v;
  uint64_t x;
  uint64_t x;
  uint64_t v;
  uint64_t x;
  uint64_t x;
  uint32_t val;
  uint_least8_t val;
  int byte_index;
  uint_least64_t exponent_middle;
  int64_t base_tgt;
  int64_t base_src;
  int64_t nverts;
  int64_t start_edge;
  struct mrg_state new_state;
  struct mrg_state new_state;
  uint64_t val1;
  uint64_t val0;
  struct packed_edge * edges;
  long int seed;
  int c;
  int err;
  int nset;
  int whichset;
  long double sum;
  ssize_t sz;
  static const char __PRETTY_FUNCTION__[5] = "main";
  int64_t desired_nedge;
  int _1;
  long int _11;
  unsigned int _12;
  long int _13;
  long int _17;
  char * _19;
  int _20;
  struct _IO_FILE * _21;
  int _22;
  long unsigned int _24;
  long unsigned int _25;
  struct packed_edge * _30;
  long int _31;
  long int _32;
  int _33;
  double _34;
  double _35;
  double _36;
  double _39;
  long int _42;
  int _43;
  long unsigned int _44;
  double _47;
  int _49;
  struct _IO_FILE * _50;
  long int _52;
  long unsigned int _53;
  long unsigned int _54;
  struct packed_edge * _56;
  struct packed_edge * _61;
  long int _63;
  long int _64;
  long int _65;
  double _66;
  double _67;
  double _68;
  double _69;
  double _70;
  double _71;
  int _72;
  int _76;
  sizetype _78;
  long int _80;
  char * _89;
  long unsigned int _101;
  void * _103;
  void * _112;
  int _113;
  char * _117;
  char * _119;
  char * _120;
  struct _IO_FILE * _121;
  char * _122;
  char * _123;
  struct _IO_FILE * _124;
  int * _125;
  char * _126;
  long int _127;
  int _128;
  struct _IO_FILE * _129;
  char * _130;
  long int _131;
  struct _IO_FILE * _132;
  int * _133;
  char * _134;
  long int _135;
  int _136;
  struct _IO_FILE * _137;
  char * _138;
  long int _139;
  struct _IO_FILE * _140;
  int * _141;
  char * _142;
  double _143;
  int _145;
  struct _IO_FILE * _146;
  int _147;
  struct _IO_FILE * _148;
  char * _149;
  double _150;
  struct _IO_FILE * _151;
  int * _155;
  char * _156;
  double _157;
  int _158;
  struct _IO_FILE * _159;
  int _160;
  struct _IO_FILE * _161;
  char * _162;
  double _163;
  struct _IO_FILE * _164;
  int * _167;
  char * _168;
  double _169;
  int _170;
  struct _IO_FILE * _171;
  int _172;
  struct _IO_FILE * _173;
  char * _174;
  double _175;
  struct _IO_FILE * _176;
  int * _179;
  char * _180;
  double _181;
  int _182;
  struct _IO_FILE * _183;
  int _184;
  struct _IO_FILE * _185;
  char * _186;
  double _187;
  struct _IO_FILE * _188;
  struct _IO_FILE * _191;
  double _193;
  double _194;
  double _195;
  double _196;
  double _197;
  double _198;
  double _199;
  double _200;
  double _201;
  double _202;
  double _203;
  double _204;
  double _205;
  double _206;
  double _207;
  double _208;
  double _209;
  double _210;
  double _211;
  double _212;
  double _213;
  double _214;
  double _215;
  double _216;
  struct _IO_FILE * _217;
  double _218;
  double _219;
  double _220;
  double _221;
  struct _IO_FILE * _222;
  double _223;
  double _224;
  double _225;
  double _226;
  double _228;
  long double _229;
  double _231;
  long double _232;
  double _234;
  long double _235;
  long double _237;
  double _238;
  long double _239;
  double _240;
  long double _241;
  double _242;
  double _243;
  double _244;
  double _245;
  int * _266;
  char * _267;
  int _269;
  bool _270;
  long unsigned int _272;
  long unsigned int _273;
  long unsigned int _274;
  long unsigned int _275;
  long unsigned int _276;
  long unsigned int _277;
  long unsigned int _278;
  long unsigned int _279;
  long unsigned int _281;
  long unsigned int _282;
  long unsigned int _283;
  long unsigned int _284;
  long unsigned int _286;
  long unsigned int _302;
  long unsigned int _304;
  long unsigned int _305;
  long unsigned int _312;
  long unsigned int _313;
  long unsigned int _315;
  long unsigned int _317;
  long unsigned int _318;
  long unsigned int _319;
  long unsigned int _320;
  long unsigned int _322;
  bool _323;
  bool _324;
  long int prephitmp_329;
  unsigned long _333;
  long unsigned int prephitmp_348;
  int _352;
  const struct mrg_transition_matrix * _354;
  int64_t * _363;
  long int prephitmp_364;
  long unsigned int _368;
  long unsigned int _379;
  long unsigned int _380;
  long unsigned int prephitmp_382;
  long unsigned int _386;
  long unsigned int _387;
  long unsigned int _388;
  long unsigned int _391;
  long unsigned int _392;
  long unsigned int _398;
  long unsigned int _399;
  long unsigned int _400;
  long unsigned int _407;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _412;
  long unsigned int _413;
  long unsigned int _414;
  long unsigned int _415;
  long unsigned int _417;
  long unsigned int _418;
  long unsigned int _419;
  long unsigned int _420;
  long unsigned int _424;
  long unsigned int _428;
  long unsigned int _429;
  long unsigned int _430;
  long unsigned int _431;
  long unsigned int _433;
  long unsigned int _434;
  long unsigned int _435;
  long unsigned int _436;
  long unsigned int _438;
  long unsigned int _439;
  long unsigned int _440;
  long unsigned int _441;
  long unsigned int _444;
  long int _445;
  long unsigned int _447;
  long unsigned int _449;
  long unsigned int _452;
  long unsigned int _453;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _462;
  long unsigned int _463;
  long unsigned int _464;
  long unsigned int _465;
  int _467;
  long unsigned int _469;
  long unsigned int _470;
  long unsigned int _473;
  long unsigned int _474;
  long unsigned int _475;
  long unsigned int _476;
  long unsigned int _478;
  long unsigned int _479;
  long unsigned int _480;
  long unsigned int _481;
  long unsigned int _483;
  long unsigned int _484;
  long unsigned int _485;
  long unsigned int _486;
  long unsigned int _489;
  long int _490;
  struct _IO_FILE * _491;
  struct packed_edge * _492;
  long int _493;
  double _495;
  int _496;
  struct _IO_FILE * _497;
  struct _IO_FILE * _498;
  char * _499;
  long int _500;
  long unsigned int _501;
  long unsigned int _502;
  struct packed_edge * _510;
  sizetype _512;
  void * _513;
  long int _515;
  long int _516;
  long unsigned int _517;
  long unsigned int _518;
  int * _519;
  long unsigned int _520;
  long unsigned int _521;
  int * _522;
  long int _524;
  int _531;
  double _534;
  double _535;
  int _538;
  double _539;
  int _543;
  struct _IO_FILE * _546;
  struct _IO_FILE * _547;
  int _548;
  int _549;
  long unsigned int _550;
  long unsigned int _551;
  long int _554;
  long int _558;
  long unsigned int _559;
  long unsigned int _560;
  long int _563;
  int _565;
  struct _IO_FILE * _566;
  long int _567;
  int _570;
  struct _IO_FILE * _571;
  int _572;
  struct _IO_FILE * _573;
  long int _574;
  long int _575;
  struct packed_edge * _576;
  long int _577;
  struct _IO_FILE * _580;
  struct _IO_FILE * _582;
  long int _583;
  int _585;
  sizetype _592;
  double _593;
  double _594;
  double _596;
  double _597;
  double _598;
  long unsigned int _600;
  long unsigned int _601;
  long unsigned int _608;
  long unsigned int _609;
  long unsigned int _615;
  long unsigned int _616;
  long unsigned int _617;
  long unsigned int _618;
  long unsigned int _619;
  long unsigned int _620;
  long int _623;
  double _624;
  long int _625;
  double _626;
  double _627;
  long int _629;
  double _630;
  long int _631;
  double _632;
  double _633;
  long unsigned int _636;
  long unsigned int _637;
  int64_t * _638;
  long int _639;
  long unsigned int _640;
  long unsigned int _641;
  long unsigned int _643;
  struct packed_edge * _647;
  unsigned long _649;
  long int _654;
  _Bool _660;
  _Bool _661;
  _Bool _662;
  _Bool _663;
  _Bool _664;
  _Bool _665;
  _Bool _666;
  _Bool _667;
  _Bool _668;
  _Bool _670;
  _Bool _671;
  long unsigned int _672;
  long unsigned int _673;
  int64_t * _674;
  long int _675;
  long unsigned int _676;
  long unsigned int _677;
  int64_t * _678;
  long int _679;
  long unsigned int prephitmp_685;
  int64_t * _687;
  int64_t * _689;
  int64_t * _690;
  long int _691;
  int64_t * _692;
  long int _693;
  unsigned long _695;
  unsigned long _696;
  _Bool _702;
  _Bool _704;
  _Bool _705;
  const int64_t * _708;
  long int _709;
  long int _711;
  long int _715;
  long int _717;
  long unsigned int prephitmp_725;
  long int _733;
  long int _737;
  long int _738;
  unsigned long _741;
  unsigned long _742;
  sizetype _743;
  unsigned int _744;
  int64_t * _745;
  long int _746;
  unsigned int _748;
  long int _749;
  long unsigned int _750;
  int _753;
  long unsigned int _756;
  int64_t * _757;
  long int _758;
  int _759;
  int64_t * _767;
  long unsigned int _768;
  long unsigned int _772;
  long int _773;
  long unsigned int prephitmp_775;
  long int _777;
  long unsigned int _779;
  long unsigned int _783;
  int64_t * _784;
  long unsigned int prephitmp_838;
  sizetype _839;
  bool _847;
  long unsigned int _934;
  long unsigned int _935;
  long unsigned int _936;
  long unsigned int prephitmp_961;
  long unsigned int prephitmp_989;
  long int _1012;
  long unsigned int prephitmp_1035;
  bool _1048;
  int64_t * _1073;
  long unsigned int _1074;
  long unsigned int _1076;
  _Bool _1098;
  _Bool _1105;
  _Bool _1106;
  long int _1108;
  bool _1118;
  bool _1119;
  sizetype _1140;
  signed long _1146;
  signed long _1147;
  long int prephitmp_1156;
  int _1193;
  void * _1250;
  long int _1252;
  unsigned long _1253;
  bool _1257;
  unsigned long ivtmp_1259;
  unsigned long ivtmp_1260;
  long unsigned int _1265;
  long unsigned int _1266;
  long int _1268;
  long int _1270;
  bool _1272;
  sizetype _1276;
  long int pretmp_1286;
  long int _1315;
  long unsigned int _1321;
  unsigned long _1325;
  int64_t * pretmp_1332;
  long int pretmp_1333;
  int64_t * _1336;
  bool _1343;
  unsigned long _1344;
  int64_t * pretmp_1346;
  long int pretmp_1347;
  long int prephitmp_1348;
  long int _1353;
  int64_t * pretmp_1354;
  long int pretmp_1355;
  long int prephitmp_1356;
  unsigned long _1357;
  sizetype _1361;
  long int _1362;
  long unsigned int _1363;
  unsigned long _1364;
  unsigned long _1368;
  long int prephitmp_1395;
  int64_t * _1397;
  void * _1398;
  unsigned long _1401;
  unsigned long _1402;
  long int _1404;
  long int _1405;
  unsigned long _1407;
  unsigned long _1409;
  unsigned long _1412;
  unsigned long _1426;
  sizetype _1429;
  long unsigned int prephitmp_1436;
  long unsigned int prephitmp_1437;
  long unsigned int prephitmp_1438;
  long unsigned int prephitmp_1439;
  long unsigned int prephitmp_1440;
  long int _1441;
  long int prephitmp_1443;
  long int prephitmp_1444;
  long int pretmp_1446;
  long int pretmp_1448;
  long int pretmp_1449;
  long unsigned int prephitmp_1453;
  long unsigned int prephitmp_1454;
  long unsigned int prephitmp_1455;
  long unsigned int prephitmp_1456;
  long unsigned int prephitmp_1457;
  long unsigned int pretmp_1466;
  long unsigned int prephitmp_1467;
  long unsigned int pretmp_1468;
  long unsigned int prephitmp_1469;
  long unsigned int pretmp_1470;
  long unsigned int prephitmp_1471;
  long int pretmp_1472;
  long int prephitmp_1478;
  long int prephitmp_1479;
  int _1517;
  long int _1520;
  int _1523;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (argc_7(D) > 1)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
;;                67
;;                69
  goto <bb 71>;
;;    succ:       71

;;   basic block 4, loop depth 0
;;    pred:       2
  # DEBUG argc => argc_7(D)
  # DEBUG argv => argv_9(D)
  # DEBUG err => 0
  # DEBUG nset => 0
  # DEBUG whichset => 0
  _117 = getenv ("VERBOSE");
  if (_117 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  VERBOSE = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  goto <bb 54>;
;;    succ:       54

;;   basic block 7, loop depth 1
;;    pred:       54
  switch (c_118) <default: <L12>, case 63: <L1>, case 65: <L8>, case 66: <L9>, case 67: <L10>, case 68: <L11>, case 82: <L3>, case 86: <L2>, case 97: <L8>, case 98: <L9>, case 99: <L10>, case 100: <L11>, case 101: <L7>, case 104: <L1>, case 111: <L4>, case 114: <L5>, case 115: <L6>, case 118: <L0>>
;;    succ:       52
;;                9
;;                24
;;                31
;;                38
;;                45
;;                11
;;                10
;;                20
;;                12
;;                14
;;                16
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
<L0>:
  # DEBUG __fmt => "%s version %d\n"
  __printf_chk (1, "%s version %d\n", "Graph500 sequential list", 0);
  # DEBUG __fmt => NULL
  exit (0);
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       7
<L1>:
  # DEBUG __fmt => "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n"
  __printf_chk (1, "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n", 14, 16, 5.6999999999999995115018691649311222136020660400390625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 5.00000000000000444089209850062616169452667236328125e-2);
  # DEBUG __fmt => NULL
  exit (0);
;;    succ:      

;;   basic block 10, loop depth 1
;;    pred:       7
<L2>:
  VERBOSE = 1;
  goto <bb 53>;
;;    succ:       53

;;   basic block 11, loop depth 1
;;    pred:       7
<L3>:
  use_RMAT = 1;
  goto <bb 53>;
;;    succ:       53

;;   basic block 12, loop depth 1
;;    pred:       7
<L4>:
  _119 = optarg;
  _120 = __strdup (_119);
  dumpname = _120;
  if (_120 == 0B)
    goto <bb 13>;
  else
    goto <bb 53>;
;;    succ:       13
;;                53

;;   basic block 13, loop depth 1
;;    pred:       12
  _121 = stderr;
  # DEBUG __stream => _121
  # DEBUG __fmt => "Cannot copy dump file name.\n"
  __fprintf_chk (_121, 1, "Cannot copy dump file name.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => 1
  goto <bb 53>;
;;    succ:       53

;;   basic block 14, loop depth 1
;;    pred:       7
<L5>:
  _122 = optarg;
  _123 = __strdup (_122);
  rootname = _123;
  if (_123 == 0B)
    goto <bb 15>;
  else
    goto <bb 53>;
;;    succ:       15
;;                53

;;   basic block 15, loop depth 1
;;    pred:       14
  _124 = stderr;
  # DEBUG __stream => _124
  # DEBUG __fmt => "Cannot copy BFS root file name.\n"
  __fprintf_chk (_124, 1, "Cannot copy BFS root file name.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => 1
  goto <bb 53>;
;;    succ:       53

;;   basic block 16, loop depth 1
;;    pred:       7
<L6>:
  _125 = __errno_location ();
  *_125 = 0;
  _126 = optarg;
  _127 = strtol (_126, 0B, 10);
  SCALE = _127;
  _128 = *_125;
  if (_128 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       17
;;                18

;;   basic block 17, loop depth 1
;;    pred:       16
  _129 = stderr;
  _130 = optarg;
  # DEBUG __stream => _129
  # DEBUG __fmt => "Error parsing scale %s\n"
  __fprintf_chk (_129, 1, "Error parsing scale %s\n", _130);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       16
;;                17
  # err_249 = PHI <err_192(16), -1(17)>
  # DEBUG err => err_249
  _131 = SCALE;
  if (_131 <= 0)
    goto <bb 19>;
  else
    goto <bb 53>;
;;    succ:       19
;;                53

;;   basic block 19, loop depth 1
;;    pred:       18
  _132 = stderr;
  # DEBUG __stream => _132
  # DEBUG __fmt => "Scale must be non-negative.\n"
  __fprintf_chk (_132, 1, "Scale must be non-negative.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
  goto <bb 53>;
;;    succ:       53

;;   basic block 20, loop depth 1
;;    pred:       7
<L7>:
  _133 = __errno_location ();
  *_133 = 0;
  _134 = optarg;
  _135 = strtol (_134, 0B, 10);
  edgefactor = _135;
  _136 = *_133;
  if (_136 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
;;    succ:       21
;;                22

;;   basic block 21, loop depth 1
;;    pred:       20
  _137 = stderr;
  _138 = optarg;
  # DEBUG __stream => _137
  # DEBUG __fmt => "Error parsing edge factor %s\n"
  __fprintf_chk (_137, 1, "Error parsing edge factor %s\n", _138);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       20
;;                21
  # err_250 = PHI <err_192(20), -1(21)>
  # DEBUG err => err_250
  _139 = edgefactor;
  if (_139 <= 0)
    goto <bb 23>;
  else
    goto <bb 53>;
;;    succ:       23
;;                53

;;   basic block 23, loop depth 1
;;    pred:       22
  _140 = stderr;
  # DEBUG __stream => _140
  # DEBUG __fmt => "Edge factor must be non-negative.\n"
  __fprintf_chk (_140, 1, "Edge factor must be non-negative.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
  goto <bb 53>;
;;    succ:       53

;;   basic block 24, loop depth 1
;;    pred:       7
<L8>:
  _141 = __errno_location ();
  *_141 = 0;
  _142 = optarg;
  _143 = strtod (_142, 0B);
  A = _143;
  _145 = whichset_144 & 1;
  if (_145 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
;;    succ:       25
;;                26

;;   basic block 25, loop depth 1
;;    pred:       24
  _146 = stderr;
  # DEBUG __stream => _146
  # DEBUG __fmt => "A already set\n"
  __fprintf_chk (_146, 1, "A already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       26

;;   basic block 26, loop depth 1
;;    pred:       24
;;                25
  # err_251 = PHI <err_192(24), -1(25)>
  # DEBUG err => err_251
  _147 = *_141;
  if (_147 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;
;;    succ:       27
;;                28

;;   basic block 27, loop depth 1
;;    pred:       26
  _148 = stderr;
  _149 = optarg;
  # DEBUG __stream => _148
  # DEBUG __fmt => "Error parsing A %s\n"
  __fprintf_chk (_148, 1, "Error parsing A %s\n", _149);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       28

;;   basic block 28, loop depth 1
;;    pred:       26
;;                27
  # err_252 = PHI <err_251(26), -1(27)>
  # DEBUG err => err_252
  _150 = A;
  if (_150 < 0.0)
    goto <bb 29>;
  else
    goto <bb 30>;
;;    succ:       29
;;                30

;;   basic block 29, loop depth 1
;;    pred:       28
  _151 = stderr;
  # DEBUG __stream => _151
  # DEBUG __fmt => "A must be non-negative\n"
  __fprintf_chk (_151, 1, "A must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       30

;;   basic block 30, loop depth 1
;;    pred:       28
;;                29
  # err_253 = PHI <err_252(28), -1(29)>
  # DEBUG err => err_253
  whichset_152 = whichset_144 | 1;
  # DEBUG whichset => whichset_152
  nset_154 = nset_153 + 1;
  # DEBUG nset => nset_154
  goto <bb 53>;
;;    succ:       53

;;   basic block 31, loop depth 1
;;    pred:       7
<L9>:
  _155 = __errno_location ();
  *_155 = 0;
  _156 = optarg;
  _157 = strtod (_156, 0B);
  B = _157;
  _158 = whichset_144 & 2;
  if (_158 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
;;    succ:       32
;;                33

;;   basic block 32, loop depth 1
;;    pred:       31
  _159 = stderr;
  # DEBUG __stream => _159
  # DEBUG __fmt => "B already set\n"
  __fprintf_chk (_159, 1, "B already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       33

;;   basic block 33, loop depth 1
;;    pred:       31
;;                32
  # err_254 = PHI <err_192(31), -1(32)>
  # DEBUG err => err_254
  _160 = *_155;
  if (_160 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;
;;    succ:       34
;;                35

;;   basic block 34, loop depth 1
;;    pred:       33
  _161 = stderr;
  _162 = optarg;
  # DEBUG __stream => _161
  # DEBUG __fmt => "Error parsing B %s\n"
  __fprintf_chk (_161, 1, "Error parsing B %s\n", _162);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       35

;;   basic block 35, loop depth 1
;;    pred:       33
;;                34
  # err_255 = PHI <err_254(33), -1(34)>
  # DEBUG err => err_255
  _163 = B;
  if (_163 < 0.0)
    goto <bb 36>;
  else
    goto <bb 37>;
;;    succ:       36
;;                37

;;   basic block 36, loop depth 1
;;    pred:       35
  _164 = stderr;
  # DEBUG __stream => _164
  # DEBUG __fmt => "B must be non-negative\n"
  __fprintf_chk (_164, 1, "B must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       37

;;   basic block 37, loop depth 1
;;    pred:       35
;;                36
  # err_256 = PHI <err_255(35), -1(36)>
  # DEBUG err => err_256
  whichset_165 = whichset_144 | 2;
  # DEBUG whichset => whichset_165
  nset_166 = nset_153 + 1;
  # DEBUG nset => nset_166
  goto <bb 53>;
;;    succ:       53

;;   basic block 38, loop depth 1
;;    pred:       7
<L10>:
  _167 = __errno_location ();
  *_167 = 0;
  _168 = optarg;
  _169 = strtod (_168, 0B);
  C = _169;
  _170 = whichset_144 & 4;
  if (_170 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
;;    succ:       39
;;                40

;;   basic block 39, loop depth 1
;;    pred:       38
  _171 = stderr;
  # DEBUG __stream => _171
  # DEBUG __fmt => "C already set\n"
  __fprintf_chk (_171, 1, "C already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       40

;;   basic block 40, loop depth 1
;;    pred:       38
;;                39
  # err_257 = PHI <err_192(38), -1(39)>
  # DEBUG err => err_257
  _172 = *_167;
  if (_172 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 1
;;    pred:       40
  _173 = stderr;
  _174 = optarg;
  # DEBUG __stream => _173
  # DEBUG __fmt => "Error parsing C %s\n"
  __fprintf_chk (_173, 1, "Error parsing C %s\n", _174);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       42

;;   basic block 42, loop depth 1
;;    pred:       40
;;                41
  # err_258 = PHI <err_257(40), -1(41)>
  # DEBUG err => err_258
  _175 = C;
  if (_175 < 0.0)
    goto <bb 43>;
  else
    goto <bb 44>;
;;    succ:       43
;;                44

;;   basic block 43, loop depth 1
;;    pred:       42
  _176 = stderr;
  # DEBUG __stream => _176
  # DEBUG __fmt => "C must be non-negative\n"
  __fprintf_chk (_176, 1, "C must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       44

;;   basic block 44, loop depth 1
;;    pred:       42
;;                43
  # err_259 = PHI <err_258(42), -1(43)>
  # DEBUG err => err_259
  whichset_177 = whichset_144 | 4;
  # DEBUG whichset => whichset_177
  nset_178 = nset_153 + 1;
  # DEBUG nset => nset_178
  goto <bb 53>;
;;    succ:       53

;;   basic block 45, loop depth 1
;;    pred:       7
<L11>:
  _179 = __errno_location ();
  *_179 = 0;
  _180 = optarg;
  _181 = strtod (_180, 0B);
  D = _181;
  _182 = whichset_144 & 8;
  if (_182 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
;;    succ:       46
;;                47

;;   basic block 46, loop depth 1
;;    pred:       45
  _183 = stderr;
  # DEBUG __stream => _183
  # DEBUG __fmt => "D already set\n"
  __fprintf_chk (_183, 1, "D already set\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       47

;;   basic block 47, loop depth 1
;;    pred:       45
;;                46
  # err_260 = PHI <err_192(45), -1(46)>
  # DEBUG err => err_260
  _184 = *_179;
  if (_184 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
;;    succ:       48
;;                49

;;   basic block 48, loop depth 1
;;    pred:       47
  _185 = stderr;
  _186 = optarg;
  # DEBUG __stream => _185
  # DEBUG __fmt => "Error parsing D %s\n"
  __fprintf_chk (_185, 1, "Error parsing D %s\n", _186);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       49

;;   basic block 49, loop depth 1
;;    pred:       47
;;                48
  # err_261 = PHI <err_260(47), -1(48)>
  # DEBUG err => err_261
  _187 = D;
  if (_187 < 0.0)
    goto <bb 50>;
  else
    goto <bb 51>;
;;    succ:       50
;;                51

;;   basic block 50, loop depth 1
;;    pred:       49
  _188 = stderr;
  # DEBUG __stream => _188
  # DEBUG __fmt => "D must be non-negative\n"
  __fprintf_chk (_188, 1, "D must be non-negative\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       51

;;   basic block 51, loop depth 1
;;    pred:       49
;;                50
  # err_262 = PHI <err_261(49), -1(50)>
  # DEBUG err => err_262
  whichset_189 = whichset_144 | 8;
  # DEBUG whichset => whichset_189
  nset_190 = nset_153 + 1;
  # DEBUG nset => nset_190
  goto <bb 53>;
;;    succ:       53

;;   basic block 52, loop depth 1
;;    pred:       7
<L12>:
  _191 = stderr;
  # DEBUG __stream => _191
  # DEBUG __fmt => "Unrecognized option\n"
  __fprintf_chk (_191, 1, "Unrecognized option\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  # DEBUG err => -1
;;    succ:       53

;;   basic block 53, loop depth 1
;;    pred:       12
;;                11
;;                10
;;                52
;;                51
;;                44
;;                37
;;                30
;;                23
;;                22
;;                19
;;                18
;;                15
;;                14
;;                13
  # err_264 = PHI <err_192(12), err_192(11), err_192(10), -1(52), err_262(51), err_259(44), err_256(37), err_253(30), -1(23), err_250(22), -1(19), err_249(18), 1(15), err_192(14), 1(13)>
  # nset_263 = PHI <nset_153(12), nset_153(11), nset_153(10), nset_153(52), nset_190(51), nset_178(44), nset_166(37), nset_154(30), nset_153(23), nset_153(22), nset_153(19), nset_153(18), nset_153(15), nset_153(14), nset_153(13)>
  # whichset_974 = PHI <whichset_144(12), whichset_144(11), whichset_144(10), whichset_144(52), whichset_189(51), whichset_177(44), whichset_165(37), whichset_152(30), whichset_144(23), whichset_144(22), whichset_144(19), whichset_144(18), whichset_144(15), whichset_144(14), whichset_144(13)>
;;    succ:       54

;;   basic block 54, loop depth 1
;;    pred:       6
;;                53
  # err_192 = PHI <0(6), err_264(53)>
  # nset_153 = PHI <0(6), nset_263(53)>
  # whichset_144 = PHI <0(6), whichset_974(53)>
  # DEBUG whichset => whichset_144
  # DEBUG nset => nset_153
  # DEBUG err => err_192
  c_118 = getopt (argc_7(D), argv_9(D), "v?hRs:e:A:a:B:b:C:c:D:d:Vo:r:");
  # DEBUG c => c_118
  if (c_118 != -1)
    goto <bb 7>;
  else
    goto <bb 55>;
;;    succ:       7
;;                55

;;   basic block 55, loop depth 0
;;    pred:       54
  if (err_192 != 0)
    goto <bb 56>;
  else
    goto <bb 57>;
;;    succ:       56
;;                57

;;   basic block 56, loop depth 0
;;    pred:       55
  exit (1);
;;    succ:      

;;   basic block 57, loop depth 0
;;    pred:       55
  if (nset_153 == 3)
    goto <bb 58>;
  else
    goto <bb 69>;
;;    succ:       58
;;                69

;;   basic block 58, loop depth 0
;;    pred:       57
  switch (whichset_144) <default: <L17>, case 7: <L13>, case 11: <L14>, case 13: <L15>, case 14: <L16>>
;;    succ:       63
;;                59
;;                60
;;                61
;;                62

;;   basic block 59, loop depth 0
;;    pred:       58
<L13>:
  _193 = A;
  _194 = B;
  _195 = _193 + _194;
  _196 = C;
  _197 = _195 + _196;
  _198 = 1.0e+0 - _197;
  D = _198;
  goto <bb 64>;
;;    succ:       64

;;   basic block 60, loop depth 0
;;    pred:       58
<L14>:
  _199 = A;
  _200 = B;
  _201 = _199 + _200;
  _202 = D;
  _203 = _201 + _202;
  _204 = 1.0e+0 - _203;
  C = _204;
  goto <bb 64>;
;;    succ:       64

;;   basic block 61, loop depth 0
;;    pred:       58
<L15>:
  _205 = A;
  _206 = C;
  _207 = _205 + _206;
  _208 = D;
  _209 = _207 + _208;
  _210 = 1.0e+0 - _209;
  B = _210;
  goto <bb 64>;
;;    succ:       64

;;   basic block 62, loop depth 0
;;    pred:       58
<L16>:
  _211 = B;
  _212 = C;
  _213 = _211 + _212;
  _214 = D;
  _215 = _213 + _214;
  _216 = 1.0e+0 - _215;
  A = _216;
  goto <bb 64>;
;;    succ:       64

;;   basic block 63, loop depth 0
;;    pred:       58
<L17>:
  _217 = stderr;
  # DEBUG __stream => _217
  # DEBUG __fmt => "Impossible combination of three bits...\n"
  __fprintf_chk (_217, 1, "Impossible combination of three bits...\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 64, loop depth 0
;;    pred:       59
;;                60
;;                61
;;                62
  _218 = A;
  if (_218 < 0.0)
    goto <bb 68>;
  else
    goto <bb 65>;
;;    succ:       68
;;                65

;;   basic block 65, loop depth 0
;;    pred:       64
  _219 = B;
  if (_219 < 0.0)
    goto <bb 68>;
  else
    goto <bb 66>;
;;    succ:       68
;;                66

;;   basic block 66, loop depth 0
;;    pred:       65
  _220 = C;
  if (_220 < 0.0)
    goto <bb 68>;
  else
    goto <bb 67>;
;;    succ:       68
;;                67

;;   basic block 67, loop depth 0
;;    pred:       66
  _221 = D;
  if (_221 < 0.0)
    goto <bb 68>;
  else
    goto <bb 3>;
;;    succ:       68
;;                3

;;   basic block 68, loop depth 0
;;    pred:       65
;;                64
;;                67
;;                66
  _222 = stderr;
  _223 = B;
  _224 = C;
  _225 = D;
  # DEBUG __stream => _222
  # DEBUG __fmt => "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n"
  __fprintf_chk (_222, 1, "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n", _218, _223, _224, _225);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 69, loop depth 0
;;    pred:       57
  if (nset_153 != 0)
    goto <bb 70>;
  else
    goto <bb 3>;
;;    succ:       70
;;                3

;;   basic block 70, loop depth 0
;;    pred:       69
  _226 = A;
  sum_227 = (long double) _226;
  # DEBUG sum => sum_227
  _228 = B;
  _229 = (long double) _228;
  sum_230 = sum_227 + _229;
  # DEBUG sum => sum_230
  _231 = C;
  _232 = (long double) _231;
  sum_233 = sum_230 + _232;
  # DEBUG sum => sum_233
  _234 = D;
  _235 = (long double) _234;
  sum_236 = sum_233 + _235;
  # DEBUG sum => sum_236
  _237 = sum_227 / sum_236;
  _238 = (double) _237;
  A = _238;
  _239 = _229 / sum_236;
  _240 = (double) _239;
  B = _240;
  _241 = _232 / sum_236;
  _242 = (double) _241;
  C = _242;
  _243 = _238 + _240;
  _244 = _242 + _243;
  _245 = 1.0e+0 - _244;
  D = _245;
;;    succ:       71

;;   basic block 71, loop depth 0
;;    pred:       3
;;                70
  _11 = SCALE;
  _12 = (unsigned int) _11;
  _13 = 1 << _12;
  nvtx_scale = _13;
  # DEBUG seed => -1
  _89 = getenv ("SEED");
  if (_89 != 0B)
    goto <bb 72>;
  else
    goto <bb 272>;
;;    succ:       72
;;                272

;;   basic block 72, loop depth 0
;;    pred:       71
  _266 = __errno_location ();
  *_266 = 0;
  _267 = getenv ("SEED");
  seed_268 = strtol (_267, 0B, 10);
  # DEBUG seed => seed_268
  _269 = *_266;
  if (_269 != 0)
    goto <bb 272>;
  else
    goto <bb 73>;
;;    succ:       272
;;                73

;;   basic block 73, loop depth 0
;;    pred:       72
  # DEBUG seed => seed_268
  if (seed_268 < 0)
    goto <bb 273>;
  else
    goto <bb 74>;
;;    succ:       273
;;                74

;;   basic block 74, loop depth 0
;;    pred:       73
;;                273
  # seed_271 = PHI <seed_268(73), 3737844653(273)>
  # DEBUG seed => seed_271
  _272 = (long unsigned int) seed_271;
  userseed = _272;
  # DEBUG userseed => _272
  # DEBUG seed => &prng_seed
  _273 = _272 & 1073741823;
  _274 = _273 + 1;
  MEM[(uint_fast32_t *)&prng_seed] = _274;
  _275 = _272 >> 30;
  _276 = _275 & 1073741823;
  _277 = _276 + 1;
  MEM[(uint_fast32_t *)&prng_seed + 8B] = _277;
  MEM[(uint_fast32_t *)&prng_seed + 16B] = _274;
  MEM[(uint_fast32_t *)&prng_seed + 24B] = _277;
  _278 = _272 >> 60;
  _279 = _278 << 4;
  _315 = _278 + 1;
  _281 = _279 + _315;
  MEM[(uint_fast32_t *)&prng_seed + 32B] = _281;
  # DEBUG userseed => NULL
  # DEBUG seed => NULL
  # DEBUG st => &prng_state_store
  # DEBUG seed => &prng_seed
  prng_state_store.z1 = _274;
  prng_state_store.z2 = _277;
  prng_state_store.z3 = _274;
  prng_state_store.z4 = _277;
  prng_state_store.z5 = _281;
  # DEBUG st => NULL
  # DEBUG seed => NULL
  # DEBUG seed => NULL
  _17 = edgefactor;
  desired_nedge_18 = _13 * _17;
  # DEBUG desired_nedge => desired_nedge_18
  if (_13 > desired_nedge_18)
    goto <bb 75>;
  else
    goto <bb 76>;
;;    succ:       75
;;                76

;;   basic block 75, loop depth 0
;;    pred:       74
  __assert_fail ("desired_nedge >= nvtx_scale", "graph500.c", 74, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 76, loop depth 0
;;    pred:       74
  if (_17 > desired_nedge_18)
    goto <bb 77>;
  else
    goto <bb 78>;
;;    succ:       77
;;                78

;;   basic block 77, loop depth 0
;;    pred:       76
  __assert_fail ("desired_nedge >= edgefactor", "graph500.c", 75, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 78, loop depth 0
;;    pred:       76
  _19 = dumpname;
  if (_19 == 0B)
    goto <bb 79>;
  else
    goto <bb 128>;
;;    succ:       79
;;                128

;;   basic block 79, loop depth 0
;;    pred:       78
  _20 = VERBOSE;
  if (_20 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;
;;    succ:       80
;;                81

;;   basic block 80, loop depth 0
;;    pred:       79
  _21 = stderr;
  # DEBUG __stream => _21
  # DEBUG __fmt => "Generating edge list..."
  __fprintf_chk (_21, 1, "Generating edge list...");
;;    succ:       81

;;   basic block 81, loop depth 0
;;    pred:       79
;;                80
  _22 = use_RMAT;
  if (_22 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;
;;    succ:       82
;;                83

;;   basic block 82, loop depth 0
;;    pred:       81
  nedge = desired_nedge_18;
  _24 = (long unsigned int) desired_nedge_18;
  _25 = _24 * 16;
  # DEBUG sz => _25
  _103 = xmalloc (_25);
  # DEBUG sz => NULL
  IJ = _103;
  clock_gettime (1, &tic_ts);
  _30 = IJ;
  _31 = nedge;
  _32 = SCALE;
  _33 = (int) _32;
  _34 = A;
  _35 = B;
  _36 = C;
  rmat_edgelist (_30, _31, _33, _34, _35, _36);
  _39 = toc ();
  generation_time = _39;
  goto <bb 125>;
;;    succ:       125

;;   basic block 83, loop depth 0
;;    pred:       81
  clock_gettime (1, &tic_ts);
  _42 = SCALE;
  _43 = (int) _42;
  _44 = userseed;
  # DEBUG log_numverts => _43
  # DEBUG M => desired_nedge_18
  # DEBUG userseed1 => _44
  # DEBUG userseed2 => _44
  # DEBUG result_ptr_in => &IJ
  # DEBUG nedges_ptr_in => &nedge
  # DEBUG nedges_ptr => &nedge
  # DEBUG result_ptr => &IJ
  # DEBUG userseed1 => _44
  # DEBUG userseed2 => _44
  # DEBUG seed => &seed
  _302 = _44 & 1073741823;
  state$z1_303 = _302 + 1;
  _304 = _44 >> 30;
  _305 = _304 & 1073741823;
  state$z2_306 = _305 + 1;
  _312 = _44 >> 60;
  _313 = _312 << 4;
  _322 = _312 + 1;
  state$z5_316 = _313 + _322;
  # DEBUG userseed1 => NULL
  # DEBUG userseed2 => NULL
  # DEBUG seed => NULL
  nedge = desired_nedge_18;
  _101 = (long unsigned int) desired_nedge_18;
  _286 = _101 * 16;
  edges_287 = xmalloc (_286);
  # DEBUG edges => edges_287
  IJ = edges_287;
  # DEBUG seed => &seed
  # DEBUG logN => _43
  # DEBUG end_edge => desired_nedge_18
  # DEBUG edges => edges_287
  # DEBUG start_edge => 0
  nverts_107 = 1 << _43;
  # DEBUG nverts => nverts_107
  # DEBUG st => &state
  # DEBUG seed => &seed
  # DEBUG state$z1 => state$z1_303
  # DEBUG state$z2 => state$z2_306
  # DEBUG state$z3 => state$z1_303
  # DEBUG state$z4 => state$z2_306
  # DEBUG state$z5 => state$z5_316
  # DEBUG st => NULL
  # DEBUG seed => NULL
  MEM[(struct mrg_state *)&new_state] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;
  mrg_skip.constprop (&new_state, 50, 7);
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _320 = new_state.z1;
  # DEBUG state => NULL
  # DEBUG val0 => NULL
  val0_288 = _320 * 4294967295;
  # DEBUG val0 => val0_288
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _319 = new_state.z1;
  # DEBUG state => NULL
  val0_290 = val0_288 + _319;
  # DEBUG val0 => val0_290
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _318 = new_state.z1;
  # DEBUG state => NULL
  # DEBUG val1 => NULL
  val1_292 = _318 * 4294967295;
  # DEBUG val1 => val1_292
  # DEBUG state => &new_state
  mrg_orig_step (&new_state);
  _317 = new_state.z1;
  # DEBUG state => NULL
  val1_294 = val1_292 + _317;
  # DEBUG val1 => val1_294
  new_state ={v} {CLOBBER};
  # DEBUG ei => 0
  ivtmp.134_507 = (unsigned long) edges_287;
  goto <bb 123>;
;;    succ:       123

;;   basic block 84, loop depth 1
;;    pred:       123
  MEM[(struct mrg_state *)&new_state] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;
  MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;
  MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;
  exponent_middle_296 = (uint_least64_t) start_edge_295;
  # DEBUG state => &new_state
  # DEBUG exponent_high => 0
  # DEBUG exponent_middle => exponent_middle_296
  # DEBUG exponent_low => 0
  # DEBUG byte_index => 0
  # DEBUG exponent_low => 0
  # DEBUG byte_index => 8
  # DEBUG exponent_middle => exponent_middle_296
  if (exponent_middle_296 != 0)
    goto <bb 86>;
  else
    goto <bb 85>;
;;    succ:       86
;;                85

;;   basic block 85, loop depth 1
;;    pred:       84
;;                89
  # DEBUG byte_index => 16
  # DEBUG exponent_high => 0
  # DEBUG state => NULL
  # DEBUG exponent_high => NULL
  # DEBUG exponent_middle => NULL
  # DEBUG byte_index => NULL
  # DEBUG val => NULL
  # DEBUG val => NULL
  # DEBUG val => NULL
  # DEBUG exponent_low => NULL
  # DEBUG D#37 => exponent_middle_296 * 16
  # DEBUG D#36 => edges_287 + D#37
  # DEBUG D#1 => 0
  # DEBUG nverts => nverts_107
  # DEBUG lgN => _43
  # DEBUG st => &new_state
  # DEBUG result => D#36
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  # DEBUG base_tgt => 0
  # DEBUG base_src => 0
  # DEBUG level => NULL
  # DEBUG nverts => nverts_107
  if (nverts_107 > 1)
    goto <bb 90>;
  else
    goto <bb 116>;
;;    succ:       90
;;                116

;;   basic block 86, loop depth 1
;;    pred:       84
  # exponent_middle_1094 = PHI <exponent_middle_296(84)>
  # byte_index_327 = PHI <8(84)>
;;    succ:       87

;;   basic block 87, loop depth 2
;;    pred:       86
;;                89
  # exponent_middle_51 = PHI <exponent_middle_1094(86), exponent_middle_356(89)>
  # byte_index_933 = PHI <byte_index_327(86), byte_index_355(89)>
  # DEBUG byte_index => byte_index_933
  # DEBUG exponent_middle => exponent_middle_51
  val_351 = (uint_least8_t) exponent_middle_51;
  # DEBUG val => val_351
  if (val_351 != 0)
    goto <bb 88>;
  else
    goto <bb 89>;
;;    succ:       88
;;                89

;;   basic block 88, loop depth 2
;;    pred:       87
  _352 = (int) val_351;
  _354 = &mrg_skip_matrices[byte_index_933][_352];
  # DEBUG mat => _354
  # DEBUG state => &new_state
  mrg_apply_transition (_354, &new_state, &new_state);
;;    succ:       89

;;   basic block 89, loop depth 2
;;    pred:       87
;;                88
  byte_index_355 = byte_index_933 + 1;
  # DEBUG byte_index => byte_index_355
  exponent_middle_356 = exponent_middle_51 >> 8;
  # DEBUG exponent_middle => exponent_middle_356
  # DEBUG byte_index => byte_index_355
  # DEBUG exponent_middle => exponent_middle_356
  if (exponent_middle_356 != 0)
    goto <bb 87>;
  else
    goto <bb 85>;
;;    succ:       87
;;                85

;;   basic block 90, loop depth 1
;;    pred:       85
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  _368 = new_state.z1;
  # DEBUG a => _368
  # DEBUG a => _368
  # DEBUG b => 107374182
  if (_368 > 2147483646)
    goto <bb 93>;
  else
    goto <bb 91>;
;;    succ:       93
;;                91

;;   basic block 91, loop depth 1
;;    pred:       90
  _284 = _368 * 107374182;
  _283 = _284 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  _282 = new_state.z5;
  # DEBUG sum => NULL
  # DEBUG a => _282
  # DEBUG sum => _283
  # DEBUG a => _282
  # DEBUG b => 104480
  if (_282 > 2147483646)
    goto <bb 92>;
  else
    goto <bb 98>;
;;    succ:       92
;;                98

;;   basic block 92, loop depth 0
;;    pred:       91
;;                95
  goto <bb 97>;
;;    succ:       97

;;   basic block 93, loop depth 0
;;    pred:       152
;;                90
  # DEBUG D#11 => 107374182
  mod_mul.part.1 ();
;;    succ:      

;;   basic block 94, loop depth 2
;;    pred:       291
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#30 => new_state.z1
  # DEBUG a => D#30
  # DEBUG a => D#30
  # DEBUG b => 107374182
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#30 => new_state.z1
  # DEBUG a => D#30
  # DEBUG a => D#30
  # DEBUG b => 107374182
  _379 = prephitmp_1436 * 107374182;
  _380 = _379 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG D#29 => new_state.z5
  # DEBUG sum => NULL
  # DEBUG a => D#29
  # DEBUG sum => _380
  # DEBUG a => D#29
  # DEBUG b => 104480
  if (prephitmp_1437 > 2147483646)
    goto <bb 95>;
  else
    goto <bb 99>;
;;    succ:       95
;;                99

;;   basic block 95, loop depth 0
;;    pred:       94
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
  goto <bb 92>;
;;    succ:       92

;;   basic block 96, loop depth 0
;;    pred:       101
  new_state.z5 = prephitmp_1454;
  new_state.z4 = prephitmp_1455;
  new_state.z3 = prephitmp_1456;
  new_state.z2 = prephitmp_1457;
  new_state.z1 = prephitmp_1453;
;;    succ:       97

;;   basic block 97, loop depth 0
;;    pred:       158
;;                92
;;                96
;;                156
  __assert_fail ("a <= 0x7FFFFFFE", "generator/mod_arith_64bit.h", 34, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 98, loop depth 1
;;    pred:       91
  pretmp_1466 = new_state.z4;
  pretmp_1468 = new_state.z3;
  pretmp_1470 = new_state.z2;
;;    succ:       99

;;   basic block 99, loop depth 2
;;    pred:       98
;;                94
  # base_src_819 = PHI <0(98), base_src_1482(94)>
  # base_tgt_310 = PHI <0(98), base_tgt_1490(94)>
  # nverts_308 = PHI <nverts_107(98), nverts_1481(94)>
  # _934 = PHI <_368(98), prephitmp_1436(94)>
  # _935 = PHI <_283(98), _380(94)>
  # _936 = PHI <_282(98), prephitmp_1437(94)>
  # prephitmp_1467 = PHI <pretmp_1466(98), prephitmp_1438(94)>
  # prephitmp_1469 = PHI <pretmp_1468(98), prephitmp_1439(94)>
  # prephitmp_1471 = PHI <pretmp_1470(98), prephitmp_1440(94)>
  # DEBUG base_tgt => base_tgt_310
  # DEBUG base_src => base_src_819
  # DEBUG level => NULL
  # DEBUG nverts => nverts_308
  # DEBUG D#9 => _43
  # DEBUG st => &new_state
  # DEBUG level s=> level
  # DEBUG nlevels s=> nlevels
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => _936
  # DEBUG sum => _935
  # DEBUG a => _936
  # DEBUG b => 104480
  _386 = _936 * 104480;
  _387 = _386 + _935;
  _388 = _387 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG val => (uint32_t) _388
  if (_388 <= 7294)
    goto <bb 100>;
  else
    goto <bb 104>;
;;    succ:       100
;;                104

;;   basic block 100, loop depth 2
;;    pred:       99
  # prephitmp_382 = PHI <_388(99)>
  # prephitmp_775 = PHI <prephitmp_1467(99)>
  # prephitmp_838 = PHI <prephitmp_1469(99)>
  # prephitmp_961 = PHI <prephitmp_1471(99)>
  # prephitmp_1035 = PHI <_934(99)>
;;    succ:       101

;;   basic block 101, loop depth 3
;;    pred:       100
;;                102
  # prephitmp_1453 = PHI <prephitmp_382(100), _400(102)>
  # prephitmp_1454 = PHI <prephitmp_775(100), prephitmp_725(102)>
  # prephitmp_1455 = PHI <prephitmp_838(100), prephitmp_685(102)>
  # prephitmp_1456 = PHI <prephitmp_961(100), prephitmp_989(102)>
  # prephitmp_1457 = PHI <prephitmp_1035(100), prephitmp_348(102)>
  # DEBUG state => &new_state
  # DEBUG state => &new_state
  # DEBUG D#33 => new_state.z1
  # DEBUG a => D#33
  # DEBUG a => D#33
  # DEBUG b => 107374182
  _391 = prephitmp_1453 * 107374182;
  _392 = _391 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG D#32 => new_state.z5
  # DEBUG sum => NULL
  # DEBUG a => D#32
  # DEBUG sum => _392
  # DEBUG a => D#32
  # DEBUG b => 104480
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => D#32
  # DEBUG sum => _392
  # DEBUG a => D#32
  # DEBUG b => 104480
  if (prephitmp_1454 > 2147483646)
    goto <bb 96>;
  else
    goto <bb 102>;
;;    succ:       96
;;                102

;;   basic block 102, loop depth 3
;;    pred:       101
  _398 = prephitmp_1454 * 104480;
  _399 = _392 + _398;
  _400 = _399 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG val => (uint32_t) _400
  prephitmp_725 = prephitmp_1455;
  prephitmp_685 = prephitmp_1456;
  prephitmp_989 = prephitmp_1457;
  prephitmp_348 = prephitmp_1453;
  if (_400 <= 7294)
    goto <bb 101>;
  else
    goto <bb 103>;
;;    succ:       101
;;                103

;;   basic block 103, loop depth 2
;;    pred:       102
  val_371 = (uint32_t) _400;
  goto <bb 105>;
;;    succ:       105

;;   basic block 104, loop depth 2
;;    pred:       99
  val_369 = (uint32_t) _388;
;;    succ:       105

;;   basic block 105, loop depth 2
;;    pred:       104
;;                103
  # val_372 = PHI <val_369(104), val_371(103)>
  # prephitmp_1436 = PHI <_388(104), _400(103)>
  # prephitmp_1437 = PHI <prephitmp_1467(104), prephitmp_1455(103)>
  # prephitmp_1438 = PHI <prephitmp_1469(104), prephitmp_1456(103)>
  # prephitmp_1439 = PHI <prephitmp_1471(104), prephitmp_1457(103)>
  # prephitmp_1440 = PHI <_934(104), prephitmp_1453(103)>
  # DEBUG val => val_372
  # DEBUG spk_noise_factor => 0
  # DEBUG adjusted_bc_numerator => 1900
  val_373 = val_372 % 10000;
  # DEBUG val => val_373
  if (val_373 <= 1899)
    goto <bb 280>;
  else
    goto <bb 106>;
;;    succ:       280
;;                106

;;   basic block 106, loop depth 2
;;    pred:       105
  val_374 = val_373 + 4294965396;
  # DEBUG val => val_374
  if (val_374 <= 1899)
    goto <bb 109>;
  else
    goto <bb 107>;
;;    succ:       109
;;                107

;;   basic block 107, loop depth 2
;;    pred:       106
  val_375 = val_373 + 4294963496;
  # DEBUG val => val_375
  if (val_375 <= 5699)
    goto <bb 108>;
  else
    goto <bb 280>;
;;    succ:       108
;;                280

;;   basic block 108, loop depth 2
;;    pred:       107
  goto <bb 280>;
;;    succ:       280

;;   basic block 109, loop depth 2
;;    pred:       106
  # DEBUG st => NULL
  # DEBUG val => NULL
  # DEBUG square => NULL
  # DEBUG src_offset => 1
  # DEBUG tgt_offset => 0
  if (base_tgt_310 < base_src_819)
    goto <bb 110>;
  else
    goto <bb 112>;
;;    succ:       110
;;                112

;;   basic block 110, loop depth 0
;;    pred:       109
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
;;    succ:       111

;;   basic block 111, loop depth 0
;;    pred:       281
;;                110
  __assert_fail ("base_src <= base_tgt", "generator/graph_generator.c", 140, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 112, loop depth 2
;;    pred:       109
  if (base_tgt_310 == base_src_819)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113
;;                114

;;   basic block 113, loop depth 2
;;    pred:       112
  pretmp_1472 = nverts_308 >> 1;
  goto <bb 291>;
;;    succ:       291

;;   basic block 114, loop depth 2
;;    pred:       112
  pretmp_1446 = nverts_308 >> 1;
  goto <bb 291>;
;;    succ:       291

;;   basic block 115, loop depth 1
;;    pred:       291
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
;;    succ:       116

;;   basic block 116, loop depth 1
;;    pred:       115
;;                85
  # base_src_813 = PHI <base_src_1482(115), 0(85)>
  # base_tgt_309 = PHI <base_tgt_1490(115), 0(85)>
  # DEBUG v0 => base_src_813
  # DEBUG lgN => _43
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  v_446 = (uint64_t) base_src_813;
  # DEBUG v => v_446
  _447 = val0_290 + val1_294;
  v_448 = v_446 + _447;
  # DEBUG v => v_448
  _449 = val0_290 | 4979156007449604625;
  v_450 = v_448 * _449;
  # DEBUG v => v_450
  # DEBUG x => v_450
  x_451 = __builtin_bswap64 (v_450);
  # DEBUG x => x_451
  _452 = x_451 >> 4;
  _453 = _452 & 1085102592571150095;
  _454 = x_451 & 1085102592571150095;
  _455 = _454 << 4;
  x_456 = _453 | _455;
  # DEBUG x => x_456
  _457 = x_456 >> 2;
  _458 = _457 & 3689348814741910323;
  _459 = x_456 & 3689348814741910323;
  _460 = _459 << 2;
  x_461 = _458 | _460;
  # DEBUG x => x_461
  _462 = x_461 >> 1;
  _463 = _462 & 6148914691236517205;
  _464 = x_461 & 6148914691236517205;
  _465 = _464 << 1;
  x_466 = _463 | _465;
  # DEBUG x => x_466
  # DEBUG x => NULL
  _467 = 64 - _43;
  v_468 = x_466 >> _467;
  # DEBUG v => v_468
  _469 = v_468 >> _43;
  if (_469 != 0)
    goto <bb 117>;
  else
    goto <bb 118>;
;;    succ:       117
;;                118

;;   basic block 117, loop depth 0
;;    pred:       116
;;                120
  # DEBUG D#12 => base_src_813
  # DEBUG D#13 => _43
  # DEBUG D#14 => val0_290
  # DEBUG D#15 => val1_294
  scramble.part.1 ();
;;    succ:      

;;   basic block 118, loop depth 1
;;    pred:       116
  _470 = val1_294 | 3481428888784487333;
  v_471 = v_468 * _470;
  # DEBUG v => v_471
  # DEBUG x => v_471
  x_472 = __builtin_bswap64 (v_471);
  # DEBUG x => x_472
  _473 = x_472 >> 4;
  _474 = _473 & 1085102592571150095;
  _475 = x_472 & 1085102592571150095;
  _476 = _475 << 4;
  x_477 = _474 | _476;
  # DEBUG x => x_477
  _478 = x_477 >> 2;
  _479 = _478 & 3689348814741910323;
  _480 = x_477 & 3689348814741910323;
  _481 = _480 << 2;
  x_482 = _479 | _481;
  # DEBUG x => x_482
  _483 = x_482 >> 1;
  _484 = _483 & 6148914691236517205;
  _485 = x_482 & 6148914691236517205;
  _486 = _485 << 1;
  x_487 = _484 | _486;
  # DEBUG x => x_487
  # DEBUG x => NULL
  v_488 = x_487 >> _467;
  # DEBUG v => v_488
  _489 = v_488 >> _43;
  if (_489 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;
;;    succ:       119
;;                120

;;   basic block 119, loop depth 0
;;    pred:       118
;;                121
  __assert_fail ("(v >> lgN) == 0", "generator/graph_generator.c", 128, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 120, loop depth 1
;;    pred:       118
  _490 = (long int) v_488;
  # DEBUG v0 => NULL
  # DEBUG lgN => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG x => NULL
  # DEBUG x => NULL
  # DEBUG v => NULL
  # DEBUG v0 => base_tgt_309
  # DEBUG lgN => _43
  # DEBUG val0 => val0_290
  # DEBUG val1 => val1_294
  v_401 = (uint64_t) base_tgt_309;
  # DEBUG v => v_401
  v_403 = v_401 + _447;
  # DEBUG v => v_403
  v_405 = v_403 * _449;
  # DEBUG v => v_405
  # DEBUG x => v_405
  x_406 = __builtin_bswap64 (v_405);
  # DEBUG x => x_406
  _407 = x_406 >> 4;
  _408 = _407 & 1085102592571150095;
  _409 = x_406 & 1085102592571150095;
  _410 = _409 << 4;
  x_411 = _408 | _410;
  # DEBUG x => x_411
  _412 = x_411 >> 2;
  _413 = _412 & 3689348814741910323;
  _414 = x_411 & 3689348814741910323;
  _415 = _414 << 2;
  x_416 = _413 | _415;
  # DEBUG x => x_416
  _417 = x_416 >> 1;
  _418 = _417 & 6148914691236517205;
  _419 = x_416 & 6148914691236517205;
  _420 = _419 << 1;
  x_421 = _418 | _420;
  # DEBUG x => x_421
  # DEBUG x => NULL
  v_423 = x_421 >> _467;
  # DEBUG v => v_423
  _424 = v_423 >> _43;
  if (_424 != 0)
    goto <bb 117>;
  else
    goto <bb 121>;
;;    succ:       117
;;                121

;;   basic block 121, loop depth 1
;;    pred:       120
  v_426 = v_423 * _470;
  # DEBUG v => v_426
  # DEBUG x => v_426
  x_427 = __builtin_bswap64 (v_426);
  # DEBUG x => x_427
  _428 = x_427 >> 4;
  _429 = _428 & 1085102592571150095;
  _430 = x_427 & 1085102592571150095;
  _431 = _430 << 4;
  x_432 = _429 | _431;
  # DEBUG x => x_432
  _433 = x_432 >> 2;
  _434 = _433 & 3689348814741910323;
  _435 = x_432 & 3689348814741910323;
  _436 = _435 << 2;
  x_437 = _434 | _436;
  # DEBUG x => x_437
  _438 = x_437 >> 1;
  _439 = _438 & 6148914691236517205;
  _440 = x_437 & 6148914691236517205;
  _441 = _440 << 1;
  x_442 = _439 | _441;
  # DEBUG x => x_442
  # DEBUG x => NULL
  v_443 = x_442 >> _467;
  # DEBUG v => v_443
  _444 = v_443 >> _43;
  if (_444 != 0)
    goto <bb 119>;
  else
    goto <bb 122>;
;;    succ:       119
;;                122

;;   basic block 122, loop depth 1
;;    pred:       121
  _445 = (long int) v_443;
  # DEBUG v0 => NULL
  # DEBUG lgN => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG x => NULL
  # DEBUG x => NULL
  # DEBUG v => NULL
  # DEBUG p => D#36
  # DEBUG v0 => NULL
  # DEBUG v1 => NULL
  _513 = (void *) ivtmp.134_505;
  MEM[base: _513, offset: 0B] = _490;
  MEM[base: _513, offset: 8B] = _445;
  # DEBUG p => NULL
  # DEBUG v0 => NULL
  # DEBUG v1 => NULL
  # DEBUG nverts => NULL
  # DEBUG lgN => NULL
  # DEBUG st => NULL
  # DEBUG result => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG base_src => NULL
  # DEBUG base_tgt => NULL
  # DEBUG square => NULL
  # DEBUG tgt_offset => NULL
  new_state ={v} {CLOBBER};
  start_edge_301 = start_edge_295 + 1;
  # DEBUG ei => start_edge_301
  ivtmp.134_506 = ivtmp.134_505 + 16;
;;    succ:       123

;;   basic block 123, loop depth 1
;;    pred:       83
;;                122
  # start_edge_295 = PHI <0(83), start_edge_301(122)>
  # ivtmp.134_505 = PHI <ivtmp.134_507(83), ivtmp.134_506(122)>
  # DEBUG ei => start_edge_295
  if (desired_nedge_18 > start_edge_295)
    goto <bb 84>;
  else
    goto <bb 124>;
;;    succ:       84
;;                124

;;   basic block 124, loop depth 0
;;    pred:       123
  # DEBUG D#18 => {CLOBBER}
  # DEBUG state$z1 => D#18
  # DEBUG D#19 => {CLOBBER}
  # DEBUG state$z2 => D#19
  # DEBUG D#20 => {CLOBBER}
  # DEBUG state$z3 => D#20
  # DEBUG D#21 => {CLOBBER}
  # DEBUG state$z4 => D#21
  # DEBUG D#22 => {CLOBBER}
  # DEBUG state$z5 => D#22
  # DEBUG seed => NULL
  # DEBUG logN => NULL
  # DEBUG end_edge => NULL
  # DEBUG edges => NULL
  # DEBUG nverts => NULL
  # DEBUG val0 => NULL
  # DEBUG val1 => NULL
  # DEBUG start_edge => NULL
  # DEBUG log_numverts => NULL
  # DEBUG M => NULL
  # DEBUG userseed1 => NULL
  # DEBUG userseed2 => NULL
  # DEBUG edges => NULL
  # DEBUG nedges_ptr_in => NULL
  # DEBUG result_ptr_in => NULL
  _47 = toc ();
  generation_time = _47;
;;    succ:       125

;;   basic block 125, loop depth 0
;;    pred:       82
;;                124
  _49 = VERBOSE;
  if (_49 != 0)
    goto <bb 127>;
  else
    goto <bb 126>;
;;    succ:       127
;;                126

;;   basic block 126, loop depth 0
;;    pred:       125
;;                133
  goto <bb 135>;
;;    succ:       135

;;   basic block 127, loop depth 0
;;    pred:       125
  _50 = stderr;
  # DEBUG __stream => _50
  # DEBUG __fmt => " done.\n"
  __fprintf_chk (_50, 1, " done.\n");
  goto <bb 133>;
;;    succ:       133

;;   basic block 128, loop depth 0
;;    pred:       78
  # DEBUG __path => _19
  # DEBUG __oflag => 0
  _76 = __open_alias (_19, 0);
  # DEBUG __path => NULL
  # DEBUG __oflag => NULL
  # DEBUG fd => NULL
  if (_76 < 0)
    goto <bb 129>;
  else
    goto <bb 130>;
;;    succ:       129
;;                130

;;   basic block 129, loop depth 0
;;    pred:       128
  perror ("Cannot open input graph file");
  goto <bb 271>;
;;    succ:       271

;;   basic block 130, loop depth 0
;;    pred:       128
  _52 = nedge;
  _53 = (long unsigned int) _52;
  _54 = _53 * 16;
  sz_55 = (ssize_t) _54;
  # DEBUG sz => sz_55
  _56 = IJ;
  # DEBUG __fd => _76
  # DEBUG __buf => _56
  # DEBUG __nbytes => _54
  _80 = __read_alias (_76, _56, _54);
  # DEBUG __fd => NULL
  # DEBUG __buf => NULL
  # DEBUG __nbytes => NULL
  if (sz_55 != _80)
    goto <bb 131>;
  else
    goto <bb 132>;
;;    succ:       131
;;                132

;;   basic block 131, loop depth 0
;;    pred:       130
  perror ("Error reading input graph file");
  goto <bb 271>;
;;    succ:       271

;;   basic block 132, loop depth 0
;;    pred:       130
  close (_76);
;;    succ:       133

;;   basic block 133, loop depth 0
;;    pred:       132
;;                127
  _113 = VERBOSE;
  if (_113 != 0)
    goto <bb 134>;
  else
    goto <bb 126>;
;;    succ:       134
;;                126

;;   basic block 134, loop depth 0
;;    pred:       133
  _491 = stderr;
  # DEBUG __stream => _491
  # DEBUG __fmt => "Creating graph..."
  __fprintf_chk (_491, 1, "Creating graph...");
;;    succ:       135

;;   basic block 135, loop depth 0
;;    pred:       134
;;                126
  clock_gettime (1, &tic_ts);
  _492 = IJ;
  _493 = nedge;
  err_494 = create_graph_from_edgelist (_492, _493);
  # DEBUG err => err_494
  _495 = toc ();
  construction_time = _495;
  _496 = VERBOSE;
  if (_496 != 0)
    goto <bb 136>;
  else
    goto <bb 137>;
;;    succ:       136
;;                137

;;   basic block 136, loop depth 0
;;    pred:       135
  _497 = stderr;
  # DEBUG __stream => _497
  # DEBUG __fmt => "done.\n"
  __fprintf_chk (_497, 1, "done.\n");
;;    succ:       137

;;   basic block 137, loop depth 0
;;    pred:       135
;;                136
  if (err_494 != 0)
    goto <bb 138>;
  else
    goto <bb 139>;
;;    succ:       138
;;                139

;;   basic block 138, loop depth 0
;;    pred:       137
  _498 = stderr;
  # DEBUG __stream => _498
  # DEBUG __fmt => "Failure creating graph.\n"
  __fprintf_chk (_498, 1, "Failure creating graph.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 139, loop depth 0
;;    pred:       137
  _499 = rootname;
  if (_499 == 0B)
    goto <bb 140>;
  else
    goto <bb 176>;
;;    succ:       140
;;                176

;;   basic block 140, loop depth 0
;;    pred:       139
  _500 = nvtx_scale;
  _501 = (long unsigned int) _500;
  _502 = _501 * 4;
  # DEBUG sz => _502
  _112 = xmalloc (_502);
  # DEBUG sz => NULL
  # DEBUG has_adj => NULL
  # DEBUG k => 0
  goto <bb 142>;
;;    succ:       142

;;   basic block 141, loop depth 1
;;    pred:       142
  _512 = (sizetype) k_504;
  MEM[base: _112, index: _512, step: 4, offset: 0B] = 0;
  k_508 = k_504 + 1;
  # DEBUG k => k_508
;;    succ:       142

;;   basic block 142, loop depth 1
;;    pred:       140
;;                141
  # k_504 = PHI <0(140), k_508(141)>
  # DEBUG k => k_504
  if (_500 > k_504)
    goto <bb 141>;
  else
    goto <bb 143>;
;;    succ:       141
;;                143

;;   basic block 143, loop depth 0
;;    pred:       142
  _524 = nedge;
  _510 = IJ;
  ivtmp.110_530 = (unsigned long) _510;
  goto <bb 147>;
;;    succ:       147

;;   basic block 144, loop depth 1
;;    pred:       147
  # DEBUG D#43 => (struct packed_edge *) ivtmp.110_528
  _1250 = (void *) ivtmp.110_528;
  _515 = MEM[base: _1250, offset: 0B];
  # DEBUG D#16 => D#43
  # DEBUG p => D#16
  # DEBUG i => NULL
  _516 = MEM[base: _1250, offset: 8B];
  # DEBUG D#17 => D#43
  # DEBUG p => D#17
  # DEBUG j => NULL
  if (_515 != _516)
    goto <bb 145>;
  else
    goto <bb 146>;
;;    succ:       145
;;                146

;;   basic block 145, loop depth 1
;;    pred:       144
  _517 = (long unsigned int) _515;
  _518 = _517 * 4;
  _519 = _112 + _518;
  _520 = (long unsigned int) _516;
  _521 = _520 * 4;
  _522 = _112 + _521;
  *_522 = 1;
  *_519 = 1;
;;    succ:       146

;;   basic block 146, loop depth 1
;;    pred:       144
;;                145
  k_523 = k_511 + 1;
  # DEBUG k => k_523
  ivtmp.110_529 = ivtmp.110_528 + 16;
;;    succ:       147

;;   basic block 147, loop depth 1
;;    pred:       143
;;                146
  # k_511 = PHI <0(143), k_523(146)>
  # ivtmp.110_528 = PHI <ivtmp.110_530(143), ivtmp.110_529(146)>
  # DEBUG k => k_511
  if (k_511 < _524)
    goto <bb 144>;
  else
    goto <bb 148>;
;;    succ:       144
;;                148

;;   basic block 148, loop depth 0
;;    pred:       147
  _543 = NBFS;
  prng_state_store_z1_lsm.9_1211 = prng_state_store.z1;
  prng_state_store_z5_lsm.11_1209 = prng_state_store.z5;
  prng_state_store_z4_lsm.13_1207 = prng_state_store.z4;
  prng_state_store_z3_lsm.15_1205 = prng_state_store.z3;
  prng_state_store_z2_lsm.17_1203 = prng_state_store.z2;
  goto <bb 163>;
;;    succ:       163

;;   basic block 149, loop depth 1
;;    pred:       164
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG a => prng_state_store_z1_lsm.9_1313
  # DEBUG a => prng_state_store_z1_lsm.9_1313
  # DEBUG b => 107374182
  if (prng_state_store_z1_lsm.9_1313 > 2147483646)
    goto <bb 150>;
  else
    goto <bb 153>;
;;    succ:       150
;;                153

;;   basic block 150, loop depth 0
;;    pred:       149
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 151>;
  else
    goto <bb 152>;
;;    succ:       152
;;                151

;;   basic block 151, loop depth 0
;;    pred:       150
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       152

;;   basic block 152, loop depth 0
;;    pred:       150
;;                151
  goto <bb 93>;
;;    succ:       93

;;   basic block 153, loop depth 1
;;    pred:       149
  _608 = prng_state_store_z1_lsm.9_1313 * 107374182;
  _609 = _608 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => prng_state_store_z5_lsm.11_1311
  # DEBUG sum => _609
  # DEBUG a => prng_state_store_z5_lsm.11_1311
  # DEBUG b => 104480
  if (prng_state_store_z5_lsm.11_1311 > 2147483646)
    goto <bb 154>;
  else
    goto <bb 157>;
;;    succ:       154
;;                157

;;   basic block 154, loop depth 0
;;    pred:       153
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;
;;    succ:       156
;;                155

;;   basic block 155, loop depth 0
;;    pred:       154
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       156

;;   basic block 156, loop depth 0
;;    pred:       154
;;                155
  goto <bb 97>;
;;    succ:       97

;;   basic block 157, loop depth 1
;;    pred:       153
  _615 = prng_state_store_z5_lsm.11_1311 * 104480;
  _616 = _609 + _615;
  _617 = _616 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG state => &prng_state_store
  # DEBUG state => &prng_state_store
  # DEBUG a => _617
  # DEBUG a => _617
  # DEBUG b => 107374182
  _600 = _617 * 107374182;
  _601 = _600 % 2147483647;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG a => NULL
  # DEBUG sum => NULL
  # DEBUG a => prng_state_store_z4_lsm.13_1309
  # DEBUG sum => _601
  # DEBUG a => prng_state_store_z4_lsm.13_1309
  # DEBUG b => 104480
  if (prng_state_store_z4_lsm.13_1309 > 2147483646)
    goto <bb 158>;
  else
    goto <bb 159>;
;;    succ:       158
;;                159

;;   basic block 158, loop depth 0
;;    pred:       157
  prng_state_store.z1 = _617;
  prng_state_store.z5 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z4 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z3 = prng_state_store_z2_lsm.17_1305;
  prng_state_store.z2 = prng_state_store_z1_lsm.9_1313;
  goto <bb 97>;
;;    succ:       97

;;   basic block 159, loop depth 1
;;    pred:       157
  _618 = prng_state_store_z4_lsm.13_1309 * 104480;
  _619 = _601 + _618;
  _620 = _619 % 2147483647;
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG sum => NULL
  # DEBUG a => NULL
  # DEBUG new_elt => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG state => NULL
  # DEBUG R => NULL
  _531 = MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B];
  if (_531 == 0)
    goto <bb 162>;
  else
    goto <bb 160>;
;;    succ:       162
;;                160

;;   basic block 160, loop depth 1
;;    pred:       159
  _1253 = _501 - ivtmp.101_1291;
  _1252 = (long int) _1253;
  _534 = (double) _1252;
  _1147 = (signed long) _620;
  _596 = (double) _1147;
  _597 = _596 * 2.16840434699049278538069582359390854997549524796340847388e-19;
  _1146 = (signed long) _617;
  _593 = (double) _1146;
  _594 = _593 * 4.6566128752457969230960088680149056017398834228515625e-10;
  _598 = _594 + _597;
  _535 = _534 * _598;
  _538 = _543 - m_537;
  _539 = (double) _538;
  if (_535 > _539)
    goto <bb 162>;
  else
    goto <bb 161>;
;;    succ:       162
;;                161

;;   basic block 161, loop depth 1
;;    pred:       160
  m_541 = m_537 + 1;
  # DEBUG m => m_541
  # DEBUG D#45 => ivtmp.101_1291 + 1
  # DEBUG t => (long int) D#45
  bfs_root[m_537] = t_527;
;;    succ:       162

;;   basic block 162, loop depth 1
;;    pred:       159
;;                161
;;                160
  # m_795 = PHI <m_537(159), m_541(161), m_537(160)>
  ivtmp.101_1285 = ivtmp.101_1291 + 1;
  prng_state_store_z1_lsm.9_1110 = _620;
  prng_state_store_z1_lsm.10_1111 = 1;
  prng_state_store_z5_lsm.11_95 = prng_state_store_z3_lsm.15_1307;
  prng_state_store_z4_lsm.13_1274 = prng_state_store_z2_lsm.17_1305;
  prng_state_store_z3_lsm.15_1258 = prng_state_store_z1_lsm.9_1313;
  prng_state_store_z2_lsm.17_1461 = _617;
;;    succ:       163

;;   basic block 163, loop depth 1
;;    pred:       148
;;                162
  # m_537 = PHI <0(148), m_795(162)>
  # prng_state_store_z1_lsm.9_1313 = PHI <prng_state_store_z1_lsm.9_1211(148), prng_state_store_z1_lsm.9_1110(162)>
  # prng_state_store_z1_lsm.10_1312 = PHI <0(148), prng_state_store_z1_lsm.10_1111(162)>
  # prng_state_store_z5_lsm.11_1311 = PHI <prng_state_store_z5_lsm.11_1209(148), prng_state_store_z5_lsm.11_95(162)>
  # prng_state_store_z4_lsm.13_1309 = PHI <prng_state_store_z4_lsm.13_1207(148), prng_state_store_z4_lsm.13_1274(162)>
  # prng_state_store_z3_lsm.15_1307 = PHI <prng_state_store_z3_lsm.15_1205(148), prng_state_store_z3_lsm.15_1258(162)>
  # prng_state_store_z2_lsm.17_1305 = PHI <prng_state_store_z2_lsm.17_1203(148), prng_state_store_z2_lsm.17_1461(162)>
  # ivtmp.101_1291 = PHI <0(148), ivtmp.101_1285(162)>
  t_527 = (int64_t) ivtmp.101_1291;
  # DEBUG t => t_527
  # DEBUG m => m_537
  if (m_537 < _543)
    goto <bb 164>;
  else
    goto <bb 170>;
;;    succ:       164
;;                170

;;   basic block 164, loop depth 1
;;    pred:       163
  if (_500 > t_527)
    goto <bb 149>;
  else
    goto <bb 165>;
;;    succ:       149
;;                165

;;   basic block 165, loop depth 0
;;    pred:       164
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 166>;
  else
    goto <bb 167>;
;;    succ:       167
;;                166

;;   basic block 166, loop depth 0
;;    pred:       165
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       167

;;   basic block 167, loop depth 0
;;    pred:       165
;;                166
  if (m_537 > 0)
    goto <bb 168>;
  else
    goto <bb 169>;
;;    succ:       168
;;                169

;;   basic block 168, loop depth 0
;;    pred:       167
  _546 = stderr;
  # DEBUG __stream => _546
  # DEBUG __fmt => "Cannot find %d sample roots of non-self degree > 0, using %d.\n"
  __fprintf_chk (_546, 1, "Cannot find %d sample roots of non-self degree > 0, using %d.\n", _543, m_537);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  NBFS = m_537;
  goto <bb 173>;
;;    succ:       173

;;   basic block 169, loop depth 0
;;    pred:       167
  _547 = stderr;
  # DEBUG __stream => _547
  # DEBUG __fmt => "Cannot find any sample roots of non-self degree > 0.\n"
  __fprintf_chk (_547, 1, "Cannot find any sample roots of non-self degree > 0.\n");
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (1);
;;    succ:      

;;   basic block 170, loop depth 0
;;    pred:       163
  if (prng_state_store_z1_lsm.10_1312 != 0)
    goto <bb 171>;
  else
    goto <bb 172>;
;;    succ:       172
;;                171

;;   basic block 171, loop depth 0
;;    pred:       170
  prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;
  prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;
  prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;
  prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;
  prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;
;;    succ:       172

;;   basic block 172, loop depth 0
;;    pred:       170
;;                171
;;    succ:       173

;;   basic block 173, loop depth 0
;;    pred:       168
;;                172
  # DEBUG p => _112
  free (_112);
;;    succ:       174

;;   basic block 174, loop depth 0
;;    pred:       180
;;                173
  # DEBUG m => 0
  _753 = NBFS;
  if (_753 > 0)
    goto <bb 181>;
  else
    goto <bb 175>;
;;    succ:       181
;;                175

;;   basic block 175, loop depth 0
;;    pred:       174
;;                270
  destroy_graph ();
  # DEBUG max_bfsvtx => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG sz => NULL
  # DEBUG R => NULL
  # DEBUG t => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG m => NULL
  # DEBUG has_adj => NULL
  _61 = IJ;
  # DEBUG p => _61
  free (_61);
  # DEBUG p => NULL
  _63 = SCALE;
  _64 = nvtx_scale;
  _65 = edgefactor;
  _66 = A;
  _67 = B;
  _68 = C;
  _69 = D;
  _70 = generation_time;
  _71 = construction_time;
  _72 = NBFS;
  output_results.constprop (_63, _64, _65, _66, _67, _68, _69, _70, _71, _72);
  goto <bb 271>;
;;    succ:       271

;;   basic block 176, loop depth 0
;;    pred:       139
  # DEBUG __path => _499
  # DEBUG __oflag => 0
  _548 = __open_alias (_499, 0);
  # DEBUG __path => NULL
  # DEBUG __oflag => NULL
  # DEBUG fd => NULL
  if (_548 < 0)
    goto <bb 177>;
  else
    goto <bb 178>;
;;    succ:       177
;;                178

;;   basic block 177, loop depth 0
;;    pred:       176
  perror ("Cannot open input BFS root file");
  exit (1);
;;    succ:      

;;   basic block 178, loop depth 0
;;    pred:       176
  _549 = NBFS;
  _550 = (long unsigned int) _549;
  _551 = _549 w* 8;
  sz_552 = (ssize_t) _551;
  # DEBUG sz => sz_552
  # DEBUG __fd => _548
  # DEBUG __buf => &bfs_root
  # DEBUG __nbytes => _551
  _554 = __read_chk_warn (_548, &bfs_root, _551, 512);
  # DEBUG __fd => NULL
  # DEBUG __buf => NULL
  # DEBUG __nbytes => NULL
  if (sz_552 != _554)
    goto <bb 179>;
  else
    goto <bb 180>;
;;    succ:       179
;;                180

;;   basic block 179, loop depth 0
;;    pred:       178
  perror ("Error reading input BFS root file");
  exit (1);
;;    succ:      

;;   basic block 180, loop depth 0
;;    pred:       178
  close (_548);
  goto <bb 174>;
;;    succ:       174

;;   basic block 181, loop depth 0
;;    pred:       174
  # ivtmp.94_1210 = PHI <0(174)>
;;    succ:       182

;;   basic block 182, loop depth 1
;;    pred:       181
;;                270
  # ivtmp.94_1264 = PHI <ivtmp.94_1210(181), ivtmp.94_1263(270)>
  m_937 = (int) ivtmp.94_1264;
  # DEBUG m => m_937
  _558 = nvtx_scale;
  _559 = (long unsigned int) _558;
  _560 = _559 * 8;
  # DEBUG sz => _560
  # DEBUG n => _560
  bfs_tree_622 = malloc (_560);
  # DEBUG p => bfs_tree_622
  if (bfs_tree_622 == 0B)
    goto <bb 183>;
  else
    goto <bb 184>;
;;    succ:       183
;;                184

;;   basic block 183, loop depth 0
;;    pred:       182
  xmalloc.part.0 (_560);
;;    succ:      

;;   basic block 184, loop depth 1
;;    pred:       182
  # DEBUG n => NULL
  # DEBUG p => NULL
  # DEBUG sz => NULL
  # DEBUG bfs_tree => NULL
  _1361 = ivtmp.94_1264 * 8;
  _563 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  if (_558 <= _563)
    goto <bb 185>;
  else
    goto <bb 186>;
;;    succ:       185
;;                186

;;   basic block 185, loop depth 0
;;    pred:       184
  __assert_fail ("bfs_root[m] < nvtx_scale", "graph500.c", 192, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 186, loop depth 1
;;    pred:       184
  _565 = VERBOSE;
  if (_565 != 0)
    goto <bb 187>;
  else
    goto <bb 188>;
;;    succ:       187
;;                188

;;   basic block 187, loop depth 1
;;    pred:       186
  _566 = stderr;
  # DEBUG __stream => _566
  # DEBUG __fmt => "Running bfs %d..."
  __fprintf_chk (_566, 1, "Running bfs %d...", m_937);
;;    succ:       188

;;   basic block 188, loop depth 1
;;    pred:       187
;;                186
  clock_gettime (1, &tic_ts);
  _567 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  err_568 = make_bfs_tree (bfs_tree_622, &max_bfsvtx, _567);
  # DEBUG err => err_568
  clock_gettime (1, &ts);
  _623 = ts.tv_nsec;
  _624 = (double) _623;
  _625 = tic_ts.tv_nsec;
  _626 = (double) _625;
  _627 = _624 - _626;
  out_628 = _627 * 1.00000000000000006228159145777985641889706869278597878292e-9;
  # DEBUG out => out_628
  _629 = ts.tv_sec;
  _630 = (double) _629;
  _631 = tic_ts.tv_sec;
  _632 = (double) _631;
  _633 = _630 - _632;
  out_634 = out_628 + _633;
  # DEBUG out => out_634
  ts ={v} {CLOBBER};
  # DEBUG out => NULL
  MEM[symbol: bfs_time, index: _1361, offset: 0B] = out_634;
  _570 = VERBOSE;
  if (_570 != 0)
    goto <bb 189>;
  else
    goto <bb 283>;
;;    succ:       189
;;                283

;;   basic block 189, loop depth 1
;;    pred:       188
  _571 = stderr;
  # DEBUG __stream => _571
  # DEBUG __fmt => "done\n"
  __fprintf_chk (_571, 1, "done\n");
  if (err_568 != 0)
    goto <bb 190>;
  else
    goto <bb 191>;
;;    succ:       190
;;                191

;;   basic block 190, loop depth 0
;;    pred:       189
;;                283
  perror ("make_bfs_tree failed");
  abort ();
;;    succ:      

;;   basic block 191, loop depth 1
;;    pred:       189
  _572 = VERBOSE;
  if (_572 != 0)
    goto <bb 193>;
  else
    goto <bb 192>;
;;    succ:       193
;;                192

;;   basic block 192, loop depth 1
;;    pred:       191
;;                283
  goto <bb 194>;
;;    succ:       194

;;   basic block 193, loop depth 1
;;    pred:       191
  _573 = stderr;
  # DEBUG __stream => _573
  # DEBUG __fmt => "Verifying bfs %d..."
  __fprintf_chk (_573, 1, "Verifying bfs %d...", m_937);
;;    succ:       194

;;   basic block 194, loop depth 1
;;    pred:       192
;;                193
  _574 = max_bfsvtx;
  _575 = MEM[symbol: bfs_root, index: _1361, offset: 0B];
  # DEBUG D#35 => IJ
  # DEBUG D#34 => nedge
  # DEBUG bfs_tree_in => bfs_tree_622
  # DEBUG max_bfsvtx => _574
  # DEBUG root => _575
  # DEBUG IJ_in => D#35
  # DEBUG nedge => D#34
  # DEBUG bfs_tree => bfs_tree_622
  # DEBUG IJ => D#35
  nv_635 = _574 + 1;
  # DEBUG nv => nv_635
  if (_574 < _575)
    goto <bb 290>;
  else
    goto <bb 195>;
;;    succ:       290
;;                195

;;   basic block 195, loop depth 1
;;    pred:       194
  _636 = (long unsigned int) _575;
  _637 = _636 * 8;
  _638 = bfs_tree_622 + _637;
  _639 = *_638;
  if (_575 != _639)
    goto <bb 290>;
  else
    goto <bb 196>;
;;    succ:       290
;;                196

;;   basic block 196, loop depth 1
;;    pred:       195
  _576 = IJ;
  _577 = nedge;
  # DEBUG err => 0
  # DEBUG nedge_traversed => 0
  _640 = (long unsigned int) nv_635;
  _641 = _640 * 16;
  # DEBUG sz => _641
  # DEBUG n => _641
  seen_edge_794 = malloc (_641);
  # DEBUG p => seen_edge_794
  if (seen_edge_794 == 0B)
    goto <bb 197>;
  else
    goto <bb 198>;
;;    succ:       197
;;                198

;;   basic block 197, loop depth 0
;;    pred:       196
  xmalloc.part.0 (_641);
;;    succ:      

;;   basic block 198, loop depth 1
;;    pred:       196
  # DEBUG n => NULL
  # DEBUG p => NULL
  # DEBUG sz => NULL
  # DEBUG seen_edge => NULL
  _643 = _640 * 8;
  level_644 = seen_edge_794 + _643;
  # DEBUG level => level_644
  # DEBUG level => level_644
  # DEBUG nv => nv_635
  # DEBUG bfs_tree => bfs_tree_622
  # DEBUG root => _575
  # DEBUG k => 0
  if (nv_635 > 0)
    goto <bb 199>;
  else
    goto <bb 238>;
;;    succ:       199
;;                238

;;   basic block 199, loop depth 1
;;    pred:       198
  _649 = (unsigned long) _574;
  niters.29_648 = _649 + 1;
  _1426 = (unsigned long) level_644;
  _1412 = _1426 & 15;
  _742 = _1412 >> 3;
  _1409 = -_742;
  _1407 = _1409 & 1;
  prolog_loop_niters.31_782 = MIN_EXPR <niters.29_648, _1407>;
  if (niters.29_648 <= 3)
    goto <bb 200>;
  else
    goto <bb 201>;
;;    succ:       200
;;                201

;;   basic block 200, loop depth 1
;;    pred:       199
;;    succ:       201

;;   basic block 201, loop depth 1
;;    pred:       200
;;                199
  # prologue_after_cost_adjust.32_780 = PHI <niters.29_648(200), prolog_loop_niters.31_782(199)>
  if (prologue_after_cost_adjust.32_780 == 0)
    goto <bb 206>;
  else
    goto <bb 202>;
;;    succ:       202
;;                206

;;   basic block 202, loop depth 1
;;    pred:       201
  # DEBUG k => 0
  _1048 = _575 != 0;
  _737 = (long int) _1048;
  _738 = -_737;
  *level_644 = _738;
  # DEBUG k => 1
  # DEBUG k => 1
  if (prologue_after_cost_adjust.32_780 != 1)
    goto <bb 203>;
  else
    goto <bb 205>;
;;    succ:       203
;;                205

;;   basic block 203, loop depth 1
;;    pred:       202
  # DEBUG k => 1
  _1257 = _575 != 1;
  _1405 = (long int) _1257;
  _1404 = -_1405;
  MEM[(int64_t *)level_644 + 8B] = _1404;
  # DEBUG k => 2
  # DEBUG k => 2
  if (prologue_after_cost_adjust.32_780 == 3)
    goto <bb 204>;
  else
    goto <bb 205>;
;;    succ:       204
;;                205

;;   basic block 204, loop depth 1
;;    pred:       203
  # DEBUG k => 2
  _1272 = _575 != 2;
  _1270 = (long int) _1272;
  _1268 = -_1270;
  MEM[(int64_t *)level_644 + 16B] = _1268;
  # DEBUG k => 3
  # DEBUG k => 3
;;    succ:       205

;;   basic block 205, loop depth 1
;;    pred:       204
;;                202
;;                203
  # k_1326 = PHI <3(204), 1(202), 2(203)>
  if (niters.29_648 == prologue_after_cost_adjust.32_780)
    goto <bb 212>;
  else
    goto <bb 206>;
;;    succ:       206
;;                212

;;   basic block 206, loop depth 1
;;    pred:       205
;;                201
  # k_1365 = PHI <k_1326(205), 0(201)>
  niters.33_1004 = niters.29_648 - prologue_after_cost_adjust.32_780;
  _1364 = niters.33_1004 + 18446744073709551614;
  _1325 = _1364 >> 1;
  bnd.34_962 = _1325 + 1;
  ratio_mult_vf.35_1337 = bnd.34_962 << 1;
  if (_649 == prologue_after_cost_adjust.32_780)
    goto <bb 210>;
  else
    goto <bb 207>;
;;    succ:       207
;;                210

;;   basic block 207, loop depth 1
;;    pred:       206
  stmp_var_.37_1340 = k_1365 + 1;
  vect_cst_.38_1350 = {k_1365, stmp_var_.37_1340};
  vect_cst_.42_1339 = {_575, _575};
  _1266 = niters.29_648 + prologue_after_cost_adjust.32_780;
  _1265 = _1266 * 8;
  vectp.48_1271 = seen_edge_794 + _1265;
;;    succ:       208

;;   basic block 208, loop depth 2
;;    pred:       207
;;                208
  # vect_vec_iv_.40_1314 = PHI <vect_cst_.38_1350(207), vect_vec_iv_.40_1202(208)>
  # ivtmp_1260 = PHI <0(207), ivtmp_1259(208)>
  vect_vec_iv_.40_1327 = vect_vec_iv_.40_1314 + { 2, 2 };
  # DEBUG k => NULL
  vect_patt_839.41_1399 = VEC_COND_EXPR <vect_cst_.42_1339 != vect_vec_iv_.40_1314, { 1, 1 }, { 0, 0 }>;
  vect_patt_647.45_1275 = VIEW_CONVERT_EXPR<vector(2) long int>(vect_patt_839.41_1399);
  vect__599.46_1273 = -vect_patt_647.45_1275;
  _743 = ivtmp_1260 * 16;
  MEM[base: vectp.48_1271, index: _743, offset: 0B] = vect__599.46_1273;
  # DEBUG k => D#41
  # DEBUG k => D#41
  ivtmp_1259 = ivtmp_1260 + 1;
  vect_vec_iv_.40_1202 = vect_vec_iv_.40_1327;
  if (bnd.34_962 > ivtmp_1259)
    goto <bb 208>;
  else
    goto <bb 209>;
;;    succ:       208
;;                209

;;   basic block 209, loop depth 1
;;    pred:       208
  _1315 = (long int) ratio_mult_vf.35_1337;
  k_1360 = _1315 + k_1365;
  if (niters.33_1004 == ratio_mult_vf.35_1337)
    goto <bb 211>;
  else
    goto <bb 210>;
;;    succ:       210
;;                211

;;   basic block 210, loop depth 1
;;    pred:       209
;;                206
  # k_1352 = PHI <k_1360(209), k_1365(206)>
  # DEBUG k => k_1352
  _1363 = (long unsigned int) k_1352;
  _1321 = _1363 * 8;
  _1336 = level_644 + _1321;
  _1343 = _575 != k_1352;
  _1353 = (long int) _1343;
  _1362 = -_1353;
  *_1336 = _1362;
  # DEBUG D#44 => k_1352 + 1
  # DEBUG k => D#44
  # DEBUG k => D#44
;;    succ:       211

;;   basic block 211, loop depth 1
;;    pred:       210
;;                209
;;    succ:       212

;;   basic block 212, loop depth 1
;;    pred:       211
;;                205
  _654 = (long int) niters.29_648;
;;    succ:       213

;;   basic block 213, loop depth 2
;;    pred:       212
;;                237
  # parent_1089 = PHI <0(212), parent_786(237)>
  # err_1084 = PHI <0(212), err_792(237)>
  # ivtmp.84_785 = PHI <_1426(212), ivtmp.84_652(237)>
  # DEBUG k => parent_1089
  # DEBUG err => err_1084
  _745 = (int64_t *) ivtmp.84_785;
  _746 = MEM[base: _745, offset: 0B];
  if (_746 >= 0)
    goto <bb 237>;
  else
    goto <bb 214>;
;;    succ:       237
;;                214

;;   basic block 214, loop depth 2
;;    pred:       213
  # DEBUG terr => err_1084
  if (err_1084 == 0)
    goto <bb 215>;
  else
    goto <bb 275>;
;;    succ:       215
;;                275

;;   basic block 215, loop depth 2
;;    pred:       214
  # DEBUG terr => err_1084
  # DEBUG terr => 0
  _592 = (sizetype) parent_1089;
  _749 = MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B];
  _270 = _575 != parent_1089;
  _323 = _749 >= 0;
  _324 = _270 & _323;
  if (_324 != 0)
    goto <bb 216>;
  else
    goto <bb 274>;
;;    succ:       216
;;                274

;;   basic block 216, loop depth 2
;;    pred:       215
  # parent_344 = PHI <parent_1089(215)>
  # nhop_357 = PHI <0(215)>
  # prephitmp_364 = PHI <_749(215)>
  goto <bb 218>;
;;    succ:       218

;;   basic block 217, loop depth 3
;;    pred:       221
  pretmp_1332 = bfs_tree_622 + _750;
  pretmp_1333 = MEM[(const int64_t *)pretmp_1332];
  parent_341 = parent_1334;
  parent_514 = pretmp_1333;
;;    succ:       218

;;   basic block 218, loop depth 3
;;    pred:       216
;;                217
  # parent_968 = PHI <parent_344(216), parent_341(217)>
  # nhop_556 = PHI <nhop_357(216), nhop_755(217)>
  # parent_1334 = PHI <prephitmp_364(216), parent_514(217)>
  # DEBUG nhop => nhop_556
  # DEBUG parent => parent_968
  # DEBUG D#28 => *D#40
  if (parent_968 == parent_1334)
    goto <bb 219>;
  else
    goto <bb 220>;
;;    succ:       219
;;                220

;;   basic block 219, loop depth 0
;;    pred:       218
  __assert_fail ("parent != bfs_tree[parent]", "verify.c", 39, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 220, loop depth 3
;;    pred:       218
  # DEBUG parent => D#28
  nhop_755 = nhop_556 + 1;
  # DEBUG nhop => nhop_755
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  if (parent_1334 >= 0)
    goto <bb 221>;
  else
    goto <bb 275>;
;;    succ:       221
;;                275

;;   basic block 221, loop depth 3
;;    pred:       220
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  # DEBUG nhop => nhop_755
  # DEBUG parent => D#28
  _756 = (long unsigned int) parent_1334;
  _750 = _756 * 8;
  _757 = level_644 + _750;
  _758 = *_757;
  _847 = nv_635 > nhop_755;
  _1119 = _758 < 0;
  _1118 = _847 & _1119;
  if (_1118 != 0)
    goto <bb 217>;
  else
    goto <bb 222>;
;;    succ:       217
;;                222

;;   basic block 222, loop depth 2
;;    pred:       221
  # DEBUG D#49 => nv_635 <= nhop_755
  # DEBUG D#48 => (int) D#49
  # DEBUG D#47 => -D#48
  # DEBUG terr => D#47
  # DEBUG terr => D#47
  if (nv_635 > nhop_755)
    goto <bb 223>;
  else
    goto <bb 275>;
;;    succ:       223
;;                275

;;   basic block 223, loop depth 2
;;    pred:       222
  nhop_764 = nhop_755 + _758;
  # DEBUG nhop => nhop_764
  # DEBUG parent => parent_1089
  # DEBUG nhop => nhop_764
  # DEBUG parent => parent_1089
  if (nhop_764 <= 0)
    goto <bb 225>;
  else
    goto <bb 224>;
;;    succ:       225
;;                224

;;   basic block 224, loop depth 2
;;    pred:       223
  # nhop_1396 = PHI <nhop_764(223)>
  # _1397 = PHI <_745(223)>
  # prephitmp_329 = PHI <_749(223)>
  goto <bb 228>;
;;    succ:       228

;;   basic block 225, loop depth 0
;;    pred:       223
;;                226
  __assert_fail ("nhop > 0", "verify.c", 52, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 226, loop depth 3
;;    pred:       228
  if (nhop_766 == 0)
    goto <bb 225>;
  else
    goto <bb 227>;
;;    succ:       225
;;                227

;;   basic block 227, loop depth 3
;;    pred:       226
  pretmp_1346 = bfs_tree_622 + _768;
  pretmp_1347 = MEM[(const int64_t *)pretmp_1346];
  nhop_1249 = nhop_766;
;;    succ:       228

;;   basic block 228, loop depth 3
;;    pred:       224
;;                227
  # nhop_1083 = PHI <nhop_1396(224), nhop_1249(227)>
  # _363 = PHI <_1397(224), _767(227)>
  # prephitmp_1348 = PHI <prephitmp_329(224), pretmp_1347(227)>
  # DEBUG nhop => nhop_1083
  # DEBUG parent => parent_1089
  nhop_766 = nhop_1083 + -1;
  # DEBUG nhop => nhop_766
  *_363 = nhop_1083;
  # DEBUG D#27 => *D#39
  # DEBUG parent => D#27
  # DEBUG nhop => nhop_766
  # DEBUG parent => D#27
  _772 = (long unsigned int) prephitmp_1348;
  _768 = _772 * 8;
  _767 = level_644 + _768;
  _773 = *_767;
  if (_773 < 0)
    goto <bb 226>;
  else
    goto <bb 229>;
;;    succ:       226
;;                229

;;   basic block 229, loop depth 2
;;    pred:       228
  if (nhop_766 != _773)
    goto <bb 230>;
  else
    goto <bb 231>;
;;    succ:       230
;;                231

;;   basic block 230, loop depth 0
;;    pred:       229
  __assert_fail ("nhop == level[parent]", "verify.c", 56, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 231, loop depth 2
;;    pred:       229
  # DEBUG nhop => 0
  # DEBUG parent => parent_1089
  lastlvl_774 = MEM[base: _745, offset: 0B];
  # DEBUG D#23 => lastlvl_774 + 1
  # DEBUG lastlvl => D#23
  # DEBUG lastlvl => D#23
  # DEBUG nhop => NULL
  # DEBUG parent => parent_1089
  if (lastlvl_774 > 0)
    goto <bb 232>;
  else
    goto <bb 274>;
;;    succ:       232
;;                274

;;   basic block 232, loop depth 2
;;    pred:       231
  # lastlvl_1371 = PHI <lastlvl_774(231)>
  # prephitmp_1395 = PHI <_749(231)>
  goto <bb 236>;
;;    succ:       236

;;   basic block 233, loop depth 3
;;    pred:       236
  _777 = lastlvl_776 + 1;
  if (_777 != lastlvl_1142)
    goto <bb 235>;
  else
    goto <bb 234>;
;;    succ:       235
;;                234

;;   basic block 234, loop depth 3
;;    pred:       233
  pretmp_1354 = bfs_tree_622 + _779;
  pretmp_1355 = MEM[(const int64_t *)pretmp_1354];
  lastlvl_1341 = lastlvl_776;
  goto <bb 236>;
;;    succ:       236

;;   basic block 235, loop depth 0
;;    pred:       233
  __assert_fail ("lastlvl == 1 + level[parent]", "verify.c", 64, &__PRETTY_FUNCTION__);
;;    succ:      

;;   basic block 236, loop depth 3
;;    pred:       232
;;                234
  # lastlvl_1142 = PHI <lastlvl_1371(232), lastlvl_1341(234)>
  # prephitmp_1356 = PHI <prephitmp_1395(232), pretmp_1355(234)>
  # DEBUG nhop => NULL
  # DEBUG parent => parent_1089
  # DEBUG lastlvl => lastlvl_1142
  # DEBUG D#26 => *D#38
  # DEBUG parent => D#26
  # DEBUG nhop => NULL
  # DEBUG lastlvl => lastlvl_1142
  # DEBUG nhop => NULL
  # DEBUG parent => D#26
  _783 = (long unsigned int) prephitmp_1356;
  _779 = _783 * 8;
  _784 = level_644 + _779;
  lastlvl_776 = *_784;
  if (lastlvl_776 > 0)
    goto <bb 233>;
  else
    goto <bb 274>;
;;    succ:       233
;;                274

;;   basic block 237, loop depth 2
;;    pred:       213
;;                274
;;                275
  # err_792 = PHI <err_1084(213), err_1084(274), err_1109(275)>
  # DEBUG err => err_792
  parent_786 = parent_1089 + 1;
  # DEBUG k => parent_786
  # DEBUG k => parent_786
  # DEBUG err => err_792
  ivtmp.84_652 = ivtmp.84_785 + 8;
  if (_654 != parent_786)
    goto <bb 213>;
  else
    goto <bb 284>;
;;    succ:       213
;;                284

;;   basic block 238, loop depth 1
;;    pred:       198
;;                239
  # DEBUG terr => 0
  # DEBUG k => 0
  # DEBUG nedge_traversed => 0
  # DEBUG err => 0
  _1108 = _577 * 2;
  if (_1108 > 0)
    goto <bb 240>;
  else
    goto <bb 289>;
;;    succ:       240
;;                289

;;   basic block 239, loop depth 1
;;    pred:       284
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG k => 0
  _1441 = MAX_EXPR <_574, 0>;
  _78 = (sizetype) _1441;
  _1429 = _78 + 1;
  _1140 = _1429 * 8;
  __builtin_memset (seen_edge_794, 0, _1140);
  goto <bb 238>;
;;    succ:       238

;;   basic block 240, loop depth 1
;;    pred:       238
  _708 = _576 + 8;
  ivtmp.64_710 = (unsigned long) _708;
  _1368 = (unsigned long) _1108;
  _333 = _1368 + 18446744073709551615;
  _1401 = _333 >> 1;
  _1402 = _1401 * 16;
  _839 = _1402 + 24;
  _647 = _576 + _839;
  _741 = (unsigned long) _647;
;;    succ:       241

;;   basic block 241, loop depth 2
;;    pred:       240
;;                254
  # nedge_traversed_728 = PHI <0(240), nedge_traversed_730(254)>
  # err_788 = PHI <0(240), err_729(254)>
  # ivtmp.64_706 = PHI <ivtmp.64_710(240), ivtmp.64_707(254)>
  # DEBUG terr => 0
  # DEBUG k => NULL
  # DEBUG nedge_traversed => nedge_traversed_728
  # DEBUG err => err_788
  _1398 = (void *) ivtmp.64_706;
  i_655 = MEM[base: _1398, offset: -8B];
  # DEBUG i => i_655
  j_659 = MEM[base: _1398, offset: 0B];
  # DEBUG j => j_659
  # DEBUG terr => err_788
  _660 = i_655 < 0;
  _661 = j_659 < 0;
  _662 = _660 | _661;
  if (_662 != 0)
    goto <bb 254>;
  else
    goto <bb 242>;
;;    succ:       254
;;                242

;;   basic block 242, loop depth 2
;;    pred:       241
  _663 = _574 < i_655;
  _664 = _574 >= j_659;
  _665 = _663 & _664;
  if (_665 != 0)
    goto <bb 276>;
  else
    goto <bb 243>;
;;    succ:       276
;;                243

;;   basic block 243, loop depth 2
;;    pred:       242
  # DEBUG terr => err_788
  _666 = _574 < j_659;
  _667 = _574 >= i_655;
  _668 = _666 & _667;
  if (_668 != 0)
    goto <bb 285>;
  else
    goto <bb 244>;
;;    succ:       285
;;                244

;;   basic block 244, loop depth 2
;;    pred:       243
  # DEBUG err => err_788
  _670 = err_788 != 0;
  _671 = _663 | _670;
  if (_671 != 0)
    goto <bb 254>;
  else
    goto <bb 245>;
;;    succ:       254
;;                245

;;   basic block 245, loop depth 2
;;    pred:       244
  _672 = (long unsigned int) i_655;
  _673 = _672 * 8;
  _674 = bfs_tree_622 + _673;
  _675 = *_674;
  if (_675 >= 0)
    goto <bb 246>;
  else
    goto <bb 287>;
;;    succ:       246
;;                287

;;   basic block 246, loop depth 2
;;    pred:       245
  _676 = (long unsigned int) j_659;
  _677 = _676 * 8;
  _678 = bfs_tree_622 + _677;
  _679 = *_678;
  if (_679 < 0)
    goto <bb 278>;
  else
    goto <bb 286>;
;;    succ:       278
;;                286

;;   basic block 247, loop depth 2
;;    pred:       286
  if (j_659 == _675)
    goto <bb 248>;
  else
    goto <bb 249>;
;;    succ:       248
;;                249

;;   basic block 248, loop depth 2
;;    pred:       247
  _687 = seen_edge_794 + _673;
  *_687 = 1;
;;    succ:       249

;;   basic block 249, loop depth 2
;;    pred:       247
;;                248
  if (i_655 == _679)
    goto <bb 251>;
  else
    goto <bb 250>;
;;    succ:       251
;;                250

;;   basic block 250, loop depth 2
;;    pred:       249
;;                286
  goto <bb 252>;
;;    succ:       252

;;   basic block 251, loop depth 2
;;    pred:       249
  _689 = seen_edge_794 + _677;
  *_689 = 1;
;;    succ:       252

;;   basic block 252, loop depth 2
;;    pred:       251
;;                250
  _690 = level_644 + _673;
  _691 = *_690;
  _692 = level_644 + _677;
  _693 = *_692;
  lvldiff_694 = _691 - _693;
  # DEBUG lvldiff => lvldiff_694
  _695 = (unsigned long) lvldiff_694;
  _696 = _695 + 1;
  if (_696 > 2)
    goto <bb 254>;
  else
    goto <bb 253>;
;;    succ:       254
;;                253

;;   basic block 253, loop depth 2
;;    pred:       252
;;    succ:       254

;;   basic block 254, loop depth 2
;;    pred:       241
;;                244
;;                287
;;                253
;;                252
;;                278
;;                285
  # err_729 = PHI <err_788(241), err_788(244), 0(287), 0(253), -14(252), err_1099(278), err_1143(285)>
  # nedge_traversed_730 = PHI <nedge_traversed_728(241), nedge_traversed_728(244), nedge_traversed_728(287), nedge_traversed_686(253), nedge_traversed_686(252), nedge_traversed_728(278), nedge_traversed_728(285)>
  # err_731 = PHI <err_788(241), err_788(244), 0(287), 0(253), -14(252), err_1099(278), err_1143(285)>
  # DEBUG terr => err_731
  # DEBUG nedge_traversed => nedge_traversed_730
  # DEBUG err => err_729
  # DEBUG k => D#42
  # DEBUG terr => err_731
  # DEBUG k => D#42
  # DEBUG nedge_traversed => nedge_traversed_730
  # DEBUG err => err_729
  ivtmp.64_707 = ivtmp.64_706 + 16;
  if (ivtmp.64_707 != _741)
    goto <bb 241>;
  else
    goto <bb 255>;
;;    succ:       241
;;                255

;;   basic block 255, loop depth 1
;;    pred:       254
  if (err_731 == 0)
    goto <bb 256>;
  else
    goto <bb 265> (done);
;;    succ:       256
;;                265

;;   basic block 256, loop depth 1
;;    pred:       255
  # DEBUG k => 0
  # DEBUG err => err_729
  if (nv_635 > 0)
    goto <bb 257>;
  else
    goto <bb 265> (done);
;;    succ:       257
;;                265

;;   basic block 257, loop depth 1
;;    pred:       256
;;                289
  # err_1190 = PHI <err_729(256), 0(289)>
  # nedge_traversed_1189 = PHI <nedge_traversed_730(256), 0(289)>
  _1357 = (unsigned long) _574;
  _1344 = _1357 + 1;
  _1012 = (long int) _1344;
;;    succ:       258

;;   basic block 258, loop depth 2
;;    pred:       257
;;                264
  # err_325 = PHI <err_1190(257), err_735(264)>
  # k_298 = PHI <0(257), k_713(264)>
  # DEBUG k => k_298
  # DEBUG err => err_325
  # DEBUG terr => err_325
  _702 = err_325 == 0;
  _704 = k_298 != _575;
  _705 = _702 & _704;
  if (_705 != 0)
    goto <bb 259>;
  else
    goto <bb 264>;
;;    succ:       259
;;                264

;;   basic block 259, loop depth 2
;;    pred:       258
  _1276 = (sizetype) k_298;
  _709 = MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B];
  if (_709 >= 0)
    goto <bb 260>;
  else
    goto <bb 263>;
;;    succ:       260
;;                263

;;   basic block 260, loop depth 2
;;    pred:       259
  _711 = MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B];
  if (_711 == 0)
    goto <bb 262>;
  else
    goto <bb 261>;
;;    succ:       262
;;                261

;;   basic block 261, loop depth 2
;;    pred:       260
;;    succ:       262

;;   basic block 262, loop depth 2
;;    pred:       260
;;                261
  # err_734 = PHI <-15(260), 0(261)>
  # DEBUG terr => err_734
  if (k_298 == _709)
    goto <bb 264>;
  else
    goto <bb 263>;
;;    succ:       264
;;                263

;;   basic block 263, loop depth 2
;;    pred:       259
;;                262
  # err_712 = PHI <0(259), err_734(262)>
  # DEBUG terr => NULL
  # DEBUG terr => err_712
;;    succ:       264

;;   basic block 264, loop depth 2
;;    pred:       258
;;                263
;;                262
  # err_735 = PHI <err_325(258), err_712(263), -16(262)>
  # DEBUG err => err_735
  k_713 = k_298 + 1;
  # DEBUG k => k_713
  # DEBUG k => k_713
  # DEBUG err => err_735
  if (k_713 != _1012)
    goto <bb 258>;
  else
    goto <bb 265> (done);
;;    succ:       258
;;                265

;;   basic block 265, loop depth 1
;;    pred:       264
;;                255
;;                256
  # err_714 = PHI <err_735(264), err_729(255), err_729(256)>
  # nedge_traversed_557 = PHI <nedge_traversed_1189(264), nedge_traversed_730(255), nedge_traversed_730(256)>
done:
  # DEBUG nedge_traversed => nedge_traversed_557
  # DEBUG err => err_714
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  if (err_714 != 0)
    goto <bb 266>;
  else
    goto <bb 267>;
;;    succ:       266
;;                267

;;   basic block 266, loop depth 1
;;    pred:       265
;;                279
  # err_976 = PHI <err_714(265), err_792(279)>
  # DEBUG nedge_traversed => NULL
  # DEBUG err => err_976
  # DEBUG p => NULL
  _715 = (long int) err_976;
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _715;
  _1517 = VERBOSE;
  if (_1517 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;
;;    succ:       268
;;                269

;;   basic block 267, loop depth 1
;;    pred:       265
;;                288
  # nedge_traversed_1191 = PHI <nedge_traversed_557(265), 0(288)>
  # DEBUG nedge_traversed => nedge_traversed_1191
  # DEBUG err => NULL
  # DEBUG p => NULL
  _717 = (long int) nedge_traversed_1191;
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _717;
  _1523 = VERBOSE;
  if (_1523 != 0)
    goto <bb 268>;
  else
    goto <bb 270>;
;;    succ:       268
;;                270

;;   basic block 268, loop depth 1
;;    pred:       267
;;                290
;;                266
  _580 = stderr;
  # DEBUG __stream => _580
  # DEBUG __fmt => "done\n"
  __fprintf_chk (_580, 1, "done\n");
  pretmp_1286 = MEM[symbol: bfs_nedge, index: _1361, offset: 0B];
  if (pretmp_1286 < 0)
    goto <bb 269>;
  else
    goto <bb 270>;
;;    succ:       269
;;                270

;;   basic block 269, loop depth 0
;;    pred:       266
;;                290
;;                268
  # prephitmp_1156 = PHI <_715(266), -999(290), pretmp_1286(268)>
  _582 = stderr;
  _583 = bfs_root[m_937];
  # DEBUG __stream => _582
  # DEBUG __fmt => "bfs %d from %ld failed verification (%ld)\n"
  __fprintf_chk (_582, 1, "bfs %d from %ld failed verification (%ld)\n", m_937, _583, prephitmp_1156);
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  abort ();
;;    succ:      

;;   basic block 270, loop depth 1
;;    pred:       268
;;                267
  # DEBUG p => bfs_tree_622
  free (bfs_tree_622);
  # DEBUG p => NULL
  max_bfsvtx ={v} {CLOBBER};
  _744 = (unsigned int) ivtmp.94_1264;
  _748 = _744 + 1;
  _759 = (int) _748;
  # DEBUG m => _759
  # DEBUG m => _759
  _585 = NBFS;
  ivtmp.94_1263 = ivtmp.94_1264 + 1;
  if (_585 > _759)
    goto <bb 182>;
  else
    goto <bb 175>;
;;    succ:       182
;;                175

;;   basic block 271, loop depth 0
;;    pred:       129
;;                131
;;                175
  # _1 = PHI <1(129), 1(131), 0(175)>
  return _1;
;;    succ:       EXIT

;;   basic block 272, loop depth 0
;;    pred:       71
;;                72
;;    succ:       273

;;   basic block 273, loop depth 0
;;    pred:       272
;;                73
  # DEBUG seed => -1
  goto <bb 74>;
;;    succ:       74

;;   basic block 274, loop depth 2
;;    pred:       215
;;                231
;;                236
  # DEBUG terr => 0
  goto <bb 237>;
;;    succ:       237

;;   basic block 275, loop depth 2
;;    pred:       220
;;                214
;;                222
  # err_1109 = PHI <-2(220), err_1084(214), -1(222)>
  # DEBUG terr => err_1109
  goto <bb 237>;
;;    succ:       237

;;   basic block 276, loop depth 2
;;    pred:       242
  # DEBUG terr => -10
  # DEBUG terr => -10
  _1098 = _574 < j_659;
  _1106 = _574 >= i_655;
  _1105 = _1098 & _1106;
  if (_1105 != 0)
    goto <bb 285>;
  else
    goto <bb 277>;
;;    succ:       285
;;                277

;;   basic block 277, loop depth 2
;;    pred:       276
  goto <bb 285>;
;;    succ:       285

;;   basic block 278, loop depth 2
;;    pred:       246
;;                287
  # err_1099 = PHI <-12(246), -13(287)>
  # DEBUG terr => err_1099
  # DEBUG err => err_1099
  # DEBUG err => err_1099
  goto <bb 254>;
;;    succ:       254

;;   basic block 279, loop depth 1
;;    pred:       284
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  # DEBUG nedge_traversed => 0
  # DEBUG err => err_792
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  goto <bb 266>;
;;    succ:       266

;;   basic block 280, loop depth 2
;;    pred:       107
;;                108
;;                105
  # prephitmp_1443 = PHI <1(107), 0(108), 0(105)>
  # prephitmp_1444 = PHI <1(107), 0(108), 1(105)>
  # DEBUG st => NULL
  # DEBUG val => NULL
  # DEBUG square => NULL
  # DEBUG src_offset => NULL
  # DEBUG tgt_offset => NULL
  if (base_tgt_310 < base_src_819)
    goto <bb 281>;
  else
    goto <bb 282>;
;;    succ:       281
;;                282

;;   basic block 281, loop depth 0
;;    pred:       280
  new_state.z5 = prephitmp_1437;
  new_state.z4 = prephitmp_1438;
  new_state.z3 = prephitmp_1439;
  new_state.z2 = prephitmp_1440;
  new_state.z1 = prephitmp_1436;
  goto <bb 111>;
;;    succ:       111

;;   basic block 282, loop depth 2
;;    pred:       280
  pretmp_1448 = nverts_308 >> 1;
  pretmp_1449 = prephitmp_1443 * pretmp_1448;
  goto <bb 291>;
;;    succ:       291

;;   basic block 283, loop depth 1
;;    pred:       188
  if (err_568 != 0)
    goto <bb 190>;
  else
    goto <bb 192>;
;;    succ:       190
;;                192

;;   basic block 284, loop depth 1
;;    pred:       237
  # DEBUG level => NULL
  # DEBUG nv => NULL
  # DEBUG bfs_tree => NULL
  # DEBUG root => NULL
  # DEBUG lastlvl => NULL
  # DEBUG nhop => NULL
  # DEBUG parent => NULL
  # DEBUG k => NULL
  # DEBUG err => NULL
  # DEBUG err => NULL
  if (err_792 != 0)
    goto <bb 279>;
  else
    goto <bb 239>;
;;    succ:       279
;;                239

;;   basic block 285, loop depth 2
;;    pred:       277
;;                276
;;                243
  # err_1143 = PHI <-10(277), -11(276), -11(243)>
  # DEBUG err => err_1143
  goto <bb 254>;
;;    succ:       254

;;   basic block 286, loop depth 2
;;    pred:       246
  # DEBUG terr => 0
  # DEBUG terr => 0
  # DEBUG err => 0
  nedge_traversed_686 = nedge_traversed_728 + 1;
  # DEBUG nedge_traversed => nedge_traversed_686
  if (i_655 != j_659)
    goto <bb 247>;
  else
    goto <bb 250>;
;;    succ:       247
;;                250

;;   basic block 287, loop depth 2
;;    pred:       245
  # DEBUG terr => 0
  _1076 = (long unsigned int) j_659;
  _1074 = _1076 * 8;
  _1073 = bfs_tree_622 + _1074;
  _733 = *_1073;
  if (_733 >= 0)
    goto <bb 278>;
  else
    goto <bb 254>;
;;    succ:       278
;;                254

;;   basic block 288, loop depth 1
;;    pred:       289
  # DEBUG nedge_traversed => 0
  # DEBUG err => 0
  # DEBUG p => seen_edge_794
  free (seen_edge_794);
  # DEBUG p => NULL
  goto <bb 267>;
;;    succ:       267

;;   basic block 289, loop depth 1
;;    pred:       238
  # DEBUG k => 0
  # DEBUG err => 0
  if (nv_635 > 0)
    goto <bb 257>;
  else
    goto <bb 288>;
;;    succ:       257
;;                288

;;   basic block 290, loop depth 1
;;    pred:       194
;;                195
  # DEBUG bfs_tree_in => NULL
  # DEBUG max_bfsvtx => NULL
  # DEBUG root => NULL
  # DEBUG IJ_in => NULL
  # DEBUG nedge => NULL
  # DEBUG lvldiff => NULL
  # DEBUG j => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG nv => NULL
  # DEBUG level => NULL
  # DEBUG seen_edge => NULL
  # DEBUG nedge_traversed => NULL
  # DEBUG err => NULL
  MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = -999;
  _1193 = VERBOSE;
  if (_1193 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;
;;    succ:       268
;;                269

;;   basic block 291, loop depth 2
;;    pred:       282
;;                114
;;                113
  # prephitmp_1478 = PHI <pretmp_1449(282), pretmp_1446(114), 0(113)>
  # prephitmp_1479 = PHI <prephitmp_1444(282), 0(114), 1(113)>
  # nverts_1481 = PHI <pretmp_1448(282), pretmp_1446(114), pretmp_1472(113)>
  # DEBUG tgt_offset => NULL
  # DEBUG src_offset => NULL
  # DEBUG D#31 => nverts_308 >> 1
  # DEBUG nverts => D#31
  # DEBUG level => NULL
  base_src_1482 = base_src_819 + prephitmp_1478;
  # DEBUG base_src => base_src_1482
  _1520 = prephitmp_1479 * nverts_1481;
  base_tgt_1490 = base_tgt_310 + _1520;
  # DEBUG base_tgt => base_tgt_1490
  # DEBUG base_tgt => base_tgt_1490
  # DEBUG base_src => base_src_1482
  # DEBUG level => NULL
  # DEBUG nverts => D#31
  if (nverts_1481 != 1)
    goto <bb 94>;
  else
    goto <bb 115>;
;;    succ:       94
;;                115

}


Partition 3: size 40 align 8
	new_state	ts	new_state
Partition 0: size 8 align 8
	max_bfsvtx
Inserting a value copy on edge BB17->BB18 : PART.122 = -1
Inserting a value copy on edge BB21->BB22 : PART.122 = -1
Inserting a value copy on edge BB25->BB26 : PART.122 = -1
Inserting a value copy on edge BB27->BB28 : PART.122 = -1
Inserting a value copy on edge BB29->BB30 : PART.122 = -1
Inserting a value copy on edge BB32->BB33 : PART.122 = -1
Inserting a value copy on edge BB34->BB35 : PART.122 = -1
Inserting a value copy on edge BB36->BB37 : PART.122 = -1
Inserting a value copy on edge BB39->BB40 : PART.122 = -1
Inserting a value copy on edge BB41->BB42 : PART.122 = -1
Inserting a value copy on edge BB43->BB44 : PART.122 = -1
Inserting a value copy on edge BB46->BB47 : PART.122 = -1
Inserting a value copy on edge BB48->BB49 : PART.122 = -1
Inserting a value copy on edge BB50->BB51 : PART.122 = -1
Inserting a value copy on edge BB52->BB53 : PART.122 = -1
Inserting a value copy on edge BB23->BB53 : PART.122 = -1
Inserting a value copy on edge BB19->BB53 : PART.122 = -1
Inserting a value copy on edge BB15->BB53 : PART.122 = 1
Inserting a value copy on edge BB13->BB53 : PART.122 = 1
Inserting a value copy on edge BB6->BB54 : PART.82 = 0
Inserting a value copy on edge BB6->BB54 : PART.90 = 0
Inserting a value copy on edge BB6->BB54 : PART.122 = 0
Inserting a value copy on edge BB273->BB74 : PART.178 = 3737844653
Inserting a value copy on edge BB84->BB86 : PART.222 = 8
Inserting a partition copy on edge BB98->BB99 :PART.204 = PART.52
Inserting a value copy on edge BB98->BB99 : PART.205 = 0
Inserting a value copy on edge BB98->BB99 : PART.509 = 0
Inserting a partition copy on edge BB102->BB101 :PART.588 = PART.457
Inserting a partition copy on edge BB102->BB101 :PART.457 = PART.512
Inserting a partition copy on edge BB102->BB101 :PART.512 = PART.231
Inserting a partition copy on edge BB102->BB101 :PART.231 = PART.238
Inserting a partition copy on edge BB104->BB105 :PART.513 = PART.476
Inserting a partition copy on edge BB104->BB105 :PART.476 = PART.588
Inserting a partition copy on edge BB104->BB105 :PART.588 = PART.457
Inserting a partition copy on edge BB104->BB105 :PART.457 = PART.512
Inserting a partition copy on edge BB104->BB105 :PART.512 = PART.231
Inserting a partition copy on edge BB103->BB105 :PART.476 = PART.457
Inserting a partition copy on edge BB103->BB105 :PART.457 = PART.231
Inserting a partition copy on edge BB103->BB105 :PART.513 = PART.588
Inserting a partition copy on edge BB103->BB105 :PART.588 = PART.512
Inserting a partition copy on edge BB103->BB105 :PART.512 = PART.238
Inserting a value copy on edge BB85->BB116 : PART.205 = 0
Inserting a value copy on edge BB85->BB116 : PART.509 = 0
Inserting a value copy on edge BB83->BB123 : PART.197 = 0
Inserting a value copy on edge BB140->BB142 : PART.337 = 0
Inserting a value copy on edge BB143->BB147 : PART.340 = 0
Inserting a partition copy on edge BB161->BB162 :PART.358 = PART.361
Inserting a value copy on edge BB148->BB163 : PART.550 = 0
Inserting a value copy on edge BB148->BB163 : PART.553 = 0
Inserting a value copy on edge BB148->BB163 : PART.358 = 0
Inserting a partition copy on edge BB162->BB163 :PART.551 = PART.547
Inserting a partition copy on edge BB162->BB163 :PART.547 = PART.405
Inserting a partition copy on edge BB162->BB163 :PART.552 = PART.49
Inserting a partition copy on edge BB162->BB163 :PART.49 = PART.537
Inserting a partition copy on edge BB162->BB163 :PART.537 = PART.408
Inserting a value copy on edge BB174->BB181 : PART.539 = 0
Inserting a partition copy on edge BB200->BB201 :PART.504 = PART.432
Inserting a value copy on edge BB204->BB205 : PART.568 = 3
Inserting a value copy on edge BB202->BB205 : PART.568 = 1
Inserting a value copy on edge BB203->BB205 : PART.568 = 2
Inserting a value copy on edge BB201->BB206 : PART.568 = 0
Inserting a value copy on edge BB207->BB208 : PART.538 = 0
Inserting a value copy on edge BB212->BB213 : PART.477 = 0
Inserting a value copy on edge BB212->BB213 : PART.507 = 0
Inserting a partition copy on edge BB215->BB216 :PART.224 = PART.571
Inserting a partition copy on edge BB215->BB216 :PART.218 = PART.507
Inserting a value copy on edge BB215->BB216 : PART.371 = 0
Inserting a partition copy on edge BB216->BB218 :PART.343 = PART.224
Inserting a partition copy on edge BB223->BB224 :PART.567 = PART.571
Inserting a partition copy on edge BB223->BB224 :PART.223 = PART.486
Inserting a partition copy on edge BB227->BB228 :PART.495 = PART.496
Inserting a partition copy on edge BB234->BB236 :PART.500 = PART.501
Inserting a value copy on edge BB240->BB241 : PART.477 = 0
Inserting a value copy on edge BB240->BB241 : PART.372 = 0
Inserting a partition copy on edge BB241->BB254 :PART.478 = PART.477
Inserting a partition copy on edge BB244->BB254 :PART.478 = PART.477
Inserting a value copy on edge BB287->BB254 : PART.478 = 0
Inserting a value copy on edge BB287->BB254 : PART.477 = 0
Inserting a value copy on edge BB253->BB254 : PART.478 = 0
Inserting a value copy on edge BB253->BB254 : PART.477 = 0
Inserting a value copy on edge BB252->BB254 : PART.478 = -14
Inserting a value copy on edge BB252->BB254 : PART.477 = -14
Inserting a partition copy on edge BB278->BB254 :PART.478 = PART.477
Inserting a partition copy on edge BB285->BB254 :PART.478 = PART.477
Inserting a value copy on edge BB289->BB257 : PART.372 = 0
Inserting a value copy on edge BB289->BB257 : PART.477 = 0
Inserting a value copy on edge BB257->BB258 : PART.198 = 0
Inserting a value copy on edge BB260->BB262 : PART.477 = -15
Inserting a value copy on edge BB261->BB262 : PART.477 = 0
Inserting a value copy on edge BB259->BB263 : PART.477 = 0
Inserting a value copy on edge BB262->BB264 : PART.477 = -16
Inserting a value copy on edge BB288->BB267 : PART.372 = 0
Inserting a value copy on edge BB290->BB269 : PART.474 = -999
Inserting a value copy on edge BB129->BB271 : PART.0 = 1
Inserting a value copy on edge BB131->BB271 : PART.0 = 1
Inserting a value copy on edge BB175->BB271 : PART.0 = 0
Inserting a value copy on edge BB220->BB275 : PART.477 = -2
Inserting a value copy on edge BB222->BB275 : PART.477 = -1
Inserting a value copy on edge BB246->BB278 : PART.477 = -12
Inserting a value copy on edge BB287->BB278 : PART.477 = -13
Inserting a value copy on edge BB107->BB280 : PART.591 = 1
Inserting a value copy on edge BB107->BB280 : PART.590 = 1
Inserting a value copy on edge BB108->BB280 : PART.591 = 0
Inserting a value copy on edge BB108->BB280 : PART.590 = 0
Inserting a value copy on edge BB105->BB280 : PART.591 = 1
Inserting a value copy on edge BB105->BB280 : PART.590 = 0
Inserting a value copy on edge BB277->BB285 : PART.477 = -10
Inserting a value copy on edge BB276->BB285 : PART.477 = -11
Inserting a value copy on edge BB243->BB285 : PART.477 = -11
Inserting a partition copy on edge BB282->BB291 :PART.204 = PART.592
Inserting a partition copy on edge BB114->BB291 :PART.204 = PART.593
Inserting a value copy on edge BB114->BB291 : PART.591 = 0
Inserting a partition copy on edge BB113->BB291 :PART.204 = PART.594
Inserting a value copy on edge BB113->BB291 : PART.591 = 1
Inserting a value copy on edge BB113->BB291 : PART.593 = 0

;; Generating RTL for gimple basic block 2
(const_int 1 [0x1])

Hot cost: 4 (final)

;; if (argc_7(D) > 1)

(insn 289 288 290 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 837 [ argc ])
            (const_int 1 [0x1]))) graph500.c:65 -1
     (nil))

(jump_insn 290 289 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:65 -1
     (int_list:REG_BR_PROB 5248 (nil)))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 294 293 295 11 "" [0 uses])

(note 295 294 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG argc => argc_7(D)

(debug_insn 296 295 0 (var_location:SI argc (const_int 0 [0])) -1
     (nil))
;; # DEBUG argv => argv_9(D)

(debug_insn 297 296 0 (var_location:DI argv (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => 0

(debug_insn 298 297 0 (var_location:SI err (const_int 0 [0])) options.c:44 -1
     (nil))
;; # DEBUG nset => 0

(debug_insn 299 298 0 (var_location:SI nset (const_int 0 [0])) options.c:45 -1
     (nil))
;; # DEBUG whichset => 0

(debug_insn 300 299 0 (var_location:SI whichset (const_int 0 [0])) options.c:46 -1
     (nil))
;; _117 = getenv ("VERBOSE");

(insn 301 300 302 (set (reg:DI 840)
        (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 -1
     (nil))

(insn 302 301 303 (set (reg/f:DI 839)
        (lo_sum:DI (reg:DI 840)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>)
        (nil)))

(insn 303 302 304 (set (reg:DI 0 x0)
        (reg/f:DI 839)) options.c:48 -1
     (nil))

(call_insn 304 303 305 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:48 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 305 304 0 (set (reg/f:DI 293 [ D.3800 ])
        (reg:DI 0 x0)) options.c:48 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_117 != 0B)

(insn 306 305 307 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 293 [ D.3800 ])
            (const_int 0 [0]))) options.c:48 -1
     (nil))

(jump_insn 307 306 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:48 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 5

;; VERBOSE = 1;

(insn 309 308 310 (set (reg:DI 842)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:49 -1
     (nil))

(insn 310 309 311 (set (reg/f:DI 841)
        (lo_sum:DI (reg:DI 842)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:49 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 311 310 312 (set (reg:SI 843)
        (const_int 1 [0x1])) options.c:49 -1
     (nil))

(insn 312 311 0 (set (mem/c:SI (reg/f:DI 841) [3 VERBOSE+0 S4 A32])
        (reg:SI 843)) options.c:49 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 313 312 314 13 "" [0 uses])

(note 314 313 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; switch (c_118) <default: <L12>, case 63: <L1>, case 65: <L8>, case 66: <L9>, case 67: <L10>, case 68: <L11>, case 82: <L3>, case 86: <L2>, case 97: <L8>, case 98: <L9>, case 99: <L10>, case 100: <L11>, case 101: <L7>, case 104: <L1>, case 111: <L4>, case 114: <L5>, case 115: <L6>, case 118: <L0>>

(insn 318 317 319 (set (reg:SI 844)
        (plus:SI (reg/v:SI 294 [ c ])
            (const_int -63 [0xffffffffffffffc1]))) options.c:52 -1
     (nil))

(insn 319 318 320 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 844)
            (const_int 55 [0x37]))) options.c:52 -1
     (nil))

(jump_insn 320 319 321 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:52 -1
     (nil))

(insn 321 320 322 (set (reg:DI 846)
        (high:DI (label_ref 324))) options.c:52 -1
     (nil))

(insn 322 321 323 (set (reg/f:DI 845)
        (lo_sum:DI (reg:DI 846)
            (label_ref 324))) options.c:52 -1
     (expr_list:REG_EQUAL (label_ref 324)
        (nil)))

(jump_insn 323 322 324 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 845)
                            (reg:SI 844)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 324))
        ]) options.c:52 -1
     (nil))

(code_label 324 323 325 17 "" [0 uses])

(jump_table_data 325 324 326 (addr_diff_vec:DI (label_ref:DI 324)
         [
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))

(barrier 326 325 0)

;; Generating RTL for gimple basic block 8

;; <L0>:

(code_label 327 326 328 28 "" [0 uses])

(note 328 327 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __fmt => "%s version %d\n"

(debug_insn 329 328 0 (var_location:DI __fmt (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; __printf_chk (1, "%s version %d\n", "Graph500 sequential list", 0);

(insn 330 329 331 (set (reg:DI 848)
        (high:DI (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 331 330 332 (set (reg/f:DI 847)
        (lo_sum:DI (reg:DI 848)
            (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>)
        (nil)))

(insn 332 331 333 (set (reg:DI 850)
        (high:DI (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 333 332 334 (set (reg/f:DI 849)
        (lo_sum:DI (reg:DI 850)
            (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)
        (nil)))

(insn 334 333 335 (set (reg:SI 3 x3)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 335 334 336 (set (reg:DI 2 x2)
        (reg/f:DI 847)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 336 335 337 (set (reg:DI 1 x1)
        (reg/f:DI 849)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 337 336 338 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(call_insn 338 337 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))

;; # DEBUG __fmt => NULL

(debug_insn 339 338 0 (var_location:DI __fmt (const_int 0 [0])) options.c:54 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; exit (0);

(insn 340 339 341 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:55 -1
     (nil))

(call_insn 341 340 342 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:55 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 342 341 0)

;; Generating RTL for gimple basic block 9

;; <L1>:

(code_label 343 342 344 16 "" [0 uses])

(note 344 343 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __fmt => "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n"

(debug_insn 345 344 0 (var_location:DI __fmt (const_int 0 [0])) -1
     (nil))(mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(const_int 16 [0x10])

Cold cost: 4 (final)
(const_int 14 [0xe])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; __printf_chk (1, "Options:\n  v   : version\n  h|? : this message\n  R   : use R-MAT from SSCA2 (default: use Kronecker generator)\n  s   : R-MAT scale (default %ld)\n  e   : R-MAT edge factor (default %ld)\n  A|a : R-MAT A (default %lg) >= 0\n  B|b : R-MAT B (default %lg) >= 0\n  C|c : R-MAT C (default %lg) >= 0\n  D|d : R-MAT D (default %lg) >= 0\n        Note: Setting 3 of A,B,C,D requires the arguments to sum to\n        at most 1.  Otherwise, the parameters are added and normalized\n        so that the sum is 1.\n  V   : Enable extra (Verbose) output\n  o   : Read the edge list from (or dump to) the named file\n  r   : Read the BFS roots from (or dump to) the named file\n\nOutputs take the form of \"key: value\", with keys:\n  SCALE\n  edgefactor\n  construction_time\n  min_time\n  firstquartile_time\n  median_time\n  thirdquartile_time\n  max_time\n  mean_time\n  stddev_time\n  min_nedge\n  firstquartile_nedge\n  median_nedge\n  thirdquartile_nedge\n  max_nedge\n  mean_nedge\n  stddev_nedge\n  min_TEPS\n  firstquartile_TEPS\n  median_TEPS\n  thirdquartile_TEPS\n  max_TEPS\n  harmonic_mean_TEPS\n  harmonic_stddev_TEPS\n", 14, 16, 5.6999999999999995115018691649311222136020660400390625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 1.90000000000000002220446049250313080847263336181640625e-1, 5.00000000000000444089209850062616169452667236328125e-2);

(insn 346 345 347 (set (reg:DF 851)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 5.00000000000000444089209850062616169452667236328125e-2 [0x0.cccccccccccdp-4])
        (nil)))

(insn 347 346 348 (set (reg:DF 852)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))

(insn 348 347 349 (set (reg:DF 853)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))

(insn 349 348 350 (set (reg:DF 854)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 5.6999999999999995115018691649311222136020660400390625e-1 [0x0.91eb851eb851e8p+0])
        (nil)))

(insn 350 349 351 (set (reg:DI 856)
        (high:DI (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 351 350 352 (set (reg/f:DI 855)
        (lo_sum:DI (reg:DI 856)
            (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)
        (nil)))

(insn 352 351 353 (set (reg:DF 35 v3)
        (reg:DF 851)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 353 352 354 (set (reg:DF 34 v2)
        (reg:DF 852)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 354 353 355 (set (reg:DF 33 v1)
        (reg:DF 853)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 355 354 356 (set (reg:DF 32 v0)
        (reg:DF 854)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 356 355 357 (set (reg:DI 3 x3)
        (const_int 16 [0x10])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 357 356 358 (set (reg:DI 2 x2)
        (const_int 14 [0xe])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 358 357 359 (set (reg:DI 1 x1)
        (reg/f:DI 855)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(insn 359 358 360 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))

(call_insn 360 359 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (expr_list:DF (use (reg:DF 32 v0))
                                (expr_list:DF (use (reg:DF 33 v1))
                                    (expr_list:DF (use (reg:DF 34 v2))
                                        (expr_list:DF (use (reg:DF 35 v3))
                                            (nil))))))))))))

;; # DEBUG __fmt => NULL

(debug_insn 361 360 0 (var_location:DI __fmt (const_int 0 [0])) options.c:59 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; exit (0);

(insn 362 361 363 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:105 -1
     (nil))

(call_insn 363 362 364 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 364 363 0)

;; Generating RTL for gimple basic block 10

;; <L2>:

(code_label 365 364 366 23 "" [0 uses])

(note 366 365 0 NOTE_INSN_BASIC_BLOCK)

;; VERBOSE = 1;

(insn 367 366 368 (set (reg:DI 858)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 -1
     (nil))

(insn 368 367 369 (set (reg/f:DI 857)
        (lo_sum:DI (reg:DI 858)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 369 368 370 (set (reg:SI 859)
        (const_int 1 [0x1])) options.c:108 -1
     (nil))

(insn 370 369 0 (set (mem/c:SI (reg/f:DI 857) [3 VERBOSE+0 S4 A32])
        (reg:SI 859)) options.c:108 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; <L3>:

(code_label 373 372 374 22 "" [0 uses])

(note 374 373 0 NOTE_INSN_BASIC_BLOCK)

;; use_RMAT = 1;

(insn 375 374 376 (set (reg:DI 861)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 -1
     (nil))

(insn 376 375 377 (set (reg/f:DI 860)
        (lo_sum:DI (reg:DI 861)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 377 376 378 (set (reg:SI 862)
        (const_int 1 [0x1])) options.c:111 -1
     (nil))

(insn 378 377 0 (set (mem/c:SI (plus:DI (reg/f:DI 860)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])
        (reg:SI 862)) options.c:111 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; <L4>:

(code_label 381 380 382 25 "" [0 uses])

(note 382 381 0 NOTE_INSN_BASIC_BLOCK)
(mem/f/c:DI (reg/f:DI 863) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _120 = __strdup (_119);

(insn 383 382 384 (set (reg:DI 864)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 -1
     (nil))

(insn 384 383 385 (set (reg/f:DI 863)
        (lo_sum:DI (reg:DI 864)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 385 384 386 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 863) [2 optarg+0 S8 A64])) options.c:114 -1
     (nil))

(call_insn 386 385 387 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 387 386 388 (set (reg/f:DI 865)
        (reg:DI 0 x0)) options.c:114 -1
     (expr_list:REG_NOALIAS (reg/f:DI 865)
        (nil)))

(insn 388 387 0 (set (reg/f:DI 296 [ D.3800 ])
        (reg/f:DI 865)) options.c:114 -1
     (nil))

;; dumpname = _120;

(insn 389 388 390 (set (reg:DI 867)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 -1
     (nil))

(insn 390 389 391 (set (reg/f:DI 866)
        (lo_sum:DI (reg:DI 867)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 391 390 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 866)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])
        (reg/f:DI 296 [ D.3800 ])) options.c:114 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_120 == 0B)

(insn 392 391 393 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 296 [ D.3800 ])
            (const_int 0 [0]))) options.c:115 -1
     (nil))

(jump_insn 393 392 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:115 -1
     (int_list:REG_BR_PROB 9328 (nil)))

;; Generating RTL for gimple basic block 13

;; # DEBUG __stream => _121

(debug_insn 395 394 0 (var_location:DI __stream (const_int 0 [0])) options.c:116 -1
     (nil))
;; # DEBUG __fmt => "Cannot copy dump file name.\n"

(debug_insn 396 395 0 (var_location:DI __fmt (const_int 0 [0])) options.c:116 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 870) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_121, 1, "Cannot copy dump file name.\n");

(insn 397 396 398 (set (reg:DI 869)
        (high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 398 397 399 (set (reg/f:DI 868)
        (lo_sum:DI (reg:DI 869)
            (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
        (nil)))

(insn 399 398 400 (set (reg:DI 871)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 -1
     (nil))

(insn 400 399 401 (set (reg/f:DI 870)
        (lo_sum:DI (reg:DI 871)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 401 400 402 (set (reg:DI 2 x2)
        (reg/f:DI 868)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 402 401 403 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 403 402 404 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 870) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 404 403 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 405 404 0 (var_location:DI __stream (const_int 0 [0])) options.c:116 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 406 405 0 (var_location:DI __fmt (const_int 0 [0])) options.c:116 -1
     (nil))
;; # DEBUG err => 1

(debug_insn 407 406 0 (var_location:SI err (const_int 0 [0])) options.c:117 -1
     (nil))
;; Generating RTL for gimple basic block 14

;; <L5>:

(code_label 410 409 411 26 "" [0 uses])

(note 411 410 0 NOTE_INSN_BASIC_BLOCK)
(mem/f/c:DI (reg/f:DI 872) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _123 = __strdup (_122);

(insn 412 411 413 (set (reg:DI 873)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 -1
     (nil))

(insn 413 412 414 (set (reg/f:DI 872)
        (lo_sum:DI (reg:DI 873)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 414 413 415 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 872) [2 optarg+0 S8 A64])) options.c:121 -1
     (nil))

(call_insn 415 414 416 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:121 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 416 415 417 (set (reg/f:DI 874)
        (reg:DI 0 x0)) options.c:121 -1
     (expr_list:REG_NOALIAS (reg/f:DI 874)
        (nil)))

(insn 417 416 0 (set (reg/f:DI 299 [ D.3800 ])
        (reg/f:DI 874)) options.c:121 -1
     (nil))

;; rootname = _123;

(insn 418 417 419 (set (reg:DI 876)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 -1
     (nil))

(insn 419 418 420 (set (reg/f:DI 875)
        (lo_sum:DI (reg:DI 876)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 420 419 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 875)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])
        (reg/f:DI 299 [ D.3800 ])) options.c:121 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_123 == 0B)

(insn 421 420 422 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 299 [ D.3800 ])
            (const_int 0 [0]))) options.c:122 -1
     (nil))

(jump_insn 422 421 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:122 -1
     (int_list:REG_BR_PROB 9328 (nil)))

;; Generating RTL for gimple basic block 15

;; # DEBUG __stream => _124

(debug_insn 424 423 0 (var_location:DI __stream (const_int 0 [0])) options.c:123 -1
     (nil))
;; # DEBUG __fmt => "Cannot copy BFS root file name.\n"

(debug_insn 425 424 0 (var_location:DI __fmt (const_int 0 [0])) options.c:123 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 879) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_124, 1, "Cannot copy BFS root file name.\n");

(insn 426 425 427 (set (reg:DI 878)
        (high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 427 426 428 (set (reg/f:DI 877)
        (lo_sum:DI (reg:DI 878)
            (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
        (nil)))

(insn 428 427 429 (set (reg:DI 880)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 -1
     (nil))

(insn 429 428 430 (set (reg/f:DI 879)
        (lo_sum:DI (reg:DI 880)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 430 429 431 (set (reg:DI 2 x2)
        (reg/f:DI 877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 431 430 432 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 432 431 433 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 879) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 433 432 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 434 433 0 (var_location:DI __stream (const_int 0 [0])) options.c:123 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 435 434 0 (var_location:DI __fmt (const_int 0 [0])) options.c:123 -1
     (nil))
;; # DEBUG err => 1

(debug_insn 436 435 0 (var_location:SI err (const_int 0 [0])) options.c:124 -1
     (nil))
;; Generating RTL for gimple basic block 16

;; <L6>:

(code_label 439 438 440 27 "" [0 uses])

(note 440 439 0 NOTE_INSN_BASIC_BLOCK)

;; _125 = __errno_location ();

(call_insn/u 441 440 442 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:128 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 442 441 0 (set (reg/f:DI 301 [ D.3807 ])
        (reg:DI 0 x0)) options.c:128 -1
     (nil))

;; *_125 = 0;

(insn 443 442 0 (set (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])
        (const_int 0 [0])) options.c:128 -1
     (nil))
(const_int 10 [0xa])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _127 = strtol (_126, 0B, 10);

(insn 444 443 445 (set (reg:DI 882)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 -1
     (nil))

(insn 445 444 446 (set (reg/f:DI 881)
        (lo_sum:DI (reg:DI 882)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 446 445 447 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:129 -1
     (nil))

(insn 447 446 448 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:129 -1
     (nil))

(insn 448 447 449 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) options.c:129 -1
     (nil))

(call_insn 449 448 450 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))

(insn 450 449 0 (set (reg:DI 303 [ D.3798 ])
        (reg:DI 0 x0)) options.c:129 -1
     (nil))

;; SCALE = _127;

(insn 451 450 452 (set (reg:DI 884)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 -1
     (nil))

(insn 452 451 453 (set (reg/f:DI 883)
        (lo_sum:DI (reg:DI 884)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 453 452 0 (set (mem/c:DI (reg/f:DI 883) [4 SCALE+0 S8 A64])
        (reg:DI 303 [ D.3798 ])) options.c:129 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_128 != 0)

(insn 454 453 455 (set (reg:SI 885)
        (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])) options.c:130 -1
     (nil))

(insn 455 454 456 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 885)
            (const_int 0 [0]))) options.c:130 -1
     (nil))

(jump_insn 456 455 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:130 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 17

;; # DEBUG __stream => _129

(debug_insn 458 457 0 (var_location:DI __stream (const_int 0 [0])) options.c:131 -1
     (nil))
;; # DEBUG __fmt => "Error parsing scale %s\n"

(debug_insn 459 458 0 (var_location:DI __fmt (const_int 0 [0])) options.c:131 -1
     (nil))(mem/f/c:DI (reg/f:DI 886) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 890) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_129, 1, "Error parsing scale %s\n", _130);

(insn 460 459 461 (set (reg:DI 887)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:131 -1
     (nil))

(insn 461 460 462 (set (reg/f:DI 886)
        (lo_sum:DI (reg:DI 887)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:131 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 462 461 463 (set (reg:DI 889)
        (high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 463 462 464 (set (reg/f:DI 888)
        (lo_sum:DI (reg:DI 889)
            (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
        (nil)))

(insn 464 463 465 (set (reg:DI 891)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 -1
     (nil))

(insn 465 464 466 (set (reg/f:DI 890)
        (lo_sum:DI (reg:DI 891)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 466 465 467 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 886) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 467 466 468 (set (reg:DI 2 x2)
        (reg/f:DI 888)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 468 467 469 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 469 468 470 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 890) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 470 469 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 471 470 0 (var_location:DI __stream (const_int 0 [0])) options.c:131 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 472 471 0 (var_location:DI __fmt (const_int 0 [0])) options.c:131 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 473 472 0 (var_location:SI err (const_int 0 [0])) options.c:132 -1
     (nil))
;; Generating RTL for gimple basic block 18

;; 

(code_label 474 473 475 30 "" [0 uses])

(note 475 474 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_249

(debug_insn 476 475 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_131 <= 0)

(insn 477 476 478 (set (reg:DI 893)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 -1
     (nil))

(insn 478 477 479 (set (reg/f:DI 892)
        (lo_sum:DI (reg:DI 893)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 479 478 480 (set (reg:DI 894)
        (mem/c:DI (reg/f:DI 892) [4 SCALE+0 S8 A64])) options.c:134 -1
     (nil))

(insn 480 479 481 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 894)
            (const_int 0 [0]))) options.c:134 -1
     (nil))

(jump_insn 481 480 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:134 -1
     (int_list:REG_BR_PROB 8688 (nil)))

;; Generating RTL for gimple basic block 19

;; # DEBUG __stream => _132

(debug_insn 483 482 0 (var_location:DI __stream (const_int 0 [0])) options.c:135 -1
     (nil))
;; # DEBUG __fmt => "Scale must be non-negative.\n"

(debug_insn 484 483 0 (var_location:DI __fmt (const_int 0 [0])) options.c:135 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 897) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_132, 1, "Scale must be non-negative.\n");

(insn 485 484 486 (set (reg:DI 896)
        (high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 486 485 487 (set (reg/f:DI 895)
        (lo_sum:DI (reg:DI 896)
            (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
        (nil)))

(insn 487 486 488 (set (reg:DI 898)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 -1
     (nil))

(insn 488 487 489 (set (reg/f:DI 897)
        (lo_sum:DI (reg:DI 898)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 489 488 490 (set (reg:DI 2 x2)
        (reg/f:DI 895)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 490 489 491 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 491 490 492 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 897) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 492 491 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 493 492 0 (var_location:DI __stream (const_int 0 [0])) options.c:135 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 494 493 0 (var_location:DI __fmt (const_int 0 [0])) options.c:135 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 495 494 0 (var_location:SI err (const_int 0 [0])) options.c:136 -1
     (nil))
;; Generating RTL for gimple basic block 20

;; <L7>:

(code_label 498 497 499 24 "" [0 uses])

(note 499 498 0 NOTE_INSN_BASIC_BLOCK)

;; _133 = __errno_location ();

(call_insn/u 500 499 501 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 501 500 0 (set (reg/f:DI 309 [ D.3807 ])
        (reg:DI 0 x0)) options.c:140 -1
     (nil))

;; *_133 = 0;

(insn 502 501 0 (set (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])
        (const_int 0 [0])) options.c:140 -1
     (nil))
(const_int 10 [0xa])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _135 = strtol (_134, 0B, 10);

(insn 503 502 504 (set (reg:DI 900)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 -1
     (nil))

(insn 504 503 505 (set (reg/f:DI 899)
        (lo_sum:DI (reg:DI 900)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 505 504 506 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:141 -1
     (nil))

(insn 506 505 507 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:141 -1
     (nil))

(insn 507 506 508 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) options.c:141 -1
     (nil))

(call_insn 508 507 509 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))

(insn 509 508 0 (set (reg:DI 311 [ D.3798 ])
        (reg:DI 0 x0)) options.c:141 -1
     (nil))

;; edgefactor = _135;

(insn 510 509 511 (set (reg:DI 902)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 -1
     (nil))

(insn 511 510 512 (set (reg/f:DI 901)
        (lo_sum:DI (reg:DI 902)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 512 511 0 (set (mem/c:DI (plus:DI (reg/f:DI 901)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])
        (reg:DI 311 [ D.3798 ])) options.c:141 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_136 != 0)

(insn 513 512 514 (set (reg:SI 903)
        (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])) options.c:142 -1
     (nil))

(insn 514 513 515 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 903)
            (const_int 0 [0]))) options.c:142 -1
     (nil))

(jump_insn 515 514 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:142 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 21

;; # DEBUG __stream => _137

(debug_insn 517 516 0 (var_location:DI __stream (const_int 0 [0])) options.c:143 -1
     (nil))
;; # DEBUG __fmt => "Error parsing edge factor %s\n"

(debug_insn 518 517 0 (var_location:DI __fmt (const_int 0 [0])) options.c:143 -1
     (nil))(mem/f/c:DI (reg/f:DI 904) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 908) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_137, 1, "Error parsing edge factor %s\n", _138);

(insn 519 518 520 (set (reg:DI 905)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:143 -1
     (nil))

(insn 520 519 521 (set (reg/f:DI 904)
        (lo_sum:DI (reg:DI 905)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:143 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 521 520 522 (set (reg:DI 907)
        (high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 522 521 523 (set (reg/f:DI 906)
        (lo_sum:DI (reg:DI 907)
            (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
        (nil)))

(insn 523 522 524 (set (reg:DI 909)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 -1
     (nil))

(insn 524 523 525 (set (reg/f:DI 908)
        (lo_sum:DI (reg:DI 909)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 525 524 526 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 904) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 526 525 527 (set (reg:DI 2 x2)
        (reg/f:DI 906)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 527 526 528 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 528 527 529 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 908) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 529 528 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 530 529 0 (var_location:DI __stream (const_int 0 [0])) options.c:143 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 531 530 0 (var_location:DI __fmt (const_int 0 [0])) options.c:143 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 532 531 0 (var_location:SI err (const_int 0 [0])) options.c:144 -1
     (nil))
;; Generating RTL for gimple basic block 22

;; 

(code_label 533 532 534 31 "" [0 uses])

(note 534 533 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_250

(debug_insn 535 534 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_139 <= 0)

(insn 536 535 537 (set (reg:DI 911)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 -1
     (nil))

(insn 537 536 538 (set (reg/f:DI 910)
        (lo_sum:DI (reg:DI 911)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 538 537 539 (set (reg:DI 912)
        (mem/c:DI (plus:DI (reg/f:DI 910)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) options.c:146 -1
     (nil))

(insn 539 538 540 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 912)
            (const_int 0 [0]))) options.c:146 -1
     (nil))

(jump_insn 540 539 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:146 -1
     (int_list:REG_BR_PROB 8688 (nil)))

;; Generating RTL for gimple basic block 23

;; # DEBUG __stream => _140

(debug_insn 542 541 0 (var_location:DI __stream (const_int 0 [0])) options.c:147 -1
     (nil))
;; # DEBUG __fmt => "Edge factor must be non-negative.\n"

(debug_insn 543 542 0 (var_location:DI __fmt (const_int 0 [0])) options.c:147 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 915) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_140, 1, "Edge factor must be non-negative.\n");

(insn 544 543 545 (set (reg:DI 914)
        (high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 545 544 546 (set (reg/f:DI 913)
        (lo_sum:DI (reg:DI 914)
            (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
        (nil)))

(insn 546 545 547 (set (reg:DI 916)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 -1
     (nil))

(insn 547 546 548 (set (reg/f:DI 915)
        (lo_sum:DI (reg:DI 916)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 548 547 549 (set (reg:DI 2 x2)
        (reg/f:DI 913)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 549 548 550 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 550 549 551 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 915) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 551 550 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 552 551 0 (var_location:DI __stream (const_int 0 [0])) options.c:147 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 553 552 0 (var_location:DI __fmt (const_int 0 [0])) options.c:147 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 554 553 0 (var_location:SI err (const_int 0 [0])) options.c:148 -1
     (nil))
;; Generating RTL for gimple basic block 24

;; <L8>:

(code_label 557 556 558 18 "" [0 uses])

(note 558 557 0 NOTE_INSN_BASIC_BLOCK)

;; _141 = __errno_location ();

(call_insn/u 559 558 560 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:153 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 560 559 0 (set (reg/f:DI 317 [ D.3807 ])
        (reg:DI 0 x0)) options.c:153 -1
     (nil))

;; *_141 = 0;

(insn 561 560 0 (set (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])
        (const_int 0 [0])) options.c:153 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 917) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _143 = strtod (_142, 0B);

(insn 562 561 563 (set (reg:DI 918)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 -1
     (nil))

(insn 563 562 564 (set (reg/f:DI 917)
        (lo_sum:DI (reg:DI 918)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 564 563 565 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:154 -1
     (nil))

(insn 565 564 566 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 917) [2 optarg+0 S8 A64])) options.c:154 -1
     (nil))

(call_insn 566 565 567 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:154 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

(insn 567 566 0 (set (reg:DF 319 [ D.3804 ])
        (reg:DF 32 v0)) options.c:154 -1
     (nil))

;; A = _143;

(insn 568 567 569 (set (reg:DI 920)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 -1
     (nil))

(insn 569 568 570 (set (reg/f:DI 919)
        (lo_sum:DI (reg:DI 920)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 570 569 0 (set (mem/c:DF (plus:DI (reg/f:DI 919)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 319 [ D.3804 ])) options.c:154 -1
     (nil))
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_145 != 0)

(insn 571 570 572 (set (reg:SI 921 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:155 -1
     (nil))

(insn 572 571 573 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 921 [ D.3797 ])
            (const_int 0 [0]))) options.c:155 -1
     (nil))

(jump_insn 573 572 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:155 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 25

;; # DEBUG __stream => _146

(debug_insn 575 574 0 (var_location:DI __stream (const_int 0 [0])) options.c:156 -1
     (nil))
;; # DEBUG __fmt => "A already set\n"

(debug_insn 576 575 0 (var_location:DI __fmt (const_int 0 [0])) options.c:156 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 924) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_146, 1, "A already set\n");

(insn 577 576 578 (set (reg:DI 923)
        (high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 578 577 579 (set (reg/f:DI 922)
        (lo_sum:DI (reg:DI 923)
            (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
        (nil)))

(insn 579 578 580 (set (reg:DI 925)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 -1
     (nil))

(insn 580 579 581 (set (reg/f:DI 924)
        (lo_sum:DI (reg:DI 925)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 581 580 582 (set (reg:DI 2 x2)
        (reg/f:DI 922)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 582 581 583 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 583 582 584 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 924) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 584 583 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 585 584 0 (var_location:DI __stream (const_int 0 [0])) options.c:156 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 586 585 0 (var_location:DI __fmt (const_int 0 [0])) options.c:156 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 587 586 0 (var_location:SI err (const_int 0 [0])) options.c:157 -1
     (nil))
;; Generating RTL for gimple basic block 26

;; 

(code_label 588 587 589 32 "" [0 uses])

(note 589 588 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_251

(debug_insn 590 589 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_147 != 0)

(insn 591 590 592 (set (reg:SI 926)
        (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])) options.c:159 -1
     (nil))

(insn 592 591 593 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 926)
            (const_int 0 [0]))) options.c:159 -1
     (nil))

(jump_insn 593 592 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:159 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 27

;; # DEBUG __stream => _148

(debug_insn 595 594 0 (var_location:DI __stream (const_int 0 [0])) options.c:160 -1
     (nil))
;; # DEBUG __fmt => "Error parsing A %s\n"

(debug_insn 596 595 0 (var_location:DI __fmt (const_int 0 [0])) options.c:160 -1
     (nil))(mem/f/c:DI (reg/f:DI 927) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 931) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_148, 1, "Error parsing A %s\n", _149);

(insn 597 596 598 (set (reg:DI 928)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 -1
     (nil))

(insn 598 597 599 (set (reg/f:DI 927)
        (lo_sum:DI (reg:DI 928)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 599 598 600 (set (reg:DI 930)
        (high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 600 599 601 (set (reg/f:DI 929)
        (lo_sum:DI (reg:DI 930)
            (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
        (nil)))

(insn 601 600 602 (set (reg:DI 932)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 -1
     (nil))

(insn 602 601 603 (set (reg/f:DI 931)
        (lo_sum:DI (reg:DI 932)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 603 602 604 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 927) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 604 603 605 (set (reg:DI 2 x2)
        (reg/f:DI 929)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 605 604 606 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 606 605 607 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 931) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 607 606 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 608 607 0 (var_location:DI __stream (const_int 0 [0])) options.c:160 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 609 608 0 (var_location:DI __fmt (const_int 0 [0])) options.c:160 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 610 609 0 (var_location:SI err (const_int 0 [0])) options.c:161 -1
     (nil))
;; Generating RTL for gimple basic block 28

;; 

(code_label 611 610 612 33 "" [0 uses])

(note 612 611 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_252

(debug_insn 613 612 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_150 < 0.0)

(insn 614 613 615 (set (reg:DI 934)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 -1
     (nil))

(insn 615 614 616 (set (reg/f:DI 933)
        (lo_sum:DI (reg:DI 934)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 616 615 617 (set (reg:DF 935)
        (mem/c:DF (plus:DI (reg/f:DI 933)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:163 -1
     (nil))

(insn 617 616 618 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 935)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:163 -1
     (nil))

(jump_insn 618 617 619 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 621)
            (pc))) options.c:163 -1
     (int_list:REG_BR_PROB 1312 (nil)))

(jump_insn 619 618 620 (set (pc)
        (label_ref 0)) options.c:163 -1
     (nil))

(barrier 620 619 621)

(code_label 621 620 0 35 "" [0 uses])

;; Generating RTL for gimple basic block 29

;; # DEBUG __stream => _151

(debug_insn 623 622 0 (var_location:DI __stream (const_int 0 [0])) options.c:164 -1
     (nil))
;; # DEBUG __fmt => "A must be non-negative\n"

(debug_insn 624 623 0 (var_location:DI __fmt (const_int 0 [0])) options.c:164 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 938) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_151, 1, "A must be non-negative\n");

(insn 625 624 626 (set (reg:DI 937)
        (high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 626 625 627 (set (reg/f:DI 936)
        (lo_sum:DI (reg:DI 937)
            (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
        (nil)))

(insn 627 626 628 (set (reg:DI 939)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 -1
     (nil))

(insn 628 627 629 (set (reg/f:DI 938)
        (lo_sum:DI (reg:DI 939)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 629 628 630 (set (reg:DI 2 x2)
        (reg/f:DI 936)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 630 629 631 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 631 630 632 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 938) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 632 631 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 633 632 0 (var_location:DI __stream (const_int 0 [0])) options.c:164 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 634 633 0 (var_location:DI __fmt (const_int 0 [0])) options.c:164 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 635 634 0 (var_location:SI err (const_int 0 [0])) options.c:165 -1
     (nil))
;; Generating RTL for gimple basic block 30

;; 

(code_label 636 635 637 34 "" [0 uses])

(note 637 636 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_253

(debug_insn 638 637 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; whichset_152 = whichset_144 | 1;

(insn 639 638 0 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:167 -1
     (nil))

;; # DEBUG whichset => whichset_152

(debug_insn 640 639 0 (var_location:SI whichset (const_int 0 [0])) options.c:167 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; nset_154 = nset_153 + 1;

(insn 641 640 0 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:168 -1
     (nil))

;; # DEBUG nset => nset_154

(debug_insn 642 641 0 (var_location:SI nset (const_int 0 [0])) options.c:168 -1
     (nil))
;; Generating RTL for gimple basic block 31

;; <L9>:

(code_label 645 644 646 19 "" [0 uses])

(note 646 645 0 NOTE_INSN_BASIC_BLOCK)

;; _155 = __errno_location ();

(call_insn/u 647 646 648 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 648 647 0 (set (reg/f:DI 329 [ D.3807 ])
        (reg:DI 0 x0)) options.c:172 -1
     (nil))

;; *_155 = 0;

(insn 649 648 0 (set (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])
        (const_int 0 [0])) options.c:172 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 940) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _157 = strtod (_156, 0B);

(insn 650 649 651 (set (reg:DI 941)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 -1
     (nil))

(insn 651 650 652 (set (reg/f:DI 940)
        (lo_sum:DI (reg:DI 941)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 652 651 653 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:173 -1
     (nil))

(insn 653 652 654 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 940) [2 optarg+0 S8 A64])) options.c:173 -1
     (nil))

(call_insn 654 653 655 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:173 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

(insn 655 654 0 (set (reg:DF 331 [ D.3804 ])
        (reg:DF 32 v0)) options.c:173 -1
     (nil))

;; B = _157;

(insn 656 655 657 (set (reg:DI 943)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 -1
     (nil))

(insn 657 656 658 (set (reg/f:DI 942)
        (lo_sum:DI (reg:DI 943)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 658 657 0 (set (mem/c:DF (plus:DI (reg/f:DI 942)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 331 [ D.3804 ])) options.c:173 -1
     (nil))
(const_int 2 [0x2])

Cold cost: 4 (final)
(const_int 2 [0x2])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_158 != 0)

(insn 659 658 660 (set (reg:SI 944 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:174 -1
     (nil))

(insn 660 659 661 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 944 [ D.3797 ])
            (const_int 0 [0]))) options.c:174 -1
     (nil))

(jump_insn 661 660 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:174 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 32

;; # DEBUG __stream => _159

(debug_insn 663 662 0 (var_location:DI __stream (const_int 0 [0])) options.c:175 -1
     (nil))
;; # DEBUG __fmt => "B already set\n"

(debug_insn 664 663 0 (var_location:DI __fmt (const_int 0 [0])) options.c:175 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 947) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_159, 1, "B already set\n");

(insn 665 664 666 (set (reg:DI 946)
        (high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 666 665 667 (set (reg/f:DI 945)
        (lo_sum:DI (reg:DI 946)
            (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
        (nil)))

(insn 667 666 668 (set (reg:DI 948)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 -1
     (nil))

(insn 668 667 669 (set (reg/f:DI 947)
        (lo_sum:DI (reg:DI 948)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 669 668 670 (set (reg:DI 2 x2)
        (reg/f:DI 945)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 670 669 671 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 671 670 672 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 947) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 672 671 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 673 672 0 (var_location:DI __stream (const_int 0 [0])) options.c:175 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 674 673 0 (var_location:DI __fmt (const_int 0 [0])) options.c:175 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 675 674 0 (var_location:SI err (const_int 0 [0])) options.c:176 -1
     (nil))
;; Generating RTL for gimple basic block 33

;; 

(code_label 676 675 677 36 "" [0 uses])

(note 677 676 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_254

(debug_insn 678 677 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_160 != 0)

(insn 679 678 680 (set (reg:SI 949)
        (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])) options.c:178 -1
     (nil))

(insn 680 679 681 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 949)
            (const_int 0 [0]))) options.c:178 -1
     (nil))

(jump_insn 681 680 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:178 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 34

;; # DEBUG __stream => _161

(debug_insn 683 682 0 (var_location:DI __stream (const_int 0 [0])) options.c:179 -1
     (nil))
;; # DEBUG __fmt => "Error parsing B %s\n"

(debug_insn 684 683 0 (var_location:DI __fmt (const_int 0 [0])) options.c:179 -1
     (nil))(mem/f/c:DI (reg/f:DI 950) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 954) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_161, 1, "Error parsing B %s\n", _162);

(insn 685 684 686 (set (reg:DI 951)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 -1
     (nil))

(insn 686 685 687 (set (reg/f:DI 950)
        (lo_sum:DI (reg:DI 951)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 687 686 688 (set (reg:DI 953)
        (high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 688 687 689 (set (reg/f:DI 952)
        (lo_sum:DI (reg:DI 953)
            (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
        (nil)))

(insn 689 688 690 (set (reg:DI 955)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 -1
     (nil))

(insn 690 689 691 (set (reg/f:DI 954)
        (lo_sum:DI (reg:DI 955)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 691 690 692 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 950) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 692 691 693 (set (reg:DI 2 x2)
        (reg/f:DI 952)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 693 692 694 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 694 693 695 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 954) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 695 694 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 696 695 0 (var_location:DI __stream (const_int 0 [0])) options.c:179 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 697 696 0 (var_location:DI __fmt (const_int 0 [0])) options.c:179 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 698 697 0 (var_location:SI err (const_int 0 [0])) options.c:180 -1
     (nil))
;; Generating RTL for gimple basic block 35

;; 

(code_label 699 698 700 37 "" [0 uses])

(note 700 699 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_255

(debug_insn 701 700 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_163 < 0.0)

(insn 702 701 703 (set (reg:DI 957)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 -1
     (nil))

(insn 703 702 704 (set (reg/f:DI 956)
        (lo_sum:DI (reg:DI 957)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 704 703 705 (set (reg:DF 958)
        (mem/c:DF (plus:DI (reg/f:DI 956)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:182 -1
     (nil))

(insn 705 704 706 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 958)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:182 -1
     (nil))

(jump_insn 706 705 707 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) options.c:182 -1
     (int_list:REG_BR_PROB 1312 (nil)))

(jump_insn 707 706 708 (set (pc)
        (label_ref 0)) options.c:182 -1
     (nil))

(barrier 708 707 709)

(code_label 709 708 0 39 "" [0 uses])

;; Generating RTL for gimple basic block 36

;; # DEBUG __stream => _164

(debug_insn 711 710 0 (var_location:DI __stream (const_int 0 [0])) options.c:183 -1
     (nil))
;; # DEBUG __fmt => "B must be non-negative\n"

(debug_insn 712 711 0 (var_location:DI __fmt (const_int 0 [0])) options.c:183 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 961) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_164, 1, "B must be non-negative\n");

(insn 713 712 714 (set (reg:DI 960)
        (high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 714 713 715 (set (reg/f:DI 959)
        (lo_sum:DI (reg:DI 960)
            (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
        (nil)))

(insn 715 714 716 (set (reg:DI 962)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 -1
     (nil))

(insn 716 715 717 (set (reg/f:DI 961)
        (lo_sum:DI (reg:DI 962)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 717 716 718 (set (reg:DI 2 x2)
        (reg/f:DI 959)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 718 717 719 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 719 718 720 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 961) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 720 719 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 721 720 0 (var_location:DI __stream (const_int 0 [0])) options.c:183 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 722 721 0 (var_location:DI __fmt (const_int 0 [0])) options.c:183 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 723 722 0 (var_location:SI err (const_int 0 [0])) options.c:184 -1
     (nil))
;; Generating RTL for gimple basic block 37

;; 

(code_label 724 723 725 38 "" [0 uses])

(note 725 724 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_256

(debug_insn 726 725 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 2 [0x2])

Cold cost: 4 (final)
(const_int 2 [0x2])

Cold cost: 4 (final)

;; whichset_165 = whichset_144 | 2;

(insn 727 726 0 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:186 -1
     (nil))

;; # DEBUG whichset => whichset_165

(debug_insn 728 727 0 (var_location:SI whichset (const_int 0 [0])) options.c:186 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; nset_166 = nset_153 + 1;

(insn 729 728 0 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:187 -1
     (nil))

;; # DEBUG nset => nset_166

(debug_insn 730 729 0 (var_location:SI nset (const_int 0 [0])) options.c:187 -1
     (nil))
;; Generating RTL for gimple basic block 38

;; <L10>:

(code_label 733 732 734 20 "" [0 uses])

(note 734 733 0 NOTE_INSN_BASIC_BLOCK)

;; _167 = __errno_location ();

(call_insn/u 735 734 736 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 736 735 0 (set (reg/f:DI 339 [ D.3807 ])
        (reg:DI 0 x0)) options.c:191 -1
     (nil))

;; *_167 = 0;

(insn 737 736 0 (set (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])
        (const_int 0 [0])) options.c:191 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 963) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _169 = strtod (_168, 0B);

(insn 738 737 739 (set (reg:DI 964)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 -1
     (nil))

(insn 739 738 740 (set (reg/f:DI 963)
        (lo_sum:DI (reg:DI 964)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 740 739 741 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:192 -1
     (nil))

(insn 741 740 742 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 963) [2 optarg+0 S8 A64])) options.c:192 -1
     (nil))

(call_insn 742 741 743 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

(insn 743 742 0 (set (reg:DF 341 [ D.3804 ])
        (reg:DF 32 v0)) options.c:192 -1
     (nil))

;; C = _169;

(insn 744 743 745 (set (reg:DI 966)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 -1
     (nil))

(insn 745 744 746 (set (reg/f:DI 965)
        (lo_sum:DI (reg:DI 966)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 746 745 0 (set (mem/c:DF (plus:DI (reg/f:DI 965)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 341 [ D.3804 ])) options.c:192 -1
     (nil))
(const_int 4 [0x4])

Cold cost: 4 (final)
(const_int 4 [0x4])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_170 != 0)

(insn 747 746 748 (set (reg:SI 967 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:193 -1
     (nil))

(insn 748 747 749 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 967 [ D.3797 ])
            (const_int 0 [0]))) options.c:193 -1
     (nil))

(jump_insn 749 748 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:193 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 39

;; # DEBUG __stream => _171

(debug_insn 751 750 0 (var_location:DI __stream (const_int 0 [0])) options.c:194 -1
     (nil))
;; # DEBUG __fmt => "C already set\n"

(debug_insn 752 751 0 (var_location:DI __fmt (const_int 0 [0])) options.c:194 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 970) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_171, 1, "C already set\n");

(insn 753 752 754 (set (reg:DI 969)
        (high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 754 753 755 (set (reg/f:DI 968)
        (lo_sum:DI (reg:DI 969)
            (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
        (nil)))

(insn 755 754 756 (set (reg:DI 971)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 -1
     (nil))

(insn 756 755 757 (set (reg/f:DI 970)
        (lo_sum:DI (reg:DI 971)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 757 756 758 (set (reg:DI 2 x2)
        (reg/f:DI 968)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 758 757 759 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 759 758 760 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 970) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 760 759 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 761 760 0 (var_location:DI __stream (const_int 0 [0])) options.c:194 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 762 761 0 (var_location:DI __fmt (const_int 0 [0])) options.c:194 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 763 762 0 (var_location:SI err (const_int 0 [0])) options.c:195 -1
     (nil))
;; Generating RTL for gimple basic block 40

;; 

(code_label 764 763 765 40 "" [0 uses])

(note 765 764 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_257

(debug_insn 766 765 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_172 != 0)

(insn 767 766 768 (set (reg:SI 972)
        (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])) options.c:197 -1
     (nil))

(insn 768 767 769 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 972)
            (const_int 0 [0]))) options.c:197 -1
     (nil))

(jump_insn 769 768 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:197 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 41

;; # DEBUG __stream => _173

(debug_insn 771 770 0 (var_location:DI __stream (const_int 0 [0])) options.c:198 -1
     (nil))
;; # DEBUG __fmt => "Error parsing C %s\n"

(debug_insn 772 771 0 (var_location:DI __fmt (const_int 0 [0])) options.c:198 -1
     (nil))(mem/f/c:DI (reg/f:DI 973) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 977) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_173, 1, "Error parsing C %s\n", _174);

(insn 773 772 774 (set (reg:DI 974)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 -1
     (nil))

(insn 774 773 775 (set (reg/f:DI 973)
        (lo_sum:DI (reg:DI 974)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 775 774 776 (set (reg:DI 976)
        (high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 776 775 777 (set (reg/f:DI 975)
        (lo_sum:DI (reg:DI 976)
            (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
        (nil)))

(insn 777 776 778 (set (reg:DI 978)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 -1
     (nil))

(insn 778 777 779 (set (reg/f:DI 977)
        (lo_sum:DI (reg:DI 978)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 779 778 780 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 973) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 780 779 781 (set (reg:DI 2 x2)
        (reg/f:DI 975)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 781 780 782 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 782 781 783 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 977) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 783 782 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 784 783 0 (var_location:DI __stream (const_int 0 [0])) options.c:198 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 785 784 0 (var_location:DI __fmt (const_int 0 [0])) options.c:198 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 786 785 0 (var_location:SI err (const_int 0 [0])) options.c:199 -1
     (nil))
;; Generating RTL for gimple basic block 42

;; 

(code_label 787 786 788 41 "" [0 uses])

(note 788 787 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_258

(debug_insn 789 788 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_175 < 0.0)

(insn 790 789 791 (set (reg:DI 980)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 -1
     (nil))

(insn 791 790 792 (set (reg/f:DI 979)
        (lo_sum:DI (reg:DI 980)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 792 791 793 (set (reg:DF 981)
        (mem/c:DF (plus:DI (reg/f:DI 979)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:201 -1
     (nil))

(insn 793 792 794 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 981)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:201 -1
     (nil))

(jump_insn 794 793 795 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) options.c:201 -1
     (int_list:REG_BR_PROB 1312 (nil)))

(jump_insn 795 794 796 (set (pc)
        (label_ref 0)) options.c:201 -1
     (nil))

(barrier 796 795 797)

(code_label 797 796 0 43 "" [0 uses])

;; Generating RTL for gimple basic block 43

;; # DEBUG __stream => _176

(debug_insn 799 798 0 (var_location:DI __stream (const_int 0 [0])) options.c:202 -1
     (nil))
;; # DEBUG __fmt => "C must be non-negative\n"

(debug_insn 800 799 0 (var_location:DI __fmt (const_int 0 [0])) options.c:202 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 984) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_176, 1, "C must be non-negative\n");

(insn 801 800 802 (set (reg:DI 983)
        (high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 802 801 803 (set (reg/f:DI 982)
        (lo_sum:DI (reg:DI 983)
            (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
        (nil)))

(insn 803 802 804 (set (reg:DI 985)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 -1
     (nil))

(insn 804 803 805 (set (reg/f:DI 984)
        (lo_sum:DI (reg:DI 985)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 805 804 806 (set (reg:DI 2 x2)
        (reg/f:DI 982)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 806 805 807 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 807 806 808 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 984) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 808 807 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 809 808 0 (var_location:DI __stream (const_int 0 [0])) options.c:202 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 810 809 0 (var_location:DI __fmt (const_int 0 [0])) options.c:202 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 811 810 0 (var_location:SI err (const_int 0 [0])) options.c:203 -1
     (nil))
;; Generating RTL for gimple basic block 44

;; 

(code_label 812 811 813 42 "" [0 uses])

(note 813 812 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_259

(debug_insn 814 813 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 4 [0x4])

Cold cost: 4 (final)
(const_int 4 [0x4])

Cold cost: 4 (final)

;; whichset_177 = whichset_144 | 4;

(insn 815 814 0 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:205 -1
     (nil))

;; # DEBUG whichset => whichset_177

(debug_insn 816 815 0 (var_location:SI whichset (const_int 0 [0])) options.c:205 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; nset_178 = nset_153 + 1;

(insn 817 816 0 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:206 -1
     (nil))

;; # DEBUG nset => nset_178

(debug_insn 818 817 0 (var_location:SI nset (const_int 0 [0])) options.c:206 -1
     (nil))
;; Generating RTL for gimple basic block 45

;; <L11>:

(code_label 821 820 822 21 "" [0 uses])

(note 822 821 0 NOTE_INSN_BASIC_BLOCK)

;; _179 = __errno_location ();

(call_insn/u 823 822 824 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:210 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 824 823 0 (set (reg/f:DI 349 [ D.3807 ])
        (reg:DI 0 x0)) options.c:210 -1
     (nil))

;; *_179 = 0;

(insn 825 824 0 (set (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])
        (const_int 0 [0])) options.c:210 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)
(mem/f/c:DI (reg/f:DI 986) [2 optarg+0 S8 A64])

Cold cost: 4 (final)

;; _181 = strtod (_180, 0B);

(insn 826 825 827 (set (reg:DI 987)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 -1
     (nil))

(insn 827 826 828 (set (reg/f:DI 986)
        (lo_sum:DI (reg:DI 987)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 828 827 829 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:211 -1
     (nil))

(insn 829 828 830 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 986) [2 optarg+0 S8 A64])) options.c:211 -1
     (nil))

(call_insn 830 829 831 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:211 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

(insn 831 830 0 (set (reg:DF 351 [ D.3804 ])
        (reg:DF 32 v0)) options.c:211 -1
     (nil))

;; D = _181;

(insn 832 831 833 (set (reg:DI 989)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 -1
     (nil))

(insn 833 832 834 (set (reg/f:DI 988)
        (lo_sum:DI (reg:DI 989)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 834 833 0 (set (mem/c:DF (plus:DI (reg/f:DI 988)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 351 [ D.3804 ])) options.c:211 -1
     (nil))
(const_int 8 [0x8])

Cold cost: 4 (final)
(const_int 8 [0x8])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_182 != 0)

(insn 835 834 836 (set (reg:SI 990 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:212 -1
     (nil))

(insn 836 835 837 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 990 [ D.3797 ])
            (const_int 0 [0]))) options.c:212 -1
     (nil))

(jump_insn 837 836 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:212 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 46

;; # DEBUG __stream => _183

(debug_insn 839 838 0 (var_location:DI __stream (const_int 0 [0])) options.c:213 -1
     (nil))
;; # DEBUG __fmt => "D already set\n"

(debug_insn 840 839 0 (var_location:DI __fmt (const_int 0 [0])) options.c:213 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 993) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_183, 1, "D already set\n");

(insn 841 840 842 (set (reg:DI 992)
        (high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 842 841 843 (set (reg/f:DI 991)
        (lo_sum:DI (reg:DI 992)
            (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
        (nil)))

(insn 843 842 844 (set (reg:DI 994)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 -1
     (nil))

(insn 844 843 845 (set (reg/f:DI 993)
        (lo_sum:DI (reg:DI 994)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 845 844 846 (set (reg:DI 2 x2)
        (reg/f:DI 991)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 846 845 847 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 847 846 848 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 993) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 848 847 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 849 848 0 (var_location:DI __stream (const_int 0 [0])) options.c:213 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 850 849 0 (var_location:DI __fmt (const_int 0 [0])) options.c:213 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 851 850 0 (var_location:SI err (const_int 0 [0])) options.c:214 -1
     (nil))
;; Generating RTL for gimple basic block 47

;; 

(code_label 852 851 853 44 "" [0 uses])

(note 853 852 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_260

(debug_insn 854 853 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_184 != 0)

(insn 855 854 856 (set (reg:SI 995)
        (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])) options.c:216 -1
     (nil))

(insn 856 855 857 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 995)
            (const_int 0 [0]))) options.c:216 -1
     (nil))

(jump_insn 857 856 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:216 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 48

;; # DEBUG __stream => _185

(debug_insn 859 858 0 (var_location:DI __stream (const_int 0 [0])) options.c:217 -1
     (nil))
;; # DEBUG __fmt => "Error parsing D %s\n"

(debug_insn 860 859 0 (var_location:DI __fmt (const_int 0 [0])) options.c:217 -1
     (nil))(mem/f/c:DI (reg/f:DI 996) [2 optarg+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1000) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_185, 1, "Error parsing D %s\n", _186);

(insn 861 860 862 (set (reg:DI 997)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 -1
     (nil))

(insn 862 861 863 (set (reg/f:DI 996)
        (lo_sum:DI (reg:DI 997)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))

(insn 863 862 864 (set (reg:DI 999)
        (high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 864 863 865 (set (reg/f:DI 998)
        (lo_sum:DI (reg:DI 999)
            (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
        (nil)))

(insn 865 864 866 (set (reg:DI 1001)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 -1
     (nil))

(insn 866 865 867 (set (reg/f:DI 1000)
        (lo_sum:DI (reg:DI 1001)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 867 866 868 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 996) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 868 867 869 (set (reg:DI 2 x2)
        (reg/f:DI 998)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 869 868 870 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 870 869 871 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1000) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 871 870 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

;; # DEBUG __stream => NULL

(debug_insn 872 871 0 (var_location:DI __stream (const_int 0 [0])) options.c:217 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 873 872 0 (var_location:DI __fmt (const_int 0 [0])) options.c:217 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 874 873 0 (var_location:SI err (const_int 0 [0])) options.c:218 -1
     (nil))
;; Generating RTL for gimple basic block 49

;; 

(code_label 875 874 876 45 "" [0 uses])

(note 876 875 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_261

(debug_insn 877 876 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_187 < 0.0)

(insn 878 877 879 (set (reg:DI 1003)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 -1
     (nil))

(insn 879 878 880 (set (reg/f:DI 1002)
        (lo_sum:DI (reg:DI 1003)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 880 879 881 (set (reg:DF 1004)
        (mem/c:DF (plus:DI (reg/f:DI 1002)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:220 -1
     (nil))

(insn 881 880 882 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1004)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:220 -1
     (nil))

(jump_insn 882 881 883 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 885)
            (pc))) options.c:220 -1
     (int_list:REG_BR_PROB 1312 (nil)))

(jump_insn 883 882 884 (set (pc)
        (label_ref 0)) options.c:220 -1
     (nil))

(barrier 884 883 885)

(code_label 885 884 0 47 "" [0 uses])

;; Generating RTL for gimple basic block 50

;; # DEBUG __stream => _188

(debug_insn 887 886 0 (var_location:DI __stream (const_int 0 [0])) options.c:221 -1
     (nil))
;; # DEBUG __fmt => "D must be non-negative\n"

(debug_insn 888 887 0 (var_location:DI __fmt (const_int 0 [0])) options.c:221 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1007) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_188, 1, "D must be non-negative\n");

(insn 889 888 890 (set (reg:DI 1006)
        (high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 890 889 891 (set (reg/f:DI 1005)
        (lo_sum:DI (reg:DI 1006)
            (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
        (nil)))

(insn 891 890 892 (set (reg:DI 1008)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 -1
     (nil))

(insn 892 891 893 (set (reg/f:DI 1007)
        (lo_sum:DI (reg:DI 1008)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 893 892 894 (set (reg:DI 2 x2)
        (reg/f:DI 1005)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 894 893 895 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 895 894 896 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1007) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 896 895 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 897 896 0 (var_location:DI __stream (const_int 0 [0])) options.c:221 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 898 897 0 (var_location:DI __fmt (const_int 0 [0])) options.c:221 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 899 898 0 (var_location:SI err (const_int 0 [0])) options.c:222 -1
     (nil))
;; Generating RTL for gimple basic block 51

;; 

(code_label 900 899 901 46 "" [0 uses])

(note 901 900 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_262

(debug_insn 902 901 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 8 [0x8])

Cold cost: 4 (final)
(const_int 8 [0x8])

Cold cost: 4 (final)

;; whichset_189 = whichset_144 | 8;

(insn 903 902 0 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:224 -1
     (nil))

;; # DEBUG whichset => whichset_189

(debug_insn 904 903 0 (var_location:SI whichset (const_int 0 [0])) options.c:224 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; nset_190 = nset_153 + 1;

(insn 905 904 0 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:225 -1
     (nil))

;; # DEBUG nset => nset_190

(debug_insn 906 905 0 (var_location:SI nset (const_int 0 [0])) options.c:225 -1
     (nil))
;; Generating RTL for gimple basic block 52

;; <L12>:

(code_label 909 908 910 15 "" [0 uses])

(note 910 909 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _191

(debug_insn 911 910 0 (var_location:DI __stream (const_int 0 [0])) options.c:228 -1
     (nil))
;; # DEBUG __fmt => "Unrecognized option\n"

(debug_insn 912 911 0 (var_location:DI __fmt (const_int 0 [0])) options.c:228 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1011) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_191, 1, "Unrecognized option\n");

(insn 913 912 914 (set (reg:DI 1010)
        (high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 914 913 915 (set (reg/f:DI 1009)
        (lo_sum:DI (reg:DI 1010)
            (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)
        (nil)))

(insn 915 914 916 (set (reg:DI 1012)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 -1
     (nil))

(insn 916 915 917 (set (reg/f:DI 1011)
        (lo_sum:DI (reg:DI 1012)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 917 916 918 (set (reg:DI 2 x2)
        (reg/f:DI 1009)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 918 917 919 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 919 918 920 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1011) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 920 919 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 921 920 0 (var_location:DI __stream (const_int 0 [0])) options.c:228 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 922 921 0 (var_location:DI __fmt (const_int 0 [0])) options.c:228 -1
     (nil))
;; # DEBUG err => -1

(debug_insn 923 922 0 (var_location:SI err (const_int 0 [0])) options.c:229 -1
     (nil))
;; Generating RTL for gimple basic block 53

;; 

(code_label 924 923 925 29 "" [0 uses])

(note 925 924 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 54

;; 

(code_label 926 925 927 14 "" [0 uses])

(note 927 926 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG whichset => whichset_144

(debug_insn 928 927 0 (var_location:SI whichset (const_int 0 [0])) -1
     (nil))
;; # DEBUG nset => nset_153

(debug_insn 929 928 0 (var_location:SI nset (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_192

(debug_insn 930 929 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; c_118 = getopt (argc_7(D), argv_9(D), "v?hRs:e:A:a:B:b:C:c:D:d:Vo:r:");

(insn 931 930 932 (set (reg:DI 1014)
        (high:DI (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 -1
     (nil))

(insn 932 931 933 (set (reg/f:DI 1013)
        (lo_sum:DI (reg:DI 1014)
            (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
        (nil)))

(insn 933 932 934 (set (reg:DI 2 x2)
        (reg/f:DI 1013)) options.c:51 -1
     (nil))

(insn 934 933 935 (set (reg:DI 1 x1)
        (reg/v/f:DI 838 [ argv ])) options.c:51 -1
     (nil))

(insn 935 934 936 (set (reg:SI 0 x0)
        (reg/v:SI 837 [ argc ])) options.c:51 -1
     (nil))

(call_insn 936 935 937 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>) [0 getopt S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:51 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

(insn 937 936 0 (set (reg/v:SI 294 [ c ])
        (reg:SI 0 x0)) options.c:51 -1
     (nil))

;; # DEBUG c => c_118

(debug_insn 938 937 0 (var_location:SI c (const_int 0 [0])) options.c:51 -1
     (nil))(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)

;; if (c_118 != -1)

(insn 940 938 941 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 294 [ c ])
            (const_int -1 [0xffffffffffffffff]))) options.c:51 -1
     (nil))

(jump_insn 941 940 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 939)
            (pc))) options.c:51 -1
     (int_list:REG_BR_PROB 9700 (nil)))

;; Generating RTL for gimple basic block 55
(const_int 0 [0])

Cold cost: 0 (final)

;; if (err_192 != 0)

(insn 943 942 944 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 360 [ err ])
            (const_int 0 [0]))) options.c:232 -1
     (nil))

(jump_insn 944 943 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:232 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 56
(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 946 945 947 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:233 -1
     (nil))

(call_insn 947 946 948 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:233 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 948 947 0)

;; Generating RTL for gimple basic block 57

;; 

(code_label 949 948 950 49 "" [0 uses])

(note 950 949 0 NOTE_INSN_BASIC_BLOCK)
(const_int 3 [0x3])

Cold cost: 4 (final)

;; if (nset_153 == 3)

(insn 951 950 952 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 3 [0x3]))) options.c:234 -1
     (nil))

(jump_insn 952 951 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:234 -1
     (int_list:REG_BR_PROB 7200 (nil)))

;; Generating RTL for gimple basic block 58

;; switch (whichset_144) <default: <L17>, case 7: <L13>, case 11: <L14>, case 13: <L15>, case 14: <L16>>

(insn 954 953 955 (set (reg:SI 1015)
        (plus:SI (reg/v:SI 320 [ whichset ])
            (const_int -7 [0xfffffffffffffff9]))) options.c:235 -1
     (nil))

(insn 955 954 956 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1015)
            (const_int 7 [0x7]))) options.c:235 -1
     (nil))

(jump_insn 956 955 957 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:235 -1
     (nil))

(insn 957 956 958 (set (reg:DI 1017)
        (high:DI (label_ref 960))) options.c:235 -1
     (nil))

(insn 958 957 959 (set (reg/f:DI 1016)
        (lo_sum:DI (reg:DI 1017)
            (label_ref 960))) options.c:235 -1
     (expr_list:REG_EQUAL (label_ref 960)
        (nil)))

(jump_insn 959 958 960 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 1016)
                            (reg:SI 1015)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 960))
        ]) options.c:235 -1
     (nil))

(code_label 960 959 961 53 "" [0 uses])

(jump_table_data 961 960 962 (addr_diff_vec:DI (label_ref:DI 960)
         [
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))

(barrier 962 961 0)

;; Generating RTL for gimple basic block 59

;; <L13>:

(code_label 963 962 964 52 "" [0 uses])

(note 964 963 0 NOTE_INSN_BASIC_BLOCK)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)

;; D = _198;

(insn 965 964 966 (set (reg:DI 1019)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))

(insn 966 965 967 (set (reg/f:DI 1018)
        (lo_sum:DI (reg:DI 1019)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 967 966 968 (set (reg:DI 1021)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))

(insn 968 967 969 (set (reg/f:DI 1020)
        (lo_sum:DI (reg:DI 1021)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 969 968 970 (set (reg:DI 1023)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))

(insn 970 969 971 (set (reg/f:DI 1022)
        (lo_sum:DI (reg:DI 1023)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 971 970 972 (set (reg:DF 1025)
        (mem/c:DF (plus:DI (reg/f:DI 1020)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:237 -1
     (nil))

(insn 972 971 973 (set (reg:DF 1026)
        (mem/c:DF (plus:DI (reg/f:DI 1022)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:237 -1
     (nil))

(insn 973 972 974 (set (reg:DF 1024 [ D.3804 ])
        (plus:DF (reg:DF 1025)
            (reg:DF 1026))) options.c:237 -1
     (nil))

(insn 974 973 975 (set (reg:DI 1028)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))

(insn 975 974 976 (set (reg/f:DI 1027)
        (lo_sum:DI (reg:DI 1028)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 976 975 977 (set (reg:DF 1030)
        (mem/c:DF (plus:DI (reg/f:DI 1027)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:237 -1
     (nil))

(insn 977 976 978 (set (reg:DF 1029 [ D.3804 ])
        (plus:DF (reg:DF 1024 [ D.3804 ])
            (reg:DF 1030))) options.c:237 -1
     (nil))

(insn 978 977 979 (set (reg:DF 1032)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:237 -1
     (nil))

(insn 979 978 980 (set (reg:DF 1031 [ D.3804 ])
        (minus:DF (reg:DF 1032)
            (reg:DF 1029 [ D.3804 ]))) options.c:237 -1
     (nil))

(insn 980 979 0 (set (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1031 [ D.3804 ])) options.c:237 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; <L14>:

(code_label 983 982 984 54 "" [0 uses])

(note 984 983 0 NOTE_INSN_BASIC_BLOCK)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)

;; C = _204;

(insn 985 984 986 (set (reg:DI 1034)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))

(insn 986 985 987 (set (reg/f:DI 1033)
        (lo_sum:DI (reg:DI 1034)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 987 986 988 (set (reg:DI 1036)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))

(insn 988 987 989 (set (reg/f:DI 1035)
        (lo_sum:DI (reg:DI 1036)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 989 988 990 (set (reg:DI 1038)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))

(insn 990 989 991 (set (reg/f:DI 1037)
        (lo_sum:DI (reg:DI 1038)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 991 990 992 (set (reg:DF 1040)
        (mem/c:DF (plus:DI (reg/f:DI 1035)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:240 -1
     (nil))

(insn 992 991 993 (set (reg:DF 1041)
        (mem/c:DF (plus:DI (reg/f:DI 1037)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:240 -1
     (nil))

(insn 993 992 994 (set (reg:DF 1039 [ D.3804 ])
        (plus:DF (reg:DF 1040)
            (reg:DF 1041))) options.c:240 -1
     (nil))

(insn 994 993 995 (set (reg:DI 1043)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))

(insn 995 994 996 (set (reg/f:DI 1042)
        (lo_sum:DI (reg:DI 1043)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 996 995 997 (set (reg:DF 1045)
        (mem/c:DF (plus:DI (reg/f:DI 1042)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:240 -1
     (nil))

(insn 997 996 998 (set (reg:DF 1044 [ D.3804 ])
        (plus:DF (reg:DF 1039 [ D.3804 ])
            (reg:DF 1045))) options.c:240 -1
     (nil))

(insn 998 997 999 (set (reg:DF 1047)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:240 -1
     (nil))

(insn 999 998 1000 (set (reg:DF 1046 [ D.3804 ])
        (minus:DF (reg:DF 1047)
            (reg:DF 1044 [ D.3804 ]))) options.c:240 -1
     (nil))

(insn 1000 999 0 (set (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 1046 [ D.3804 ])) options.c:240 -1
     (nil))

;; Generating RTL for gimple basic block 61

;; <L15>:

(code_label 1003 1002 1004 55 "" [0 uses])

(note 1004 1003 0 NOTE_INSN_BASIC_BLOCK)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)

;; B = _210;

(insn 1005 1004 1006 (set (reg:DI 1049)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))

(insn 1006 1005 1007 (set (reg/f:DI 1048)
        (lo_sum:DI (reg:DI 1049)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1007 1006 1008 (set (reg:DI 1051)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))

(insn 1008 1007 1009 (set (reg/f:DI 1050)
        (lo_sum:DI (reg:DI 1051)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1009 1008 1010 (set (reg:DI 1053)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))

(insn 1010 1009 1011 (set (reg/f:DI 1052)
        (lo_sum:DI (reg:DI 1053)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1011 1010 1012 (set (reg:DF 1055)
        (mem/c:DF (plus:DI (reg/f:DI 1050)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:243 -1
     (nil))

(insn 1012 1011 1013 (set (reg:DF 1056)
        (mem/c:DF (plus:DI (reg/f:DI 1052)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:243 -1
     (nil))

(insn 1013 1012 1014 (set (reg:DF 1054 [ D.3804 ])
        (plus:DF (reg:DF 1055)
            (reg:DF 1056))) options.c:243 -1
     (nil))

(insn 1014 1013 1015 (set (reg:DI 1058)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))

(insn 1015 1014 1016 (set (reg/f:DI 1057)
        (lo_sum:DI (reg:DI 1058)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1016 1015 1017 (set (reg:DF 1060)
        (mem/c:DF (plus:DI (reg/f:DI 1057)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:243 -1
     (nil))

(insn 1017 1016 1018 (set (reg:DF 1059 [ D.3804 ])
        (plus:DF (reg:DF 1054 [ D.3804 ])
            (reg:DF 1060))) options.c:243 -1
     (nil))

(insn 1018 1017 1019 (set (reg:DF 1062)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:243 -1
     (nil))

(insn 1019 1018 1020 (set (reg:DF 1061 [ D.3804 ])
        (minus:DF (reg:DF 1062)
            (reg:DF 1059 [ D.3804 ]))) options.c:243 -1
     (nil))

(insn 1020 1019 0 (set (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 1061 [ D.3804 ])) options.c:243 -1
     (nil))

;; Generating RTL for gimple basic block 62

;; <L16>:

(code_label 1023 1022 1024 56 "" [0 uses])

(note 1024 1023 0 NOTE_INSN_BASIC_BLOCK)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)

;; A = _216;

(insn 1025 1024 1026 (set (reg:DI 1064)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))

(insn 1026 1025 1027 (set (reg/f:DI 1063)
        (lo_sum:DI (reg:DI 1064)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1027 1026 1028 (set (reg:DI 1066)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))

(insn 1028 1027 1029 (set (reg/f:DI 1065)
        (lo_sum:DI (reg:DI 1066)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1029 1028 1030 (set (reg:DI 1068)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))

(insn 1030 1029 1031 (set (reg/f:DI 1067)
        (lo_sum:DI (reg:DI 1068)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1031 1030 1032 (set (reg:DF 1070)
        (mem/c:DF (plus:DI (reg/f:DI 1065)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:246 -1
     (nil))

(insn 1032 1031 1033 (set (reg:DF 1071)
        (mem/c:DF (plus:DI (reg/f:DI 1067)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:246 -1
     (nil))

(insn 1033 1032 1034 (set (reg:DF 1069 [ D.3804 ])
        (plus:DF (reg:DF 1070)
            (reg:DF 1071))) options.c:246 -1
     (nil))

(insn 1034 1033 1035 (set (reg:DI 1073)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))

(insn 1035 1034 1036 (set (reg/f:DI 1072)
        (lo_sum:DI (reg:DI 1073)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1036 1035 1037 (set (reg:DF 1075)
        (mem/c:DF (plus:DI (reg/f:DI 1072)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:246 -1
     (nil))

(insn 1037 1036 1038 (set (reg:DF 1074 [ D.3804 ])
        (plus:DF (reg:DF 1069 [ D.3804 ])
            (reg:DF 1075))) options.c:246 -1
     (nil))

(insn 1038 1037 1039 (set (reg:DF 1077)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:246 -1
     (nil))

(insn 1039 1038 1040 (set (reg:DF 1076 [ D.3804 ])
        (minus:DF (reg:DF 1077)
            (reg:DF 1074 [ D.3804 ]))) options.c:246 -1
     (nil))

(insn 1040 1039 0 (set (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 1076 [ D.3804 ])) options.c:246 -1
     (nil))

;; Generating RTL for gimple basic block 63

;; <L17>:

(code_label 1043 1042 1044 51 "" [0 uses])

(note 1044 1043 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _217

(debug_insn 1045 1044 0 (var_location:DI __stream (const_int 0 [0])) options.c:249 -1
     (nil))
;; # DEBUG __fmt => "Impossible combination of three bits...\n"

(debug_insn 1046 1045 0 (var_location:DI __fmt (const_int 0 [0])) options.c:249 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1080) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_217, 1, "Impossible combination of three bits...\n");

(insn 1047 1046 1048 (set (reg:DI 1079)
        (high:DI (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1048 1047 1049 (set (reg/f:DI 1078)
        (lo_sum:DI (reg:DI 1079)
            (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)
        (nil)))

(insn 1049 1048 1050 (set (reg:DI 1081)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:249 -1
     (nil))

(insn 1050 1049 1051 (set (reg/f:DI 1080)
        (lo_sum:DI (reg:DI 1081)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:249 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 1051 1050 1052 (set (reg:DI 2 x2)
        (reg/f:DI 1078)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1052 1051 1053 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1053 1052 1054 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1080) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 1054 1053 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 1055 1054 0 (var_location:DI __stream (const_int 0 [0])) options.c:249 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 1056 1055 0 (var_location:DI __fmt (const_int 0 [0])) options.c:249 -1
     (nil))
;; abort ();

(call_insn 1057 1056 1058 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 1058 1057 0)

;; Generating RTL for gimple basic block 64

;; 

(code_label 1059 1058 1060 57 "" [0 uses])

(note 1060 1059 0 NOTE_INSN_BASIC_BLOCK)

;; _218 = A;

(insn 1061 1060 1062 (set (reg:DI 1083)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))

(insn 1062 1061 1063 (set (reg/f:DI 1082)
        (lo_sum:DI (reg:DI 1083)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1063 1062 0 (set (reg:DF 386 [ D.3804 ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:252 -1
     (nil))
(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_218 < 0.0)

(insn 1064 1063 1065 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 386 [ D.3804 ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))

(jump_insn 1065 1064 0 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 65
(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_219 < 0.0)

(insn 1067 1066 1068 (set (reg:DI 1085)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))

(insn 1068 1067 1069 (set (reg/f:DI 1084)
        (lo_sum:DI (reg:DI 1085)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1069 1068 1070 (set (reg:DF 1086)
        (mem/c:DF (plus:DI (reg/f:DI 1084)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:252 -1
     (nil))

(insn 1070 1069 1071 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1086)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))

(jump_insn 1071 1070 0 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 66
(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_220 < 0.0)

(insn 1073 1072 1074 (set (reg:DI 1088)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))

(insn 1074 1073 1075 (set (reg/f:DI 1087)
        (lo_sum:DI (reg:DI 1088)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1075 1074 1076 (set (reg:DF 1089)
        (mem/c:DF (plus:DI (reg/f:DI 1087)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:252 -1
     (nil))

(insn 1076 1075 1077 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1089)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))

(jump_insn 1077 1076 0 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 67
(const_double:DF 0.0 [0x0.0p+0])

Cold cost: 4 (final)

;; if (_221 < 0.0)

(insn 1080 1078 1081 (set (reg:DI 1091)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))

(insn 1081 1080 1082 (set (reg/f:DI 1090)
        (lo_sum:DI (reg:DI 1091)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1082 1081 1083 (set (reg:DF 1092)
        (mem/c:DF (plus:DI (reg/f:DI 1090)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:252 -1
     (nil))

(insn 1083 1082 1084 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1092)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))

(jump_insn 1084 1083 1085 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1087)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil)))

(jump_insn 1085 1084 1086 (set (pc)
        (label_ref 1079)) options.c:252 -1
     (nil))

(barrier 1086 1085 1087)

(code_label 1087 1086 0 60 "" [0 uses])

;; Generating RTL for gimple basic block 68

;; 

(code_label 1088 1087 1089 58 "" [0 uses])

(note 1089 1088 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _222

(debug_insn 1090 1089 0 (var_location:DI __stream (const_int 0 [0])) options.c:253 -1
     (nil))
;; # DEBUG __fmt => "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n"

(debug_insn 1091 1090 0 (var_location:DI __fmt (const_int 0 [0])) options.c:253 -1
     (nil))(mem/c:DF (plus:DI (reg/f:DI 1093)
        (const_int 40 [0x28])) [1 D+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1095)
        (const_int 32 [0x20])) [1 C+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1097)
        (const_int 24 [0x18])) [1 B+0 S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1101) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_222, 1, "When setting three R-MAT parameters, all must be < 1.\n  A = %lg\n  B = %lg\n  C = %lg\n  D = %lg\n", _218, _223, _224, _225);

(insn 1092 1091 1093 (set (reg:DI 1094)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))

(insn 1093 1092 1094 (set (reg/f:DI 1093)
        (lo_sum:DI (reg:DI 1094)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1094 1093 1095 (set (reg:DI 1096)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))

(insn 1095 1094 1096 (set (reg/f:DI 1095)
        (lo_sum:DI (reg:DI 1096)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1096 1095 1097 (set (reg:DI 1098)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))

(insn 1097 1096 1098 (set (reg/f:DI 1097)
        (lo_sum:DI (reg:DI 1098)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1098 1097 1099 (set (reg:DI 1100)
        (high:DI (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1099 1098 1100 (set (reg/f:DI 1099)
        (lo_sum:DI (reg:DI 1100)
            (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)
        (nil)))

(insn 1100 1099 1101 (set (reg:DI 1102)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:253 -1
     (nil))

(insn 1101 1100 1102 (set (reg/f:DI 1101)
        (lo_sum:DI (reg:DI 1102)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 1102 1101 1103 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1093)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1103 1102 1104 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1095)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1104 1103 1105 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1097)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1105 1104 1106 (set (reg:DF 32 v0)
        (reg:DF 386 [ D.3804 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1106 1105 1107 (set (reg:DI 2 x2)
        (reg/f:DI 1099)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1107 1106 1108 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1108 1107 1109 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1101) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 1109 1108 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (nil)))))))))))

;; # DEBUG __stream => NULL

(debug_insn 1110 1109 0 (var_location:DI __stream (const_int 0 [0])) options.c:253 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 1111 1110 0 (var_location:DI __fmt (const_int 0 [0])) options.c:253 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 1112 1111 1113 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:256 -1
     (nil))

(call_insn 1113 1112 1114 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:256 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 1114 1113 0)

;; Generating RTL for gimple basic block 69

;; 

(code_label 1115 1114 1116 50 "" [0 uses])

(note 1116 1115 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (nset_153 != 0)

(insn 1117 1116 1118 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 0 [0]))) options.c:258 -1
     (nil))

(jump_insn 1118 1117 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1079)
            (pc))) options.c:258 -1
     (int_list:REG_BR_PROB 1912 (nil)))

;; Generating RTL for gimple basic block 70
Swap operands in stmt:
sum_236 = sum_233 + _235;
Cost left opnd=0, right opnd=1
Swap operands in stmt:
_244 = _242 + _243;
Cost left opnd=0, right opnd=1

;; sum_227 = (long double) _226;

(insn 1120 1119 1121 (set (reg:DI 1104)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 -1
     (nil))

(insn 1121 1120 1122 (set (reg/f:DI 1103)
        (lo_sum:DI (reg:DI 1104)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1122 1121 1123 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:259 -1
     (nil))

(call_insn/u 1123 1122 1124 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:259 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))

(insn 1124 1123 1125 (set (reg:TF 1105)
        (reg:TF 32 v0)) options.c:259 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1103)
                    (const_int 16 [0x10])) [1 A+0 S8 A64]))
        (nil)))

(insn 1125 1124 0 (set (reg/v:TF 395 [ sum ])
        (reg:TF 1105)) options.c:259 -1
     (nil))

;; # DEBUG sum => sum_227

(debug_insn 1126 1125 0 (var_location:TF sum (const_int 0 [0])) options.c:259 -1
     (nil))
;; _229 = (long double) _228;

(insn 1127 1126 1128 (set (reg:DI 1107)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:260 -1
     (nil))

(insn 1128 1127 1129 (set (reg/f:DI 1106)
        (lo_sum:DI (reg:DI 1107)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:260 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1129 1128 1130 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1106)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:260 -1
     (nil))

(call_insn/u 1130 1129 1131 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))

(insn 1131 1130 0 (set (reg:TF 397 [ D.3808 ])
        (reg:TF 32 v0)) options.c:260 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1106)
                    (const_int 24 [0x18])) [1 B+0 S8 A64]))
        (nil)))

;; sum_230 = sum_227 + _229;

(insn 1132 1131 1133 (set (reg:TF 33 v1)
        (reg:TF 397 [ D.3808 ])) options.c:260 -1
     (nil))

(insn 1133 1132 1134 (set (reg:TF 32 v0)
        (reg/v:TF 395 [ sum ])) options.c:260 -1
     (nil))

(call_insn/u 1134 1133 1135 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1135 1134 1136 (set (reg:TF 1108)
        (reg:TF 32 v0)) options.c:260 -1
     (expr_list:REG_EQUAL (plus:TF (reg/v:TF 395 [ sum ])
            (reg:TF 397 [ D.3808 ]))
        (nil)))

(insn 1136 1135 0 (set (reg/v:TF 398 [ sum ])
        (reg:TF 1108)) options.c:260 -1
     (nil))

;; # DEBUG sum => sum_230

(debug_insn 1137 1136 0 (var_location:TF sum (const_int 0 [0])) options.c:260 -1
     (nil))
;; _232 = (long double) _231;

(insn 1138 1137 1139 (set (reg:DI 1110)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:261 -1
     (nil))

(insn 1139 1138 1140 (set (reg/f:DI 1109)
        (lo_sum:DI (reg:DI 1110)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:261 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1140 1139 1141 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1109)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:261 -1
     (nil))

(call_insn/u 1141 1140 1142 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))

(insn 1142 1141 0 (set (reg:TF 400 [ D.3808 ])
        (reg:TF 32 v0)) options.c:261 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1109)
                    (const_int 32 [0x20])) [1 C+0 S8 A64]))
        (nil)))

;; sum_233 = sum_230 + _232;

(insn 1143 1142 1144 (set (reg:TF 33 v1)
        (reg:TF 400 [ D.3808 ])) options.c:261 -1
     (nil))

(insn 1144 1143 1145 (set (reg:TF 32 v0)
        (reg/v:TF 398 [ sum ])) options.c:261 -1
     (nil))

(call_insn/u 1145 1144 1146 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1146 1145 1147 (set (reg:TF 1111)
        (reg:TF 32 v0)) options.c:261 -1
     (expr_list:REG_EQUAL (plus:TF (reg/v:TF 398 [ sum ])
            (reg:TF 400 [ D.3808 ]))
        (nil)))

(insn 1147 1146 0 (set (reg/v:TF 401 [ sum ])
        (reg:TF 1111)) options.c:261 -1
     (nil))

;; # DEBUG sum => sum_233

(debug_insn 1148 1147 0 (var_location:TF sum (const_int 0 [0])) options.c:261 -1
     (nil))
;; sum_236 = _235 + sum_233;

(insn 1149 1148 1150 (set (reg:DI 1113)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:262 -1
     (nil))

(insn 1150 1149 1151 (set (reg/f:DI 1112)
        (lo_sum:DI (reg:DI 1113)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:262 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1151 1150 1152 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1112)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:262 -1
     (nil))

(call_insn/u 1152 1151 1153 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))

(insn 1153 1152 1154 (set (reg:TF 1114 [ D.3808 ])
        (reg:TF 32 v0)) options.c:262 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1112)
                    (const_int 40 [0x28])) [1 D+0 S8 A64]))
        (nil)))

(insn 1154 1153 1155 (set (reg:TF 33 v1)
        (reg/v:TF 401 [ sum ])) options.c:262 -1
     (nil))

(insn 1155 1154 1156 (set (reg:TF 32 v0)
        (reg:TF 1114 [ D.3808 ])) options.c:262 -1
     (nil))

(call_insn/u 1156 1155 1157 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1157 1156 1158 (set (reg:TF 1115)
        (reg:TF 32 v0)) options.c:262 -1
     (expr_list:REG_EQUAL (plus:TF (reg:TF 1114 [ D.3808 ])
            (reg/v:TF 401 [ sum ]))
        (nil)))

(insn 1158 1157 0 (set (reg/v:TF 404 [ sum ])
        (reg:TF 1115)) options.c:262 -1
     (nil))

;; # DEBUG sum => sum_236

(debug_insn 1159 1158 0 (var_location:TF sum (const_int 0 [0])) options.c:262 -1
     (nil))
;; _238 = (double) _237;

(insn 1160 1159 1161 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:263 -1
     (nil))

(insn 1161 1160 1162 (set (reg:TF 32 v0)
        (reg/v:TF 395 [ sum ])) options.c:263 -1
     (nil))

(call_insn/u 1162 1161 1163 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1163 1162 1164 (set (reg:TF 1116 [ D.3808 ])
        (reg:TF 32 v0)) options.c:263 -1
     (expr_list:REG_EQUAL (div:TF (reg/v:TF 395 [ sum ])
            (reg/v:TF 404 [ sum ]))
        (nil)))

(insn 1164 1163 1165 (set (reg:TF 32 v0)
        (reg:TF 1116 [ D.3808 ])) options.c:263 -1
     (nil))

(call_insn/u 1165 1164 1166 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))

(insn 1166 1165 0 (set (reg:DF 406 [ D.3804 ])
        (reg:DF 32 v0)) options.c:263 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1116 [ D.3808 ]))
        (nil)))

;; A = _238;

(insn 1167 1166 1168 (set (reg:DI 1118)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:263 -1
     (nil))

(insn 1168 1167 1169 (set (reg/f:DI 1117)
        (lo_sum:DI (reg:DI 1118)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:263 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1169 1168 0 (set (mem/c:DF (plus:DI (reg/f:DI 1117)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 406 [ D.3804 ])) options.c:263 -1
     (nil))

;; _240 = (double) _239;

(insn 1170 1169 1171 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:264 -1
     (nil))

(insn 1171 1170 1172 (set (reg:TF 32 v0)
        (reg:TF 397 [ D.3808 ])) options.c:264 -1
     (nil))

(call_insn/u 1172 1171 1173 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1173 1172 1174 (set (reg:TF 1119 [ D.3808 ])
        (reg:TF 32 v0)) options.c:264 -1
     (expr_list:REG_EQUAL (div:TF (reg:TF 397 [ D.3808 ])
            (reg/v:TF 404 [ sum ]))
        (nil)))

(insn 1174 1173 1175 (set (reg:TF 32 v0)
        (reg:TF 1119 [ D.3808 ])) options.c:264 -1
     (nil))

(call_insn/u 1175 1174 1176 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))

(insn 1176 1175 0 (set (reg:DF 408 [ D.3804 ])
        (reg:DF 32 v0)) options.c:264 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1119 [ D.3808 ]))
        (nil)))

;; B = _240;

(insn 1177 1176 1178 (set (reg:DI 1121)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:264 -1
     (nil))

(insn 1178 1177 1179 (set (reg/f:DI 1120)
        (lo_sum:DI (reg:DI 1121)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:264 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1179 1178 0 (set (mem/c:DF (plus:DI (reg/f:DI 1120)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 408 [ D.3804 ])) options.c:264 -1
     (nil))

;; _242 = (double) _241;

(insn 1180 1179 1181 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:265 -1
     (nil))

(insn 1181 1180 1182 (set (reg:TF 32 v0)
        (reg:TF 400 [ D.3808 ])) options.c:265 -1
     (nil))

(call_insn/u 1182 1181 1183 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))

(insn 1183 1182 1184 (set (reg:TF 1122 [ D.3808 ])
        (reg:TF 32 v0)) options.c:265 -1
     (expr_list:REG_EQUAL (div:TF (reg:TF 400 [ D.3808 ])
            (reg/v:TF 404 [ sum ]))
        (nil)))

(insn 1184 1183 1185 (set (reg:TF 32 v0)
        (reg:TF 1122 [ D.3808 ])) options.c:265 -1
     (nil))

(call_insn/u 1185 1184 1186 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))

(insn 1186 1185 0 (set (reg:DF 410 [ D.3804 ])
        (reg:DF 32 v0)) options.c:265 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1122 [ D.3808 ]))
        (nil)))

;; C = _242;

(insn 1187 1186 1188 (set (reg:DI 1124)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:265 -1
     (nil))

(insn 1188 1187 1189 (set (reg/f:DI 1123)
        (lo_sum:DI (reg:DI 1124)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:265 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1189 1188 0 (set (mem/c:DF (plus:DI (reg/f:DI 1123)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 410 [ D.3804 ])) options.c:265 -1
     (nil))
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)
(const_double:DF 1.0e+0 [0x0.8p+1])

Cold cost: 4 (final)

;; D = _245;

(insn 1190 1189 1191 (set (reg:DI 1126)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:266 -1
     (nil))

(insn 1191 1190 1192 (set (reg/f:DI 1125)
        (lo_sum:DI (reg:DI 1126)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:266 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1192 1191 1193 (set (reg:DF 1127 [ D.3804 ])
        (plus:DF (reg:DF 406 [ D.3804 ])
            (reg:DF 408 [ D.3804 ]))) options.c:266 -1
     (nil))

(insn 1193 1192 1194 (set (reg:DF 1128 [ D.3804 ])
        (plus:DF (reg:DF 1127 [ D.3804 ])
            (reg:DF 410 [ D.3804 ]))) options.c:266 -1
     (nil))

(insn 1194 1193 1195 (set (reg:DF 1130)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:266 -1
     (nil))

(insn 1195 1194 1196 (set (reg:DF 1129 [ D.3804 ])
        (minus:DF (reg:DF 1130)
            (reg:DF 1128 [ D.3804 ]))) options.c:266 -1
     (nil))

(insn 1196 1195 0 (set (mem/c:DF (plus:DI (reg/f:DI 1125)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1129 [ D.3804 ])) options.c:266 -1
     (nil))

;; Generating RTL for gimple basic block 71

;; 

(code_label 1197 1196 1198 12 "" [0 uses])

(note 1198 1197 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; _13 = 1 << _12;

(insn 1199 1198 1200 (set (reg:DI 1132)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:68 -1
     (nil))

(insn 1200 1199 1201 (set (reg/f:DI 1131)
        (lo_sum:DI (reg:DI 1132)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:68 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1201 1200 1202 (set (reg:DI 1133)
        (mem/c:DI (reg/f:DI 1131) [4 SCALE+0 S8 A64])) graph500.c:68 -1
     (nil))

(insn 1202 1201 1203 (set (reg:QI 1134)
        (subreg:QI (reg:DI 1133) 0)) graph500.c:68 -1
     (nil))

(insn 1203 1202 1204 (set (reg:DI 1135)
        (const_int 1 [0x1])) graph500.c:68 -1
     (nil))

(insn 1204 1203 0 (set (reg:DI 243 [ D.3798 ])
        (ashift:DI (reg:DI 1135)
            (reg:QI 1134))) graph500.c:68 -1
     (nil))

;; nvtx_scale = _13;

(insn 1205 1204 1206 (set (reg:DI 1137)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 -1
     (nil))

(insn 1206 1205 1207 (set (reg/f:DI 1136)
        (lo_sum:DI (reg:DI 1137)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1207 1206 0 (set (mem/c:DI (plus:DI (reg/f:DI 1136)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])
        (reg:DI 243 [ D.3798 ])) graph500.c:68 -1
     (nil))

;; # DEBUG seed => -1

(debug_insn 1208 1207 0 (var_location:DI seed (const_int 0 [0])) prng.c:29 -1
     (nil))
;; _89 = getenv ("SEED");

(insn 1209 1208 1210 (set (reg:DI 1139)
        (high:DI (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 -1
     (nil))

(insn 1210 1209 1211 (set (reg/f:DI 1138)
        (lo_sum:DI (reg:DI 1139)
            (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
        (nil)))

(insn 1211 1210 1212 (set (reg:DI 0 x0)
        (reg/f:DI 1138)) prng.c:30 -1
     (nil))

(call_insn 1212 1211 1213 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:30 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 1213 1212 0 (set (reg/f:DI 286 [ D.3800 ])
        (reg:DI 0 x0)) prng.c:30 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_89 != 0B)

(insn 1214 1213 1215 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 286 [ D.3800 ])
            (const_int 0 [0]))) prng.c:30 -1
     (nil))

(jump_insn 1215 1214 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) prng.c:30 -1
     (int_list:REG_BR_PROB 3017 (nil)))

;; Generating RTL for gimple basic block 72

;; _266 = __errno_location ();

(call_insn/u 1217 1216 1218 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 1218 1217 0 (set (reg/f:DI 414 [ D.3807 ])
        (reg:DI 0 x0)) prng.c:31 -1
     (nil))

;; *_266 = 0;

(insn 1219 1218 0 (set (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])
        (const_int 0 [0])) prng.c:31 -1
     (nil))

;; _267 = getenv ("SEED");

(insn 1220 1219 1221 (set (reg:DI 1141)
        (high:DI (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:32 -1
     (nil))

(insn 1221 1220 1222 (set (reg/f:DI 1140)
        (lo_sum:DI (reg:DI 1141)
            (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:32 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
        (nil)))

(insn 1222 1221 1223 (set (reg:DI 0 x0)
        (reg/f:DI 1140)) prng.c:32 -1
     (nil))

(call_insn 1223 1222 1224 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 1224 1223 0 (set (reg/f:DI 415 [ D.3800 ])
        (reg:DI 0 x0)) prng.c:32 -1
     (nil))
(const_int 10 [0xa])

Cold cost: 4 (final)
(const_int 0 [0])

Cold cost: 0 (final)

;; seed_268 = strtol (_267, 0B, 10);

(insn 1225 1224 1226 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) prng.c:32 -1
     (nil))

(insn 1226 1225 1227 (set (reg:DI 1 x1)
        (const_int 0 [0])) prng.c:32 -1
     (nil))

(insn 1227 1226 1228 (set (reg:DI 0 x0)
        (reg/f:DI 415 [ D.3800 ])) prng.c:32 -1
     (nil))

(call_insn 1228 1227 1229 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))

(insn 1229 1228 0 (set (reg/v:DI 416 [ seed ])
        (reg:DI 0 x0)) prng.c:32 -1
     (nil))

;; # DEBUG seed => seed_268

(debug_insn 1230 1229 0 (var_location:DI seed (const_int 0 [0])) prng.c:32 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_269 != 0)

(insn 1231 1230 1232 (set (reg:SI 1142)
        (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])) prng.c:33 -1
     (nil))

(insn 1232 1231 1233 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1142)
            (const_int 0 [0]))) prng.c:33 -1
     (nil))

(jump_insn 1233 1232 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) prng.c:33 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 73

;; # DEBUG seed => seed_268

(debug_insn 1235 1234 0 (var_location:DI seed (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (seed_268 < 0)

(insn 1236 1235 1237 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 416 [ seed ])
            (const_int 0 [0]))) prng.c:36 -1
     (nil))

(jump_insn 1237 1236 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) prng.c:36 -1
     (int_list:REG_BR_PROB 0 (nil)))

;; Generating RTL for gimple basic block 74

;; # DEBUG seed => seed_271

(debug_insn 1239 1238 0 (var_location:DI seed (const_int 0 [0])) -1
     (nil))
;; _272 = (long unsigned int) seed_271;

(insn 1240 1239 0 (set (reg:DI 419 [ D.3802 ])
        (reg/v:DI 416 [ seed ])) prng.c:37 -1
     (nil))

;; userseed = _272;

(insn 1241 1240 1242 (set (reg:DI 1144)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:37 -1
     (nil))

(insn 1242 1241 1243 (set (reg/f:DI 1143)
        (lo_sum:DI (reg:DI 1144)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:37 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1243 1242 0 (set (mem/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])
        (reg:DI 419 [ D.3802 ])) prng.c:37 -1
     (nil))

;; # DEBUG userseed => _272

(debug_insn 1244 1243 0 (var_location:DI userseed (const_int 0 [0])) prng.c:38 -1
     (nil))
;; # DEBUG seed => &prng_seed

(debug_insn 1245 1244 0 (var_location:DI seed (const_int 0 [0])) prng.c:38 -1
     (nil))(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; _274 = _273 + 1;

(insn 1246 1245 1247 (set (reg:DI 1145 [ D.3802 ])
        (and:DI (reg:DI 419 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:19 -1
     (nil))

(insn 1247 1246 0 (set (reg:DI 421 [ D.3802 ])
        (plus:DI (reg:DI 1145 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:19 -1
     (nil))
(const_int 40 [0x28])

Cold cost: 4 (final)
(const_int 40 [0x28])

Cold cost: 4 (final)

;; MEM[(uint_fast32_t *)&prng_seed] = _274;

(insn 1248 1247 1249 (set (reg:DI 1147)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:19 -1
     (nil))

(insn 1249 1248 1250 (set (reg/f:DI 1146)
        (lo_sum:DI (reg:DI 1147)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:19 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1250 1249 1251 (set (reg:DI 1148)
        (reg/f:DI 1146)) prng.c:19 -1
     (nil))

(insn 1251 1250 1252 (set (reg/f:DI 1149)
        (plus:DI (reg/f:DI 1146)
            (const_int 40 [0x28]))) prng.c:19 -1
     (nil))

(insn 1252 1251 0 (set (mem/c:DI (reg/f:DI 1149) [4 MEM[(uint_fast32_t *)&prng_seed]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:19 -1
     (nil))
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; _277 = _276 + 1;

(insn 1253 1252 1254 (set (reg:DI 1150 [ D.3802 ])
        (lshiftrt:DI (reg:DI 419 [ D.3802 ])
            (const_int 30 [0x1e]))) prng.c:20 -1
     (nil))

(insn 1254 1253 1255 (set (reg:DI 1151 [ D.3802 ])
        (and:DI (reg:DI 1150 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:20 -1
     (nil))

(insn 1255 1254 0 (set (reg:DI 424 [ D.3802 ])
        (plus:DI (reg:DI 1151 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:20 -1
     (nil))
(const_int 40 [0x28])

Cold cost: 4 (final)
(const_int 40 [0x28])

Cold cost: 4 (final)

;; MEM[(uint_fast32_t *)&prng_seed + 8B] = _277;

(insn 1256 1255 1257 (set (reg:DI 1153)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:20 -1
     (nil))

(insn 1257 1256 1258 (set (reg/f:DI 1152)
        (lo_sum:DI (reg:DI 1153)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:20 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1258 1257 1259 (set (reg:DI 1154)
        (reg/f:DI 1152)) prng.c:20 -1
     (nil))

(insn 1259 1258 1260 (set (reg/f:DI 1155)
        (plus:DI (reg/f:DI 1152)
            (const_int 40 [0x28]))) prng.c:20 -1
     (nil))

(insn 1260 1259 0 (set (mem/c:DI (plus:DI (reg/f:DI 1155)
                (const_int 8 [0x8])) [4 MEM[(uint_fast32_t *)&prng_seed + 8B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:20 -1
     (nil))
(const_int 40 [0x28])

Cold cost: 4 (final)
(const_int 40 [0x28])

Cold cost: 4 (final)

;; MEM[(uint_fast32_t *)&prng_seed + 16B] = _274;

(insn 1261 1260 1262 (set (reg:DI 1157)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:21 -1
     (nil))

(insn 1262 1261 1263 (set (reg/f:DI 1156)
        (lo_sum:DI (reg:DI 1157)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:21 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1263 1262 1264 (set (reg:DI 1158)
        (reg/f:DI 1156)) prng.c:21 -1
     (nil))

(insn 1264 1263 1265 (set (reg/f:DI 1159)
        (plus:DI (reg/f:DI 1156)
            (const_int 40 [0x28]))) prng.c:21 -1
     (nil))

(insn 1265 1264 0 (set (mem/c:DI (plus:DI (reg/f:DI 1159)
                (const_int 16 [0x10])) [4 MEM[(uint_fast32_t *)&prng_seed + 16B]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:21 -1
     (nil))
(const_int 40 [0x28])

Cold cost: 4 (final)
(const_int 40 [0x28])

Cold cost: 4 (final)

;; MEM[(uint_fast32_t *)&prng_seed + 24B] = _277;

(insn 1266 1265 1267 (set (reg:DI 1161)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:22 -1
     (nil))

(insn 1267 1266 1268 (set (reg/f:DI 1160)
        (lo_sum:DI (reg:DI 1161)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:22 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1268 1267 1269 (set (reg:DI 1162)
        (reg/f:DI 1160)) prng.c:22 -1
     (nil))

(insn 1269 1268 1270 (set (reg/f:DI 1163)
        (plus:DI (reg/f:DI 1160)
            (const_int 40 [0x28]))) prng.c:22 -1
     (nil))

(insn 1270 1269 0 (set (mem/c:DI (plus:DI (reg/f:DI 1163)
                (const_int 24 [0x18])) [4 MEM[(uint_fast32_t *)&prng_seed + 24B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:22 -1
     (nil))

;; _278 = _272 >> 60;

(insn 1271 1270 0 (set (reg:DI 425 [ D.3802 ])
        (lshiftrt:DI (reg:DI 419 [ D.3802 ])
            (const_int 60 [0x3c]))) prng.c:23 -1
     (nil))
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; _281 = _279 + _315;

(insn 1272 1271 1273 (set (reg:DI 1164 [ D.3802 ])
        (ashift:DI (reg:DI 425 [ D.3802 ])
            (const_int 4 [0x4]))) prng.c:23 -1
     (nil))

(insn 1273 1272 1274 (set (reg:DI 1165 [ D.3802 ])
        (plus:DI (reg:DI 425 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:23 -1
     (nil))

(insn 1274 1273 0 (set (reg:DI 427 [ D.3802 ])
        (plus:DI (reg:DI 1164 [ D.3802 ])
            (reg:DI 1165 [ D.3802 ]))) prng.c:23 -1
     (nil))
(const_int 40 [0x28])

Cold cost: 4 (final)
(const_int 40 [0x28])

Cold cost: 4 (final)

;; MEM[(uint_fast32_t *)&prng_seed + 32B] = _281;

(insn 1275 1274 1276 (set (reg:DI 1167)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:23 -1
     (nil))

(insn 1276 1275 1277 (set (reg/f:DI 1166)
        (lo_sum:DI (reg:DI 1167)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:23 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1277 1276 1278 (set (reg:DI 1168)
        (reg/f:DI 1166)) prng.c:23 -1
     (nil))

(insn 1278 1277 1279 (set (reg/f:DI 1169)
        (plus:DI (reg/f:DI 1166)
            (const_int 40 [0x28]))) prng.c:23 -1
     (nil))

(insn 1279 1278 0 (set (mem/c:DI (plus:DI (reg/f:DI 1169)
                (const_int 32 [0x20])) [4 MEM[(uint_fast32_t *)&prng_seed + 32B]+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) prng.c:23 -1
     (nil))

;; # DEBUG userseed => NULL

(debug_insn 1280 1279 0 (var_location:DI userseed (const_int 0 [0])) prng.c:38 -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 1281 1280 0 (var_location:DI seed (const_int 0 [0])) prng.c:38 -1
     (nil))
;; # DEBUG st => &prng_state_store

(debug_insn 1282 1281 0 (var_location:DI st (const_int 0 [0])) prng.c:38 -1
     (nil))
;; # DEBUG seed => &prng_seed

(debug_insn 1283 1282 0 (var_location:DI seed (const_int 0 [0])) prng.c:38 -1
     (nil))
;; prng_state_store.z1 = _274;

(insn 1284 1283 1285 (set (reg:DI 1171)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 -1
     (nil))

(insn 1285 1284 1286 (set (reg/f:DI 1170)
        (lo_sum:DI (reg:DI 1171)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 1286 1285 0 (set (mem/c:DI (reg/f:DI 1170) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:280 -1
     (nil))

;; prng_state_store.z2 = _277;

(insn 1287 1286 1288 (set (reg:DI 1173)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:281 -1
     (nil))

(insn 1288 1287 1289 (set (reg/f:DI 1172)
        (lo_sum:DI (reg:DI 1173)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:281 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 1289 1288 0 (set (mem/c:DI (plus:DI (reg/f:DI 1172)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:281 -1
     (nil))

;; prng_state_store.z3 = _274;

(insn 1290 1289 1291 (set (reg:DI 1175)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:282 -1
     (nil))

(insn 1291 1290 1292 (set (reg/f:DI 1174)
        (lo_sum:DI (reg:DI 1175)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:282 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 1292 1291 0 (set (mem/c:DI (plus:DI (reg/f:DI 1174)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:282 -1
     (nil))

;; prng_state_store.z4 = _277;

(insn 1293 1292 1294 (set (reg:DI 1177)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:283 -1
     (nil))

(insn 1294 1293 1295 (set (reg/f:DI 1176)
        (lo_sum:DI (reg:DI 1177)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:283 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 1295 1294 0 (set (mem/c:DI (plus:DI (reg/f:DI 1176)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:283 -1
     (nil))

;; prng_state_store.z5 = _281;

(insn 1296 1295 1297 (set (reg:DI 1179)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:284 -1
     (nil))

(insn 1297 1296 1298 (set (reg/f:DI 1178)
        (lo_sum:DI (reg:DI 1179)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:284 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 1298 1297 0 (set (mem/c:DI (plus:DI (reg/f:DI 1178)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) generator/splittable_mrg.c:284 -1
     (nil))

;; # DEBUG st => NULL

(debug_insn 1299 1298 0 (var_location:DI st (const_int 0 [0])) prng.c:39 -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 1300 1299 0 (var_location:DI seed (const_int 0 [0])) prng.c:39 -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 1301 1300 0 (var_location:DI seed (const_int 0 [0])) graph500.c:70 -1
     (nil))
;; _17 = edgefactor;

(insn 1302 1301 1303 (set (reg:DI 1181)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:72 -1
     (nil))

(insn 1303 1302 1304 (set (reg/f:DI 1180)
        (lo_sum:DI (reg:DI 1181)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:72 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1304 1303 0 (set (reg:DI 244 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1180)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:72 -1
     (nil))

;; desired_nedge_18 = _13 * _17;

(insn 1305 1304 0 (set (reg/v:DI 245 [ desired_nedge ])
        (mult:DI (reg:DI 243 [ D.3798 ])
            (reg:DI 244 [ D.3798 ]))) graph500.c:72 -1
     (nil))

;; # DEBUG desired_nedge => desired_nedge_18

(debug_insn 1306 1305 0 (var_location:DI desired_nedge (const_int 0 [0])) graph500.c:72 -1
     (nil))
;; if (_13 > desired_nedge_18)

(insn 1307 1306 1308 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 243 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:74 -1
     (nil))

(jump_insn 1308 1307 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:74 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 75
(const_int 74 [0x4a])

Cold cost: 4 (final)

;; __assert_fail ("desired_nedge >= nvtx_scale", "graph500.c", 74, &__PRETTY_FUNCTION__);

(insn 1310 1309 1311 (set (reg:DI 1183)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 -1
     (nil))

(insn 1311 1310 1312 (set (reg/f:DI 1182)
        (lo_sum:DI (reg:DI 1183)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 1312 1311 1313 (set (reg:DI 1185)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 -1
     (nil))

(insn 1313 1312 1314 (set (reg/f:DI 1184)
        (lo_sum:DI (reg:DI 1185)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))

(insn 1314 1313 1315 (set (reg:DI 1187)
        (high:DI (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 -1
     (nil))

(insn 1315 1314 1316 (set (reg/f:DI 1186)
        (lo_sum:DI (reg:DI 1187)
            (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>)
        (nil)))

(insn 1316 1315 1317 (set (reg:DI 3 x3)
        (reg/f:DI 1182)) graph500.c:74 -1
     (nil))

(insn 1317 1316 1318 (set (reg:SI 2 x2)
        (const_int 74 [0x4a])) graph500.c:74 -1
     (nil))

(insn 1318 1317 1319 (set (reg:DI 1 x1)
        (reg/f:DI 1184)) graph500.c:74 -1
     (nil))

(insn 1319 1318 1320 (set (reg:DI 0 x0)
        (reg/f:DI 1186)) graph500.c:74 -1
     (nil))

(call_insn 1320 1319 1321 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 1321 1320 0)

;; Generating RTL for gimple basic block 76

;; 

(code_label 1322 1321 1323 63 "" [0 uses])

(note 1323 1322 0 NOTE_INSN_BASIC_BLOCK)

;; if (_17 > desired_nedge_18)

(insn 1324 1323 1325 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 244 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:75 -1
     (nil))

(jump_insn 1325 1324 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:75 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 77
(const_int 75 [0x4b])

Cold cost: 4 (final)

;; __assert_fail ("desired_nedge >= edgefactor", "graph500.c", 75, &__PRETTY_FUNCTION__);

(insn 1327 1326 1328 (set (reg:DI 1189)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 -1
     (nil))

(insn 1328 1327 1329 (set (reg/f:DI 1188)
        (lo_sum:DI (reg:DI 1189)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 1329 1328 1330 (set (reg:DI 1191)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 -1
     (nil))

(insn 1330 1329 1331 (set (reg/f:DI 1190)
        (lo_sum:DI (reg:DI 1191)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))

(insn 1331 1330 1332 (set (reg:DI 1193)
        (high:DI (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 -1
     (nil))

(insn 1332 1331 1333 (set (reg/f:DI 1192)
        (lo_sum:DI (reg:DI 1193)
            (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>)
        (nil)))

(insn 1333 1332 1334 (set (reg:DI 3 x3)
        (reg/f:DI 1188)) graph500.c:75 -1
     (nil))

(insn 1334 1333 1335 (set (reg:SI 2 x2)
        (const_int 75 [0x4b])) graph500.c:75 -1
     (nil))

(insn 1335 1334 1336 (set (reg:DI 1 x1)
        (reg/f:DI 1190)) graph500.c:75 -1
     (nil))

(insn 1336 1335 1337 (set (reg:DI 0 x0)
        (reg/f:DI 1192)) graph500.c:75 -1
     (nil))

(call_insn 1337 1336 1338 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 1338 1337 0)

;; Generating RTL for gimple basic block 78

;; 

(code_label 1339 1338 1340 64 "" [0 uses])

(note 1340 1339 0 NOTE_INSN_BASIC_BLOCK)

;; _19 = dumpname;

(insn 1341 1340 1342 (set (reg:DI 1195)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:82 -1
     (nil))

(insn 1342 1341 1343 (set (reg/f:DI 1194)
        (lo_sum:DI (reg:DI 1195)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:82 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1343 1342 0 (set (reg/f:DI 246 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1194)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])) graph500.c:82 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_19 == 0B)

(insn 1344 1343 1345 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 246 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:82 -1
     (nil))

(jump_insn 1345 1344 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:82 -1
     (int_list:REG_BR_PROB 6983 (nil)))

;; Generating RTL for gimple basic block 79
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_20 != 0)

(insn 1347 1346 1348 (set (reg:DI 1197)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:83 -1
     (nil))

(insn 1348 1347 1349 (set (reg/f:DI 1196)
        (lo_sum:DI (reg:DI 1197)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:83 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1349 1348 1350 (set (reg:SI 1198)
        (mem/c:SI (reg/f:DI 1196) [3 VERBOSE+0 S4 A32])) graph500.c:83 -1
     (nil))

(insn 1350 1349 1351 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1198)
            (const_int 0 [0]))) graph500.c:83 -1
     (nil))

(jump_insn 1351 1350 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:83 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 80

;; # DEBUG __stream => _21

(debug_insn 1353 1352 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:83 -1
     (nil))
;; # DEBUG __fmt => "Generating edge list..."

(debug_insn 1354 1353 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:83 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1201) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_21, 1, "Generating edge list...");

(insn 1355 1354 1356 (set (reg:DI 1200)
        (high:DI (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1356 1355 1357 (set (reg/f:DI 1199)
        (lo_sum:DI (reg:DI 1200)
            (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)
        (nil)))

(insn 1357 1356 1358 (set (reg:DI 1202)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:83 -1
     (nil))

(insn 1358 1357 1359 (set (reg/f:DI 1201)
        (lo_sum:DI (reg:DI 1202)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:83 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 1359 1358 1360 (set (reg:DI 2 x2)
        (reg/f:DI 1199)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1360 1359 1361 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 1361 1360 1362 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1201) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 1362 1361 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Generating RTL for gimple basic block 81

;; 

(code_label 1363 1362 1364 66 "" [0 uses])

(note 1364 1363 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_22 != 0)

(insn 1365 1364 1366 (set (reg:DI 1204)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:84 -1
     (nil))

(insn 1366 1365 1367 (set (reg/f:DI 1203)
        (lo_sum:DI (reg:DI 1204)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:84 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1367 1366 1368 (set (reg:SI 1205)
        (mem/c:SI (plus:DI (reg/f:DI 1203)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])) graph500.c:84 -1
     (nil))

(insn 1368 1367 1369 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1205)
            (const_int 0 [0]))) graph500.c:84 -1
     (nil))

(jump_insn 1369 1368 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:84 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 82

;; nedge = desired_nedge_18;

(insn 1371 1370 1372 (set (reg:DI 1207)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:85 -1
     (nil))

(insn 1372 1371 1373 (set (reg/f:DI 1206)
        (lo_sum:DI (reg:DI 1207)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:85 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1373 1372 0 (set (mem/c:DI (plus:DI (reg/f:DI 1206)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) graph500.c:85 -1
     (nil))

;; # DEBUG sz => _25

(debug_insn 1374 1373 0 (var_location:DI sz (const_int 0 [0])) graph500.c:86 -1
     (nil))
;; _103 = xmalloc (_25);

(insn 1375 1374 1376 (set (reg:DI 1208 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) xalloc.c:104 -1
     (nil))

(insn 1376 1375 1377 (set (reg:DI 0 x0)
        (reg:DI 1208 [ D.3802 ])) xalloc.c:104 -1
     (nil))

(call_insn 1377 1376 1378 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 1378 1377 0 (set (reg/f:DI 289 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 -1
     (nil))

;; # DEBUG sz => NULL

(debug_insn 1379 1378 0 (var_location:DI sz (const_int 0 [0])) graph500.c:86 -1
     (nil))
;; IJ = _103;

(insn 1380 1379 1381 (set (reg:DI 1210)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:86 -1
     (nil))

(insn 1381 1380 1382 (set (reg/f:DI 1209)
        (lo_sum:DI (reg:DI 1210)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:86 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1382 1381 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 1209)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/f:DI 289 [ D.3806 ])) graph500.c:86 -1
     (nil))
(const_int 1 [0x1])

Cold cost: 4 (final)

;; clock_gettime (1, &tic_ts);

(insn 1383 1382 1384 (set (reg:DI 1212)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))

(insn 1384 1383 1385 (set (reg/f:DI 1211)
        (lo_sum:DI (reg:DI 1212)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 1385 1384 1386 (set (reg:DI 1 x1)
        (reg/f:DI 1211)) timer.c:43 -1
     (nil))

(insn 1386 1385 1387 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))

(call_insn 1387 1386 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(mem/c:DF (plus:DI (reg/f:DI 1213)
        (const_int 32 [0x20])) [1 C+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1215)
        (const_int 24 [0x18])) [1 B+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1217)
        (const_int 16 [0x10])) [1 A+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DI (plus:DI (reg/f:DI 1222)
        (const_int 80 [0x50])) [4 nedge+0 S8 A64])

Cold cost: 4 (final)
(mem/f/c:DI (plus:DI (reg/f:DI 1224)
        (const_int 88 [0x58])) [2 IJ+0 S8 A64])

Cold cost: 4 (final)

;; rmat_edgelist (_30, _31, _33, _34, _35, _36);

(insn 1388 1387 1389 (set (reg:DI 1214)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1389 1388 1390 (set (reg/f:DI 1213)
        (lo_sum:DI (reg:DI 1214)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1390 1389 1391 (set (reg:DI 1216)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1391 1390 1392 (set (reg/f:DI 1215)
        (lo_sum:DI (reg:DI 1216)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1392 1391 1393 (set (reg:DI 1218)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1393 1392 1394 (set (reg/f:DI 1217)
        (lo_sum:DI (reg:DI 1218)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1394 1393 1395 (set (reg:DI 1220)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1395 1394 1396 (set (reg/f:DI 1219)
        (lo_sum:DI (reg:DI 1220)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1396 1395 1397 (set (reg:DI 1221)
        (mem/c:DI (reg/f:DI 1219) [4 SCALE+0 S8 A64])) graph500.c:87 -1
     (nil))

(insn 1397 1396 1398 (set (reg:DI 1223)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1398 1397 1399 (set (reg/f:DI 1222)
        (lo_sum:DI (reg:DI 1223)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1399 1398 1400 (set (reg:DI 1225)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1400 1399 1401 (set (reg/f:DI 1224)
        (lo_sum:DI (reg:DI 1225)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1401 1400 1402 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1213)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:87 -1
     (nil))

(insn 1402 1401 1403 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1215)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:87 -1
     (nil))

(insn 1403 1402 1404 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1217)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:87 -1
     (nil))

(insn 1404 1403 1405 (set (reg:SI 2 x2)
        (subreg:SI (reg:DI 1221) 0)) graph500.c:87 -1
     (nil))

(insn 1405 1404 1406 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1222)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:87 -1
     (nil))

(insn 1406 1405 1407 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1224)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:87 -1
     (nil))

(call_insn 1407 1406 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>) [0 rmat_edgelist S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (nil))))))))))

;; _39 = toc ();

(call_insn 1408 1407 1409 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 1409 1408 0 (set (reg:DF 259 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:87 -1
     (nil))

;; generation_time = _39;

(insn 1410 1409 1411 (set (reg:DI 1227)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))

(insn 1411 1410 1412 (set (reg/f:DI 1226)
        (lo_sum:DI (reg:DI 1227)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1412 1411 0 (set (mem/c:DF (plus:DI (reg/f:DI 1226)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 259 [ D.3804 ])) graph500.c:87 -1
     (nil))

;; Generating RTL for gimple basic block 83
Swap operands in stmt:
val0_290 = val0_288 + _319;
Cost left opnd=0, right opnd=1
Swap operands in stmt:
val1_294 = val1_292 + _317;
Cost left opnd=0, right opnd=1

;; 

(code_label 1415 1414 1416 67 "" [0 uses])

(note 1416 1415 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; clock_gettime (1, &tic_ts);

(insn 1417 1416 1418 (set (reg:DI 1229)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))

(insn 1418 1417 1419 (set (reg/f:DI 1228)
        (lo_sum:DI (reg:DI 1229)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 1419 1418 1420 (set (reg:DI 1 x1)
        (reg/f:DI 1228)) timer.c:43 -1
     (nil))

(insn 1420 1419 1421 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))

(call_insn 1421 1420 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

;; _43 = (int) _42;

(insn 1422 1421 1423 (set (reg:DI 1231)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:89 -1
     (nil))

(insn 1423 1422 1424 (set (reg/f:DI 1230)
        (lo_sum:DI (reg:DI 1231)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 1424 1423 1425 (set (reg:DI 1232)
        (mem/c:DI (reg/f:DI 1230) [4 SCALE+0 S8 A64])) graph500.c:89 -1
     (nil))

(insn 1425 1424 0 (set (reg:SI 261 [ D.3797 ])
        (subreg:SI (reg:DI 1232) 0)) graph500.c:89 -1
     (nil))

;; _44 = userseed;

(insn 1426 1425 1427 (set (reg:DI 1234)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (nil))

(insn 1427 1426 1428 (set (reg/f:DI 1233)
        (lo_sum:DI (reg:DI 1234)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1428 1427 0 (set (reg:DI 262 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 1233)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])) graph500.c:89 -1
     (nil))

;; # DEBUG log_numverts => _43

(debug_insn 1429 1428 0 (var_location:SI log_numverts (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG M => desired_nedge_18

(debug_insn 1430 1429 0 (var_location:DI M (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG userseed1 => _44

(debug_insn 1431 1430 0 (var_location:DI userseed1 (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG userseed2 => _44

(debug_insn 1432 1431 0 (var_location:DI userseed2 (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG result_ptr_in => &IJ

(debug_insn 1433 1432 0 (var_location:DI result_ptr_in (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedges_ptr_in => &nedge

(debug_insn 1434 1433 0 (var_location:DI nedges_ptr_in (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedges_ptr => &nedge

(debug_insn 1435 1434 0 (var_location:DI nedges_ptr (const_int 0 [0])) generator/make_graph.c:44 -1
     (nil))
;; # DEBUG result_ptr => &IJ

(debug_insn 1436 1435 0 (var_location:DI result_ptr (const_int 0 [0])) generator/make_graph.c:45 -1
     (nil))
;; # DEBUG userseed1 => _44

(debug_insn 1437 1436 0 (var_location:DI userseed1 (const_int 0 [0])) generator/make_graph.c:45 -1
     (nil))
;; # DEBUG userseed2 => _44

(debug_insn 1438 1437 0 (var_location:DI userseed2 (const_int 0 [0])) generator/make_graph.c:45 -1
     (nil))
;; # DEBUG seed => &seed

(debug_insn 1439 1438 0 (var_location:DI seed (const_int 0 [0])) generator/make_graph.c:45 -1
     (nil))(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; state$z1_303 = _302 + 1;

(insn 1440 1439 1441 (set (reg:DI 1235 [ D.3802 ])
        (and:DI (reg:DI 262 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:52 -1
     (nil))

(insn 1441 1440 0 (set (reg:DI 438 [ state$z1 ])
        (plus:DI (reg:DI 1235 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:52 -1
     (nil))
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1073741823 [0x3fffffff])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; state$z2_306 = _305 + 1;

(insn 1442 1441 1443 (set (reg:DI 1236 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 30 [0x1e]))) generator/utils.c:53 -1
     (nil))

(insn 1443 1442 1444 (set (reg:DI 1237 [ D.3802 ])
        (and:DI (reg:DI 1236 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:53 -1
     (nil))

(insn 1444 1443 0 (set (reg:DI 441 [ state$z2 ])
        (plus:DI (reg:DI 1237 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:53 -1
     (nil))

;; _312 = _44 >> 60;

(insn 1445 1444 0 (set (reg:DI 444 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 60 [0x3c]))) generator/utils.c:56 -1
     (nil))
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; state$z5_316 = _313 + _322;

(insn 1446 1445 1447 (set (reg:DI 1238 [ D.3802 ])
        (ashift:DI (reg:DI 444 [ D.3802 ])
            (const_int 4 [0x4]))) generator/utils.c:56 -1
     (nil))

(insn 1447 1446 1448 (set (reg:DI 1239 [ D.3802 ])
        (plus:DI (reg:DI 444 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:56 -1
     (nil))

(insn 1448 1447 0 (set (reg:DI 447 [ state$z5 ])
        (plus:DI (reg:DI 1238 [ D.3802 ])
            (reg:DI 1239 [ D.3802 ]))) generator/utils.c:56 -1
     (nil))

;; # DEBUG userseed1 => NULL

(debug_insn 1449 1448 0 (var_location:DI userseed1 (const_int 0 [0])) generator/make_graph.c:50 -1
     (nil))
;; # DEBUG userseed2 => NULL

(debug_insn 1450 1449 0 (var_location:DI userseed2 (const_int 0 [0])) generator/make_graph.c:50 -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 1451 1450 0 (var_location:DI seed (const_int 0 [0])) generator/make_graph.c:50 -1
     (nil))
;; nedge = desired_nedge_18;

(insn 1452 1451 1453 (set (reg:DI 1241)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:52 -1
     (nil))

(insn 1453 1452 1454 (set (reg/f:DI 1240)
        (lo_sum:DI (reg:DI 1241)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1454 1453 0 (set (mem/c:DI (plus:DI (reg/f:DI 1240)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) generator/make_graph.c:52 -1
     (nil))

;; edges_287 = xmalloc (_286);

(insn 1455 1454 1456 (set (reg:DI 1242 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) generator/make_graph.c:53 -1
     (nil))

(insn 1456 1455 1457 (set (reg:DI 0 x0)
        (reg:DI 1242 [ D.3802 ])) generator/make_graph.c:53 -1
     (nil))

(call_insn 1457 1456 1458 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/make_graph.c:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 1458 1457 0 (set (reg/v/f:DI 430 [ edges ])
        (reg:DI 0 x0)) generator/make_graph.c:53 -1
     (nil))

;; # DEBUG edges => edges_287

(debug_insn 1459 1458 0 (var_location:DI edges (const_int 0 [0])) generator/make_graph.c:53 -1
     (nil))
;; IJ = edges_287;

(insn 1460 1459 1461 (set (reg:DI 1244)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:54 -1
     (nil))

(insn 1461 1460 1462 (set (reg/f:DI 1243)
        (lo_sum:DI (reg:DI 1244)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:54 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 1462 1461 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 1243)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/v/f:DI 430 [ edges ])) generator/make_graph.c:54 -1
     (nil))

;; # DEBUG seed => &seed

(debug_insn 1463 1462 0 (var_location:DI seed (const_int 0 [0])) generator/make_graph.c:54 -1
     (nil))
;; # DEBUG logN => _43

(debug_insn 1464 1463 0 (var_location:SI logN (const_int 0 [0])) generator/make_graph.c:54 -1
     (nil))
;; # DEBUG end_edge => desired_nedge_18

(debug_insn 1465 1464 0 (var_location:DI end_edge (const_int 0 [0])) generator/make_graph.c:54 -1
     (nil))
;; # DEBUG edges => edges_287

(debug_insn 1466 1465 0 (var_location:DI edges (const_int 0 [0])) generator/make_graph.c:54 -1
     (nil))
;; # DEBUG start_edge => 0

(debug_insn 1467 1466 0 (var_location:DI start_edge (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; nverts_107 = 1 << _43;

(insn 1468 1467 1469 (set (reg:DI 1245)
        (const_int 1 [0x1])) generator/graph_generator.c:169 -1
     (nil))

(insn 1469 1468 0 (set (reg/v:DI 290 [ nverts ])
        (ashift:DI (reg:DI 1245)
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:169 -1
     (nil))

;; # DEBUG nverts => nverts_107

(debug_insn 1470 1469 0 (var_location:DI nverts (const_int 0 [0])) generator/graph_generator.c:169 -1
     (nil))
;; # DEBUG st => &state

(debug_insn 1471 1470 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:169 -1
     (nil))
;; # DEBUG seed => &seed

(debug_insn 1472 1471 0 (var_location:DI seed (const_int 0 [0])) generator/graph_generator.c:169 -1
     (nil))
;; # DEBUG state$z1 => state$z1_303

(debug_insn 1473 1472 0 (var_location:DI state$z1 (const_int 0 [0])) generator/splittable_mrg.c:280 -1
     (nil))
;; # DEBUG state$z2 => state$z2_306

(debug_insn 1474 1473 0 (var_location:DI state$z2 (const_int 0 [0])) generator/splittable_mrg.c:281 -1
     (nil))
;; # DEBUG state$z3 => state$z1_303

(debug_insn 1475 1474 0 (var_location:DI state$z3 (const_int 0 [0])) generator/splittable_mrg.c:282 -1
     (nil))
;; # DEBUG state$z4 => state$z2_306

(debug_insn 1476 1475 0 (var_location:DI state$z4 (const_int 0 [0])) generator/splittable_mrg.c:283 -1
     (nil))
;; # DEBUG state$z5 => state$z5_316

(debug_insn 1477 1476 0 (var_location:DI state$z5 (const_int 0 [0])) generator/splittable_mrg.c:284 -1
     (nil))
;; # DEBUG st => NULL

(debug_insn 1478 1477 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:172 -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 1479 1478 0 (var_location:DI seed (const_int 0 [0])) generator/graph_generator.c:172 -1
     (nil))
;; MEM[(struct mrg_state *)&new_state] = state$z1_303;

(insn 1480 1479 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;

(insn 1481 1480 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;

(insn 1482 1481 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;

(insn 1483 1482 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;

(insn 1484 1483 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:176 -1
     (nil))
(const_int 7 [0x7])

Cold cost: 4 (final)
(const_int 50 [0x32])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)

;; mrg_skip.constprop (&new_state, 50, 7);

(insn 1485 1484 1486 (set (reg:DI 1246)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:177 -1
     (nil))

(insn 1486 1485 1487 (set (reg:DI 2 x2)
        (const_int 7 [0x7])) generator/graph_generator.c:177 -1
     (nil))

(insn 1487 1486 1488 (set (reg:DI 1 x1)
        (const_int 50 [0x32])) generator/graph_generator.c:177 -1
     (nil))

(insn 1488 1487 1489 (set (reg:DI 0 x0)
        (reg:DI 1246)) generator/graph_generator.c:177 -1
     (nil))

(call_insn 1489 1488 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>) [0 mrg_skip.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG state => &new_state

(debug_insn 1490 1489 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:177 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)

;; mrg_orig_step (&new_state);

(insn 1491 1490 1492 (set (reg:DI 1247)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))

(insn 1492 1491 1493 (set (reg:DI 0 x0)
        (reg:DI 1247)) generator/splittable_mrg.c:268 -1
     (nil))

(call_insn 1493 1492 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG state => NULL

(debug_insn 1494 1493 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:178 -1
     (nil))
;; # DEBUG val0 => NULL

(debug_insn 1495 1494 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:178 -1
     (nil))(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 4294967295 [0xffffffff]))

Cold cost: 8 (final)
(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)
(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)

;; val0_288 = _320 * 4294967295;

(insn 1496 1495 1497 (set (reg:DI 1248)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:179 -1
     (nil))

(insn 1497 1496 1498 (set (reg:DI 1249)
        (const_int 4294967295 [0xffffffff])) generator/graph_generator.c:179 -1
     (nil))

(insn 1498 1497 0 (set (reg/v:DI 431 [ val0 ])
        (mult:DI (reg:DI 1248)
            (reg:DI 1249))) generator/graph_generator.c:179 -1
     (nil))

;; # DEBUG val0 => val0_288

(debug_insn 1499 1498 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:179 -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1500 1499 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:179 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)

;; mrg_orig_step (&new_state);

(insn 1501 1500 1502 (set (reg:DI 1250)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))

(insn 1502 1501 1503 (set (reg:DI 0 x0)
        (reg:DI 1250)) generator/splittable_mrg.c:268 -1
     (nil))

(call_insn 1503 1502 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG state => NULL

(debug_insn 1504 1503 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:180 -1
     (nil))
;; val0_290 = _319 + val0_288;

(insn 1505 1504 1506 (set (reg:DI 1251)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:180 -1
     (nil))

(insn 1506 1505 0 (set (reg/v:DI 432 [ val0 ])
        (plus:DI (reg/v:DI 431 [ val0 ])
            (reg:DI 1251))) generator/graph_generator.c:180 -1
     (nil))

;; # DEBUG val0 => val0_290

(debug_insn 1507 1506 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:180 -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1508 1507 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:180 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)

;; mrg_orig_step (&new_state);

(insn 1509 1508 1510 (set (reg:DI 1252)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))

(insn 1510 1509 1511 (set (reg:DI 0 x0)
        (reg:DI 1252)) generator/splittable_mrg.c:268 -1
     (nil))

(call_insn 1511 1510 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG state => NULL

(debug_insn 1512 1511 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:181 -1
     (nil))
;; # DEBUG val1 => NULL

(debug_insn 1513 1512 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:181 -1
     (nil))(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 4294967295 [0xffffffff]))

Cold cost: 8 (final)
(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)
(const_int 4294967295 [0xffffffff])

Cold cost: 4 (final)

;; val1_292 = _318 * 4294967295;

(insn 1514 1513 1515 (set (reg:DI 1253)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:182 -1
     (nil))

(insn 1515 1514 1516 (set (reg:DI 1254)
        (const_int 4294967295 [0xffffffff])) generator/graph_generator.c:182 -1
     (nil))

(insn 1516 1515 0 (set (reg/v:DI 433 [ val1 ])
        (mult:DI (reg:DI 1253)
            (reg:DI 1254))) generator/graph_generator.c:182 -1
     (nil))

;; # DEBUG val1 => val1_292

(debug_insn 1517 1516 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:182 -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1518 1517 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:182 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Cold cost: 4 (final)

;; mrg_orig_step (&new_state);

(insn 1519 1518 1520 (set (reg:DI 1255)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))

(insn 1520 1519 1521 (set (reg:DI 0 x0)
        (reg:DI 1255)) generator/splittable_mrg.c:268 -1
     (nil))

(call_insn 1521 1520 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG state => NULL

(debug_insn 1522 1521 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:183 -1
     (nil))
;; val1_294 = _317 + val1_292;

(insn 1523 1522 1524 (set (reg:DI 1256)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:183 -1
     (nil))

(insn 1524 1523 0 (set (reg/v:DI 434 [ val1 ])
        (plus:DI (reg/v:DI 433 [ val1 ])
            (reg:DI 1256))) generator/graph_generator.c:183 -1
     (nil))

;; # DEBUG val1 => val1_294

(debug_insn 1525 1524 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:183 -1
     (nil))
;; new_state ={v} {CLOBBER};

(nil)

;; # DEBUG ei => 0

(debug_insn 1526 1525 0 (var_location:DI ei (const_int 0 [0])) generator/graph_generator.c:193 -1
     (nil))
;; ivtmp.134_507 = (unsigned long) edges_287;

(insn 1527 1526 0 (set (reg:DI 576 [ ivtmp.134 ])
        (reg/v/f:DI 430 [ edges ])) -1
     (nil))

;; Generating RTL for gimple basic block 84

;; MEM[(struct mrg_state *)&new_state] = state$z1_303;

(insn 1531 1530 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 8B] = state$z2_306;

(insn 1532 1531 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 16B] = state$z1_303;

(insn 1533 1532 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 24B] = state$z2_306;

(insn 1534 1533 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 -1
     (nil))

;; MEM[(struct mrg_state *)&new_state + 32B] = state$z5_316;

(insn 1535 1534 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:194 -1
     (nil))

;; exponent_middle_296 = (uint_least64_t) start_edge_295;

(insn 1536 1535 0 (set (reg/v:DI 266 [ exponent_middle ])
        (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:195 -1
     (nil))

;; # DEBUG state => &new_state

(debug_insn 1537 1536 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_high => 0

(debug_insn 1538 1537 0 (var_location:DI exponent_high (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_middle => exponent_middle_296

(debug_insn 1539 1538 0 (var_location:DI exponent_middle (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_low => 0

(debug_insn 1540 1539 0 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
;; # DEBUG byte_index => 0

(debug_insn 1541 1540 0 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
;; # DEBUG exponent_low => 0

(debug_insn 1542 1541 0 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
;; # DEBUG byte_index => 8

(debug_insn 1543 1542 0 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
;; # DEBUG exponent_middle => exponent_middle_296

(debug_insn 1544 1543 0 (var_location:DI exponent_middle (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (exponent_middle_296 != 0)

(insn 1545 1544 1546 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 -1
     (nil))

(jump_insn 1546 1545 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/splittable_mrg.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 85

;; # DEBUG byte_index => 16

(debug_insn 1548 1547 0 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
;; # DEBUG exponent_high => 0

(debug_insn 1549 1548 0 (var_location:DI exponent_high (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 1550 1549 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_high => NULL

(debug_insn 1551 1550 0 (var_location:DI exponent_high (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_middle => NULL

(debug_insn 1552 1551 0 (var_location:DI exponent_middle (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG byte_index => NULL

(debug_insn 1553 1552 0 (var_location:SI byte_index (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG val => NULL

(debug_insn 1554 1553 0 (var_location:QI val (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG val => NULL

(debug_insn 1555 1554 0 (var_location:QI val (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG val => NULL

(debug_insn 1556 1555 0 (var_location:QI val (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG exponent_low => NULL

(debug_insn 1557 1556 0 (var_location:DI exponent_low (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;; # DEBUG D#37 => exponent_middle_296 * 16

(debug_insn 1558 1557 0 (var_location:DI D#37 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG D#36 => edges_287 + D#37

(debug_insn 1559 1558 0 (var_location:DI D#36 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG D#1 => 0

(debug_insn 1560 1559 0 (var_location:SI D#1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG nverts => nverts_107

(debug_insn 1561 1560 0 (var_location:DI nverts (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG lgN => _43

(debug_insn 1562 1561 0 (var_location:SI lgN (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG st => &new_state

(debug_insn 1563 1562 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG result => D#36

(debug_insn 1564 1563 0 (var_location:DI result (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG val0 => val0_290

(debug_insn 1565 1564 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG val1 => val1_294

(debug_insn 1566 1565 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG base_tgt => 0

(debug_insn 1567 1566 0 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
;; # DEBUG base_src => 0

(debug_insn 1568 1567 0 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 1569 1568 0 (var_location:SI level (const_int 0 [0])) -1
     (nil))
;; # DEBUG nverts => nverts_107

(debug_insn 1570 1569 0 (var_location:DI nverts (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)

;; if (nverts_107 > 1)

(insn 1571 1570 1572 85 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 290 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 -1
     (nil))

(jump_insn 1572 1571 1575 85 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:136 -1
     (int_list:REG_BR_PROB 9550 (nil)))

(note 1575 1572 1573 293 [bb 293] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1573 1575 1574 293 (set (pc)
        (label_ref 0)) generator/graph_generator.c:136 -1
     (nil))

(barrier 1574 1573 0)

;; Generating RTL for gimple basic block 86

;; 

(code_label 1576 1574 1577 70 "" [0 uses])

(note 1577 1576 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 87

;; # DEBUG byte_index => byte_index_933

(debug_insn 1579 1578 0 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
;; # DEBUG exponent_middle => exponent_middle_51

(debug_insn 1580 1579 0 (var_location:DI exponent_middle (const_int 0 [0])) -1
     (nil))
;; val_351 = (uint_least8_t) exponent_middle_51;

(insn 1581 1580 0 (set (reg/v:SI 457 [ val ])
        (zero_extend:SI (subreg:QI (reg/v:DI 266 [ exponent_middle ]) 0))) generator/splittable_mrg.c:194 -1
     (nil))

;; # DEBUG val => val_351

(debug_insn 1582 1581 0 (var_location:QI val (const_int 0 [0])) generator/splittable_mrg.c:194 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (val_351 != 0)

(insn 1583 1582 1584 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 457 [ val ])
            (const_int 0 [0]))) generator/splittable_mrg.c:195 -1
     (nil))

(jump_insn 1584 1583 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/splittable_mrg.c:195 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 88

;; # DEBUG mat => _354

(debug_insn 1586 1585 0 (var_location:DI mat (const_int 0 [0])) generator/splittable_mrg.c:195 -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1587 1586 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:195 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
Applying pattern match.pd:49, generic-match.c:3223
(const_int 72 [0x48])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 72 [0x48]))

Hot cost: 24 (final)
(const_int 18432 [0x4800])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 18432 [0x4800]))

Hot cost: 24 (final)
(symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)

Hot cost: 8 (final)
(symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)

Hot cost: 8 (final)

;; mrg_apply_transition (_354, &new_state, &new_state);

(insn 1588 1587 1589 (set (reg:DI 1257)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:165 -1
     (nil))

(insn 1589 1588 1590 (set (reg:DI 1258)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:165 -1
     (nil))

(insn 1590 1589 1591 (set (reg:DI 1259)
        (sign_extend:DI (reg/v:SI 457 [ val ]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1591 1590 1592 (set (reg:DI 1260)
        (reg:DI 1259)) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1592 1591 1593 (set (reg:DI 1261)
        (ashift:DI (reg:DI 1260)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1593 1592 1594 (set (reg:DI 1260)
        (reg:DI 1261)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 8 [0x8]))
        (nil)))

(insn 1594 1593 1595 (set (reg:DI 1262)
        (plus:DI (reg:DI 1260)
            (reg:DI 1259))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 9 [0x9]))
        (nil)))

(insn 1595 1594 1596 (set (reg:DI 1263)
        (ashift:DI (reg:DI 1262)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1596 1595 1597 (set (reg:DI 1262)
        (reg:DI 1263)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 72 [0x48]))
        (nil)))

(insn 1597 1596 1598 (set (reg:DI 1264)
        (sign_extend:DI (reg/v:SI 460 [ byte_index ]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1598 1597 1599 (set (reg:DI 1265)
        (reg:DI 1264)) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1599 1598 1600 (set (reg:DI 1266)
        (ashift:DI (reg:DI 1265)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1600 1599 1601 (set (reg:DI 1265)
        (reg:DI 1266)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 8 [0x8]))
        (nil)))

(insn 1601 1600 1602 (set (reg:DI 1267)
        (plus:DI (reg:DI 1265)
            (reg:DI 1264))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 9 [0x9]))
        (nil)))

(insn 1602 1601 1603 (set (reg:DI 1268)
        (ashift:DI (reg:DI 1267)
            (const_int 11 [0xb]))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1603 1602 1604 (set (reg:DI 1267)
        (reg:DI 1268)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 18432 [0x4800]))
        (nil)))

(insn 1604 1603 1605 (set (reg:DI 1269)
        (plus:DI (reg:DI 1262)
            (reg:DI 1267))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1605 1604 1606 (set (reg:DI 1272)
        (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1606 1605 1607 (set (reg:DI 1271)
        (lo_sum:DI (reg:DI 1272)
            (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)
        (nil)))

(insn 1607 1606 1608 (set (reg:DI 1270 [ D.3811 ])
        (plus:DI (reg:DI 1269)
            (reg:DI 1271))) generator/splittable_mrg.c:195 -1
     (nil))

(insn 1608 1607 1609 (set (reg:DI 2 x2)
        (reg:DI 1257)) generator/splittable_mrg.c:165 -1
     (nil))

(insn 1609 1608 1610 (set (reg:DI 1 x1)
        (reg:DI 1258)) generator/splittable_mrg.c:165 -1
     (nil))

(insn 1610 1609 1611 (set (reg:DI 0 x0)
        (reg:DI 1270 [ D.3811 ])) generator/splittable_mrg.c:165 -1
     (nil))

(call_insn 1611 1610 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>) [0 mrg_apply_transition S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:165 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Generating RTL for gimple basic block 89

;; 

(code_label 1612 1611 1613 73 "" [0 uses])

(note 1613 1612 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; byte_index_355 = byte_index_933 + 1;

(insn 1614 1613 0 (set (reg/v:SI 460 [ byte_index ])
        (plus:SI (reg/v:SI 460 [ byte_index ])
            (const_int 1 [0x1]))) generator/splittable_mrg.c:193 -1
     (nil))

;; # DEBUG byte_index => byte_index_355

(debug_insn 1615 1614 0 (var_location:SI byte_index (const_int 0 [0])) generator/splittable_mrg.c:193 -1
     (nil))
;; exponent_middle_356 = exponent_middle_51 >> 8;

(insn 1616 1615 0 (set (reg/v:DI 266 [ exponent_middle ])
        (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
            (const_int 8 [0x8]))) generator/splittable_mrg.c:193 -1
     (nil))

;; # DEBUG exponent_middle => exponent_middle_356

(debug_insn 1617 1616 0 (var_location:DI exponent_middle (const_int 0 [0])) generator/splittable_mrg.c:193 -1
     (nil))
;; # DEBUG byte_index => byte_index_355

(debug_insn 1618 1617 0 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
;; # DEBUG exponent_middle => exponent_middle_356

(debug_insn 1619 1618 0 (var_location:DI exponent_middle (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (exponent_middle_356 != 0)

(insn 1621 1619 1622 89 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 -1
     (nil))

(jump_insn 1622 1621 1626 89 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1620)
            (pc))) generator/splittable_mrg.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil)))

(note 1626 1622 1624 294 [bb 294] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1624 1626 1625 294 (set (pc)
        (label_ref 1623)) generator/splittable_mrg.c:193 -1
     (nil))

(barrier 1625 1624 0)

;; Generating RTL for gimple basic block 90

;; 

(code_label 1627 1625 1628 71 "" [0 uses])

(note 1628 1627 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG D#9 => _43

(debug_insn 1629 1628 0 (var_location:SI D#9 (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG st => &new_state

(debug_insn 1630 1629 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG level s=> level

(debug_insn 1631 1630 0 (var_location:SI level (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG nlevels s=> nlevels

(debug_insn 1632 1631 0 (var_location:SI nlevels (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1633 1632 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1634 1633 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; _368 = new_state.z1;

(insn 1635 1634 0 (set (reg:DI 750 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))

;; # DEBUG a => _368

(debug_insn 1636 1635 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _368

(debug_insn 1637 1636 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 1638 1637 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)

;; if (_368 > 2147483646)

(insn 1639 1638 1640 (set (reg:DI 1273)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 -1
     (nil))

(insn 1640 1639 1641 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 750 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:27 -1
     (nil))

(jump_insn 1641 1640 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:27 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 91
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 107374182 [0x6666666]))

Hot cost: 28 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Hot cost: 24 (final)

;; _283 = _284 % 2147483647;

(insn 1643 1642 1644 (set (reg:DI 1275)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1644 1643 1645 (set (reg:DI 1274 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1275))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1645 1644 1646 (set (reg:DI 1277)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1646 1645 1647 (set (reg:DI 1276)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1277)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1647 1646 1648 (set (reg:DI 1278)
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1276))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1648 1647 1649 (set (reg:DI 1279)
        (lshiftrt:DI (reg:DI 1278)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1649 1648 1650 (set (reg:DI 1280)
        (plus:DI (reg:DI 1276)
            (reg:DI 1279))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1650 1649 1651 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1280)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1274 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1651 1650 1652 (set (reg:DI 1281)
        (reg:DI 468 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1652 1651 1653 (set (reg:DI 1282)
        (ashift:DI (reg:DI 1281)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1653 1652 1654 (set (reg:DI 1281)
        (reg:DI 1282)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))

(insn 1654 1653 1655 (set (reg:DI 1283)
        (minus:DI (reg:DI 1281)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1655 1654 0 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1283))) generator/mod_arith_64bit.h:29 -1
     (nil))

;; # DEBUG a => NULL

(debug_insn 1656 1655 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1657 1656 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1658 1657 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; _282 = new_state.z5;

(insn 1659 1658 0 (set (reg:DI 751 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))

;; # DEBUG sum => NULL

(debug_insn 1660 1659 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _282

(debug_insn 1661 1660 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _283

(debug_insn 1662 1661 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _282

(debug_insn 1663 1662 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 1664 1663 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)

;; if (_282 > 2147483646)

(insn 1665 1664 1666 (set (reg:DI 1284)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1666 1665 1667 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1284))) generator/mod_arith_64bit.h:34 -1
     (nil))

(jump_insn 1667 1666 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; 

(code_label 1671 1670 1672 76 "" [0 uses])

(note 1672 1671 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG D#11 => 107374182

(debug_insn 1673 1672 0 (var_location:DI D#11 (const_int 0 [0])) -1
     (nil))
;; mod_mul.part.1 ();

(call_insn/c/i 1674 1673 1675 (parallel [
            (call (mem:DI (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>) [0 mod_mul.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 1675 1674 0)

;; Generating RTL for gimple basic block 94

;; # DEBUG D#9 => _43

(debug_insn 1677 1676 0 (var_location:SI D#9 (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG st => &new_state

(debug_insn 1678 1677 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG level s=> level

(debug_insn 1679 1678 0 (var_location:SI level (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG nlevels s=> nlevels

(debug_insn 1680 1679 0 (var_location:SI nlevels (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1681 1680 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1682 1681 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#30 => new_state.z1

(debug_insn 1683 1682 0 (var_location:DI D#30 (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#30

(debug_insn 1684 1683 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#30

(debug_insn 1685 1684 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 1686 1685 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#9 => _43

(debug_insn 1687 1686 0 (var_location:SI D#9 (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG st => &new_state

(debug_insn 1688 1687 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG level s=> level

(debug_insn 1689 1688 0 (var_location:SI level (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG nlevels s=> nlevels

(debug_insn 1690 1689 0 (var_location:SI nlevels (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1691 1690 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1692 1691 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#30 => new_state.z1

(debug_insn 1693 1692 0 (var_location:DI D#30 (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#30

(debug_insn 1694 1693 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#30

(debug_insn 1695 1694 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 1696 1695 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 107374182 [0x6666666]))

Hot cost: 28 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Hot cost: 24 (final)

;; _380 = _379 % 2147483647;

(insn 1697 1696 1698 (set (reg:DI 1286)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1698 1697 1699 (set (reg:DI 1285 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1286))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1699 1698 1700 (set (reg:DI 1288)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1700 1699 1701 (set (reg:DI 1287)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1288)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1701 1700 1702 (set (reg:DI 1289)
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1287))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1702 1701 1703 (set (reg:DI 1290)
        (lshiftrt:DI (reg:DI 1289)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1703 1702 1704 (set (reg:DI 1291)
        (plus:DI (reg:DI 1287)
            (reg:DI 1290))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1704 1703 1705 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1291)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1285 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1705 1704 1706 (set (reg:DI 1292)
        (reg:DI 468 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1706 1705 1707 (set (reg:DI 1293)
        (ashift:DI (reg:DI 1292)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1707 1706 1708 (set (reg:DI 1292)
        (reg:DI 1293)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))

(insn 1708 1707 1709 (set (reg:DI 1294)
        (minus:DI (reg:DI 1292)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1709 1708 0 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1294))) generator/mod_arith_64bit.h:29 -1
     (nil))

;; # DEBUG a => NULL

(debug_insn 1710 1709 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1711 1710 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1712 1711 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG D#29 => new_state.z5

(debug_insn 1713 1712 0 (var_location:DI D#29 (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1714 1713 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#29

(debug_insn 1715 1714 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _380

(debug_insn 1716 1715 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#29

(debug_insn 1717 1716 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 1718 1717 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)

;; if (_1437 > 2147483646)

(insn 1719 1718 1720 (set (reg:DI 1295)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1720 1719 1721 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1295))) generator/mod_arith_64bit.h:34 -1
     (nil))

(jump_insn 1721 1720 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 95

;; new_state.z5 = _1437;

(insn 1723 1722 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))

;; new_state.z4 = _1438;

(insn 1724 1723 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))

;; new_state.z3 = _1439;

(insn 1725 1724 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; new_state.z2 = _1440;

(insn 1726 1725 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))

;; new_state.z1 = _1436;

(insn 1727 1726 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))

;; Generating RTL for gimple basic block 96

;; new_state.z5 = _1454;

(insn 1732 1731 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))

;; new_state.z4 = _1455;

(insn 1733 1732 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; new_state.z3 = _1456;

(insn 1734 1733 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))

;; new_state.z2 = _1457;

(insn 1735 1734 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))

;; new_state.z1 = _1453;

(insn 1736 1735 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 469 [ D.3802 ])) -1
     (nil))

;; Generating RTL for gimple basic block 97

;; 

(code_label 1737 1736 1738 78 "" [0 uses])

(note 1738 1737 0 NOTE_INSN_BASIC_BLOCK)
(const_int 34 [0x22])

Cold cost: 4 (final)

;; __assert_fail ("a <= 0x7FFFFFFE", "generator/mod_arith_64bit.h", 34, &__PRETTY_FUNCTION__);

(insn 1739 1738 1740 (set (reg:DI 1297)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1740 1739 1741 (set (reg/f:DI 1296)
        (lo_sum:DI (reg:DI 1297)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>)
        (nil)))

(insn 1741 1740 1742 (set (reg:DI 1299)
        (high:DI (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1742 1741 1743 (set (reg/f:DI 1298)
        (lo_sum:DI (reg:DI 1299)
            (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>)
        (nil)))

(insn 1743 1742 1744 (set (reg:DI 1301)
        (high:DI (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1744 1743 1745 (set (reg/f:DI 1300)
        (lo_sum:DI (reg:DI 1301)
            (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>)
        (nil)))

(insn 1745 1744 1746 (set (reg:DI 3 x3)
        (reg/f:DI 1296)) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1746 1745 1747 (set (reg:SI 2 x2)
        (const_int 34 [0x22])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1747 1746 1748 (set (reg:DI 1 x1)
        (reg/f:DI 1298)) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1748 1747 1749 (set (reg:DI 0 x0)
        (reg/f:DI 1300)) generator/mod_arith_64bit.h:34 -1
     (nil))

(call_insn 1749 1748 1750 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 1750 1749 0)

;; Generating RTL for gimple basic block 98

;; 

(code_label 1751 1750 1752 77 "" [0 uses])

(note 1752 1751 0 NOTE_INSN_BASIC_BLOCK)

;; _1466 = new_state.z4;

(insn 1753 1752 0 (set (reg:DI 714 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])) -1
     (nil))

;; _1468 = new_state.z3;

(insn 1754 1753 0 (set (reg:DI 826 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])) -1
     (nil))

;; _1470 = new_state.z2;

(insn 1755 1754 0 (set (reg:DI 695 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 99

;; 

(code_label 1756 1755 1757 79 "" [0 uses])

(note 1757 1756 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG base_tgt => base_tgt_310

(debug_insn 1758 1757 0 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
;; # DEBUG base_src => base_src_819

(debug_insn 1759 1758 0 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 1760 1759 0 (var_location:SI level (const_int 0 [0])) -1
     (nil))
;; # DEBUG nverts => nverts_308

(debug_insn 1761 1760 0 (var_location:DI nverts (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#9 => _43

(debug_insn 1762 1761 0 (var_location:SI D#9 (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG st => &new_state

(debug_insn 1763 1762 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG level s=> level

(debug_insn 1764 1763 0 (var_location:SI level (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG nlevels s=> nlevels

(debug_insn 1765 1764 0 (var_location:SI nlevels (const_int 0 [0]) [uninit]) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1766 1765 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1767 1766 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1768 1767 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1769 1768 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1770 1769 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1771 1770 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _936

(debug_insn 1772 1771 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _935

(debug_insn 1773 1772 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _936

(debug_insn 1774 1773 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 1775 1774 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 104480 [0x19820])

Hot cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 104480 [0x19820]))

Hot cost: 28 (final)
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Hot cost: 24 (final)

;; _388 = _387 % 2147483647;

(insn 1776 1775 1777 (set (reg:DI 1303)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1777 1776 1778 (set (reg:DI 1302 [ D.3802 ])
        (mult:DI (reg:DI 751 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1778 1777 1779 (set (reg:DI 1304 [ D.3802 ])
        (plus:DI (reg:DI 1302 [ D.3802 ])
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1779 1778 1780 (set (reg:DI 1306)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1780 1779 1781 (set (reg:DI 1305)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1781 1780 1782 (set (reg:DI 1307)
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1305))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1782 1781 1783 (set (reg:DI 1308)
        (lshiftrt:DI (reg:DI 1307)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1783 1782 1784 (set (reg:DI 1309)
        (plus:DI (reg:DI 1305)
            (reg:DI 1308))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1784 1783 1785 (set (reg:DI 469 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1309)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1304 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1785 1784 1786 (set (reg:DI 1310)
        (reg:DI 469 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1786 1785 1787 (set (reg:DI 1311)
        (ashift:DI (reg:DI 1310)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1787 1786 1788 (set (reg:DI 1310)
        (reg:DI 1311)) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))

(insn 1788 1787 1789 (set (reg:DI 1312)
        (minus:DI (reg:DI 1310)
            (reg:DI 469 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1789 1788 0 (set (reg:DI 469 [ D.3802 ])
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1312))) generator/mod_arith_64bit.h:36 -1
     (nil))

;; # DEBUG sum => NULL

(debug_insn 1790 1789 0 (var_location:DI sum (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1791 1790 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1792 1791 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1793 1792 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1794 1793 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG new_elt => NULL

(debug_insn 1795 1794 0 (var_location:DI new_elt (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 1796 1795 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:268 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 1797 1796 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:45 -1
     (nil))
;; # DEBUG val => (uint32_t) _388

(debug_insn 1798 1797 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:45 -1
     (nil))(const_int 7294 [0x1c7e])

Hot cost: 4 (final)

;; if (_388 <= 7294)

(insn 1799 1798 1800 (set (reg:DI 1313)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:46 -1
     (nil))

(insn 1800 1799 1801 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 469 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:46 -1
     (nil))

(jump_insn 1801 1800 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:46 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; # DEBUG state => &new_state

(debug_insn 1804 1803 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &new_state

(debug_insn 1805 1804 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#33 => new_state.z1

(debug_insn 1806 1805 0 (var_location:DI D#33 (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#33

(debug_insn 1807 1806 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#33

(debug_insn 1808 1807 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 1809 1808 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 107374182 [0x6666666]))

Hot cost: 28 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Hot cost: 24 (final)

;; _392 = _391 % 2147483647;

(insn 1810 1809 1811 (set (reg:DI 1315)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1811 1810 1812 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1315))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1812 1811 1813 (set (reg:DI 1317)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1813 1812 1814 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1814 1813 1815 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1815 1814 1816 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1816 1815 1817 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1817 1816 1818 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1818 1817 1819 (set (reg:DI 1321)
        (reg:DI 473 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1819 1818 1820 (set (reg:DI 1322)
        (ashift:DI (reg:DI 1321)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 1820 1819 1821 (set (reg:DI 1321)
        (reg:DI 1322)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))

(insn 1821 1820 1822 (set (reg:DI 1323)
        (minus:DI (reg:DI 1321)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1822 1821 0 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 -1
     (nil))

;; # DEBUG a => NULL

(debug_insn 1823 1822 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1824 1823 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1825 1824 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG D#32 => new_state.z5

(debug_insn 1826 1825 0 (var_location:DI D#32 (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1827 1826 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#32

(debug_insn 1828 1827 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _392

(debug_insn 1829 1828 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#32

(debug_insn 1830 1829 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 1831 1830 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1832 1831 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1833 1832 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1834 1833 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1835 1834 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#32

(debug_insn 1836 1835 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _392

(debug_insn 1837 1836 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => D#32

(debug_insn 1838 1837 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 1839 1838 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)

;; if (_1454 > 2147483646)

(insn 1841 1839 1842 (set (reg:DI 1324)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 1842 1841 1843 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1324))) generator/mod_arith_64bit.h:34 -1
     (nil))

(jump_insn 1843 1842 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 102
Swap operands in stmt:
_399 = _392 + _398;
Cost left opnd=0, right opnd=1
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 104480 [0x19820]))

Hot cost: 28 (final)
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Hot cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Hot cost: 24 (final)

;; _400 = _399 % 2147483647;

(insn 1845 1844 1846 (set (reg:DI 1326)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1846 1845 1847 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1326))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1847 1846 1848 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1848 1847 1849 (set (reg:DI 1329)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1849 1848 1850 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1329)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1850 1849 1851 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1851 1850 1852 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1852 1851 1853 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1853 1852 1854 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1854 1853 1855 (set (reg:DI 1333)
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1855 1854 1856 (set (reg:DI 1334)
        (ashift:DI (reg:DI 1333)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 1856 1855 1857 (set (reg:DI 1333)
        (reg:DI 1334)) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))

(insn 1857 1856 1858 (set (reg:DI 1335)
        (minus:DI (reg:DI 1333)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))

(insn 1858 1857 0 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 -1
     (nil))

;; # DEBUG sum => NULL

(debug_insn 1859 1858 0 (var_location:DI sum (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1860 1859 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1861 1860 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 1862 1861 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 1863 1862 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG new_elt => NULL

(debug_insn 1864 1863 0 (var_location:DI new_elt (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 1865 1864 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:268 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 1866 1865 0 (var_location:DI state (const_int 0 [0])) generator/graph_generator.c:48 -1
     (nil))
;; # DEBUG val => (uint32_t) _400

(debug_insn 1867 1866 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:48 -1
     (nil))
;; _725 = _1455;

(insn 1868 1867 0 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; _685 = _1456;

(nil)

;; _989 = _1457;

(nil)

;; _348 = _1453;

(nil)
(const_int 7294 [0x1c7e])

Hot cost: 4 (final)

;; if (_400 <= 7294)

(insn 1870 1868 1871 (set (reg:DI 1336)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:49 -1
     (nil))

(insn 1871 1870 1872 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1336))) generator/graph_generator.c:49 -1
     (nil))

(jump_insn 1872 1871 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1869)
            (pc))) generator/graph_generator.c:49 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 103

;; val_371 = (uint32_t) _400;

(insn 1874 1873 0 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))

;; Generating RTL for gimple basic block 104

;; 

(code_label 1877 1876 1878 81 "" [0 uses])

(note 1878 1877 0 NOTE_INSN_BASIC_BLOCK)

;; val_369 = (uint32_t) _388;

(insn 1879 1878 0 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))

;; Generating RTL for gimple basic block 105

;; 

(code_label 1880 1879 1881 84 "" [0 uses])

(note 1881 1880 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG val => val_372

(debug_insn 1882 1881 0 (var_location:SI val (const_int 0 [0])) -1
     (nil))
;; # DEBUG spk_noise_factor => 0

(debug_insn 1883 1882 0 (var_location:SI spk_noise_factor (const_int 0 [0])) generator/graph_generator.c:52 -1
     (nil))
;; # DEBUG adjusted_bc_numerator => 1900

(debug_insn 1884 1883 0 (var_location:SI adjusted_bc_numerator (const_int 0 [0])) generator/graph_generator.c:56 -1
     (nil))(const_int -776530087 [0xffffffffd1b71759])

Hot cost: 8 (final)
(const_int -776530087 [0xffffffffd1b71759])

Hot cost: 8 (final)
(const_int 10000 [0x2710])

Hot cost: 4 (final)
(mult:SI (reg:SI 73)
    (const_int 10000 [0x2710]))

Hot cost: 16 (final)
(const_int 10000 [0x2710])

Hot cost: 4 (final)
(const_int 10000 [0x2710])

Hot cost: 4 (final)

;; val_373 = val_372 % 10000;

(insn 1885 1884 1886 (set (reg:SI 1338)
        (const_int -776530087 [0xffffffffd1b71759])) generator/graph_generator.c:57 -1
     (nil))

(insn 1886 1885 1887 (set (reg:DI 1337)
        (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
            (zero_extend:DI (reg:SI 1338)))) generator/graph_generator.c:57 -1
     (nil))

(insn 1887 1886 1888 (set (reg:DI 1339)
        (lshiftrt:DI (reg:DI 1337)
            (const_int 32 [0x20]))) generator/graph_generator.c:57 -1
     (nil))

(insn 1888 1887 1889 (set (reg/v:SI 464 [ val ])
        (lshiftrt:SI (subreg:SI (reg:DI 1339) 0)
            (const_int 13 [0xd]))) generator/graph_generator.c:57 -1
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 463 [ val ])
            (const_int 10000 [0x2710]))
        (nil)))

(insn 1889 1888 1890 (set (reg:SI 1341)
        (const_int 10000 [0x2710])) generator/graph_generator.c:57 -1
     (nil))

(insn 1890 1889 1891 (set (reg:SI 1340)
        (mult:SI (reg/v:SI 464 [ val ])
            (reg:SI 1341))) generator/graph_generator.c:57 -1
     (nil))

(insn 1891 1890 0 (set (reg/v:SI 464 [ val ])
        (minus:SI (reg/v:SI 463 [ val ])
            (reg:SI 1340))) generator/graph_generator.c:57 -1
     (nil))

;; # DEBUG val => val_373

(debug_insn 1892 1891 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:57 -1
     (nil))(const_int 1899 [0x76b])

Hot cost: 4 (final)

;; if (val_373 <= 1899)

(insn 1893 1892 1894 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 464 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:58 -1
     (nil))

(jump_insn 1894 1893 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:58 -1
     (int_list:REG_BR_PROB 3900 (nil)))

;; Generating RTL for gimple basic block 106

;; # DEBUG val => val_374

(debug_insn 1896 1895 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:59 -1
     (nil))(const_int -1900 [0xfffffffffffff894])

Hot cost: 4 (final)
(const_int -1900 [0xfffffffffffff894])

Hot cost: 4 (final)
(const_int 1899 [0x76b])

Hot cost: 4 (final)

;; if (val_374 <= 1899)

(insn 1897 1896 1898 (set (reg:SI 1342 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:60 -1
     (nil))

(insn 1898 1897 1899 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1342 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:60 -1
     (nil))

(jump_insn 1899 1898 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:60 -1
     (int_list:REG_BR_PROB 6700 (nil)))

;; Generating RTL for gimple basic block 107

;; # DEBUG val => val_375

(debug_insn 1901 1900 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:61 -1
     (nil))(const_int -3800 [0xfffffffffffff128])

Hot cost: 4 (final)
(const_int -3800 [0xfffffffffffff128])

Hot cost: 4 (final)
(const_int 5699 [0x1643])

Hot cost: 4 (final)

;; if (val_375 <= 5699)

(insn 1902 1901 1903 (set (reg:SI 1343 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:63 -1
     (nil))

(insn 1903 1902 1904 (set (reg:SI 1344)
        (const_int 5699 [0x1643])) generator/graph_generator.c:63 -1
     (nil))

(insn 1904 1903 1905 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1343 [ val ])
            (reg:SI 1344))) generator/graph_generator.c:63 -1
     (nil))

(jump_insn 1905 1904 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:63 -1
     (int_list:REG_BR_PROB 6700 (nil)))

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; 

(code_label 1909 1908 1910 86 "" [0 uses])

(note 1910 1909 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG st => NULL

(debug_insn 1911 1910 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG val => NULL

(debug_insn 1912 1911 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG square => NULL

(debug_insn 1913 1912 0 (var_location:SI square (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG src_offset => 1

(debug_insn 1914 1913 0 (var_location:SI src_offset (const_int 0 [0])) generator/graph_generator.c:138 -1
     (nil))
;; # DEBUG tgt_offset => 0

(debug_insn 1915 1914 0 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
;; if (base_tgt_310 < base_src_819)

(insn 1916 1915 1917 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 -1
     (nil))

(jump_insn 1917 1916 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:140 -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 110

;; new_state.z5 = _1437;

(insn 1919 1918 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))

;; new_state.z4 = _1438;

(insn 1920 1919 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))

;; new_state.z3 = _1439;

(insn 1921 1920 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; new_state.z2 = _1440;

(insn 1922 1921 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))

;; new_state.z1 = _1436;

(insn 1923 1922 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))

;; Generating RTL for gimple basic block 111
(const_int 16 [0x10])

Cold cost: 4 (final)
(const_int 16 [0x10])

Cold cost: 4 (final)
(const_int 140 [0x8c])

Cold cost: 4 (final)

;; __assert_fail ("base_src <= base_tgt", "generator/graph_generator.c", 140, &__PRETTY_FUNCTION__);

(insn 1925 1924 1926 (set (reg:DI 1346)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 -1
     (nil))

(insn 1926 1925 1927 (set (reg/f:DI 1345)
        (lo_sum:DI (reg:DI 1346)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 1927 1926 1928 (set (reg:DI 1347)
        (reg/f:DI 1345)) generator/graph_generator.c:140 -1
     (nil))

(insn 1928 1927 1929 (set (reg/f:DI 1348)
        (plus:DI (reg/f:DI 1345)
            (const_int 16 [0x10]))) generator/graph_generator.c:140 -1
     (nil))

(insn 1929 1928 1930 (set (reg:DI 1350)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 -1
     (nil))

(insn 1930 1929 1931 (set (reg/f:DI 1349)
        (lo_sum:DI (reg:DI 1350)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
        (nil)))

(insn 1931 1930 1932 (set (reg:DI 1352)
        (high:DI (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 -1
     (nil))

(insn 1932 1931 1933 (set (reg/f:DI 1351)
        (lo_sum:DI (reg:DI 1352)
            (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>)
        (nil)))

(insn 1933 1932 1934 (set (reg:DI 3 x3)
        (reg/f:DI 1348)) generator/graph_generator.c:140 -1
     (nil))

(insn 1934 1933 1935 (set (reg:SI 2 x2)
        (const_int 140 [0x8c])) generator/graph_generator.c:140 -1
     (nil))

(insn 1935 1934 1936 (set (reg:DI 1 x1)
        (reg/f:DI 1349)) generator/graph_generator.c:140 -1
     (nil))

(insn 1936 1935 1937 (set (reg:DI 0 x0)
        (reg/f:DI 1351)) generator/graph_generator.c:140 -1
     (nil))

(call_insn 1937 1936 1938 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 1938 1937 0)

;; Generating RTL for gimple basic block 112

;; 

(code_label 1939 1938 1940 87 "" [0 uses])

(note 1940 1939 0 NOTE_INSN_BASIC_BLOCK)

;; if (base_tgt_310 == base_src_819)

(insn 1941 1940 1942 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:143 -1
     (nil))

(jump_insn 1942 1941 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:143 -1
     (int_list:REG_BR_PROB 0 (nil)))

;; Generating RTL for gimple basic block 113

;; _1472 = nverts_308 >> 1;

(insn 1944 1943 0 (set (reg:DI 832 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))

;; Generating RTL for gimple basic block 114

;; 

(code_label 1947 1946 1948 88 "" [0 uses])

(note 1948 1947 0 NOTE_INSN_BASIC_BLOCK)

;; _1446 = nverts_308 >> 1;

(insn 1949 1948 0 (set (reg:DI 831 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))

;; Generating RTL for gimple basic block 115

;; new_state.z5 = _1437;

(insn 1953 1952 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))

;; new_state.z4 = _1438;

(insn 1954 1953 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))

;; new_state.z3 = _1439;

(insn 1955 1954 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; new_state.z2 = _1440;

(insn 1956 1955 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))

;; new_state.z1 = _1436;

(insn 1957 1956 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))

;; Generating RTL for gimple basic block 116

;; 

(code_label 1958 1957 1959 72 "" [0 uses])

(note 1959 1958 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG v0 => base_src_813

(debug_insn 1960 1959 0 (var_location:DI v0 (const_int 0 [0])) -1
     (nil))
;; # DEBUG lgN => _43

(debug_insn 1961 1960 0 (var_location:SI lgN (const_int 0 [0])) -1
     (nil))
;; # DEBUG val0 => val0_290

(debug_insn 1962 1961 0 (var_location:DI val0 (const_int 0 [0])) -1
     (nil))
;; # DEBUG val1 => val1_294

(debug_insn 1963 1962 0 (var_location:DI val1 (const_int 0 [0])) -1
     (nil))
;; v_446 = (uint64_t) base_src_813;

(insn 1964 1963 0 (set (reg/v:DI 518 [ v ])
        (reg/v:DI 747 [ base_src ])) generator/graph_generator.c:121 -1
     (nil))

;; # DEBUG v => v_446

(debug_insn 1965 1964 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:121 -1
     (nil))
;; _447 = val0_290 + val1_294;

(insn 1966 1965 0 (set (reg:DI 519 [ D.3802 ])
        (plus:DI (reg/v:DI 432 [ val0 ])
            (reg/v:DI 434 [ val1 ]))) generator/graph_generator.c:122 -1
     (nil))

;; v_448 = v_446 + _447;

(insn 1967 1966 0 (set (reg/v:DI 520 [ v ])
        (plus:DI (reg/v:DI 518 [ v ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 -1
     (nil))

;; # DEBUG v => v_448

(debug_insn 1968 1967 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:122 -1
     (nil))(const_int 4979156007449604625 [0x4519840211493211])

Cold cost: 16 (final)
(const_int 4979156007449604625 [0x4519840211493211])

Cold cost: 16 (final)

;; _449 = val0_290 | 4979156007449604625;

(insn 1969 1968 1970 (set (reg:DI 1353)
        (const_int 4979156007449604625 [0x4519840211493211])) generator/graph_generator.c:123 -1
     (nil))

(insn 1970 1969 0 (set (reg:DI 521 [ D.3802 ])
        (ior:DI (reg/v:DI 432 [ val0 ])
            (reg:DI 1353))) generator/graph_generator.c:123 -1
     (nil))

;; # DEBUG v => v_450

(debug_insn 1971 1970 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:123 -1
     (nil))
;; # DEBUG x => v_450

(debug_insn 1972 1971 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:123 -1
     (nil))
;; x_451 = __builtin_bswap64 (v_450);

(insn 1973 1972 1974 (set (reg:DI 1354 [ v ])
        (mult:DI (reg/v:DI 520 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))

(insn 1974 1973 0 (set (reg/v:DI 523 [ x ])
        (bswap:DI (reg:DI 1354 [ v ]))) generator/graph_generator.c:82 -1
     (nil))

;; # DEBUG x => x_451

(debug_insn 1975 1974 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:82 -1
     (nil))(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _453 = _452 & 1085102592571150095;

(insn 1976 1975 1977 (set (reg:DI 1355 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 523 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

(insn 1977 1976 0 (set (reg:DI 525 [ D.3802 ])
        (and:DI (reg:DI 1355 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _455 = _454 << 4;

(insn 1978 1977 1979 (set (reg:DI 1356 [ D.3802 ])
        (and:DI (reg/v:DI 523 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))

(insn 1979 1978 0 (set (reg:DI 527 [ D.3802 ])
        (ashift:DI (reg:DI 1356 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

;; x_456 = _453 | _455;

(insn 1980 1979 0 (set (reg/v:DI 528 [ x ])
        (ior:DI (reg:DI 525 [ D.3802 ])
            (reg:DI 527 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))

;; # DEBUG x => x_456

(debug_insn 1981 1980 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:88 -1
     (nil))(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _458 = _457 & 3689348814741910323;

(insn 1982 1981 1983 (set (reg:DI 1357 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 528 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

(insn 1983 1982 0 (set (reg:DI 530 [ D.3802 ])
        (and:DI (reg:DI 1357 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _460 = _459 << 2;

(insn 1984 1983 1985 (set (reg:DI 1358 [ D.3802 ])
        (and:DI (reg/v:DI 528 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))

(insn 1985 1984 0 (set (reg:DI 532 [ D.3802 ])
        (ashift:DI (reg:DI 1358 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

;; x_461 = _458 | _460;

(insn 1986 1985 0 (set (reg/v:DI 533 [ x ])
        (ior:DI (reg:DI 530 [ D.3802 ])
            (reg:DI 532 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))

;; # DEBUG x => x_461

(debug_insn 1987 1986 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:89 -1
     (nil))(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _463 = _462 & 6148914691236517205;

(insn 1988 1987 1989 (set (reg:DI 1359 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 533 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

(insn 1989 1988 0 (set (reg:DI 535 [ D.3802 ])
        (and:DI (reg:DI 1359 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _465 = _464 << 1;

(insn 1990 1989 1991 (set (reg:DI 1360 [ D.3802 ])
        (and:DI (reg/v:DI 533 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))

(insn 1991 1990 0 (set (reg:DI 537 [ D.3802 ])
        (ashift:DI (reg:DI 1360 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

;; # DEBUG x => x_466

(debug_insn 1992 1991 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:90 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 1993 1992 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:124 -1
     (nil))(const_int 64 [0x40])

Cold cost: 4 (final)
(const_int 64 [0x40])

Cold cost: 4 (final)

;; _467 = 64 - _43;

(insn 1994 1993 1995 (set (reg:SI 1361)
        (const_int 64 [0x40])) generator/graph_generator.c:124 -1
     (nil))

(insn 1995 1994 0 (set (reg:SI 539 [ D.3797 ])
        (minus:SI (reg:SI 1361)
            (reg:SI 261 [ D.3797 ]))) generator/graph_generator.c:124 -1
     (nil))

;; v_468 = x_466 >> _467;

(insn 1996 1995 1997 (set (reg:DI 1362 [ x ])
        (ior:DI (reg:DI 535 [ D.3802 ])
            (reg:DI 537 [ D.3802 ]))) generator/graph_generator.c:124 -1
     (nil))

(insn 1997 1996 0 (set (reg/v:DI 540 [ v ])
        (lshiftrt:DI (reg:DI 1362 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 -1
     (nil))

;; # DEBUG v => v_468

(debug_insn 1998 1997 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:124 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_469 != 0)

(insn 1999 1998 2000 (set (reg:DI 1363 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 540 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 -1
     (nil))

(insn 2000 1999 2001 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1363 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 -1
     (nil))

(jump_insn 2001 2000 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:125 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 117

;; # DEBUG D#12 => base_src_813

(debug_insn 2003 2002 0 (var_location:DI D#12 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#13 => _43

(debug_insn 2004 2003 0 (var_location:SI D#13 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#14 => val0_290

(debug_insn 2005 2004 0 (var_location:DI D#14 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#15 => val1_294

(debug_insn 2006 2005 0 (var_location:DI D#15 (const_int 0 [0])) -1
     (nil))
;; scramble.part.1 ();

(call_insn/c/i 2007 2006 2008 (parallel [
            (call (mem:DI (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>) [0 scramble.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 2008 2007 0)

;; Generating RTL for gimple basic block 118

;; 

(code_label 2009 2008 2010 90 "" [0 uses])

(note 2010 2009 0 NOTE_INSN_BASIC_BLOCK)
(const_int 3481428888784487333 [0x3050852102c843a5])

Cold cost: 16 (final)
(const_int 3481428888784487333 [0x3050852102c843a5])

Cold cost: 16 (final)

;; _470 = val1_294 | 3481428888784487333;

(insn 2011 2010 2012 (set (reg:DI 1364)
        (const_int 3481428888784487333 [0x3050852102c843a5])) generator/graph_generator.c:126 -1
     (nil))

(insn 2012 2011 0 (set (reg:DI 542 [ D.3802 ])
        (ior:DI (reg/v:DI 434 [ val1 ])
            (reg:DI 1364))) generator/graph_generator.c:126 -1
     (nil))

;; # DEBUG v => v_471

(debug_insn 2013 2012 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:126 -1
     (nil))
;; # DEBUG x => v_471

(debug_insn 2014 2013 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:126 -1
     (nil))
;; x_472 = __builtin_bswap64 (v_471);

(insn 2015 2014 2016 (set (reg:DI 1365 [ v ])
        (mult:DI (reg/v:DI 540 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))

(insn 2016 2015 0 (set (reg/v:DI 544 [ x ])
        (bswap:DI (reg:DI 1365 [ v ]))) generator/graph_generator.c:82 -1
     (nil))

;; # DEBUG x => x_472

(debug_insn 2017 2016 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:82 -1
     (nil))(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _474 = _473 & 1085102592571150095;

(insn 2018 2017 2019 (set (reg:DI 1366 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 544 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2019 2018 0 (set (reg:DI 546 [ D.3802 ])
        (and:DI (reg:DI 1366 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _476 = _475 << 4;

(insn 2020 2019 2021 (set (reg:DI 1367 [ D.3802 ])
        (and:DI (reg/v:DI 544 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2021 2020 0 (set (reg:DI 548 [ D.3802 ])
        (ashift:DI (reg:DI 1367 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

;; x_477 = _474 | _476;

(insn 2022 2021 0 (set (reg/v:DI 549 [ x ])
        (ior:DI (reg:DI 546 [ D.3802 ])
            (reg:DI 548 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))

;; # DEBUG x => x_477

(debug_insn 2023 2022 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:88 -1
     (nil))(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _479 = _478 & 3689348814741910323;

(insn 2024 2023 2025 (set (reg:DI 1368 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 549 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2025 2024 0 (set (reg:DI 551 [ D.3802 ])
        (and:DI (reg:DI 1368 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _481 = _480 << 2;

(insn 2026 2025 2027 (set (reg:DI 1369 [ D.3802 ])
        (and:DI (reg/v:DI 549 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2027 2026 0 (set (reg:DI 553 [ D.3802 ])
        (ashift:DI (reg:DI 1369 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

;; x_482 = _479 | _481;

(insn 2028 2027 0 (set (reg/v:DI 554 [ x ])
        (ior:DI (reg:DI 551 [ D.3802 ])
            (reg:DI 553 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))

;; # DEBUG x => x_482

(debug_insn 2029 2028 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:89 -1
     (nil))(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _484 = _483 & 6148914691236517205;

(insn 2030 2029 2031 (set (reg:DI 1370 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 554 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2031 2030 0 (set (reg:DI 556 [ D.3802 ])
        (and:DI (reg:DI 1370 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _486 = _485 << 1;

(insn 2032 2031 2033 (set (reg:DI 1371 [ D.3802 ])
        (and:DI (reg/v:DI 554 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2033 2032 0 (set (reg:DI 558 [ D.3802 ])
        (ashift:DI (reg:DI 1371 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

;; # DEBUG x => x_487

(debug_insn 2034 2033 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:90 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2035 2034 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:127 -1
     (nil))
;; v_488 = x_487 >> _467;

(insn 2036 2035 2037 (set (reg:DI 1372 [ x ])
        (ior:DI (reg:DI 556 [ D.3802 ])
            (reg:DI 558 [ D.3802 ]))) generator/graph_generator.c:127 -1
     (nil))

(insn 2037 2036 0 (set (reg/v:DI 560 [ v ])
        (lshiftrt:DI (reg:DI 1372 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 -1
     (nil))

;; # DEBUG v => v_488

(debug_insn 2038 2037 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:127 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_489 != 0)

(insn 2039 2038 2040 (set (reg:DI 1373 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 560 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 -1
     (nil))

(insn 2040 2039 2041 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1373 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 -1
     (nil))

(jump_insn 2041 2040 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:128 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 119
(const_int 128 [0x80])

Cold cost: 4 (final)

;; __assert_fail ("(v >> lgN) == 0", "generator/graph_generator.c", 128, &__PRETTY_FUNCTION__);

(insn 2043 2042 2044 (set (reg:DI 1375)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 -1
     (nil))

(insn 2044 2043 2045 (set (reg/f:DI 1374)
        (lo_sum:DI (reg:DI 1375)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>)
        (nil)))

(insn 2045 2044 2046 (set (reg:DI 1377)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 -1
     (nil))

(insn 2046 2045 2047 (set (reg/f:DI 1376)
        (lo_sum:DI (reg:DI 1377)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
        (nil)))

(insn 2047 2046 2048 (set (reg:DI 1379)
        (high:DI (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 -1
     (nil))

(insn 2048 2047 2049 (set (reg/f:DI 1378)
        (lo_sum:DI (reg:DI 1379)
            (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>)
        (nil)))

(insn 2049 2048 2050 (set (reg:DI 3 x3)
        (reg/f:DI 1374)) generator/graph_generator.c:128 -1
     (nil))

(insn 2050 2049 2051 (set (reg:SI 2 x2)
        (const_int 128 [0x80])) generator/graph_generator.c:128 -1
     (nil))

(insn 2051 2050 2052 (set (reg:DI 1 x1)
        (reg/f:DI 1376)) generator/graph_generator.c:128 -1
     (nil))

(insn 2052 2051 2053 (set (reg:DI 0 x0)
        (reg/f:DI 1378)) generator/graph_generator.c:128 -1
     (nil))

(call_insn 2053 2052 2054 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:128 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 2054 2053 0)

;; Generating RTL for gimple basic block 120

;; 

(code_label 2055 2054 2056 91 "" [0 uses])

(note 2056 2055 0 NOTE_INSN_BASIC_BLOCK)

;; _490 = (long int) v_488;

(insn 2057 2056 0 (set (reg:DI 562 [ D.3798 ])
        (reg/v:DI 560 [ v ])) generator/graph_generator.c:129 -1
     (nil))

;; # DEBUG v0 => NULL

(debug_insn 2058 2057 0 (var_location:DI v0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG lgN => NULL

(debug_insn 2059 2058 0 (var_location:SI lgN (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val0 => NULL

(debug_insn 2060 2059 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val1 => NULL

(debug_insn 2061 2060 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2062 2061 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2063 2062 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v => NULL

(debug_insn 2064 2063 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v0 => base_tgt_309

(debug_insn 2065 2064 0 (var_location:DI v0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG lgN => _43

(debug_insn 2066 2065 0 (var_location:SI lgN (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val0 => val0_290

(debug_insn 2067 2066 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val1 => val1_294

(debug_insn 2068 2067 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; v_401 = (uint64_t) base_tgt_309;

(insn 2069 2068 0 (set (reg/v:DI 477 [ v ])
        (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:121 -1
     (nil))

;; # DEBUG v => v_401

(debug_insn 2070 2069 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:121 -1
     (nil))
;; v_403 = v_401 + _447;

(insn 2071 2070 0 (set (reg/v:DI 478 [ v ])
        (plus:DI (reg/v:DI 477 [ v ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 -1
     (nil))

;; # DEBUG v => v_403

(debug_insn 2072 2071 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:122 -1
     (nil))
;; # DEBUG v => v_405

(debug_insn 2073 2072 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:123 -1
     (nil))
;; # DEBUG x => v_405

(debug_insn 2074 2073 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:123 -1
     (nil))
;; x_406 = __builtin_bswap64 (v_405);

(insn 2075 2074 2076 (set (reg:DI 1380 [ v ])
        (mult:DI (reg/v:DI 478 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))

(insn 2076 2075 0 (set (reg/v:DI 480 [ x ])
        (bswap:DI (reg:DI 1380 [ v ]))) generator/graph_generator.c:82 -1
     (nil))

;; # DEBUG x => x_406

(debug_insn 2077 2076 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:82 -1
     (nil))(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _408 = _407 & 1085102592571150095;

(insn 2078 2077 2079 (set (reg:DI 1381 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 480 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2079 2078 0 (set (reg:DI 482 [ D.3802 ])
        (and:DI (reg:DI 1381 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _410 = _409 << 4;

(insn 2080 2079 2081 (set (reg:DI 1382 [ D.3802 ])
        (and:DI (reg/v:DI 480 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2081 2080 0 (set (reg:DI 484 [ D.3802 ])
        (ashift:DI (reg:DI 1382 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

;; x_411 = _408 | _410;

(insn 2082 2081 0 (set (reg/v:DI 485 [ x ])
        (ior:DI (reg:DI 482 [ D.3802 ])
            (reg:DI 484 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))

;; # DEBUG x => x_411

(debug_insn 2083 2082 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:88 -1
     (nil))(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _413 = _412 & 3689348814741910323;

(insn 2084 2083 2085 (set (reg:DI 1383 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 485 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2085 2084 0 (set (reg:DI 487 [ D.3802 ])
        (and:DI (reg:DI 1383 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _415 = _414 << 2;

(insn 2086 2085 2087 (set (reg:DI 1384 [ D.3802 ])
        (and:DI (reg/v:DI 485 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2087 2086 0 (set (reg:DI 489 [ D.3802 ])
        (ashift:DI (reg:DI 1384 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

;; x_416 = _413 | _415;

(insn 2088 2087 0 (set (reg/v:DI 490 [ x ])
        (ior:DI (reg:DI 487 [ D.3802 ])
            (reg:DI 489 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))

;; # DEBUG x => x_416

(debug_insn 2089 2088 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:89 -1
     (nil))(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _418 = _417 & 6148914691236517205;

(insn 2090 2089 2091 (set (reg:DI 1385 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 490 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2091 2090 0 (set (reg:DI 492 [ D.3802 ])
        (and:DI (reg:DI 1385 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _420 = _419 << 1;

(insn 2092 2091 2093 (set (reg:DI 1386 [ D.3802 ])
        (and:DI (reg/v:DI 490 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2093 2092 0 (set (reg:DI 494 [ D.3802 ])
        (ashift:DI (reg:DI 1386 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

;; # DEBUG x => x_421

(debug_insn 2094 2093 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:90 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2095 2094 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:124 -1
     (nil))
;; v_423 = x_421 >> _467;

(insn 2096 2095 2097 (set (reg:DI 1387 [ x ])
        (ior:DI (reg:DI 492 [ D.3802 ])
            (reg:DI 494 [ D.3802 ]))) generator/graph_generator.c:124 -1
     (nil))

(insn 2097 2096 0 (set (reg/v:DI 496 [ v ])
        (lshiftrt:DI (reg:DI 1387 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 -1
     (nil))

;; # DEBUG v => v_423

(debug_insn 2098 2097 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:124 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_424 != 0)

(insn 2100 2098 2101 (set (reg:DI 1388 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 496 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 -1
     (nil))

(insn 2101 2100 2102 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1388 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 -1
     (nil))

(jump_insn 2102 2101 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2099)
            (pc))) generator/graph_generator.c:125 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 121

;; # DEBUG v => v_426

(debug_insn 2104 2103 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:126 -1
     (nil))
;; # DEBUG x => v_426

(debug_insn 2105 2104 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:126 -1
     (nil))
;; x_427 = __builtin_bswap64 (v_426);

(insn 2106 2105 2107 (set (reg:DI 1389 [ v ])
        (mult:DI (reg/v:DI 496 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))

(insn 2107 2106 0 (set (reg/v:DI 499 [ x ])
        (bswap:DI (reg:DI 1389 [ v ]))) generator/graph_generator.c:82 -1
     (nil))

;; # DEBUG x => x_427

(debug_insn 2108 2107 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:82 -1
     (nil))(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _429 = _428 & 1085102592571150095;

(insn 2109 2108 2110 (set (reg:DI 1390 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 499 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2110 2109 0 (set (reg:DI 501 [ D.3802 ])
        (and:DI (reg:DI 1390 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)
(const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f])

Cold cost: 4 (final)

;; _431 = _430 << 4;

(insn 2111 2110 2112 (set (reg:DI 1391 [ D.3802 ])
        (and:DI (reg/v:DI 499 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))

(insn 2112 2111 0 (set (reg:DI 503 [ D.3802 ])
        (ashift:DI (reg:DI 1391 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))

;; x_432 = _429 | _431;

(insn 2113 2112 0 (set (reg/v:DI 504 [ x ])
        (ior:DI (reg:DI 501 [ D.3802 ])
            (reg:DI 503 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))

;; # DEBUG x => x_432

(debug_insn 2114 2113 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:88 -1
     (nil))(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _434 = _433 & 3689348814741910323;

(insn 2115 2114 2116 (set (reg:DI 1392 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 504 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2116 2115 0 (set (reg:DI 506 [ D.3802 ])
        (and:DI (reg:DI 1392 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)
(const_int 3689348814741910323 [0x3333333333333333])

Cold cost: 4 (final)

;; _436 = _435 << 2;

(insn 2117 2116 2118 (set (reg:DI 1393 [ D.3802 ])
        (and:DI (reg/v:DI 504 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))

(insn 2118 2117 0 (set (reg:DI 508 [ D.3802 ])
        (ashift:DI (reg:DI 1393 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))

;; x_437 = _434 | _436;

(insn 2119 2118 0 (set (reg/v:DI 509 [ x ])
        (ior:DI (reg:DI 506 [ D.3802 ])
            (reg:DI 508 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))

;; # DEBUG x => x_437

(debug_insn 2120 2119 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:89 -1
     (nil))(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _439 = _438 & 6148914691236517205;

(insn 2121 2120 2122 (set (reg:DI 1394 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 509 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2122 2121 0 (set (reg:DI 511 [ D.3802 ])
        (and:DI (reg:DI 1394 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)
(const_int 6148914691236517205 [0x5555555555555555])

Cold cost: 4 (final)

;; _441 = _440 << 1;

(insn 2123 2122 2124 (set (reg:DI 1395 [ D.3802 ])
        (and:DI (reg/v:DI 509 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))

(insn 2124 2123 0 (set (reg:DI 513 [ D.3802 ])
        (ashift:DI (reg:DI 1395 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))

;; # DEBUG x => x_442

(debug_insn 2125 2124 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:90 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2126 2125 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:127 -1
     (nil))
;; v_443 = x_442 >> _467;

(insn 2127 2126 2128 (set (reg:DI 1396 [ x ])
        (ior:DI (reg:DI 511 [ D.3802 ])
            (reg:DI 513 [ D.3802 ]))) generator/graph_generator.c:127 -1
     (nil))

(insn 2128 2127 0 (set (reg/v:DI 515 [ v ])
        (lshiftrt:DI (reg:DI 1396 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 -1
     (nil))

;; # DEBUG v => v_443

(debug_insn 2129 2128 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:127 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_444 != 0)

(insn 2131 2129 2132 (set (reg:DI 1397 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 515 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 -1
     (nil))

(insn 2132 2131 2133 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1397 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 -1
     (nil))

(jump_insn 2133 2132 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2130)
            (pc))) generator/graph_generator.c:128 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 122

;; # DEBUG v0 => NULL

(debug_insn 2135 2134 0 (var_location:DI v0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG lgN => NULL

(debug_insn 2136 2135 0 (var_location:SI lgN (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val0 => NULL

(debug_insn 2137 2136 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG val1 => NULL

(debug_insn 2138 2137 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2139 2138 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG x => NULL

(debug_insn 2140 2139 0 (var_location:DI x (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v => NULL

(debug_insn 2141 2140 0 (var_location:DI v (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG p => D#36

(debug_insn 2142 2141 0 (var_location:DI p (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v0 => NULL

(debug_insn 2143 2142 0 (var_location:DI v0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v1 => NULL

(debug_insn 2144 2143 0 (var_location:DI v1 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; _513 = (void *) ivtmp.134_505;

(insn 2145 2144 0 (set (reg/f:DI 580 [ D.3806 ])
        (reg:DI 576 [ ivtmp.134 ])) -1
     (nil))

;; MEM[base: _513, offset: 0B] = _490;

(insn 2146 2145 0 (set (mem:DI (reg/f:DI 580 [ D.3806 ]) [4 MEM[base: _513, offset: 0B]+0 S8 A64])
        (reg:DI 562 [ D.3798 ])) generator/graph_generator.h:65 -1
     (nil))

;; MEM[base: _513, offset: 8B] = _445;

(insn 2147 2146 0 (set (mem:DI (plus:DI (reg/f:DI 580 [ D.3806 ])
                (const_int 8 [0x8])) [4 MEM[base: _513, offset: 8B]+0 S8 A64])
        (reg/v:DI 515 [ v ])) generator/graph_generator.h:66 -1
     (nil))

;; # DEBUG p => NULL

(debug_insn 2148 2147 0 (var_location:DI p (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v0 => NULL

(debug_insn 2149 2148 0 (var_location:DI v0 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG v1 => NULL

(debug_insn 2150 2149 0 (var_location:DI v1 (const_int 0 [0])) generator/graph_generator.c:154 -1
     (nil))
;; # DEBUG nverts => NULL

(debug_insn 2151 2150 0 (var_location:DI nverts (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG lgN => NULL

(debug_insn 2152 2151 0 (var_location:SI lgN (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG st => NULL

(debug_insn 2153 2152 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG result => NULL

(debug_insn 2154 2153 0 (var_location:DI result (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG val0 => NULL

(debug_insn 2155 2154 0 (var_location:DI val0 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG val1 => NULL

(debug_insn 2156 2155 0 (var_location:DI val1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG base_src => NULL

(debug_insn 2157 2156 0 (var_location:DI base_src (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG base_tgt => NULL

(debug_insn 2158 2157 0 (var_location:DI base_tgt (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG square => NULL

(debug_insn 2159 2158 0 (var_location:SI square (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; # DEBUG tgt_offset => NULL

(debug_insn 2160 2159 0 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;; new_state ={v} {CLOBBER};

(nil)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; start_edge_301 = start_edge_295 + 1;

(insn 2161 2160 0 (set (reg/v:DI 435 [ start_edge ])
        (plus:DI (reg/v:DI 435 [ start_edge ])
            (const_int 1 [0x1]))) generator/graph_generator.c:193 -1
     (nil))

;; # DEBUG ei => start_edge_301

(debug_insn 2162 2161 0 (var_location:DI ei (const_int 0 [0])) generator/graph_generator.c:193 -1
     (nil))(const_int 16 [0x10])

Cold cost: 4 (final)
(const_int 16 [0x10])

Cold cost: 4 (final)

;; ivtmp.134_506 = ivtmp.134_505 + 16;

(insn 2163 2162 0 (set (reg:DI 576 [ ivtmp.134 ])
        (plus:DI (reg:DI 576 [ ivtmp.134 ])
            (const_int 16 [0x10]))) -1
     (nil))

;; Generating RTL for gimple basic block 123

;; 

(code_label 2164 2163 2165 69 "" [0 uses])

(note 2165 2164 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ei => start_edge_295

(debug_insn 2166 2165 0 (var_location:DI ei (const_int 0 [0])) -1
     (nil))
;; if (desired_nedge_18 > start_edge_295)

(insn 2168 2166 2169 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 245 [ desired_nedge ])
            (reg/v:DI 435 [ start_edge ]))) generator/graph_generator.c:193 -1
     (nil))

(jump_insn 2169 2168 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2167)
            (pc))) generator/graph_generator.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 124

;; # DEBUG D#18 => {CLOBBER}

(debug_insn 2171 2170 0 (var_location:DI D#18 (const_int 0 [0])) -1
     (nil))
;; # DEBUG state$z1 => D#18

(debug_insn 2172 2171 0 (var_location:DI state$z1 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#19 => {CLOBBER}

(debug_insn 2173 2172 0 (var_location:DI D#19 (const_int 0 [0])) -1
     (nil))
;; # DEBUG state$z2 => D#19

(debug_insn 2174 2173 0 (var_location:DI state$z2 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#20 => {CLOBBER}

(debug_insn 2175 2174 0 (var_location:DI D#20 (const_int 0 [0])) -1
     (nil))
;; # DEBUG state$z3 => D#20

(debug_insn 2176 2175 0 (var_location:DI state$z3 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#21 => {CLOBBER}

(debug_insn 2177 2176 0 (var_location:DI D#21 (const_int 0 [0])) -1
     (nil))
;; # DEBUG state$z4 => D#21

(debug_insn 2178 2177 0 (var_location:DI state$z4 (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#22 => {CLOBBER}

(debug_insn 2179 2178 0 (var_location:DI D#22 (const_int 0 [0])) -1
     (nil))
;; # DEBUG state$z5 => D#22

(debug_insn 2180 2179 0 (var_location:DI state$z5 (const_int 0 [0])) -1
     (nil))
;; # DEBUG seed => NULL

(debug_insn 2181 2180 0 (var_location:DI seed (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG logN => NULL

(debug_insn 2182 2181 0 (var_location:SI logN (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG end_edge => NULL

(debug_insn 2183 2182 0 (var_location:DI end_edge (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG edges => NULL

(debug_insn 2184 2183 0 (var_location:DI edges (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG nverts => NULL

(debug_insn 2185 2184 0 (var_location:DI nverts (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG val0 => NULL

(debug_insn 2186 2185 0 (var_location:DI val0 (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG val1 => NULL

(debug_insn 2187 2186 0 (var_location:DI val1 (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG start_edge => NULL

(debug_insn 2188 2187 0 (var_location:DI start_edge (const_int 0 [0])) generator/make_graph.c:58 -1
     (nil))
;; # DEBUG log_numverts => NULL

(debug_insn 2189 2188 0 (var_location:SI log_numverts (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG M => NULL

(debug_insn 2190 2189 0 (var_location:DI M (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG userseed1 => NULL

(debug_insn 2191 2190 0 (var_location:DI userseed1 (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG userseed2 => NULL

(debug_insn 2192 2191 0 (var_location:DI userseed2 (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG edges => NULL

(debug_insn 2193 2192 0 (var_location:DI edges (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG nedges_ptr_in => NULL

(debug_insn 2194 2193 0 (var_location:DI nedges_ptr_in (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; # DEBUG result_ptr_in => NULL

(debug_insn 2195 2194 0 (var_location:DI result_ptr_in (const_int 0 [0])) graph500.c:89 -1
     (nil))
;; _47 = toc ();

(call_insn 2196 2195 2197 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 2197 2196 0 (set (reg:DF 263 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:89 -1
     (nil))

;; generation_time = _47;

(insn 2198 2197 2199 (set (reg:DI 1399)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (nil))

(insn 2199 2198 2200 (set (reg/f:DI 1398)
        (lo_sum:DI (reg:DI 1399)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2200 2199 0 (set (mem/c:DF (plus:DI (reg/f:DI 1398)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 263 [ D.3804 ])) graph500.c:89 -1
     (nil))

;; Generating RTL for gimple basic block 125

;; 

(code_label 2201 2200 2202 68 "" [0 uses])

(note 2202 2201 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_49 != 0)

(insn 2203 2202 2204 (set (reg:DI 1401)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:91 -1
     (nil))

(insn 2204 2203 2205 (set (reg/f:DI 1400)
        (lo_sum:DI (reg:DI 1401)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:91 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2205 2204 2206 (set (reg:SI 1402)
        (mem/c:SI (reg/f:DI 1400) [3 VERBOSE+0 S4 A32])) graph500.c:91 -1
     (nil))

(insn 2206 2205 2207 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1402)
            (const_int 0 [0]))) graph500.c:91 -1
     (nil))

(jump_insn 2207 2206 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:91 -1
     (int_list:REG_BR_PROB 2900 (nil)))

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; 

(code_label 2211 2210 2212 95 "" [0 uses])

(note 2212 2211 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _50

(debug_insn 2213 2212 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:91 -1
     (nil))
;; # DEBUG __fmt => " done.\n"

(debug_insn 2214 2213 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:91 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1405) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_50, 1, " done.\n");

(insn 2215 2214 2216 (set (reg:DI 1404)
        (high:DI (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2216 2215 2217 (set (reg/f:DI 1403)
        (lo_sum:DI (reg:DI 1404)
            (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)
        (nil)))

(insn 2217 2216 2218 (set (reg:DI 1406)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:91 -1
     (nil))

(insn 2218 2217 2219 (set (reg/f:DI 1405)
        (lo_sum:DI (reg:DI 1406)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:91 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2219 2218 2220 (set (reg:DI 2 x2)
        (reg/f:DI 1403)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2220 2219 2221 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2221 2220 2222 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1405) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2222 2221 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Generating RTL for gimple basic block 128

;; 

(code_label 2225 2224 2226 65 "" [0 uses])

(note 2226 2225 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __path => _19

(debug_insn 2227 2226 0 (var_location:DI __path (const_int 0 [0])) graph500.c:95 -1
     (nil))
;; # DEBUG __oflag => 0

(debug_insn 2228 2227 0 (var_location:SI __oflag (const_int 0 [0])) graph500.c:95 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; _76 = __open_alias (_19, 0);

(insn 2229 2228 2230 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

(insn 2230 2229 2231 (set (reg:DI 0 x0)
        (reg/f:DI 246 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

(call_insn 2231 2230 2232 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))

(insn 2232 2231 0 (set (reg:SI 283 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

;; # DEBUG __path => NULL

(debug_insn 2233 2232 0 (var_location:DI __path (const_int 0 [0])) graph500.c:95 -1
     (nil))
;; # DEBUG __oflag => NULL

(debug_insn 2234 2233 0 (var_location:SI __oflag (const_int 0 [0])) graph500.c:95 -1
     (nil))
;; # DEBUG fd => NULL

(debug_insn 2235 2234 0 (var_location:SI fd (const_int 0 [0])) graph500.c:95 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_76 < 0)

(insn 2236 2235 2237 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 283 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:95 -1
     (nil))

(jump_insn 2237 2236 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:95 -1
     (int_list:REG_BR_PROB 9119 (nil)))

;; Generating RTL for gimple basic block 129

;; perror ("Cannot open input graph file");

(insn 2239 2238 2240 (set (reg:DI 1408)
        (high:DI (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 -1
     (nil))

(insn 2240 2239 2241 (set (reg/f:DI 1407)
        (lo_sum:DI (reg:DI 1408)
            (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>)
        (nil)))

(insn 2241 2240 2242 (set (reg:DI 0 x0)
        (reg/f:DI 1407)) graph500.c:96 -1
     (nil))

(call_insn 2242 2241 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:96 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; Generating RTL for gimple basic block 130

;; 

(code_label 2245 2244 2246 98 "" [0 uses])

(note 2246 2245 0 NOTE_INSN_BASIC_BLOCK)

;; _54 = _53 * 16;

(insn 2247 2246 2248 (set (reg:DI 1410)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:99 -1
     (nil))

(insn 2248 2247 2249 (set (reg/f:DI 1409)
        (lo_sum:DI (reg:DI 1410)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:99 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2249 2248 2250 (set (reg:DI 1411)
        (mem/c:DI (plus:DI (reg/f:DI 1409)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:99 -1
     (nil))

(insn 2250 2249 0 (set (reg:DI 269 [ D.3802 ])
        (ashift:DI (reg:DI 1411)
            (const_int 4 [0x4]))) graph500.c:99 -1
     (nil))

;; # DEBUG sz => sz_55

(debug_insn 2251 2250 0 (var_location:DI sz (const_int 0 [0])) graph500.c:99 -1
     (nil))
;; # DEBUG __fd => _76

(debug_insn 2252 2251 0 (var_location:SI __fd (const_int 0 [0])) graph500.c:100 -1
     (nil))
;; # DEBUG __buf => _56

(debug_insn 2253 2252 0 (var_location:DI __buf (const_int 0 [0])) graph500.c:100 -1
     (nil))
;; # DEBUG __nbytes => _54

(debug_insn 2254 2253 0 (var_location:DI __nbytes (const_int 0 [0])) graph500.c:100 -1
     (nil))(mem/f/c:DI (plus:DI (reg/f:DI 1412)
        (const_int 88 [0x58])) [2 IJ+0 S8 A64])

Cold cost: 4 (final)

;; _80 = __read_alias (_76, _56, _54);

(insn 2255 2254 2256 (set (reg:DI 1413)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:100 -1
     (nil))

(insn 2256 2255 2257 (set (reg/f:DI 1412)
        (lo_sum:DI (reg:DI 1413)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:100 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2257 2256 2258 (set (reg:DI 2 x2)
        (reg:DI 269 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))

(insn 2258 2257 2259 (set (reg:DI 1 x1)
        (mem/f/c:DI (plus:DI (reg/f:DI 1412)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))

(insn 2259 2258 2260 (set (reg:SI 0 x0)
        (reg:SI 283 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))

(call_insn 2260 2259 2261 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>) [0 __read_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

(insn 2261 2260 0 (set (reg:DI 285 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))

;; # DEBUG __fd => NULL

(debug_insn 2262 2261 0 (var_location:SI __fd (const_int 0 [0])) graph500.c:100 -1
     (nil))
;; # DEBUG __buf => NULL

(debug_insn 2263 2262 0 (var_location:DI __buf (const_int 0 [0])) graph500.c:100 -1
     (nil))
;; # DEBUG __nbytes => NULL

(debug_insn 2264 2263 0 (var_location:DI __nbytes (const_int 0 [0])) graph500.c:100 -1
     (nil))
;; if (sz_55 != _80)

(insn 2265 2264 2266 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 269 [ D.3802 ])
            (reg:DI 285 [ D.3798 ]))) graph500.c:100 -1
     (nil))

(jump_insn 2266 2265 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:100 -1
     (int_list:REG_BR_PROB 3782 (nil)))

;; Generating RTL for gimple basic block 131

;; perror ("Error reading input graph file");

(insn 2268 2267 2269 (set (reg:DI 1415)
        (high:DI (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 -1
     (nil))

(insn 2269 2268 2270 (set (reg/f:DI 1414)
        (lo_sum:DI (reg:DI 1415)
            (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>)
        (nil)))

(insn 2270 2269 2271 (set (reg:DI 0 x0)
        (reg/f:DI 1414)) graph500.c:101 -1
     (nil))

(call_insn 2271 2270 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; Generating RTL for gimple basic block 132

;; 

(code_label 2274 2273 2275 100 "" [0 uses])

(note 2275 2274 0 NOTE_INSN_BASIC_BLOCK)

;; close (_76);

(insn 2276 2275 2277 (set (reg:SI 0 x0)
        (reg:SI 283 [ D.3797 ])) graph500.c:104 -1
     (nil))

(call_insn 2277 2276 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

;; Generating RTL for gimple basic block 133

;; 

(code_label 2278 2277 2279 97 "" [0 uses])

(note 2279 2278 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_113 != 0)

(insn 2281 2279 2282 (set (reg:DI 1417)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:124 -1
     (nil))

(insn 2282 2281 2283 (set (reg/f:DI 1416)
        (lo_sum:DI (reg:DI 1417)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:124 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2283 2282 2284 (set (reg:SI 1418)
        (mem/c:SI (reg/f:DI 1416) [3 VERBOSE+0 S4 A32])) graph500.c:124 -1
     (nil))

(insn 2284 2283 2285 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1418)
            (const_int 0 [0]))) graph500.c:124 -1
     (nil))

(jump_insn 2285 2284 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2280)
            (pc))) graph500.c:124 -1
     (int_list:REG_BR_PROB 5504 (nil)))

;; Generating RTL for gimple basic block 134

;; # DEBUG __stream => _491

(debug_insn 2287 2286 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:124 -1
     (nil))
;; # DEBUG __fmt => "Creating graph..."

(debug_insn 2288 2287 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:124 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1421) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_491, 1, "Creating graph...");

(insn 2289 2288 2290 (set (reg:DI 1420)
        (high:DI (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2290 2289 2291 (set (reg/f:DI 1419)
        (lo_sum:DI (reg:DI 1420)
            (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)
        (nil)))

(insn 2291 2290 2292 (set (reg:DI 1422)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:124 -1
     (nil))

(insn 2292 2291 2293 (set (reg/f:DI 1421)
        (lo_sum:DI (reg:DI 1422)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:124 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2293 2292 2294 (set (reg:DI 2 x2)
        (reg/f:DI 1419)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2294 2293 2295 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2295 2294 2296 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1421) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2296 2295 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Generating RTL for gimple basic block 135

;; 

(code_label 2297 2296 2298 96 "" [0 uses])

(note 2298 2297 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; clock_gettime (1, &tic_ts);

(insn 2299 2298 2300 (set (reg:DI 1424)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))

(insn 2300 2299 2301 (set (reg/f:DI 1423)
        (lo_sum:DI (reg:DI 1424)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 2301 2300 2302 (set (reg:DI 1 x1)
        (reg/f:DI 1423)) timer.c:43 -1
     (nil))

(insn 2302 2301 2303 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))

(call_insn 2303 2302 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(mem/c:DI (plus:DI (reg/f:DI 1425)
        (const_int 80 [0x50])) [4 nedge+0 S8 A64])

Cold cost: 4 (final)
(mem/f/c:DI (plus:DI (reg/f:DI 1427)
        (const_int 88 [0x58])) [2 IJ+0 S8 A64])

Cold cost: 4 (final)

;; err_494 = create_graph_from_edgelist (_492, _493);

(insn 2304 2303 2305 (set (reg:DI 1426)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))

(insn 2305 2304 2306 (set (reg/f:DI 1425)
        (lo_sum:DI (reg:DI 1426)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2306 2305 2307 (set (reg:DI 1428)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))

(insn 2307 2306 2308 (set (reg/f:DI 1427)
        (lo_sum:DI (reg:DI 1428)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2308 2307 2309 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1425)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:125 -1
     (nil))

(insn 2309 2308 2310 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1427)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:125 -1
     (nil))

(call_insn 2310 2309 2311 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>) [0 create_graph_from_edgelist S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))

(insn 2311 2310 0 (set (reg/v:SI 566 [ err ])
        (reg:SI 0 x0)) graph500.c:125 -1
     (nil))

;; # DEBUG err => err_494

(debug_insn 2312 2311 0 (var_location:SI err (const_int 0 [0])) graph500.c:125 -1
     (nil))
;; _495 = toc ();

(call_insn 2313 2312 2314 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(insn 2314 2313 0 (set (reg:DF 567 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:125 -1
     (nil))

;; construction_time = _495;

(insn 2315 2314 2316 (set (reg:DI 1430)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))

(insn 2316 2315 2317 (set (reg/f:DI 1429)
        (lo_sum:DI (reg:DI 1430)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2317 2316 0 (set (mem/c:DF (plus:DI (reg/f:DI 1429)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])
        (reg:DF 567 [ D.3804 ])) graph500.c:125 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_496 != 0)

(insn 2318 2317 2319 (set (reg:DI 1432)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:126 -1
     (nil))

(insn 2319 2318 2320 (set (reg/f:DI 1431)
        (lo_sum:DI (reg:DI 1432)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:126 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2320 2319 2321 (set (reg:SI 1433)
        (mem/c:SI (reg/f:DI 1431) [3 VERBOSE+0 S4 A32])) graph500.c:126 -1
     (nil))

(insn 2321 2320 2322 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1433)
            (const_int 0 [0]))) graph500.c:126 -1
     (nil))

(jump_insn 2322 2321 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:126 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 136

;; # DEBUG __stream => _497

(debug_insn 2324 2323 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:126 -1
     (nil))
;; # DEBUG __fmt => "done.\n"

(debug_insn 2325 2324 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:126 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1436) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_497, 1, "done.\n");

(insn 2326 2325 2327 (set (reg:DI 1435)
        (high:DI (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2327 2326 2328 (set (reg/f:DI 1434)
        (lo_sum:DI (reg:DI 1435)
            (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)
        (nil)))

(insn 2328 2327 2329 (set (reg:DI 1437)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:126 -1
     (nil))

(insn 2329 2328 2330 (set (reg/f:DI 1436)
        (lo_sum:DI (reg:DI 1437)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:126 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2330 2329 2331 (set (reg:DI 2 x2)
        (reg/f:DI 1434)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2331 2330 2332 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2332 2331 2333 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1436) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2333 2332 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; Generating RTL for gimple basic block 137

;; 

(code_label 2334 2333 2335 102 "" [0 uses])

(note 2335 2334 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (err_494 != 0)

(insn 2336 2335 2337 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 566 [ err ])
            (const_int 0 [0]))) graph500.c:127 -1
     (nil))

(jump_insn 2337 2336 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:127 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 138

;; # DEBUG __stream => _498

(debug_insn 2339 2338 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:128 -1
     (nil))
;; # DEBUG __fmt => "Failure creating graph.\n"

(debug_insn 2340 2339 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:128 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1440) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_498, 1, "Failure creating graph.\n");

(insn 2341 2340 2342 (set (reg:DI 1439)
        (high:DI (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2342 2341 2343 (set (reg/f:DI 1438)
        (lo_sum:DI (reg:DI 1439)
            (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)
        (nil)))

(insn 2343 2342 2344 (set (reg:DI 1441)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:128 -1
     (nil))

(insn 2344 2343 2345 (set (reg/f:DI 1440)
        (lo_sum:DI (reg:DI 1441)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2345 2344 2346 (set (reg:DI 2 x2)
        (reg/f:DI 1438)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2346 2345 2347 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2347 2346 2348 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1440) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2348 2347 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 2349 2348 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:128 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 2350 2349 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:128 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 2351 2350 2352 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:129 -1
     (nil))

(call_insn 2352 2351 2353 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 2353 2352 0)

;; Generating RTL for gimple basic block 139

;; 

(code_label 2354 2353 2355 103 "" [0 uses])

(note 2355 2354 0 NOTE_INSN_BASIC_BLOCK)

;; _499 = rootname;

(insn 2356 2355 2357 (set (reg:DI 1443)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:137 -1
     (nil))

(insn 2357 2356 2358 (set (reg/f:DI 1442)
        (lo_sum:DI (reg:DI 1443)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:137 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2358 2357 0 (set (reg/f:DI 571 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1442)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])) graph500.c:137 -1
     (nil))
(const_int 0 [0])

Cold cost: 0 (final)

;; if (_499 == 0B)

(insn 2359 2358 2360 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 571 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:137 -1
     (nil))

(jump_insn 2360 2359 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:137 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 140

;; _500 = nvtx_scale;

(insn 2362 2361 2363 (set (reg:DI 1445)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:138 -1
     (nil))

(insn 2363 2362 2364 (set (reg/f:DI 1444)
        (lo_sum:DI (reg:DI 1445)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:138 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2364 2363 0 (set (reg:DI 572 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1444)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:138 -1
     (nil))

;; _501 = (long unsigned int) _500;

(insn 2365 2364 0 (set (reg:DI 573 [ D.3802 ])
        (reg:DI 572 [ D.3798 ])) graph500.c:138 -1
     (nil))

;; # DEBUG sz => _502

(debug_insn 2366 2365 0 (var_location:DI sz (const_int 0 [0])) graph500.c:138 -1
     (nil))
;; _112 = xmalloc (_502);

(insn 2367 2366 2368 (set (reg:DI 1446 [ D.3802 ])
        (ashift:DI (reg:DI 573 [ D.3802 ])
            (const_int 2 [0x2]))) xalloc.c:104 -1
     (nil))

(insn 2368 2367 2369 (set (reg:DI 0 x0)
        (reg:DI 1446 [ D.3802 ])) xalloc.c:104 -1
     (nil))

(call_insn 2369 2368 2370 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 2370 2369 0 (set (reg/f:DI 291 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 -1
     (nil))

;; # DEBUG sz => NULL

(debug_insn 2371 2370 0 (var_location:DI sz (const_int 0 [0])) graph500.c:138 -1
     (nil))
;; # DEBUG has_adj => NULL

(debug_insn 2372 2371 0 (var_location:DI has_adj (const_int 0 [0])) graph500.c:138 -1
     (nil))
;; # DEBUG k => 0

(debug_insn 2373 2372 0 (var_location:DI k (const_int 0 [0])) graph500.c:141 -1
     (nil))
;; Generating RTL for gimple basic block 141

;; MEM[base: _112, index: _512, step: 4, offset: 0B] = 0;

(insn 2377 2376 0 (set (mem:SI (plus:DI (mult:DI (reg/v:DI 575 [ k ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: _512, step: 4, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) graph500.c:142 -1
     (nil))
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; k_508 = k_504 + 1;

(insn 2378 2377 0 (set (reg/v:DI 575 [ k ])
        (plus:DI (reg/v:DI 575 [ k ])
            (const_int 1 [0x1]))) graph500.c:141 -1
     (nil))

;; # DEBUG k => k_508

(debug_insn 2379 2378 0 (var_location:DI k (const_int 0 [0])) graph500.c:141 -1
     (nil))
;; Generating RTL for gimple basic block 142

;; 

(code_label 2380 2379 2381 105 "" [0 uses])

(note 2381 2380 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG k => k_504

(debug_insn 2382 2381 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; if (_500 > k_504)

(insn 2384 2382 2385 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 575 [ k ]))) graph500.c:141 -1
     (nil))

(jump_insn 2385 2384 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2383)
            (pc))) graph500.c:141 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 143

;; _524 = nedge;

(insn 2387 2386 2388 (set (reg:DI 1448)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:144 -1
     (nil))

(insn 2388 2387 2389 (set (reg/f:DI 1447)
        (lo_sum:DI (reg:DI 1448)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:144 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2389 2388 0 (set (reg:DI 590 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1447)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:144 -1
     (nil))

;; ivtmp.110_530 = (unsigned long) _510;

(insn 2390 2389 2391 (set (reg:DI 1450)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:145 -1
     (nil))

(insn 2391 2390 2392 (set (reg/f:DI 1449)
        (lo_sum:DI (reg:DI 1450)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:145 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2392 2391 0 (set (reg:DI 592 [ ivtmp.110 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1449)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 144

;; # DEBUG D#43 => (struct packed_edge *) ivtmp.110_528

(debug_insn 2396 2395 0 (var_location:DI D#43 (const_int 0 [0])) -1
     (nil))
;; _1250 = (void *) ivtmp.110_528;

(insn 2397 2396 0 (set (reg/f:DI 771 [ D.3806 ])
        (reg:DI 592 [ ivtmp.110 ])) -1
     (nil))

;; _515 = MEM[base: _1250, offset: 0B];

(insn 2398 2397 0 (set (reg:DI 582 [ D.3798 ])
        (mem:DI (reg/f:DI 771 [ D.3806 ]) [4 MEM[base: _1250, offset: 0B]+0 S8 A64])) -1
     (nil))

;; # DEBUG D#16 => D#43

(debug_insn 2399 2398 0 (var_location:DI D#16 (const_int 0 [0])) graph500.c:145 -1
     (nil))
;; # DEBUG p => D#16

(debug_insn 2400 2399 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 2401 2400 0 (var_location:DI i (const_int 0 [0])) graph500.c:145 -1
     (nil))
;; _516 = MEM[base: _1250, offset: 8B];

(insn 2402 2401 0 (set (reg:DI 583 [ D.3798 ])
        (mem:DI (plus:DI (reg/f:DI 771 [ D.3806 ])
                (const_int 8 [0x8])) [4 MEM[base: _1250, offset: 8B]+0 S8 A64])) -1
     (nil))

;; # DEBUG D#17 => D#43

(debug_insn 2403 2402 0 (var_location:DI D#17 (const_int 0 [0])) graph500.c:146 -1
     (nil))
;; # DEBUG p => D#17

(debug_insn 2404 2403 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; # DEBUG j => NULL

(debug_insn 2405 2404 0 (var_location:DI j (const_int 0 [0])) graph500.c:146 -1
     (nil))
;; if (_515 != _516)

(insn 2406 2405 2407 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 582 [ D.3798 ])
            (reg:DI 583 [ D.3798 ]))) graph500.c:147 -1
     (nil))

(jump_insn 2407 2406 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:147 -1
     (int_list:REG_BR_PROB 2800 (nil)))

;; Generating RTL for gimple basic block 145

;; *_522 = 1;

(insn 2409 2408 2410 (set (reg:SI 1451)
        (const_int 1 [0x1])) graph500.c:148 -1
     (nil))

(insn 2410 2409 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 583 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_522+0 S4 A32])
        (reg:SI 1451)) graph500.c:148 -1
     (nil))

;; *_519 = 1;

(insn 2411 2410 2412 (set (reg:SI 1452)
        (const_int 1 [0x1])) graph500.c:148 -1
     (nil))

(insn 2412 2411 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 582 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_519+0 S4 A32])
        (reg:SI 1452)) graph500.c:148 -1
     (nil))

;; Generating RTL for gimple basic block 146

;; 

(code_label 2413 2412 2414 108 "" [0 uses])

(note 2414 2413 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; k_523 = k_511 + 1;

(insn 2415 2414 0 (set (reg/v:DI 578 [ k ])
        (plus:DI (reg/v:DI 578 [ k ])
            (const_int 1 [0x1]))) graph500.c:144 -1
     (nil))

;; # DEBUG k => k_523

(debug_insn 2416 2415 0 (var_location:DI k (const_int 0 [0])) graph500.c:144 -1
     (nil))(const_int 16 [0x10])

Cold cost: 4 (final)
(const_int 16 [0x10])

Cold cost: 4 (final)

;; ivtmp.110_529 = ivtmp.110_528 + 16;

(insn 2417 2416 0 (set (reg:DI 592 [ ivtmp.110 ])
        (plus:DI (reg:DI 592 [ ivtmp.110 ])
            (const_int 16 [0x10]))) -1
     (nil))

;; Generating RTL for gimple basic block 147

;; 

(code_label 2418 2417 2419 107 "" [0 uses])

(note 2419 2418 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG k => k_511

(debug_insn 2420 2419 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; if (k_511 < _524)

(insn 2422 2420 2423 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 578 [ k ])
            (reg:DI 590 [ D.3798 ]))) graph500.c:144 -1
     (nil))

(jump_insn 2423 2422 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) graph500.c:144 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 148

;; _543 = NBFS;

(insn 2425 2424 2426 (set (reg:DI 1454)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:155 -1
     (nil))

(insn 2426 2425 2427 (set (reg/f:DI 1453)
        (lo_sum:DI (reg:DI 1454)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:155 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2427 2426 0 (set (reg:SI 600 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1453)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:155 -1
     (nil))

;; prng_state_store_z1_lsm.9_1211 = prng_state_store.z1;

(insn 2428 2427 2429 (set (reg:DI 1456)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2429 2428 2430 (set (reg/f:DI 1455)
        (lo_sum:DI (reg:DI 1456)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2430 2429 0 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (mem/c:DI (reg/f:DI 1455) [4 prng_state_store.z1+0 S8 A64])) -1
     (nil))

;; prng_state_store_z5_lsm.11_1209 = prng_state_store.z5;

(insn 2431 2430 2432 (set (reg:DI 1458)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2432 2431 2433 (set (reg/f:DI 1457)
        (lo_sum:DI (reg:DI 1458)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2433 2432 0 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1457)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])) -1
     (nil))

;; prng_state_store_z4_lsm.13_1207 = prng_state_store.z4;

(insn 2434 2433 2435 (set (reg:DI 1460)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2435 2434 2436 (set (reg/f:DI 1459)
        (lo_sum:DI (reg:DI 1460)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2436 2435 0 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1459)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])) -1
     (nil))

;; prng_state_store_z3_lsm.15_1205 = prng_state_store.z3;

(insn 2437 2436 2438 (set (reg:DI 1462)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2438 2437 2439 (set (reg/f:DI 1461)
        (lo_sum:DI (reg:DI 1462)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2439 2438 0 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1461)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])) -1
     (nil))

;; prng_state_store_z2_lsm.17_1203 = prng_state_store.z2;

(insn 2440 2439 2441 (set (reg:DI 1464)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2441 2440 2442 (set (reg/f:DI 1463)
        (lo_sum:DI (reg:DI 1464)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2442 2441 0 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1463)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 149

;; # DEBUG state => &prng_state_store

(debug_insn 2446 2445 0 (var_location:DI state (const_int 0 [0])) graph500.c:156 -1
     (nil))
;; # DEBUG state => &prng_state_store

(debug_insn 2447 2446 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG state => &prng_state_store

(debug_insn 2448 2447 0 (var_location:DI state (const_int 0 [0])) -1
     (nil))
;; # DEBUG a => prng_state_store_z1_lsm.9_1313

(debug_insn 2449 2448 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => prng_state_store_z1_lsm.9_1313

(debug_insn 2450 2449 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 2451 2450 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Cold cost: 4 (final)

;; if (prng_state_store_z1_lsm.9_1313 > 2147483646)

(insn 2452 2451 2453 (set (reg:DI 1465)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 -1
     (nil))

(insn 2453 2452 2454 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1465))) generator/mod_arith_64bit.h:27 -1
     (nil))

(jump_insn 2454 2453 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:27 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 150
(const_int 0 [0])

Cold cost: 0 (final)

;; if (prng_state_store_z1_lsm.10_1312 != 0)

(insn 2456 2455 2457 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 2457 2456 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 151

;; prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;

(insn 2459 2458 2460 (set (reg:DI 1467)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2460 2459 2461 (set (reg/f:DI 1466)
        (lo_sum:DI (reg:DI 1467)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2461 2460 0 (set (mem/c:DI (reg/f:DI 1466) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))

;; prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;

(insn 2462 2461 2463 (set (reg:DI 1469)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2463 2462 2464 (set (reg/f:DI 1468)
        (lo_sum:DI (reg:DI 1469)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2464 2463 0 (set (mem/c:DI (plus:DI (reg/f:DI 1468)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;

(insn 2465 2464 2466 (set (reg:DI 1471)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2466 2465 2467 (set (reg/f:DI 1470)
        (lo_sum:DI (reg:DI 1471)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2467 2466 0 (set (mem/c:DI (plus:DI (reg/f:DI 1470)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;

(insn 2468 2467 2469 (set (reg:DI 1473)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2469 2468 2470 (set (reg/f:DI 1472)
        (lo_sum:DI (reg:DI 1473)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2470 2469 0 (set (mem/c:DI (plus:DI (reg/f:DI 1472)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;

(insn 2471 2470 2472 (set (reg:DI 1475)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2472 2471 2473 (set (reg/f:DI 1474)
        (lo_sum:DI (reg:DI 1475)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2473 2472 0 (set (mem/c:DI (plus:DI (reg/f:DI 1474)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; Generating RTL for gimple basic block 152

;; 

(code_label 2474 2473 2475 112 "" [0 uses])

(note 2475 2474 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 153

;; 

(code_label 2478 2477 2479 111 "" [0 uses])

(note 2479 2478 0 NOTE_INSN_BASIC_BLOCK)
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 107374182 [0x6666666]))

Cold cost: 12 (final)
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)

;; _609 = _608 % 2147483647;

(insn 2480 2479 2481 (set (reg:DI 1477)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2481 2480 2482 (set (reg:DI 1476 [ D.3802 ])
        (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1477))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2482 2481 2483 (set (reg:DI 1481)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2483 2482 2484 (set (reg:DI 1480)
        (udiv:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2484 2483 2485 (set (reg:DI 1483)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2485 2484 2486 (set (reg:DI 1482)
        (mult:DI (reg:DI 1480)
            (reg:DI 1483))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2486 2485 0 (set (reg:DI 640 [ D.3802 ])
        (minus:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1482))) generator/mod_arith_64bit.h:29 -1
     (nil))

;; # DEBUG a => NULL

(debug_insn 2487 2486 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 2488 2487 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2489 2488 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 2490 2489 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => prng_state_store_z5_lsm.11_1311

(debug_insn 2491 2490 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _609

(debug_insn 2492 2491 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => prng_state_store_z5_lsm.11_1311

(debug_insn 2493 2492 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 2494 2493 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Cold cost: 4 (final)

;; if (prng_state_store_z5_lsm.11_1311 > 2147483646)

(insn 2495 2494 2496 (set (reg:DI 1484)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 2496 2495 2497 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1484))) generator/mod_arith_64bit.h:34 -1
     (nil))

(jump_insn 2497 2496 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 154
(const_int 0 [0])

Cold cost: 0 (final)

;; if (prng_state_store_z1_lsm.10_1312 != 0)

(insn 2499 2498 2500 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 2500 2499 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 155

;; prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;

(insn 2502 2501 2503 (set (reg:DI 1486)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2503 2502 2504 (set (reg/f:DI 1485)
        (lo_sum:DI (reg:DI 1486)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2504 2503 0 (set (mem/c:DI (reg/f:DI 1485) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))

;; prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;

(insn 2505 2504 2506 (set (reg:DI 1488)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2506 2505 2507 (set (reg/f:DI 1487)
        (lo_sum:DI (reg:DI 1488)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2507 2506 0 (set (mem/c:DI (plus:DI (reg/f:DI 1487)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;

(insn 2508 2507 2509 (set (reg:DI 1490)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2509 2508 2510 (set (reg/f:DI 1489)
        (lo_sum:DI (reg:DI 1490)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2510 2509 0 (set (mem/c:DI (plus:DI (reg/f:DI 1489)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;

(insn 2511 2510 2512 (set (reg:DI 1492)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2512 2511 2513 (set (reg/f:DI 1491)
        (lo_sum:DI (reg:DI 1492)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2513 2512 0 (set (mem/c:DI (plus:DI (reg/f:DI 1491)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;

(insn 2514 2513 2515 (set (reg:DI 1494)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2515 2514 2516 (set (reg/f:DI 1493)
        (lo_sum:DI (reg:DI 1494)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2516 2515 0 (set (mem/c:DI (plus:DI (reg/f:DI 1493)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; Generating RTL for gimple basic block 156

;; 

(code_label 2517 2516 2518 114 "" [0 uses])

(note 2518 2517 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 157
Swap operands in stmt:
_616 = _609 + _615;
Cost left opnd=0, right opnd=1

;; 

(code_label 2521 2520 2522 113 "" [0 uses])

(note 2522 2521 0 NOTE_INSN_BASIC_BLOCK)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 104480 [0x19820]))

Cold cost: 12 (final)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)

;; _617 = _616 % 2147483647;

(insn 2523 2522 2524 (set (reg:DI 1496)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2524 2523 2525 (set (reg:DI 1495 [ D.3802 ])
        (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1496))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2525 2524 2526 (set (reg:DI 1497 [ D.3802 ])
        (plus:DI (reg:DI 1495 [ D.3802 ])
            (reg:DI 640 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2526 2525 2527 (set (reg:DI 1501)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2527 2526 2528 (set (reg:DI 1500)
        (udiv:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1501))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2528 2527 2529 (set (reg:DI 1503)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2529 2528 2530 (set (reg:DI 1502)
        (mult:DI (reg:DI 1500)
            (reg:DI 1503))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2530 2529 0 (set (reg:DI 643 [ D.3802 ])
        (minus:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1502))) generator/mod_arith_64bit.h:36 -1
     (nil))

;; # DEBUG sum => NULL

(debug_insn 2531 2530 0 (var_location:DI sum (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2532 2531 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 2533 2532 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 2534 2533 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2535 2534 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG new_elt => NULL

(debug_insn 2536 2535 0 (var_location:DI new_elt (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 2537 2536 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:268 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 2538 2537 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:274 -1
     (nil))
;; # DEBUG state => &prng_state_store

(debug_insn 2539 2538 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:274 -1
     (nil))
;; # DEBUG state => &prng_state_store

(debug_insn 2540 2539 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:274 -1
     (nil))
;; # DEBUG a => _617

(debug_insn 2541 2540 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => _617

(debug_insn 2542 2541 0 (var_location:DI a (const_int 0 [0])) -1
     (nil))
;; # DEBUG b => 107374182

(debug_insn 2543 2542 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 107374182 [0x6666666]))

Cold cost: 12 (final)
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)

;; _601 = _600 % 2147483647;

(insn 2544 2543 2545 (set (reg:DI 1505)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2545 2544 2546 (set (reg:DI 1504 [ D.3802 ])
        (mult:DI (reg:DI 643 [ D.3802 ])
            (reg:DI 1505))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2546 2545 2547 (set (reg:DI 1509)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2547 2546 2548 (set (reg:DI 1508)
        (udiv:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1509))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2548 2547 2549 (set (reg:DI 1511)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2549 2548 2550 (set (reg:DI 1510)
        (mult:DI (reg:DI 1508)
            (reg:DI 1511))) generator/mod_arith_64bit.h:29 -1
     (nil))

(insn 2550 2549 0 (set (reg:DI 638 [ D.3802 ])
        (minus:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1510))) generator/mod_arith_64bit.h:29 -1
     (nil))

;; # DEBUG a => NULL

(debug_insn 2551 2550 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 2552 2551 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:78 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2553 2552 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 2554 2553 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => prng_state_store_z4_lsm.13_1309

(debug_insn 2555 2554 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG sum => _601

(debug_insn 2556 2555 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => prng_state_store_z4_lsm.13_1309

(debug_insn 2557 2556 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG b => 104480

(debug_insn 2558 2557 0 (var_location:DI b (const_int 0 [0])) -1
     (nil))(const_int 2147483646 [0x7ffffffe])

Cold cost: 4 (final)

;; if (prng_state_store_z4_lsm.13_1309 > 2147483646)

(insn 2559 2558 2560 (set (reg:DI 1512)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))

(insn 2560 2559 2561 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1512))) generator/mod_arith_64bit.h:34 -1
     (nil))

(jump_insn 2561 2560 0 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 158

;; prng_state_store.z1 = _617;

(insn 2563 2562 2564 (set (reg:DI 1514)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2564 2563 2565 (set (reg/f:DI 1513)
        (lo_sum:DI (reg:DI 1514)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2565 2564 0 (set (mem/c:DI (reg/f:DI 1513) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 643 [ D.3802 ])) -1
     (nil))

;; prng_state_store.z5 = prng_state_store_z4_lsm.13_1309;

(insn 2566 2565 2567 (set (reg:DI 1516)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2567 2566 2568 (set (reg/f:DI 1515)
        (lo_sum:DI (reg:DI 1516)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2568 2567 0 (set (mem/c:DI (plus:DI (reg/f:DI 1515)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z4 = prng_state_store_z3_lsm.15_1307;

(insn 2569 2568 2570 (set (reg:DI 1518)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2570 2569 2571 (set (reg/f:DI 1517)
        (lo_sum:DI (reg:DI 1518)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2571 2570 0 (set (mem/c:DI (plus:DI (reg/f:DI 1517)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z3 = prng_state_store_z2_lsm.17_1305;

(insn 2572 2571 2573 (set (reg:DI 1520)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2573 2572 2574 (set (reg/f:DI 1519)
        (lo_sum:DI (reg:DI 1520)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2574 2573 0 (set (mem/c:DI (plus:DI (reg/f:DI 1519)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z2 = prng_state_store_z1_lsm.9_1313;

(insn 2575 2574 2576 (set (reg:DI 1522)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2576 2575 2577 (set (reg/f:DI 1521)
        (lo_sum:DI (reg:DI 1522)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2577 2576 0 (set (mem/c:DI (plus:DI (reg/f:DI 1521)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))

;; Generating RTL for gimple basic block 159
Swap operands in stmt:
_619 = _601 + _618;
Cost left opnd=0, right opnd=1

;; 

(code_label 2580 2579 2581 115 "" [0 uses])

(note 2581 2580 0 NOTE_INSN_BASIC_BLOCK)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(mult:DI (reg:DI 73)
    (const_int 104480 [0x19820]))

Cold cost: 12 (final)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(mult:DI (reg:DI 73)
    (const_int 2147483647 [0x7fffffff]))

Cold cost: 8 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)

;; _620 = _619 % 2147483647;

(insn 2582 2581 2583 (set (reg:DI 1524)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2583 2582 2584 (set (reg:DI 1523 [ D.3802 ])
        (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1524))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2584 2583 2585 (set (reg:DI 1525 [ D.3802 ])
        (plus:DI (reg:DI 1523 [ D.3802 ])
            (reg:DI 638 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2585 2584 2586 (set (reg:DI 1529)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2586 2585 2587 (set (reg:DI 1528)
        (udiv:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1529))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2587 2586 2588 (set (reg:DI 1531)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2588 2587 2589 (set (reg:DI 1530)
        (mult:DI (reg:DI 1528)
            (reg:DI 1531))) generator/mod_arith_64bit.h:36 -1
     (nil))

(insn 2589 2588 0 (set (reg:DI 646 [ D.3802 ])
        (minus:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1530))) generator/mod_arith_64bit.h:36 -1
     (nil))

;; # DEBUG sum => NULL

(debug_insn 2590 2589 0 (var_location:DI sum (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2591 2590 0 (var_location:DI a (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 2592 2591 0 (var_location:DI b (const_int 0 [0])) generator/mod_arith_64bit.h:86 -1
     (nil))
;; # DEBUG sum => NULL

(debug_insn 2593 2592 0 (var_location:DI sum (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG a => NULL

(debug_insn 2594 2593 0 (var_location:DI a (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG new_elt => NULL

(debug_insn 2595 2594 0 (var_location:DI new_elt (const_int 0 [0])) generator/splittable_mrg.c:172 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 2596 2595 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:268 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 2597 2596 0 (var_location:DI state (const_int 0 [0])) generator/splittable_mrg.c:275 -1
     (nil))
;; # DEBUG state => NULL

(debug_insn 2598 2597 0 (var_location:DI state (const_int 0 [0])) graph500.c:156 -1
     (nil))
;; # DEBUG R => NULL

(debug_insn 2599 2598 0 (var_location:DF R (const_int 0 [0])) graph500.c:156 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_531 == 0)

(insn 2600 2599 2601 (set (reg:SI 1532)
        (mem:SI (plus:DI (mult:DI (reg:DI 788 [ ivtmp.101 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B]+0 S4 A32])) graph500.c:157 -1
     (nil))

(insn 2601 2600 2602 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1532)
            (const_int 0 [0]))) graph500.c:157 -1
     (nil))

(jump_insn 2602 2601 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 160
Swap operands in stmt:
_535 = _534 * _598;
Cost left opnd=2, right opnd=5
(const_double:DF 4.6566128752457969230960088680149056017398834228515625e-10 [0x0.80000001p-30])

Cold cost: 4 (final)
(const_double:DF 4.6566128752457969230960088680149056017398834228515625e-10 [0x0.80000001p-30])

Cold cost: 4 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(const_double:DF 2.168404346990492785380695823593908549975495247963408e-19 [0x0.80000002p-61])

Cold cost: 4 (final)
(const_double:DF 2.168404346990492785380695823593908549975495247963408e-19 [0x0.80000002p-61])

Cold cost: 4 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)

;; if (_535 > _539)

(insn 2604 2603 2605 (set (reg:DF 1533 [ D.3804 ])
        (float:DF (reg:DI 643 [ D.3802 ]))) graph500.c:157 -1
     (nil))

(insn 2605 2604 2606 (set (reg:DF 1535)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])) graph500.c:157 -1
     (expr_list:REG_EQUAL (const_double:DF 4.6566128752457969230960088680149056017398834228515625e-10 [0x0.80000001p-30])
        (nil)))

(insn 2606 2605 2607 (set (reg:DF 1534 [ D.3804 ])
        (mult:DF (reg:DF 1533 [ D.3804 ])
            (reg:DF 1535))) graph500.c:157 -1
     (nil))

(insn 2607 2606 2608 (set (reg:DF 1536 [ D.3804 ])
        (float:DF (reg:DI 646 [ D.3802 ]))) graph500.c:157 -1
     (nil))

(insn 2608 2607 2609 (set (reg:DF 1538)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])) graph500.c:157 -1
     (expr_list:REG_EQUAL (const_double:DF 2.168404346990492785380695823593908549975495247963408e-19 [0x0.80000002p-61])
        (nil)))

(insn 2609 2608 2610 (set (reg:DF 1537 [ D.3804 ])
        (mult:DF (reg:DF 1536 [ D.3804 ])
            (reg:DF 1538))) graph500.c:157 -1
     (nil))

(insn 2610 2609 2611 (set (reg:DF 1539 [ D.3804 ])
        (plus:DF (reg:DF 1534 [ D.3804 ])
            (reg:DF 1537 [ D.3804 ]))) graph500.c:157 -1
     (nil))

(insn 2611 2610 2612 (set (reg:DI 1540 [ D.3810 ])
        (minus:DI (reg:DI 573 [ D.3802 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:157 -1
     (nil))

(insn 2612 2611 2613 (set (reg:DF 1541 [ D.3804 ])
        (float:DF (reg:DI 1540 [ D.3810 ]))) graph500.c:157 -1
     (nil))

(insn 2613 2612 2614 (set (reg:DF 1542 [ D.3804 ])
        (mult:DF (reg:DF 1539 [ D.3804 ])
            (reg:DF 1541 [ D.3804 ]))) graph500.c:157 -1
     (nil))

(insn 2614 2613 2615 (set (reg:SI 1543 [ D.3797 ])
        (minus:SI (reg:SI 600 [ D.3797 ])
            (reg/v:SI 596 [ m ]))) graph500.c:157 -1
     (nil))

(insn 2615 2614 2616 (set (reg:DF 1544 [ D.3804 ])
        (float:DF (reg:SI 1543 [ D.3797 ]))) graph500.c:157 -1
     (nil))

(insn 2616 2615 2617 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1542 [ D.3804 ])
            (reg:DF 1544 [ D.3804 ]))) graph500.c:157 -1
     (nil))

(jump_insn 2617 2616 0 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 161
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; m_541 = m_537 + 1;

(insn 2619 2618 0 (set (reg/v:SI 599 [ m ])
        (plus:SI (reg/v:SI 596 [ m ])
            (const_int 1 [0x1]))) graph500.c:158 -1
     (nil))

;; # DEBUG m => m_541

(debug_insn 2620 2619 0 (var_location:SI m (const_int 0 [0])) graph500.c:158 -1
     (nil))
;; # DEBUG D#45 => ivtmp.101_1291 + 1

(debug_insn 2621 2620 0 (var_location:DI D#45 (const_int 0 [0])) -1
     (nil))
;; # DEBUG t => (long int) D#45

(debug_insn 2622 2621 0 (var_location:DI t (const_int 0 [0])) graph500.c:158 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
(const_int 112 [0x70])

Cold cost: 4 (final)
(const_int 112 [0x70])

Cold cost: 4 (final)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; bfs_root[m_537] = t_527;

(insn 2623 2622 2624 (set (reg:DI 1546)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 -1
     (nil))

(insn 2624 2623 2625 (set (reg/f:DI 1545)
        (lo_sum:DI (reg:DI 1546)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2625 2624 2626 (set (reg:DI 1547)
        (reg/f:DI 1545)) graph500.c:158 -1
     (nil))

(insn 2626 2625 2627 (set (reg/f:DI 1548)
        (plus:DI (reg/f:DI 1545)
            (const_int 112 [0x70]))) graph500.c:158 -1
     (nil))

(insn 2627 2626 2628 (set (reg:DI 1549)
        (sign_extend:DI (reg/v:SI 596 [ m ]))) graph500.c:158 -1
     (nil))

(insn 2628 2627 0 (set (mem:DI (plus:DI (mult:DI (reg:DI 1549)
                    (const_int 8 [0x8]))
                (reg/f:DI 1548)) [4 bfs_root S8 A64])
        (reg/v:DI 591 [ t ])) graph500.c:158 -1
     (nil))

;; Generating RTL for gimple basic block 162

;; 

(code_label 2629 2628 2630 116 "" [0 uses])

(note 2630 2629 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; ivtmp.101_1285 = ivtmp.101_1291 + 1;

(insn 2631 2630 0 (set (reg:DI 788 [ ivtmp.101 ])
        (plus:DI (reg:DI 788 [ ivtmp.101 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; prng_state_store_z1_lsm.9_1110 = _620;

(nil)

;; prng_state_store_z1_lsm.10_1111 = 1;

(insn 2632 2631 0 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (const_int 1 [0x1])) -1
     (nil))

;; prng_state_store_z5_lsm.11_95 = prng_state_store_z3_lsm.15_1307;

(nil)

;; prng_state_store_z4_lsm.13_1274 = prng_state_store_z2_lsm.17_1305;

(nil)

;; prng_state_store_z3_lsm.15_1258 = prng_state_store_z1_lsm.9_1313;

(nil)

;; prng_state_store_z2_lsm.17_1461 = _617;

(nil)

;; Generating RTL for gimple basic block 163

;; 

(code_label 2633 2632 2634 110 "" [0 uses])

(note 2634 2633 0 NOTE_INSN_BASIC_BLOCK)

;; t_527 = (int64_t) ivtmp.101_1291;

(insn 2635 2634 0 (set (reg/v:DI 591 [ t ])
        (reg:DI 788 [ ivtmp.101 ])) -1
     (nil))

;; # DEBUG t => t_527

(debug_insn 2636 2635 0 (var_location:DI t (const_int 0 [0])) -1
     (nil))
;; # DEBUG m => m_537

(debug_insn 2637 2636 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))
;; if (m_537 < _543)

(insn 2638 2637 2639 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (reg:SI 600 [ D.3797 ]))) graph500.c:155 -1
     (nil))

(jump_insn 2639 2638 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:155 -1
     (int_list:REG_BR_PROB 450 (nil)))

;; Generating RTL for gimple basic block 164

;; if (_500 > t_527)

(insn 2642 2640 2643 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 591 [ t ]))) graph500.c:155 -1
     (nil))

(jump_insn 2643 2642 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2641)
            (pc))) graph500.c:155 -1
     (int_list:REG_BR_PROB 9550 (nil)))

;; Generating RTL for gimple basic block 165
(const_int 0 [0])

Cold cost: 0 (final)

;; if (prng_state_store_z1_lsm.10_1312 != 0)

(insn 2645 2644 2646 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 2646 2645 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 166

;; prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;

(insn 2648 2647 2649 (set (reg:DI 1551)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2649 2648 2650 (set (reg/f:DI 1550)
        (lo_sum:DI (reg:DI 1551)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2650 2649 0 (set (mem/c:DI (reg/f:DI 1550) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))

;; prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;

(insn 2651 2650 2652 (set (reg:DI 1553)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2652 2651 2653 (set (reg/f:DI 1552)
        (lo_sum:DI (reg:DI 1553)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2653 2652 0 (set (mem/c:DI (plus:DI (reg/f:DI 1552)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;

(insn 2654 2653 2655 (set (reg:DI 1555)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2655 2654 2656 (set (reg/f:DI 1554)
        (lo_sum:DI (reg:DI 1555)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2656 2655 0 (set (mem/c:DI (plus:DI (reg/f:DI 1554)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;

(insn 2657 2656 2658 (set (reg:DI 1557)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2658 2657 2659 (set (reg/f:DI 1556)
        (lo_sum:DI (reg:DI 1557)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2659 2658 0 (set (mem/c:DI (plus:DI (reg/f:DI 1556)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;

(insn 2660 2659 2661 (set (reg:DI 1559)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2661 2660 2662 (set (reg/f:DI 1558)
        (lo_sum:DI (reg:DI 1559)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2662 2661 0 (set (mem/c:DI (plus:DI (reg/f:DI 1558)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; Generating RTL for gimple basic block 167

;; 

(code_label 2663 2662 2664 119 "" [0 uses])

(note 2664 2663 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (m_537 > 0)

(insn 2665 2664 2666 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (const_int 0 [0]))) graph500.c:161 -1
     (nil))

(jump_insn 2666 2665 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:161 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 168

;; # DEBUG __stream => _546

(debug_insn 2668 2667 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:162 -1
     (nil))
;; # DEBUG __fmt => "Cannot find %d sample roots of non-self degree > 0, using %d.\n"

(debug_insn 2669 2668 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:162 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1562) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_546, 1, "Cannot find %d sample roots of non-self degree > 0, using %d.\n", _543, m_537);

(insn 2670 2669 2671 (set (reg:DI 1561)
        (high:DI (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2671 2670 2672 (set (reg/f:DI 1560)
        (lo_sum:DI (reg:DI 1561)
            (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)
        (nil)))

(insn 2672 2671 2673 (set (reg:DI 1563)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:162 -1
     (nil))

(insn 2673 2672 2674 (set (reg/f:DI 1562)
        (lo_sum:DI (reg:DI 1563)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:162 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2674 2673 2675 (set (reg:SI 4 x4)
        (reg/v:SI 596 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2675 2674 2676 (set (reg:SI 3 x3)
        (reg:SI 600 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2676 2675 2677 (set (reg:DI 2 x2)
        (reg/f:DI 1560)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2677 2676 2678 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2678 2677 2679 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1562) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2679 2678 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:SI (use (reg:SI 4 x4))
                                (nil)))))))))

;; # DEBUG __stream => NULL

(debug_insn 2680 2679 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:162 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 2681 2680 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:162 -1
     (nil))
;; NBFS = m_537;

(insn 2682 2681 2683 (set (reg:DI 1565)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:164 -1
     (nil))

(insn 2683 2682 2684 (set (reg/f:DI 1564)
        (lo_sum:DI (reg:DI 1565)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:164 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2684 2683 0 (set (mem/c:SI (plus:DI (reg/f:DI 1564)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])
        (reg/v:SI 596 [ m ])) graph500.c:164 -1
     (nil))

;; Generating RTL for gimple basic block 169

;; 

(code_label 2687 2686 2688 120 "" [0 uses])

(note 2688 2687 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _547

(debug_insn 2689 2688 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:166 -1
     (nil))
;; # DEBUG __fmt => "Cannot find any sample roots of non-self degree > 0.\n"

(debug_insn 2690 2689 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:166 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1568) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_547, 1, "Cannot find any sample roots of non-self degree > 0.\n");

(insn 2691 2690 2692 (set (reg:DI 1567)
        (high:DI (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2692 2691 2693 (set (reg/f:DI 1566)
        (lo_sum:DI (reg:DI 1567)
            (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)
        (nil)))

(insn 2693 2692 2694 (set (reg:DI 1569)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:166 -1
     (nil))

(insn 2694 2693 2695 (set (reg/f:DI 1568)
        (lo_sum:DI (reg:DI 1569)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:166 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2695 2694 2696 (set (reg:DI 2 x2)
        (reg/f:DI 1566)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2696 2695 2697 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2697 2696 2698 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1568) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2698 2697 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 2699 2698 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:166 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 2700 2699 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:166 -1
     (nil))(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 2701 2700 2702 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:167 -1
     (nil))

(call_insn 2702 2701 2703 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 2703 2702 0)

;; Generating RTL for gimple basic block 170

;; 

(code_label 2704 2703 2705 117 "" [0 uses])

(note 2705 2704 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Cold cost: 0 (final)

;; if (prng_state_store_z1_lsm.10_1312 != 0)

(insn 2706 2705 2707 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 2707 2706 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 171

;; prng_state_store.z1 = prng_state_store_z1_lsm.9_1313;

(insn 2709 2708 2710 (set (reg:DI 1571)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2710 2709 2711 (set (reg/f:DI 1570)
        (lo_sum:DI (reg:DI 1571)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2711 2710 0 (set (mem/c:DI (reg/f:DI 1570) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))

;; prng_state_store.z5 = prng_state_store_z5_lsm.11_1311;

(insn 2712 2711 2713 (set (reg:DI 1573)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2713 2712 2714 (set (reg/f:DI 1572)
        (lo_sum:DI (reg:DI 1573)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2714 2713 0 (set (mem/c:DI (plus:DI (reg/f:DI 1572)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z4 = prng_state_store_z4_lsm.13_1309;

(insn 2715 2714 2716 (set (reg:DI 1575)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2716 2715 2717 (set (reg/f:DI 1574)
        (lo_sum:DI (reg:DI 1575)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2717 2716 0 (set (mem/c:DI (plus:DI (reg/f:DI 1574)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; prng_state_store.z3 = prng_state_store_z3_lsm.15_1307;

(insn 2718 2717 2719 (set (reg:DI 1577)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2719 2718 2720 (set (reg/f:DI 1576)
        (lo_sum:DI (reg:DI 1577)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2720 2719 0 (set (mem/c:DI (plus:DI (reg/f:DI 1576)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))

;; prng_state_store.z2 = prng_state_store_z2_lsm.17_1305;

(insn 2721 2720 2722 (set (reg:DI 1579)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))

(insn 2722 2721 2723 (set (reg/f:DI 1578)
        (lo_sum:DI (reg:DI 1579)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))

(insn 2723 2722 0 (set (mem/c:DI (plus:DI (reg/f:DI 1578)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))

;; Generating RTL for gimple basic block 172

;; 

(code_label 2724 2723 2725 122 "" [0 uses])

(note 2725 2724 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 173

;; 

(code_label 2726 2725 2727 121 "" [0 uses])

(note 2727 2726 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG p => _112

(debug_insn 2728 2727 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; free (_112);

(insn 2729 2728 2730 (set (reg:DI 0 x0)
        (reg/f:DI 291 [ D.3806 ])) xalloc.c:132 -1
     (nil))

(call_insn 2730 2729 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; Generating RTL for gimple basic block 174

;; # DEBUG m => 0

(debug_insn 2732 2731 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_753 > 0)

(insn 2733 2732 2734 (set (reg:DI 1581)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (nil))

(insn 2734 2733 2735 (set (reg/f:DI 1580)
        (lo_sum:DI (reg:DI 1581)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2735 2734 2736 (set (reg:SI 1582)
        (mem/c:SI (plus:DI (reg/f:DI 1580)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 -1
     (nil))

(insn 2736 2735 2737 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1582)
            (const_int 0 [0]))) graph500.c:187 -1
     (nil))

(jump_insn 2737 2736 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:187 -1
     (int_list:REG_BR_PROB 9775 (nil)))

;; Generating RTL for gimple basic block 175

;; destroy_graph ();

(call_insn 2739 2738 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>) [0 destroy_graph S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

;; # DEBUG max_bfsvtx => NULL

(debug_insn 2740 2739 0 (var_location:DI max_bfsvtx (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 2741 2740 0 (var_location:DI bfs_tree (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG sz => NULL

(debug_insn 2742 2741 0 (var_location:DI sz (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG R => NULL

(debug_insn 2743 2742 0 (var_location:DF R (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG t => NULL

(debug_insn 2744 2743 0 (var_location:DI t (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 2745 2744 0 (var_location:DI k (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 2746 2745 0 (var_location:SI err (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG m => NULL

(debug_insn 2747 2746 0 (var_location:SI m (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG has_adj => NULL

(debug_insn 2748 2747 0 (var_location:DI has_adj (const_int 0 [0])) graph500.c:107 -1
     (nil))
;; # DEBUG p => _61

(debug_insn 2749 2748 0 (var_location:DI p (const_int 0 [0])) graph500.c:109 -1
     (nil))(mem/f/c:DI (plus:DI (reg/f:DI 1583)
        (const_int 88 [0x58])) [2 IJ+0 S8 A64])

Cold cost: 4 (final)

;; free (_61);

(insn 2750 2749 2751 (set (reg:DI 1584)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:109 -1
     (nil))

(insn 2751 2750 2752 (set (reg/f:DI 1583)
        (lo_sum:DI (reg:DI 1584)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:109 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2752 2751 2753 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1583)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) xalloc.c:132 -1
     (nil))

(call_insn 2753 2752 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG p => NULL

(debug_insn 2754 2753 0 (var_location:DI p (const_int 0 [0])) graph500.c:109 -1
     (nil))(mem/c:SI (plus:DI (reg/f:DI 1585)
        (const_int 48 [0x30])) [3 NBFS+0 S4 A32])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1587)
        (const_int 104 [0x68])) [1 construction_time+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1589)
        (const_int 96 [0x60])) [1 generation_time+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1591)
        (const_int 40 [0x28])) [1 D+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1593)
        (const_int 32 [0x20])) [1 C+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1595)
        (const_int 24 [0x18])) [1 B+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DF (plus:DI (reg/f:DI 1597)
        (const_int 16 [0x10])) [1 A+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DI (plus:DI (reg/f:DI 1599)
        (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DI (plus:DI (reg/f:DI 1601)
        (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])

Cold cost: 4 (final)
(mem/c:DI (reg/f:DI 1603) [4 SCALE+0 S8 A64])

Cold cost: 4 (final)

;; output_results.constprop (_63, _64, _65, _66, _67, _68, _69, _70, _71, _72);

(insn 2755 2754 2756 (set (reg:DI 1586)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2756 2755 2757 (set (reg/f:DI 1585)
        (lo_sum:DI (reg:DI 1586)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2757 2756 2758 (set (reg:DI 1588)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2758 2757 2759 (set (reg/f:DI 1587)
        (lo_sum:DI (reg:DI 1588)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2759 2758 2760 (set (reg:DI 1590)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2760 2759 2761 (set (reg/f:DI 1589)
        (lo_sum:DI (reg:DI 1590)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2761 2760 2762 (set (reg:DI 1592)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2762 2761 2763 (set (reg/f:DI 1591)
        (lo_sum:DI (reg:DI 1592)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2763 2762 2764 (set (reg:DI 1594)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2764 2763 2765 (set (reg/f:DI 1593)
        (lo_sum:DI (reg:DI 1594)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2765 2764 2766 (set (reg:DI 1596)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2766 2765 2767 (set (reg/f:DI 1595)
        (lo_sum:DI (reg:DI 1596)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2767 2766 2768 (set (reg:DI 1598)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2768 2767 2769 (set (reg/f:DI 1597)
        (lo_sum:DI (reg:DI 1598)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2769 2768 2770 (set (reg:DI 1600)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2770 2769 2771 (set (reg/f:DI 1599)
        (lo_sum:DI (reg:DI 1600)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2771 2770 2772 (set (reg:DI 1602)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2772 2771 2773 (set (reg/f:DI 1601)
        (lo_sum:DI (reg:DI 1602)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2773 2772 2774 (set (reg:DI 1604)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))

(insn 2774 2773 2775 (set (reg/f:DI 1603)
        (lo_sum:DI (reg:DI 1604)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2775 2774 2776 (set (reg:SI 3 x3)
        (mem/c:SI (plus:DI (reg/f:DI 1585)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:111 -1
     (nil))

(insn 2776 2775 2777 (set (reg:DF 37 v5)
        (mem/c:DF (plus:DI (reg/f:DI 1587)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2777 2776 2778 (set (reg:DF 36 v4)
        (mem/c:DF (plus:DI (reg/f:DI 1589)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2778 2777 2779 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1591)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2779 2778 2780 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1593)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2780 2779 2781 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1595)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2781 2780 2782 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1597)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2782 2781 2783 (set (reg:DI 2 x2)
        (mem/c:DI (plus:DI (reg/f:DI 1599)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2783 2782 2784 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1601)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:111 -1
     (nil))

(insn 2784 2783 2785 (set (reg:DI 0 x0)
        (mem/c:DI (reg/f:DI 1603) [4 SCALE+0 S8 A64])) graph500.c:111 -1
     (nil))

(call_insn 2785 2784 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>) [0 output_results.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (expr_list:DF (use (reg:DF 36 v4))
                                            (expr_list:DF (use (reg:DF 37 v5))
                                                (expr_list:SI (use (reg:SI 3 x3))
                                                    (nil))))))))))))))

;; Generating RTL for gimple basic block 176

;; 

(code_label 2788 2787 2789 104 "" [0 uses])

(note 2789 2788 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __path => _499

(debug_insn 2790 2789 0 (var_location:DI __path (const_int 0 [0])) graph500.c:175 -1
     (nil))
;; # DEBUG __oflag => 0

(debug_insn 2791 2790 0 (var_location:SI __oflag (const_int 0 [0])) graph500.c:175 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; _548 = __open_alias (_499, 0);

(insn 2792 2791 2793 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

(insn 2793 2792 2794 (set (reg:DI 0 x0)
        (reg/f:DI 571 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

(call_insn 2794 2793 2795 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))

(insn 2795 2794 0 (set (reg:SI 603 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))

;; # DEBUG __path => NULL

(debug_insn 2796 2795 0 (var_location:DI __path (const_int 0 [0])) graph500.c:175 -1
     (nil))
;; # DEBUG __oflag => NULL

(debug_insn 2797 2796 0 (var_location:SI __oflag (const_int 0 [0])) graph500.c:175 -1
     (nil))
;; # DEBUG fd => NULL

(debug_insn 2798 2797 0 (var_location:SI fd (const_int 0 [0])) graph500.c:175 -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (_548 < 0)

(insn 2799 2798 2800 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 603 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:175 -1
     (nil))

(jump_insn 2800 2799 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:175 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 177

;; perror ("Cannot open input BFS root file");

(insn 2802 2801 2803 (set (reg:DI 1606)
        (high:DI (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 -1
     (nil))

(insn 2803 2802 2804 (set (reg/f:DI 1605)
        (lo_sum:DI (reg:DI 1606)
            (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>)
        (nil)))

(insn 2804 2803 2805 (set (reg:DI 0 x0)
        (reg/f:DI 1605)) graph500.c:176 -1
     (nil))

(call_insn 2805 2804 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 2806 2805 2807 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:177 -1
     (nil))

(call_insn 2807 2806 2808 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 2808 2807 0)

;; Generating RTL for gimple basic block 178

;; 

(code_label 2809 2808 2810 124 "" [0 uses])

(note 2810 2809 0 NOTE_INSN_BASIC_BLOCK)

;; _549 = NBFS;

(insn 2811 2810 2812 (set (reg:DI 1608)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:179 -1
     (nil))

(insn 2812 2811 2813 (set (reg/f:DI 1607)
        (lo_sum:DI (reg:DI 1608)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2813 2812 0 (set (reg:SI 604 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1607)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:179 -1
     (nil))

;; _550 = (long unsigned int) _549;

(insn 2814 2813 0 (set (reg:DI 605 [ D.3802 ])
        (sign_extend:DI (reg:SI 604 [ D.3797 ]))) graph500.c:179 -1
     (nil))

;; _551 = _549 w* 8;

(insn 2815 2814 2816 (set (reg:DI 1609)
        (sign_extend:DI (reg:SI 604 [ D.3797 ]))) graph500.c:179 -1
     (nil))

(insn 2816 2815 0 (set (reg:DI 606 [ D.3802 ])
        (ashift:DI (reg:DI 1609)
            (const_int 3 [0x3]))) graph500.c:179 -1
     (nil))

;; # DEBUG sz => sz_552

(debug_insn 2817 2816 0 (var_location:DI sz (const_int 0 [0])) graph500.c:179 -1
     (nil))
;; # DEBUG __fd => _548

(debug_insn 2818 2817 0 (var_location:SI __fd (const_int 0 [0])) graph500.c:180 -1
     (nil))
;; # DEBUG __buf => &bfs_root

(debug_insn 2819 2818 0 (var_location:DI __buf (const_int 0 [0])) graph500.c:180 -1
     (nil))
;; # DEBUG __nbytes => _551

(debug_insn 2820 2819 0 (var_location:DI __nbytes (const_int 0 [0])) graph500.c:180 -1
     (nil))(const_int 512 [0x200])

Cold cost: 4 (final)
(const_int 112 [0x70])

Cold cost: 4 (final)
(const_int 112 [0x70])

Cold cost: 4 (final)

;; _554 = __read_chk_warn (_548, &bfs_root, _551, 512);

(insn 2821 2820 2822 (set (reg:DI 1611)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2822 2821 2823 (set (reg/f:DI 1610)
        (lo_sum:DI (reg:DI 1611)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2823 2822 2824 (set (reg:DI 1612)
        (reg/f:DI 1610)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2824 2823 2825 (set (reg/f:DI 1613)
        (plus:DI (reg/f:DI 1610)
            (const_int 112 [0x70]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2825 2824 2826 (set (reg:DI 3 x3)
        (const_int 512 [0x200])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2826 2825 2827 (set (reg:DI 2 x2)
        (reg:DI 606 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2827 2826 2828 (set (reg:DI 1 x1)
        (reg/f:DI 1613)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(insn 2828 2827 2829 (set (reg:SI 0 x0)
        (reg:SI 603 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

(call_insn 2829 2828 2830 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>) [0 __read_chk_warn S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(insn 2830 2829 0 (set (reg:DI 608 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))

;; # DEBUG __fd => NULL

(debug_insn 2831 2830 0 (var_location:SI __fd (const_int 0 [0])) graph500.c:180 -1
     (nil))
;; # DEBUG __buf => NULL

(debug_insn 2832 2831 0 (var_location:DI __buf (const_int 0 [0])) graph500.c:180 -1
     (nil))
;; # DEBUG __nbytes => NULL

(debug_insn 2833 2832 0 (var_location:DI __nbytes (const_int 0 [0])) graph500.c:180 -1
     (nil))
;; if (sz_552 != _554)

(insn 2834 2833 2835 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 606 [ D.3802 ])
            (reg:DI 608 [ D.3798 ]))) graph500.c:180 -1
     (nil))

(jump_insn 2835 2834 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:180 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 179

;; perror ("Error reading input BFS root file");

(insn 2837 2836 2838 (set (reg:DI 1615)
        (high:DI (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 -1
     (nil))

(insn 2838 2837 2839 (set (reg/f:DI 1614)
        (lo_sum:DI (reg:DI 1615)
            (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>)
        (nil)))

(insn 2839 2838 2840 (set (reg:DI 0 x0)
        (reg/f:DI 1614)) graph500.c:181 -1
     (nil))

(call_insn 2840 2839 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:181 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(const_int 1 [0x1])

Cold cost: 4 (final)

;; exit (1);

(insn 2841 2840 2842 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:182 -1
     (nil))

(call_insn 2842 2841 2843 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

(barrier 2843 2842 0)

;; Generating RTL for gimple basic block 180

;; 

(code_label 2844 2843 2845 125 "" [0 uses])

(note 2845 2844 0 NOTE_INSN_BASIC_BLOCK)

;; close (_548);

(insn 2846 2845 2847 (set (reg:SI 0 x0)
        (reg:SI 603 [ D.3797 ])) graph500.c:184 -1
     (nil))

(call_insn 2847 2846 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:184 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))

;; Generating RTL for gimple basic block 181

;; 

(code_label 2851 2850 2852 123 "" [0 uses])

(note 2852 2851 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 182

;; m_937 = (int) ivtmp.94_1264;

(insn 2854 2853 0 (set (reg/v:SI 752 [ m ])
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) -1
     (nil))

;; # DEBUG m => m_937

(debug_insn 2855 2854 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))
;; _558 = nvtx_scale;

(insn 2856 2855 2857 (set (reg:DI 1617)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 -1
     (nil))

(insn 2857 2856 2858 (set (reg/f:DI 1616)
        (lo_sum:DI (reg:DI 1617)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2858 2857 0 (set (reg:DI 611 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:191 -1
     (nil))

;; _560 = _559 * 8;

(insn 2859 2858 0 (set (reg:DI 613 [ D.3802 ])
        (ashift:DI (reg:DI 611 [ D.3798 ])
            (const_int 3 [0x3]))) graph500.c:191 -1
     (nil))

;; # DEBUG sz => _560

(debug_insn 2860 2859 0 (var_location:DI sz (const_int 0 [0])) graph500.c:191 -1
     (nil))
;; # DEBUG n => _560

(debug_insn 2861 2860 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; bfs_tree_622 = malloc (_560);

(insn 2862 2861 2863 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) generator/utils.c:32 -1
     (nil))

(call_insn 2863 2862 2864 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 2864 2863 2865 (set (reg/f:DI 1618)
        (reg:DI 0 x0)) generator/utils.c:32 -1
     (expr_list:REG_NOALIAS (reg/f:DI 1618)
        (nil)))

(insn 2865 2864 0 (set (reg/v/f:DI 647 [ bfs_tree ])
        (reg/f:DI 1618)) generator/utils.c:32 -1
     (nil))

;; # DEBUG p => bfs_tree_622

(debug_insn 2866 2865 0 (var_location:DI p (const_int 0 [0])) generator/utils.c:32 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (bfs_tree_622 == 0B)

(insn 2867 2866 2868 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 647 [ bfs_tree ])
            (const_int 0 [0]))) generator/utils.c:33 -1
     (nil))

(jump_insn 2868 2867 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/utils.c:33 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 183

;; xmalloc.part.0 (_560);

(insn 2870 2869 2871 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) -1
     (nil))

(call_insn/c/i 2871 2870 2872 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(barrier 2872 2871 0)

;; Generating RTL for gimple basic block 184

;; 

(code_label 2873 2872 2874 127 "" [0 uses])

(note 2874 2873 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG n => NULL

(debug_insn 2875 2874 0 (var_location:DI n (const_int 0 [0])) xalloc.c:104 -1
     (nil))
;; # DEBUG p => NULL

(debug_insn 2876 2875 0 (var_location:DI p (const_int 0 [0])) xalloc.c:104 -1
     (nil))
;; # DEBUG sz => NULL

(debug_insn 2877 2876 0 (var_location:DI sz (const_int 0 [0])) graph500.c:191 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 2878 2877 0 (var_location:DI bfs_tree (const_int 0 [0])) graph500.c:191 -1
     (nil))
;; _1361 = ivtmp.94_1264 * 8;

(insn 2879 2878 0 (set (reg:DI 811 [ D.3805 ])
        (ashift:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 3 [0x3]))) -1
     (nil))
(const_int 112 [0x70])

Hot cost: 4 (final)
(const_int 112 [0x70])

Hot cost: 4 (final)

;; if (_558 <= _563)

(insn 2880 2879 2881 (set (reg:DI 1620)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:192 -1
     (nil))

(insn 2881 2880 2882 (set (reg/f:DI 1619)
        (lo_sum:DI (reg:DI 1620)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2882 2881 2883 (set (reg:DI 1621)
        (reg/f:DI 1619)) graph500.c:192 -1
     (nil))

(insn 2883 2882 2884 (set (reg/f:DI 1622)
        (plus:DI (reg/f:DI 1619)
            (const_int 112 [0x70]))) graph500.c:192 -1
     (nil))

(insn 2884 2883 2885 (set (reg:DI 1623)
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1622)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:192 -1
     (nil))

(insn 2885 2884 2886 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 611 [ D.3798 ])
            (reg:DI 1623))) graph500.c:192 -1
     (nil))

(jump_insn 2886 2885 0 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:192 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 185
(const_int 32 [0x20])

Cold cost: 4 (final)
(const_int 32 [0x20])

Cold cost: 4 (final)
(const_int 192 [0xc0])

Cold cost: 4 (final)

;; __assert_fail ("bfs_root[m] < nvtx_scale", "graph500.c", 192, &__PRETTY_FUNCTION__);

(insn 2888 2887 2889 (set (reg:DI 1625)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 -1
     (nil))

(insn 2889 2888 2890 (set (reg/f:DI 1624)
        (lo_sum:DI (reg:DI 1625)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 2890 2889 2891 (set (reg:DI 1626)
        (plus:DI (reg/f:DI 1624)
            (const_int 32 [0x20]))) graph500.c:192 -1
     (nil))

(insn 2891 2890 2892 (set (reg:DI 1628)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 -1
     (nil))

(insn 2892 2891 2893 (set (reg/f:DI 1627)
        (lo_sum:DI (reg:DI 1628)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))

(insn 2893 2892 2894 (set (reg:DI 1630)
        (high:DI (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 -1
     (nil))

(insn 2894 2893 2895 (set (reg/f:DI 1629)
        (lo_sum:DI (reg:DI 1630)
            (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>)
        (nil)))

(insn 2895 2894 2896 (set (reg:DI 3 x3)
        (reg:DI 1626)) graph500.c:192 -1
     (nil))

(insn 2896 2895 2897 (set (reg:SI 2 x2)
        (const_int 192 [0xc0])) graph500.c:192 -1
     (nil))

(insn 2897 2896 2898 (set (reg:DI 1 x1)
        (reg/f:DI 1627)) graph500.c:192 -1
     (nil))

(insn 2898 2897 2899 (set (reg:DI 0 x0)
        (reg/f:DI 1629)) graph500.c:192 -1
     (nil))

(call_insn 2899 2898 2900 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 2900 2899 0)

;; Generating RTL for gimple basic block 186

;; 

(code_label 2901 2900 2902 128 "" [0 uses])

(note 2902 2901 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_565 != 0)

(insn 2903 2902 2904 (set (reg:DI 1632)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:194 -1
     (nil))

(insn 2904 2903 2905 (set (reg/f:DI 1631)
        (lo_sum:DI (reg:DI 1632)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2905 2904 2906 (set (reg:SI 1633)
        (mem/c:SI (reg/f:DI 1631) [3 VERBOSE+0 S4 A32])) graph500.c:194 -1
     (nil))

(insn 2906 2905 2907 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1633)
            (const_int 0 [0]))) graph500.c:194 -1
     (nil))

(jump_insn 2907 2906 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:194 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 187

;; # DEBUG __stream => _566

(debug_insn 2909 2908 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:194 -1
     (nil))
;; # DEBUG __fmt => "Running bfs %d..."

(debug_insn 2910 2909 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:194 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1636) [2 stderr+0 S8 A64])

Hot cost: 16 (final)

;; __fprintf_chk (_566, 1, "Running bfs %d...", m_937);

(insn 2911 2910 2912 (set (reg:DI 1635)
        (high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2912 2911 2913 (set (reg/f:DI 1634)
        (lo_sum:DI (reg:DI 1635)
            (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)
        (nil)))

(insn 2913 2912 2914 (set (reg:DI 1637)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 -1
     (nil))

(insn 2914 2913 2915 (set (reg/f:DI 1636)
        (lo_sum:DI (reg:DI 1637)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2915 2914 2916 (set (reg:DI 1638)
        (mem/f/c:DI (reg/f:DI 1636) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2916 2915 2917 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2917 2916 2918 (set (reg:DI 2 x2)
        (reg/f:DI 1634)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2918 2917 2919 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2919 2918 2920 (set (reg:DI 0 x0)
        (reg:DI 1638)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2920 2919 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))

;; Generating RTL for gimple basic block 188
Swap operands in stmt:
out_634 = out_628 + _633;
Cost left opnd=0, right opnd=5

;; 

(code_label 2921 2920 2922 129 "" [0 uses])

(note 2922 2921 0 NOTE_INSN_BASIC_BLOCK)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; clock_gettime (1, &tic_ts);

(insn 2923 2922 2924 (set (reg:DI 1640)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))

(insn 2924 2923 2925 (set (reg/f:DI 1639)
        (lo_sum:DI (reg:DI 1640)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 2925 2924 2926 (set (reg:DI 1 x1)
        (reg/f:DI 1639)) timer.c:43 -1
     (nil))

(insn 2926 2925 2927 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))

(call_insn 2927 2926 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(const_int 112 [0x70])

Hot cost: 4 (final)
(const_int 112 [0x70])

Hot cost: 4 (final)
(mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
        (reg/f:DI 1644)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])

Hot cost: 16 (final)
(const_int -48 [0xffffffffffffffd0])

Hot cost: 4 (final)
(const_int -48 [0xffffffffffffffd0])

Hot cost: 4 (final)

;; err_568 = make_bfs_tree (bfs_tree_622, &max_bfsvtx, _567);

(insn 2928 2927 2929 (set (reg:DI 1642)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:195 -1
     (nil))

(insn 2929 2928 2930 (set (reg/f:DI 1641)
        (lo_sum:DI (reg:DI 1642)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2930 2929 2931 (set (reg:DI 1643)
        (reg/f:DI 1641)) graph500.c:195 -1
     (nil))

(insn 2931 2930 2932 (set (reg/f:DI 1644)
        (plus:DI (reg/f:DI 1641)
            (const_int 112 [0x70]))) graph500.c:195 -1
     (nil))

(insn 2932 2931 2933 (set (reg:DI 1645)
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1644)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:195 -1
     (nil))

(insn 2933 2932 2934 (set (reg:DI 1646)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -48 [0xffffffffffffffd0]))) graph500.c:195 -1
     (nil))

(insn 2934 2933 2935 (set (reg:DI 2 x2)
        (reg:DI 1645)) graph500.c:195 -1
     (nil))

(insn 2935 2934 2936 (set (reg:DI 1 x1)
        (reg:DI 1646)) graph500.c:195 -1
     (nil))

(insn 2936 2935 2937 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:195 -1
     (nil))

(call_insn 2937 2936 2938 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>) [0 make_bfs_tree S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:195 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

(insn 2938 2937 0 (set (reg/v:SI 618 [ err ])
        (reg:SI 0 x0)) graph500.c:195 -1
     (nil))

;; # DEBUG err => err_568

(debug_insn 2939 2938 0 (var_location:SI err (const_int 0 [0])) graph500.c:195 -1
     (nil))(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; clock_gettime (1, &ts);

(insn 2940 2939 2941 (set (reg:DI 1647)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) timer.c:68 -1
     (nil))

(insn 2941 2940 2942 (set (reg:DI 1 x1)
        (reg:DI 1647)) timer.c:68 -1
     (nil))

(insn 2942 2941 2943 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:68 -1
     (nil))

(call_insn 2943 2942 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:68 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])

Hot cost: 20 (final)
(const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])

Hot cost: 20 (final)
(mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])

Hot cost: 20 (final)

;; out_628 = _627 * 1.00000000000000006228159145777985641889706869278597878292e-9;

(insn 2944 2943 2945 (set (reg:DI 1649)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 ts.tv_nsec+0 S8 A64])) timer.c:69 -1
     (nil))

(insn 2945 2944 2946 (set (reg:DF 1648 [ D.3804 ])
        (float:DF (reg:DI 1649))) timer.c:69 -1
     (nil))

(insn 2946 2945 2947 (set (reg:DI 1651)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:69 -1
     (nil))

(insn 2947 2946 2948 (set (reg/f:DI 1650)
        (lo_sum:DI (reg:DI 1651)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:69 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 2948 2947 2949 (set (reg:DI 1653)
        (mem/c:DI (plus:DI (reg/f:DI 1650)
                (const_int 8 [0x8])) [4 tic_ts.tv_nsec+0 S8 A64])) timer.c:69 -1
     (nil))

(insn 2949 2948 2950 (set (reg:DF 1652 [ D.3804 ])
        (float:DF (reg:DI 1653))) timer.c:69 -1
     (nil))

(insn 2950 2949 2951 (set (reg:DF 1654 [ D.3804 ])
        (minus:DF (reg:DF 1648 [ D.3804 ])
            (reg:DF 1652 [ D.3804 ]))) timer.c:69 -1
     (nil))

(insn 2951 2950 2952 (set (reg:DF 1655)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])) timer.c:69 -1
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))

(insn 2952 2951 0 (set (reg/v:DF 653 [ out ])
        (mult:DF (reg:DF 1654 [ D.3804 ])
            (reg:DF 1655))) timer.c:69 -1
     (nil))

;; # DEBUG out => out_628

(debug_insn 2953 2952 0 (var_location:DF out (const_int 0 [0])) timer.c:69 -1
     (nil))
;; out_634 = _633 + out_628;

(insn 2954 2953 2955 (set (reg:DI 1657)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 ts.tv_sec+0 S8 A64])) timer.c:70 -1
     (nil))

(insn 2955 2954 2956 (set (reg:DF 1656 [ D.3804 ])
        (float:DF (reg:DI 1657))) timer.c:70 -1
     (nil))

(insn 2956 2955 2957 (set (reg:DI 1659)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:70 -1
     (nil))

(insn 2957 2956 2958 (set (reg/f:DI 1658)
        (lo_sum:DI (reg:DI 1659)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:70 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))

(insn 2958 2957 2959 (set (reg:DI 1661)
        (mem/c:DI (reg/f:DI 1658) [4 tic_ts.tv_sec+0 S8 A64])) timer.c:70 -1
     (nil))

(insn 2959 2958 2960 (set (reg:DF 1660 [ D.3804 ])
        (float:DF (reg:DI 1661))) timer.c:70 -1
     (nil))

(insn 2960 2959 2961 (set (reg:DF 1662 [ D.3804 ])
        (minus:DF (reg:DF 1656 [ D.3804 ])
            (reg:DF 1660 [ D.3804 ]))) timer.c:70 -1
     (nil))

(insn 2961 2960 0 (set (reg/v:DF 659 [ out ])
        (plus:DF (reg:DF 1662 [ D.3804 ])
            (reg/v:DF 653 [ out ]))) timer.c:70 -1
     (nil))

;; # DEBUG out => out_634

(debug_insn 2962 2961 0 (var_location:DF out (const_int 0 [0])) timer.c:70 -1
     (nil))
;; ts ={v} {CLOBBER};

(nil)

;; # DEBUG out => NULL

(debug_insn 2963 2962 0 (var_location:DF out (const_int 0 [0])) graph500.c:195 -1
     (nil))(symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)

Hot cost: 8 (final)
(symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)

Hot cost: 8 (final)

;; MEM[symbol: bfs_time, index: _1361, offset: 0B] = out_634;

(insn 2964 2963 2965 (set (reg:DI 1665)
        (high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 -1
     (nil))

(insn 2965 2964 2966 (set (reg:DI 1664)
        (lo_sum:DI (reg:DI 1665)
            (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)
        (nil)))

(insn 2966 2965 2967 (set (reg/f:DI 1663)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1664))) graph500.c:195 -1
     (nil))

(insn 2967 2966 0 (set (mem:DF (reg/f:DI 1663) [1 MEM[symbol: bfs_time, index: _1361, offset: 0B]+0 S8 A64])
        (reg/v:DF 659 [ out ])) graph500.c:195 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_570 != 0)

(insn 2968 2967 2969 (set (reg:DI 1667)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:196 -1
     (nil))

(insn 2969 2968 2970 (set (reg/f:DI 1666)
        (lo_sum:DI (reg:DI 1667)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:196 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2970 2969 2971 (set (reg:SI 1668)
        (mem/c:SI (reg/f:DI 1666) [3 VERBOSE+0 S4 A32])) graph500.c:196 -1
     (nil))

(insn 2971 2970 2972 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1668)
            (const_int 0 [0]))) graph500.c:196 -1
     (nil))

(jump_insn 2972 2971 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:196 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 189

;; # DEBUG __stream => _571

(debug_insn 2974 2973 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:196 -1
     (nil))
;; # DEBUG __fmt => "done\n"

(debug_insn 2975 2974 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:196 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])

Hot cost: 16 (final)

;; __fprintf_chk (_571, 1, "done\n");

(insn 2976 2975 2977 (set (reg:DI 1670)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2977 2976 2978 (set (reg/f:DI 1669)
        (lo_sum:DI (reg:DI 1670)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
        (nil)))

(insn 2978 2977 2979 (set (reg:DI 1672)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 -1
     (nil))

(insn 2979 2978 2980 (set (reg/f:DI 1671)
        (lo_sum:DI (reg:DI 1672)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 2980 2979 2981 (set (reg:DI 1673)
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2981 2980 2982 (set (reg:DI 2 x2)
        (reg/f:DI 1669)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2982 2981 2983 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 2983 2982 2984 (set (reg:DI 0 x0)
        (reg:DI 1673)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 2984 2983 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_568 != 0)

(insn 2985 2984 2986 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 -1
     (nil))

(jump_insn 2986 2985 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:198 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 190

;; perror ("make_bfs_tree failed");

(insn 2988 2987 2989 (set (reg:DI 1675)
        (high:DI (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 -1
     (nil))

(insn 2989 2988 2990 (set (reg/f:DI 1674)
        (lo_sum:DI (reg:DI 1675)
            (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>)
        (nil)))

(insn 2990 2989 2991 (set (reg:DI 0 x0)
        (reg/f:DI 1674)) graph500.c:199 -1
     (nil))

(call_insn 2991 2990 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:199 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; abort ();

(call_insn 2992 2991 2993 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 2993 2992 0)

;; Generating RTL for gimple basic block 191

;; 

(code_label 2994 2993 2995 131 "" [0 uses])

(note 2995 2994 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_572 != 0)

(insn 2996 2995 2997 (set (reg:DI 1677)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:203 -1
     (nil))

(insn 2997 2996 2998 (set (reg/f:DI 1676)
        (lo_sum:DI (reg:DI 1677)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:203 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2998 2997 2999 (set (reg:SI 1678)
        (mem/c:SI (reg/f:DI 1676) [3 VERBOSE+0 S4 A32])) graph500.c:203 -1
     (nil))

(insn 2999 2998 3000 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1678)
            (const_int 0 [0]))) graph500.c:203 -1
     (nil))

(jump_insn 3000 2999 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:203 -1
     (int_list:REG_BR_PROB 9990 (nil)))

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; 

(code_label 3004 3003 3005 132 "" [0 uses])

(note 3005 3004 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _573

(debug_insn 3006 3005 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:203 -1
     (nil))
;; # DEBUG __fmt => "Verifying bfs %d..."

(debug_insn 3007 3006 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:203 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1681) [2 stderr+0 S8 A64])

Hot cost: 16 (final)

;; __fprintf_chk (_573, 1, "Verifying bfs %d...", m_937);

(insn 3008 3007 3009 (set (reg:DI 1680)
        (high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3009 3008 3010 (set (reg/f:DI 1679)
        (lo_sum:DI (reg:DI 1680)
            (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
        (nil)))

(insn 3010 3009 3011 (set (reg:DI 1682)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:203 -1
     (nil))

(insn 3011 3010 3012 (set (reg/f:DI 1681)
        (lo_sum:DI (reg:DI 1682)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:203 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 3012 3011 3013 (set (reg:DI 1683)
        (mem/f/c:DI (reg/f:DI 1681) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3013 3012 3014 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3014 3013 3015 (set (reg:DI 2 x2)
        (reg/f:DI 1679)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3015 3014 3016 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3016 3015 3017 (set (reg:DI 0 x0)
        (reg:DI 1683)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 3017 3016 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))

;; Generating RTL for gimple basic block 194

;; 

(code_label 3018 3017 3019 133 "" [0 uses])

(note 3019 3018 0 NOTE_INSN_BASIC_BLOCK)

;; _574 = max_bfsvtx;

(insn 3020 3019 0 (set (reg:DI 623 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 max_bfsvtx+0 S8 A128])) graph500.c:204 -1
     (nil))
(const_int 112 [0x70])

Hot cost: 4 (final)
(const_int 112 [0x70])

Hot cost: 4 (final)

;; _575 = MEM[symbol: bfs_root, index: _1361, offset: 0B];

(insn 3021 3020 3022 (set (reg:DI 1685)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))

(insn 3022 3021 3023 (set (reg/f:DI 1684)
        (lo_sum:DI (reg:DI 1685)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3023 3022 3024 (set (reg:DI 1686)
        (reg/f:DI 1684)) graph500.c:204 -1
     (nil))

(insn 3024 3023 3025 (set (reg/f:DI 1687)
        (plus:DI (reg/f:DI 1684)
            (const_int 112 [0x70]))) graph500.c:204 -1
     (nil))

(insn 3025 3024 0 (set (reg:DI 624 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1687)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:204 -1
     (nil))

;; # DEBUG D#35 => IJ

(debug_insn 3026 3025 0 (var_location:DI D#35 (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG D#34 => nedge

(debug_insn 3027 3026 0 (var_location:DI D#34 (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG bfs_tree_in => bfs_tree_622

(debug_insn 3028 3027 0 (var_location:DI bfs_tree_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG max_bfsvtx => _574

(debug_insn 3029 3028 0 (var_location:DI max_bfsvtx (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG root => _575

(debug_insn 3030 3029 0 (var_location:DI root (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG IJ_in => D#35

(debug_insn 3031 3030 0 (var_location:DI IJ_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge => D#34

(debug_insn 3032 3031 0 (var_location:DI nedge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG bfs_tree => bfs_tree_622

(debug_insn 3033 3032 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:83 -1
     (nil))
;; # DEBUG IJ => D#35

(debug_insn 3034 3033 0 (var_location:DI IJ (const_int 0 [0])) verify.c:84 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; nv_635 = _574 + 1;

(insn 3035 3034 0 (set (reg/v:DI 660 [ nv ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:89 -1
     (nil))

;; # DEBUG nv => nv_635

(debug_insn 3036 3035 0 (var_location:DI nv (const_int 0 [0])) verify.c:89 -1
     (nil))
;; if (_574 < _575)

(insn 3037 3036 3038 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 624 [ D.3798 ]))) verify.c:96 -1
     (nil))

(jump_insn 3038 3037 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:96 -1
     (int_list:REG_BR_PROB 400 (nil)))

;; Generating RTL for gimple basic block 195

;; if (_575 != _639)

(insn 3040 3039 3041 (set (reg:DI 1688)
        (mem:DI (plus:DI (mult:DI (reg:DI 624 [ D.3798 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_638+0 S8 A64])) verify.c:96 -1
     (nil))

(insn 3041 3040 3042 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg:DI 1688))) verify.c:96 -1
     (nil))

(jump_insn 3042 3041 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:96 -1
     (int_list:REG_BR_PROB 2078 (nil)))

;; Generating RTL for gimple basic block 196

;; _576 = IJ;

(insn 3044 3043 3045 (set (reg:DI 1690)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))

(insn 3045 3044 3046 (set (reg/f:DI 1689)
        (lo_sum:DI (reg:DI 1690)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3046 3045 0 (set (reg/f:DI 625 [ D.3803 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1689)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:204 -1
     (nil))

;; _577 = nedge;

(insn 3047 3046 3048 (set (reg:DI 1692)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))

(insn 3048 3047 3049 (set (reg/f:DI 1691)
        (lo_sum:DI (reg:DI 1692)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3049 3048 0 (set (reg:DI 626 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1691)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:204 -1
     (nil))

;; # DEBUG err => 0

(debug_insn 3050 3049 0 (var_location:SI err (const_int 0 [0])) verify.c:99 -1
     (nil))
;; # DEBUG nedge_traversed => 0

(debug_insn 3051 3050 0 (var_location:SI nedge_traversed (const_int 0 [0])) verify.c:100 -1
     (nil))
;; _640 = (long unsigned int) nv_635;

(insn 3052 3051 0 (set (reg:DI 665 [ D.3802 ])
        (reg/v:DI 660 [ nv ])) verify.c:101 -1
     (nil))

;; _641 = _640 * 16;

(insn 3053 3052 0 (set (reg:DI 666 [ D.3802 ])
        (ashift:DI (reg:DI 665 [ D.3802 ])
            (const_int 4 [0x4]))) verify.c:101 -1
     (nil))

;; # DEBUG sz => _641

(debug_insn 3054 3053 0 (var_location:DI sz (const_int 0 [0])) verify.c:101 -1
     (nil))
;; # DEBUG n => _641

(debug_insn 3055 3054 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; seen_edge_794 = malloc (_641);

(insn 3056 3055 3057 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) generator/utils.c:32 -1
     (nil))

(call_insn 3057 3056 3058 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(insn 3058 3057 3059 (set (reg/f:DI 1693)
        (reg:DI 0 x0)) generator/utils.c:32 -1
     (expr_list:REG_NOALIAS (reg/f:DI 1693)
        (nil)))

(insn 3059 3058 0 (set (reg/v/f:DI 746 [ seen_edge ])
        (reg/f:DI 1693)) generator/utils.c:32 -1
     (nil))

;; # DEBUG p => seen_edge_794

(debug_insn 3060 3059 0 (var_location:DI p (const_int 0 [0])) generator/utils.c:32 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (seen_edge_794 == 0B)

(insn 3061 3060 3062 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 746 [ seen_edge ])
            (const_int 0 [0]))) generator/utils.c:33 -1
     (nil))

(jump_insn 3062 3061 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/utils.c:33 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 197

;; xmalloc.part.0 (_641);

(insn 3064 3063 3065 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) -1
     (nil))

(call_insn/c/i 3065 3064 3066 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

(barrier 3066 3065 0)

;; Generating RTL for gimple basic block 198

;; 

(code_label 3067 3066 3068 135 "" [0 uses])

(note 3068 3067 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG n => NULL

(debug_insn 3069 3068 0 (var_location:DI n (const_int 0 [0])) xalloc.c:104 -1
     (nil))
;; # DEBUG p => NULL

(debug_insn 3070 3069 0 (var_location:DI p (const_int 0 [0])) xalloc.c:104 -1
     (nil))
;; # DEBUG sz => NULL

(debug_insn 3071 3070 0 (var_location:DI sz (const_int 0 [0])) verify.c:101 -1
     (nil))
;; # DEBUG seen_edge => NULL

(debug_insn 3072 3071 0 (var_location:DI seen_edge (const_int 0 [0])) verify.c:101 -1
     (nil))
;; level_644 = seen_edge_794 + _643;

(insn 3073 3072 3074 (set (reg:DI 1694 [ D.3802 ])
        (ashift:DI (reg:DI 665 [ D.3802 ])
            (const_int 3 [0x3]))) verify.c:102 -1
     (nil))

(insn 3074 3073 0 (set (reg/v/f:DI 668 [ level ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1694 [ D.3802 ]))) verify.c:102 -1
     (nil))

;; # DEBUG level => level_644

(debug_insn 3075 3074 0 (var_location:DI level (const_int 0 [0])) verify.c:102 -1
     (nil))
;; # DEBUG level => level_644

(debug_insn 3076 3075 0 (var_location:DI level (const_int 0 [0])) verify.c:102 -1
     (nil))
;; # DEBUG nv => nv_635

(debug_insn 3077 3076 0 (var_location:DI nv (const_int 0 [0])) verify.c:102 -1
     (nil))
;; # DEBUG bfs_tree => bfs_tree_622

(debug_insn 3078 3077 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:102 -1
     (nil))
;; # DEBUG root => _575

(debug_insn 3079 3078 0 (var_location:DI root (const_int 0 [0])) verify.c:102 -1
     (nil))
;; # DEBUG k => 0

(debug_insn 3080 3079 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (nv_635 > 0)

(insn 3081 3080 3082 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:27 -1
     (nil))

(jump_insn 3082 3081 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:27 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 199
Swap operands in stmt:
prolog_loop_niters.31_782 = MIN_EXPR <niters.29_648, _1407>;
Cost left opnd=0, right opnd=4

;; _649 = (unsigned long) _574;

(insn 3084 3083 0 (set (reg:DI 671 [ D.3810 ])
        (reg:DI 623 [ D.3798 ])) -1
     (nil))
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; niters.29_648 = _649 + 1;

(insn 3085 3084 0 (set (reg:DI 670 [ niters.29 ])
        (plus:DI (reg:DI 671 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; ivtmp.84_1426 = (unsigned long) level_644;

(insn 3086 3085 0 (set (reg:DI 672 [ ivtmp.84 ])
        (reg/v/f:DI 668 [ level ])) -1
     (nil))
(const_int 15 [0xf])

Hot cost: 4 (final)
(const_int 15 [0xf])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; prolog_loop_niters.31_782 = MIN_EXPR <_1407, niters.29_648>;

(insn 3087 3086 3088 (set (reg:DI 1695 [ D.3810 ])
        (and:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 15 [0xf]))) -1
     (nil))

(insn 3088 3087 3089 (set (reg:DI 1696 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1695 [ D.3810 ])
            (const_int 3 [0x3]))) -1
     (nil))

(insn 3089 3088 3090 (set (reg:DI 1697 [ D.3810 ])
        (neg:DI (reg:DI 1696 [ D.3810 ]))) -1
     (nil))

(insn 3090 3089 3091 (set (reg:DI 1698 [ D.3810 ])
        (and:DI (reg:DI 1697 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3091 3090 3092 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1698 [ D.3810 ])
            (reg:DI 670 [ niters.29 ]))) -1
     (nil))

(insn 3092 3091 0 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 1698 [ D.3810 ])
            (reg:DI 670 [ niters.29 ]))) -1
     (nil))
(const_int 3 [0x3])

Hot cost: 4 (final)

;; if (niters.29_648 <= 3)

(insn 3093 3092 3094 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 670 [ niters.29 ])
            (const_int 3 [0x3]))) -1
     (nil))

(jump_insn 3094 3093 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil)))

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; 

(code_label 3096 3095 3097 137 "" [0 uses])

(note 3097 3096 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Hot cost: 0 (final)

;; if (prologue_after_cost_adjust.32_780 == 0)

(insn 3098 3097 3099 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 3099 3098 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil)))

;; Generating RTL for gimple basic block 202

;; # DEBUG k => 0

(debug_insn 3101 3100 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; *level_644 = _738;

(insn 3102 3101 3103 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 0 [0]))) verify.c:28 -1
     (nil))

(insn 3103 3102 3104 (set (reg:SI 1700)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))

(insn 3104 3103 3105 (set (reg:DI 1699 [ D.3809 ])
        (zero_extend:DI (reg:SI 1700))) verify.c:28 -1
     (nil))

(insn 3105 3104 3106 (set (reg:DI 1701 [ D.3798 ])
        (neg:DI (reg:DI 1699 [ D.3809 ]))) verify.c:28 -1
     (nil))

(insn 3106 3105 0 (set (mem:DI (reg/v/f:DI 668 [ level ]) [4 *level_644+0 S8 A64])
        (reg:DI 1701 [ D.3798 ])) verify.c:28 -1
     (nil))

;; # DEBUG k => 1

(debug_insn 3107 3106 0 (var_location:DI k (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => 1

(debug_insn 3108 3107 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)

;; if (prologue_after_cost_adjust.32_780 != 1)

(insn 3109 3108 3110 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 1 [0x1]))) -1
     (nil))

(jump_insn 3110 3109 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3333 (nil)))

;; Generating RTL for gimple basic block 203

;; # DEBUG k => 1

(debug_insn 3112 3111 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; MEM[(int64_t *)level_644 + 8B] = _1404;

(insn 3113 3112 3114 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:28 -1
     (nil))

(insn 3114 3113 3115 (set (reg:SI 1703)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))

(insn 3115 3114 3116 (set (reg:DI 1702 [ D.3809 ])
        (zero_extend:DI (reg:SI 1703))) verify.c:28 -1
     (nil))

(insn 3116 3115 3117 (set (reg:DI 1704 [ D.3798 ])
        (neg:DI (reg:DI 1702 [ D.3809 ]))) verify.c:28 -1
     (nil))

(insn 3117 3116 0 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 8 [0x8])) [4 MEM[(int64_t *)level_644 + 8B]+0 S8 A64])
        (reg:DI 1704 [ D.3798 ])) verify.c:28 -1
     (nil))

;; # DEBUG k => 2

(debug_insn 3118 3117 0 (var_location:DI k (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => 2

(debug_insn 3119 3118 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))(const_int 3 [0x3])

Hot cost: 4 (final)

;; if (prologue_after_cost_adjust.32_780 == 3)

(insn 3120 3119 3121 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 3 [0x3]))) -1
     (nil))

(jump_insn 3121 3120 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3333 (nil)))

;; Generating RTL for gimple basic block 204

;; # DEBUG k => 2

(debug_insn 3123 3122 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; MEM[(int64_t *)level_644 + 16B] = _1268;

(insn 3124 3123 3125 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 2 [0x2]))) verify.c:28 -1
     (nil))

(insn 3125 3124 3126 (set (reg:SI 1706)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))

(insn 3126 3125 3127 (set (reg:DI 1705 [ D.3809 ])
        (zero_extend:DI (reg:SI 1706))) verify.c:28 -1
     (nil))

(insn 3127 3126 3128 (set (reg:DI 1707 [ D.3798 ])
        (neg:DI (reg:DI 1705 [ D.3809 ]))) verify.c:28 -1
     (nil))

(insn 3128 3127 0 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 16 [0x10])) [4 MEM[(int64_t *)level_644 + 16B]+0 S8 A64])
        (reg:DI 1707 [ D.3798 ])) verify.c:28 -1
     (nil))

;; # DEBUG k => 3

(debug_insn 3129 3128 0 (var_location:DI k (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => 3

(debug_insn 3130 3129 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 205

;; 

(code_label 3131 3130 3132 139 "" [0 uses])

(note 3132 3131 0 NOTE_INSN_BASIC_BLOCK)

;; if (niters.29_648 == prologue_after_cost_adjust.32_780)

(insn 3133 3132 3134 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))

(jump_insn 3134 3133 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil)))

;; Generating RTL for gimple basic block 206

;; 

(code_label 3135 3134 3136 138 "" [0 uses])

(note 3136 3135 0 NOTE_INSN_BASIC_BLOCK)

;; niters.33_1004 = niters.29_648 - prologue_after_cost_adjust.32_780;

(insn 3137 3136 0 (set (reg:DI 754 [ niters.33 ])
        (minus:DI (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))
(const_int -2 [0xfffffffffffffffe])

Hot cost: 4 (final)
(const_int -2 [0xfffffffffffffffe])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; bnd.34_962 = _1325 + 1;

(insn 3138 3137 3139 (set (reg:DI 1708 [ D.3810 ])
        (plus:DI (reg:DI 754 [ niters.33 ])
            (const_int -2 [0xfffffffffffffffe]))) -1
     (nil))

(insn 3139 3138 3140 (set (reg:DI 1709 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1708 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3140 3139 0 (set (reg:DI 753 [ bnd.34 ])
        (plus:DI (reg:DI 1709 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; ratio_mult_vf.35_1337 = bnd.34_962 << 1;

(insn 3141 3140 0 (set (reg:DI 799 [ ratio_mult_vf.35 ])
        (ashift:DI (reg:DI 753 [ bnd.34 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; if (_649 == prologue_after_cost_adjust.32_780)

(insn 3142 3141 3143 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 671 [ D.3810 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))

(jump_insn 3143 3142 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil)))

;; Generating RTL for gimple basic block 207
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; vect_cst_.38_1350 = {k_1365, stmp_var_.37_1340};

(insn 3145 3144 3146 (set (reg:DI 1711 [ stmp_var_.37 ])
        (plus:DI (reg/v:DI 806 [ k ])
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3146 3145 3147 (set (reg:DI 1712)
        (reg/v:DI 806 [ k ])) -1
     (nil))

(insn 3147 3146 3148 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1712))
            (reg:V2DI 1710)
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3148 3147 3149 (set (reg:DI 1713)
        (reg:DI 1711 [ stmp_var_.37 ])) -1
     (nil))

(insn 3149 3148 3150 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1713))
            (reg:V2DI 1710)
            (const_int 2 [0x2]))) -1
     (nil))

(insn 3150 3149 0 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 1710)) -1
     (nil))

;; vect_cst_.42_1339 = {_575, _575};

(insn 3151 3150 3152 (set (reg:DI 1715)
        (reg:DI 624 [ D.3798 ])) -1
     (nil))

(insn 3152 3151 3153 (set (reg:V2DI 1714)
        (vec_duplicate:V2DI (reg:DI 1715))) -1
     (nil))

(insn 3153 3152 0 (set (reg:V2DI 800 [ vect_cst_.42 ])
        (reg:V2DI 1714)) -1
     (nil))

;; vectp.48_1271 = seen_edge_794 + _1265;

(insn 3154 3153 3155 (set (reg:DI 1716 [ D.3802 ])
        (plus:DI (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))

(insn 3155 3154 3156 (set (reg:DI 1717 [ D.3802 ])
        (ashift:DI (reg:DI 1716 [ D.3802 ])
            (const_int 3 [0x3]))) -1
     (nil))

(insn 3156 3155 0 (set (reg/f:DI 782 [ vectp.48 ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1717 [ D.3802 ]))) -1
     (nil))

;; Generating RTL for gimple basic block 208

Failed to cost RTX.  Assuming default cost.
(const_vector:V2DI [
        (const_int 2 [0x2])
        (const_int 2 [0x2])
    ])

Hot cost: 4 (final)

Failed to cost RTX.  Assuming default cost.
(const_vector:V2DI [
        (const_int 2 [0x2])
        (const_int 2 [0x2])
    ])

Hot cost: 4 (final)

;; vect_vec_iv_.40_1327 = vect_vec_iv_.40_1314 + { 2, 2 };

(insn 3158 3157 3159 (set (reg:V2DI 1718)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 2 [0x2])
                (const_int 2 [0x2])
            ])
        (nil)))

(insn 3159 3158 0 (set (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (plus:V2DI (reg:V2DI 770 [ vect_vec_iv_.40 ])
            (reg:V2DI 1718))) -1
     (nil))

;; # DEBUG k => NULL

(debug_insn 3160 3159 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; MEM[base: vectp.48_1271, index: _743, offset: 0B] = vect__599.46_1273;

(insn 3161 3160 3162 (set (reg:DI 1719 [ D.3805 ])
        (ashift:DI (reg:DI 776 [ D.3810 ])
            (const_int 4 [0x4]))) verify.c:28 -1
     (nil))

(insn 3162 3161 3163 (set (reg:V2DI 1721)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 1 [0x1])
                (const_int 1 [0x1])
            ])
        (nil)))

(insn 3163 3162 3164 (set (reg:V2DI 1722)
        (neg:V2DI (eq:V2DI (reg:V2DI 800 [ vect_cst_.42 ])
                (reg:V2DI 770 [ vect_vec_iv_.40 ])))) -1
     (nil))

(insn 3164 3163 3165 (set (reg:V2DI 1723)
        (const_vector:V2DI [
                (const_int 0 [0])
                (const_int 0 [0])
            ])) -1
     (nil))

(insn 3165 3164 3166 (set (reg:V2DI 1720 [ vect_patt_839.41 ])
        (xor:V2DI (and:V2DI (xor:V2DI (reg:V2DI 1721)
                    (reg:V2DI 1723))
                (reg:V2DI 1722))
            (reg:V2DI 1721))) -1
     (nil))

(insn 3166 3165 3167 (set (reg:V2DI 1724 [ vect__599.46 ])
        (neg:V2DI (reg:V2DI 1720 [ vect_patt_839.41 ]))) verify.c:28 -1
     (nil))

(insn 3167 3166 0 (set (mem:V2DI (plus:DI (reg/f:DI 782 [ vectp.48 ])
                (reg:DI 1719 [ D.3805 ])) [4 MEM[base: vectp.48_1271, index: _743, offset: 0B]+0 S16 A128])
        (reg:V2DI 1724 [ vect__599.46 ])) verify.c:28 -1
     (nil))

;; # DEBUG k => D#41

(debug_insn 3168 3167 0 (var_location:DI k (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => D#41

(debug_insn 3169 3168 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; _1259 = _1260 + 1;

(insn 3170 3169 0 (set (reg:DI 776 [ D.3810 ])
        (plus:DI (reg:DI 776 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; vect_vec_iv_.40_1202 = vect_vec_iv_.40_1327;

(insn 3171 3170 0 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 795 [ vect_vec_iv_.40 ])) -1
     (nil))

;; if (bnd.34_962 > _1259)

(insn 3173 3171 3174 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 753 [ bnd.34 ])
            (reg:DI 776 [ D.3810 ]))) -1
     (nil))

(jump_insn 3174 3173 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3172)
            (pc))) -1
     (int_list:REG_BR_PROB 8000 (nil)))

;; Generating RTL for gimple basic block 209

;; k_1360 = _1315 + k_1365;

(insn 3176 3175 0 (set (reg/v:DI 806 [ k ])
        (plus:DI (reg/v:DI 806 [ k ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))

;; if (niters.33_1004 == ratio_mult_vf.35_1337)

(insn 3177 3176 3178 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 754 [ niters.33 ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))

(jump_insn 3178 3177 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil)))

;; Generating RTL for gimple basic block 210

;; 

(code_label 3179 3178 3180 141 "" [0 uses])

(note 3180 3179 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG k => k_1352

(debug_insn 3181 3180 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; *_1336 = _1362;

(insn 3182 3181 3183 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 806 [ k ]))) verify.c:28 -1
     (nil))

(insn 3183 3182 3184 (set (reg:SI 1726)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))

(insn 3184 3183 3185 (set (reg:DI 1725 [ D.3809 ])
        (zero_extend:DI (reg:SI 1726))) verify.c:28 -1
     (nil))

(insn 3185 3184 3186 (set (reg:DI 1727 [ D.3798 ])
        (neg:DI (reg:DI 1725 [ D.3809 ]))) verify.c:28 -1
     (nil))

(insn 3186 3185 0 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 806 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 668 [ level ])) [4 *_1336+0 S8 A64])
        (reg:DI 1727 [ D.3798 ])) verify.c:28 -1
     (nil))

;; # DEBUG D#44 => k_1352 + 1

(debug_insn 3187 3186 0 (var_location:DI D#44 (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => D#44

(debug_insn 3188 3187 0 (var_location:DI k (const_int 0 [0])) verify.c:27 -1
     (nil))
;; # DEBUG k => D#44

(debug_insn 3189 3188 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 211

;; 

(code_label 3190 3189 3191 143 "" [0 uses])

(note 3191 3190 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 212

;; 

(code_label 3192 3191 3193 140 "" [0 uses])

(note 3193 3192 0 NOTE_INSN_BASIC_BLOCK)

;; _654 = (long int) niters.29_648;

(insn 3194 3193 0 (set (reg:DI 673 [ D.3798 ])
        (reg:DI 670 [ niters.29 ])) -1
     (nil))

;; Generating RTL for gimple basic block 213

;; # DEBUG k => parent_1089

(debug_insn 3196 3195 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_1084

(debug_insn 3197 3196 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; _745 = (int64_t *) ivtmp.84_785;

(insn 3198 3197 0 (set (reg/f:DI 724 [ D.3812 ])
        (reg:DI 672 [ ivtmp.84 ])) verify.c:32 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_746 >= 0)

(insn 3199 3198 3200 (set (reg:DI 1728)
        (mem:DI (reg/f:DI 724 [ D.3812 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:32 -1
     (nil))

(insn 3200 3199 3201 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1728)
            (const_int 0 [0]))) verify.c:32 -1
     (nil))

(jump_insn 3201 3200 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:32 -1
     (int_list:REG_BR_PROB 7300 (nil)))

;; Generating RTL for gimple basic block 214

;; # DEBUG terr => err_1084

(debug_insn 3203 3202 0 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_1084 == 0)

(insn 3204 3203 3205 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:34 -1
     (nil))

(jump_insn 3205 3204 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:34 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 215

;; # DEBUG terr => err_1084

(debug_insn 3207 3206 0 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
;; # DEBUG terr => 0

(debug_insn 3208 3207 0 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
;; _749 = MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B];

(insn 3209 3208 0 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 745 [ parent ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B]+0 S8 A64])) verify.c:34 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_324 != 0)

(insn 3210 3209 3211 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:34 -1
     (nil))

(insn 3211 3210 3212 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DNE 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 809 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:34 -1
     (nil))

(insn 3212 3211 3213 (set:SI (reg:SI 1730)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:34 -1
     (nil))

(insn 3213 3212 3214 (set (reg:QI 1729 [ D.3809 ])
        (subreg:QI (reg:SI 1730) 0)) verify.c:34 -1
     (nil))

(insn 3214 3213 3215 (set (reg:SI 1731)
        (zero_extend:SI (reg:QI 1729 [ D.3809 ]))) verify.c:34 -1
     (nil))

(insn 3215 3214 3216 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1731)
            (const_int 0 [0]))) verify.c:34 -1
     (nil))

(jump_insn 3216 3215 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:34 -1
     (int_list:REG_BR_PROB 2 (nil)))

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; parent_341 = parent_1334;

(insn 3221 3220 0 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) -1
     (nil))

;; parent_514 = _1333;

(insn 3222 3221 0 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 218

;; 

(code_label 3223 3222 3224 147 "" [0 uses])

(note 3224 3223 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nhop => nhop_556

(debug_insn 3225 3224 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => parent_968

(debug_insn 3226 3225 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#28 => *D#40

(debug_insn 3227 3226 0 (var_location:DI D#28 (const_int 0 [0])) verify.c:39 -1
     (nil))
;; if (parent_968 == parent_1334)

(insn 3228 3227 3229 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 -1
     (nil))

(jump_insn 3229 3228 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:39 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 219
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 39 [0x27])

Cold cost: 4 (final)

;; __assert_fail ("parent != bfs_tree[parent]", "verify.c", 39, &__PRETTY_FUNCTION__);

(insn 3231 3230 3232 (set (reg:DI 1733)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 -1
     (nil))

(insn 3232 3231 3233 (set (reg/f:DI 1732)
        (lo_sum:DI (reg:DI 1733)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 3233 3232 3234 (set (reg:DI 1734)
        (reg/f:DI 1732)) verify.c:39 -1
     (nil))

(insn 3234 3233 3235 (set (reg/f:DI 1735)
        (plus:DI (reg/f:DI 1732)
            (const_int 48 [0x30]))) verify.c:39 -1
     (nil))

(insn 3235 3234 3236 (set (reg:DI 1737)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 -1
     (nil))

(insn 3236 3235 3237 (set (reg/f:DI 1736)
        (lo_sum:DI (reg:DI 1737)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))

(insn 3237 3236 3238 (set (reg:DI 1739)
        (high:DI (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 -1
     (nil))

(insn 3238 3237 3239 (set (reg/f:DI 1738)
        (lo_sum:DI (reg:DI 1739)
            (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>)
        (nil)))

(insn 3239 3238 3240 (set (reg:DI 3 x3)
        (reg/f:DI 1735)) verify.c:39 -1
     (nil))

(insn 3240 3239 3241 (set (reg:SI 2 x2)
        (const_int 39 [0x27])) verify.c:39 -1
     (nil))

(insn 3241 3240 3242 (set (reg:DI 1 x1)
        (reg/f:DI 1736)) verify.c:39 -1
     (nil))

(insn 3242 3241 3243 (set (reg:DI 0 x0)
        (reg/f:DI 1738)) verify.c:39 -1
     (nil))

(call_insn 3243 3242 3244 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 3244 3243 0)

;; Generating RTL for gimple basic block 220

;; 

(code_label 3245 3244 3246 148 "" [0 uses])

(note 3246 3245 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG parent => D#28

(debug_insn 3247 3246 0 (var_location:DI parent (const_int 0 [0])) verify.c:40 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; nhop_755 = nhop_556 + 1;

(insn 3248 3247 0 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 -1
     (nil))

;; # DEBUG nhop => nhop_755

(debug_insn 3249 3248 0 (var_location:DI nhop (const_int 0 [0])) verify.c:41 -1
     (nil))
;; # DEBUG nhop => nhop_755

(debug_insn 3250 3249 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => D#28

(debug_insn 3251 3250 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (parent_1334 >= 0)

(insn 3252 3251 3253 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 -1
     (nil))

(jump_insn 3253 3252 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:38 -1
     (int_list:REG_BR_PROB 241 (nil)))

;; Generating RTL for gimple basic block 221

;; # DEBUG nhop => nhop_755

(debug_insn 3255 3254 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => D#28

(debug_insn 3256 3255 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; # DEBUG nhop => nhop_755

(debug_insn 3257 3256 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => D#28

(debug_insn 3258 3257 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; _750 = _756 * 8;

(insn 3259 3258 0 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 -1
     (nil))

;; _758 = *_757;

(insn 3260 3259 0 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1118 != 0)

(insn 3262 3260 3263 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 -1
     (nil))

(insn 3263 3262 3264 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 -1
     (nil))

(insn 3264 3263 3265 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 -1
     (nil))

(insn 3265 3264 3266 (set (reg:QI 1740 [ D.3809 ])
        (subreg:QI (reg:SI 1741) 0)) verify.c:38 -1
     (nil))

(insn 3266 3265 3267 (set (reg:SI 1742)
        (zero_extend:SI (reg:QI 1740 [ D.3809 ]))) verify.c:38 -1
     (nil))

(insn 3267 3266 3268 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742)
            (const_int 0 [0]))) verify.c:38 -1
     (nil))

(jump_insn 3268 3267 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 -1
     (int_list:REG_BR_PROB 9752 (nil)))

;; Generating RTL for gimple basic block 222

;; # DEBUG D#49 => nv_635 <= nhop_755

(debug_insn 3270 3269 0 (var_location:QI D#49 (const_int 0 [0])) verify.c:43 -1
     (nil))
;; # DEBUG D#48 => (int) D#49

(debug_insn 3271 3270 0 (var_location:SI D#48 (const_int 0 [0])) verify.c:43 -1
     (nil))
;; # DEBUG D#47 => -D#48

(debug_insn 3272 3271 0 (var_location:SI D#47 (const_int 0 [0])) verify.c:43 -1
     (nil))
;; # DEBUG terr => D#47

(debug_insn 3273 3272 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG terr => D#47

(debug_insn 3274 3273 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; if (nv_635 > nhop_755)

(insn 3275 3274 3276 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (reg/v:DI 609 [ nhop ]))) verify.c:46 -1
     (nil))

(jump_insn 3276 3275 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:46 -1
     (int_list:REG_BR_PROB 3154 (nil)))

;; Generating RTL for gimple basic block 223

;; nhop_764 = nhop_755 + _758;

(insn 3278 3277 0 (set (reg/v:DI 733 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (reg:DI 731 [ D.3798 ]))) verify.c:49 -1
     (nil))

;; # DEBUG nhop => nhop_764

(debug_insn 3279 3278 0 (var_location:DI nhop (const_int 0 [0])) verify.c:49 -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3280 3279 0 (var_location:DI parent (const_int 0 [0])) verify.c:50 -1
     (nil))
;; # DEBUG nhop => nhop_764

(debug_insn 3281 3280 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3282 3281 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (nhop_764 <= 0)

(insn 3283 3282 3284 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 733 [ nhop ])
            (const_int 0 [0]))) verify.c:52 -1
     (nil))

(jump_insn 3284 3283 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:52 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; 

(code_label 3288 3287 3289 150 "" [0 uses])

(note 3289 3288 0 NOTE_INSN_BASIC_BLOCK)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 52 [0x34])

Cold cost: 4 (final)

;; __assert_fail ("nhop > 0", "verify.c", 52, &__PRETTY_FUNCTION__);

(insn 3290 3289 3291 (set (reg:DI 1744)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 -1
     (nil))

(insn 3291 3290 3292 (set (reg/f:DI 1743)
        (lo_sum:DI (reg:DI 1744)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 3292 3291 3293 (set (reg:DI 1745)
        (reg/f:DI 1743)) verify.c:52 -1
     (nil))

(insn 3293 3292 3294 (set (reg/f:DI 1746)
        (plus:DI (reg/f:DI 1743)
            (const_int 48 [0x30]))) verify.c:52 -1
     (nil))

(insn 3294 3293 3295 (set (reg:DI 1748)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 -1
     (nil))

(insn 3295 3294 3296 (set (reg/f:DI 1747)
        (lo_sum:DI (reg:DI 1748)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))

(insn 3296 3295 3297 (set (reg:DI 1750)
        (high:DI (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 -1
     (nil))

(insn 3297 3296 3298 (set (reg/f:DI 1749)
        (lo_sum:DI (reg:DI 1750)
            (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>)
        (nil)))

(insn 3298 3297 3299 (set (reg:DI 3 x3)
        (reg/f:DI 1746)) verify.c:52 -1
     (nil))

(insn 3299 3298 3300 (set (reg:SI 2 x2)
        (const_int 52 [0x34])) verify.c:52 -1
     (nil))

(insn 3300 3299 3301 (set (reg:DI 1 x1)
        (reg/f:DI 1747)) verify.c:52 -1
     (nil))

(insn 3301 3300 3302 (set (reg:DI 0 x0)
        (reg/f:DI 1749)) verify.c:52 -1
     (nil))

(call_insn 3302 3301 3303 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:52 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 3303 3302 0)

;; Generating RTL for gimple basic block 226
(const_int 0 [0])

Hot cost: 0 (final)

;; if (nhop_766 == 0)

(insn 3305 3304 3306 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 -1
     (nil))

(jump_insn 3306 3305 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 227

;; _1347 = MEM[(const int64_t *)_1346];

(insn 3308 3307 0 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) -1
     (nil))

;; nhop_1249 = nhop_766;

(nil)

;; Generating RTL for gimple basic block 228

;; 

(code_label 3309 3308 3310 151 "" [0 uses])

(note 3310 3309 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nhop => nhop_1083

(debug_insn 3311 3310 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3312 3311 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)
(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)

;; nhop_766 = nhop_1083 + -1;

(insn 3313 3312 0 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 -1
     (nil))

;; # DEBUG nhop => nhop_766

(debug_insn 3314 3313 0 (var_location:DI nhop (const_int 0 [0])) verify.c:53 -1
     (nil))
;; *_363 = nhop_1083;

(insn 3315 3314 0 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 -1
     (nil))

;; # DEBUG D#27 => *D#39

(debug_insn 3316 3315 0 (var_location:DI D#27 (const_int 0 [0])) verify.c:54 -1
     (nil))
;; # DEBUG parent => D#27

(debug_insn 3317 3316 0 (var_location:DI parent (const_int 0 [0])) verify.c:54 -1
     (nil))
;; # DEBUG nhop => nhop_766

(debug_insn 3318 3317 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => D#27

(debug_insn 3319 3318 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; _768 = _772 * 8;

(insn 3320 3319 0 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 -1
     (nil))

;; _767 = level_644 + _768;

(insn 3321 3320 0 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 -1
     (nil))

;; _773 = *_767;

(insn 3322 3321 0 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_773 < 0)

(insn 3324 3322 3325 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 -1
     (nil))

(jump_insn 3325 3324 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 -1
     (int_list:REG_BR_PROB 9550 (nil)))

;; Generating RTL for gimple basic block 229

;; if (nhop_766 != _773)

(insn 3327 3326 3328 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (reg:DI 737 [ D.3798 ]))) verify.c:56 -1
     (nil))

(jump_insn 3328 3327 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:56 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 230
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 56 [0x38])

Cold cost: 4 (final)

;; __assert_fail ("nhop == level[parent]", "verify.c", 56, &__PRETTY_FUNCTION__);

(insn 3330 3329 3331 (set (reg:DI 1752)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 -1
     (nil))

(insn 3331 3330 3332 (set (reg/f:DI 1751)
        (lo_sum:DI (reg:DI 1752)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 3332 3331 3333 (set (reg:DI 1753)
        (reg/f:DI 1751)) verify.c:56 -1
     (nil))

(insn 3333 3332 3334 (set (reg/f:DI 1754)
        (plus:DI (reg/f:DI 1751)
            (const_int 48 [0x30]))) verify.c:56 -1
     (nil))

(insn 3334 3333 3335 (set (reg:DI 1756)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 -1
     (nil))

(insn 3335 3334 3336 (set (reg/f:DI 1755)
        (lo_sum:DI (reg:DI 1756)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))

(insn 3336 3335 3337 (set (reg:DI 1758)
        (high:DI (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 -1
     (nil))

(insn 3337 3336 3338 (set (reg/f:DI 1757)
        (lo_sum:DI (reg:DI 1758)
            (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>)
        (nil)))

(insn 3338 3337 3339 (set (reg:DI 3 x3)
        (reg/f:DI 1754)) verify.c:56 -1
     (nil))

(insn 3339 3338 3340 (set (reg:SI 2 x2)
        (const_int 56 [0x38])) verify.c:56 -1
     (nil))

(insn 3340 3339 3341 (set (reg:DI 1 x1)
        (reg/f:DI 1755)) verify.c:56 -1
     (nil))

(insn 3341 3340 3342 (set (reg:DI 0 x0)
        (reg/f:DI 1757)) verify.c:56 -1
     (nil))

(call_insn 3342 3341 3343 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:56 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 3343 3342 0)

;; Generating RTL for gimple basic block 231

;; 

(code_label 3344 3343 3345 153 "" [0 uses])

(note 3345 3344 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nhop => 0

(debug_insn 3346 3345 0 (var_location:DI nhop (const_int 0 [0])) verify.c:60 -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3347 3346 0 (var_location:DI parent (const_int 0 [0])) verify.c:61 -1
     (nil))
;; lastlvl_774 = MEM[base: _745, offset: 0B];

(insn 3348 3347 0 (set (reg/v:DI 738 [ lastlvl ])
        (mem:DI (reg/f:DI 724 [ D.3812 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:62 -1
     (nil))

;; # DEBUG D#23 => lastlvl_774 + 1

(debug_insn 3349 3348 0 (var_location:DI D#23 (const_int 0 [0])) verify.c:62 -1
     (nil))
;; # DEBUG lastlvl => D#23

(debug_insn 3350 3349 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:62 -1
     (nil))
;; # DEBUG lastlvl => D#23

(debug_insn 3351 3350 0 (var_location:DI lastlvl (const_int 0 [0])) -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3352 3351 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3353 3352 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (lastlvl_774 > 0)

(insn 3354 3353 3355 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 738 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 -1
     (nil))

(jump_insn 3355 3354 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:63 -1
     (int_list:REG_BR_PROB 450 (nil)))

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; if (_777 != lastlvl_1142)

(insn 3360 3359 3361 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 -1
     (nil))

(insn 3361 3360 3362 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 -1
     (nil))

(jump_insn 3362 3361 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:64 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 234

;; _1355 = MEM[(const int64_t *)_1354];

(insn 3364 3363 0 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) -1
     (nil))

;; lastlvl_1341 = lastlvl_776;

(nil)

;; Generating RTL for gimple basic block 235

;; 

(code_label 3367 3366 3368 155 "" [0 uses])

(note 3368 3367 0 NOTE_INSN_BASIC_BLOCK)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 48 [0x30])

Cold cost: 4 (final)
(const_int 64 [0x40])

Cold cost: 4 (final)

;; __assert_fail ("lastlvl == 1 + level[parent]", "verify.c", 64, &__PRETTY_FUNCTION__);

(insn 3369 3368 3370 (set (reg:DI 1761)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 -1
     (nil))

(insn 3370 3369 3371 (set (reg/f:DI 1760)
        (lo_sum:DI (reg:DI 1761)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 3371 3370 3372 (set (reg:DI 1762)
        (reg/f:DI 1760)) verify.c:64 -1
     (nil))

(insn 3372 3371 3373 (set (reg/f:DI 1763)
        (plus:DI (reg/f:DI 1760)
            (const_int 48 [0x30]))) verify.c:64 -1
     (nil))

(insn 3373 3372 3374 (set (reg:DI 1765)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 -1
     (nil))

(insn 3374 3373 3375 (set (reg/f:DI 1764)
        (lo_sum:DI (reg:DI 1765)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))

(insn 3375 3374 3376 (set (reg:DI 1767)
        (high:DI (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 -1
     (nil))

(insn 3376 3375 3377 (set (reg/f:DI 1766)
        (lo_sum:DI (reg:DI 1767)
            (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>)
        (nil)))

(insn 3377 3376 3378 (set (reg:DI 3 x3)
        (reg/f:DI 1763)) verify.c:64 -1
     (nil))

(insn 3378 3377 3379 (set (reg:SI 2 x2)
        (const_int 64 [0x40])) verify.c:64 -1
     (nil))

(insn 3379 3378 3380 (set (reg:DI 1 x1)
        (reg/f:DI 1764)) verify.c:64 -1
     (nil))

(insn 3380 3379 3381 (set (reg:DI 0 x0)
        (reg/f:DI 1766)) verify.c:64 -1
     (nil))

(call_insn 3381 3380 3382 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:64 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))

(barrier 3382 3381 0)

;; Generating RTL for gimple basic block 236

;; 

(code_label 3383 3382 3384 154 "" [0 uses])

(note 3384 3383 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nhop => NULL

(debug_insn 3385 3384 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => parent_1089

(debug_insn 3386 3385 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; # DEBUG lastlvl => lastlvl_1142

(debug_insn 3387 3386 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:65 -1
     (nil))
;; # DEBUG D#26 => *D#38

(debug_insn 3388 3387 0 (var_location:DI D#26 (const_int 0 [0])) verify.c:66 -1
     (nil))
;; # DEBUG parent => D#26

(debug_insn 3389 3388 0 (var_location:DI parent (const_int 0 [0])) verify.c:66 -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3390 3389 0 (var_location:DI nhop (const_int 0 [0])) verify.c:67 -1
     (nil))
;; # DEBUG lastlvl => lastlvl_1142

(debug_insn 3391 3390 0 (var_location:DI lastlvl (const_int 0 [0])) -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3392 3391 0 (var_location:DI nhop (const_int 0 [0])) -1
     (nil))
;; # DEBUG parent => D#26

(debug_insn 3393 3392 0 (var_location:DI parent (const_int 0 [0])) -1
     (nil))
;; _779 = _783 * 8;

(insn 3394 3393 0 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 -1
     (nil))

;; lastlvl_776 = *_784;

(insn 3395 3394 0 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (lastlvl_776 > 0)

(insn 3397 3395 3398 236 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 -1
     (nil))

(jump_insn 3398 3397 3401 236 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 -1
     (int_list:REG_BR_PROB 9550 (nil)))

(note 3401 3398 3399 295 [bb 295] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3399 3401 3400 295 (set (pc)
        (label_ref 0)) verify.c:63 -1
     (nil))

(barrier 3400 3399 0)

;; Generating RTL for gimple basic block 237

;; 

(code_label 3402 3400 3403 144 "" [0 uses])

(note 3403 3402 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_792

(debug_insn 3404 3403 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; parent_786 = parent_1089 + 1;

(insn 3405 3404 0 (set (reg/v:DI 745 [ parent ])
        (plus:DI (reg/v:DI 745 [ parent ])
            (const_int 1 [0x1]))) verify.c:31 -1
     (nil))

;; # DEBUG k => parent_786

(debug_insn 3406 3405 0 (var_location:DI k (const_int 0 [0])) verify.c:31 -1
     (nil))
;; # DEBUG k => parent_786

(debug_insn 3407 3406 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_792

(debug_insn 3408 3407 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 8 [0x8])

Hot cost: 4 (final)
(const_int 8 [0x8])

Hot cost: 4 (final)

;; ivtmp.84_652 = ivtmp.84_785 + 8;

(insn 3409 3408 0 (set (reg:DI 672 [ ivtmp.84 ])
        (plus:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 8 [0x8]))) -1
     (nil))

;; if (_654 != parent_786)

(insn 3411 3409 3412 237 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 673 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:31 -1
     (nil))

(jump_insn 3412 3411 3415 237 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3410)
            (pc))) verify.c:31 -1
     (int_list:REG_BR_PROB 9800 (nil)))

(note 3415 3412 3413 296 [bb 296] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3413 3415 3414 296 (set (pc)
        (label_ref 0)) verify.c:31 -1
     (nil))

(barrier 3414 3413 0)

;; Generating RTL for gimple basic block 238

;; 

(code_label 3416 3414 3417 136 "" [0 uses])

(note 3417 3416 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => 0

(debug_insn 3418 3417 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG k => 0

(debug_insn 3419 3418 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedge_traversed => 0

(debug_insn 3420 3419 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => 0

(debug_insn 3421 3420 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; _1108 = _577 * 2;

(insn 3422 3421 0 (set (reg:DI 763 [ D.3798 ])
        (ashift:DI (reg:DI 626 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:117 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1108 > 0)

(insn 3423 3422 3424 238 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 763 [ D.3798 ])
            (const_int 0 [0]))) verify.c:117 -1
     (nil))

(jump_insn 3424 3423 3427 238 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:117 -1
     (int_list:REG_BR_PROB 9100 (nil)))

(note 3427 3424 3425 297 [bb 297] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3425 3427 3426 297 (set (pc)
        (label_ref 0)) verify.c:117 -1
     (nil))

(barrier 3426 3425 0)

;; Generating RTL for gimple basic block 239

;; # DEBUG level => NULL

(debug_insn 3429 3428 0 (var_location:DI level (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3430 3429 0 (var_location:DI nv (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 3431 3430 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3432 3431 0 (var_location:DI root (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG lastlvl => NULL

(debug_insn 3433 3432 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3434 3433 0 (var_location:DI nhop (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG parent => NULL

(debug_insn 3435 3434 0 (var_location:DI parent (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3436 3435 0 (var_location:DI k (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3437 3436 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3438 3437 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3439 3438 0 (var_location:DI level (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3440 3439 0 (var_location:DI nv (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 3441 3440 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3442 3441 0 (var_location:DI root (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG lastlvl => NULL

(debug_insn 3443 3442 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3444 3443 0 (var_location:DI nhop (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG parent => NULL

(debug_insn 3445 3444 0 (var_location:DI parent (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3446 3445 0 (var_location:DI k (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3447 3446 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3448 3447 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG k => 0

(debug_insn 3449 3448 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
(const_int 0 [0])

Hot cost: 0 (final)

;; __builtin_memset (seen_edge_794, 0, _1140);

(insn 3450 3449 3451 (set (reg:DI 1769)
        (const_int 0 [0])) -1
     (nil))

(insn 3451 3450 3452 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) -1
     (nil))

(insn 3452 3451 3453 (set (reg:DI 1768 [ D.3798 ])
        (if_then_else:DI (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 623 [ D.3798 ])
            (reg:DI 1769))) -1
     (nil))

(insn 3453 3452 3454 (set (reg:DI 1770 [ D.3805 ])
        (plus:DI (reg:DI 1768 [ D.3798 ])
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3454 3453 3455 (set (reg:DI 1771 [ D.3805 ])
        (ashift:DI (reg:DI 1770 [ D.3805 ])
            (const_int 3 [0x3]))) -1
     (nil))

(insn 3455 3454 3456 (set (reg:DI 1772)
        (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))

(insn 3456 3455 3457 (set (reg:DI 1773)
        (reg:DI 1771 [ D.3805 ])) -1
     (nil))

(insn 3457 3456 3458 (set (reg:DI 2 x2)
        (reg:DI 1773)) -1
     (nil))

(insn 3458 3457 3459 (set (reg:SI 1 x1)
        (const_int 0 [0])) -1
     (nil))

(insn 3459 3458 3460 (set (reg:DI 0 x0)
        (reg:DI 1772)) -1
     (nil))

(call_insn 3460 3459 3461 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>) [0 memset S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))

(insn 3461 3460 0 (set (reg:DI 1774)
        (reg:DI 0 x0)) -1
     (nil))

;; Generating RTL for gimple basic block 240

;; 

(code_label 3464 3463 3465 159 "" [0 uses])

(note 3465 3464 0 NOTE_INSN_BASIC_BLOCK)
(const_int 8 [0x8])

Hot cost: 4 (final)
(const_int 8 [0x8])

Hot cost: 4 (final)

;; ivtmp.64_710 = (unsigned long) _708;

(insn 3466 3465 0 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (const_int 8 [0x8]))) -1
     (nil))
(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)
(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)
(const_int 24 [0x18])

Hot cost: 4 (final)
(const_int 24 [0x18])

Hot cost: 4 (final)

;; _741 = (unsigned long) _647;

(insn 3467 3466 3468 (set (reg:DI 1775 [ D.3810 ])
        (plus:DI (reg:DI 763 [ D.3798 ])
            (const_int -1 [0xffffffffffffffff]))) -1
     (nil))

(insn 3468 3467 3469 (set (reg:DI 1776 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1775 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))

(insn 3469 3468 3470 (set (reg:DI 1777 [ D.3810 ])
        (ashift:DI (reg:DI 1776 [ D.3810 ])
            (const_int 4 [0x4]))) -1
     (nil))

(insn 3470 3469 3471 (set (reg:DI 1778 [ D.3805 ])
        (plus:DI (reg:DI 1777 [ D.3810 ])
            (const_int 24 [0x18]))) -1
     (nil))

(insn 3471 3470 0 (set (reg:DI 720 [ D.3810 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (reg:DI 1778 [ D.3805 ]))) -1
     (nil))

;; Generating RTL for gimple basic block 241

;; # DEBUG terr => 0

(debug_insn 3473 3472 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3474 3473 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedge_traversed => nedge_traversed_728

(debug_insn 3475 3474 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_788

(debug_insn 3476 3475 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; _1398 = (void *) ivtmp.64_706;

(insn 3477 3476 0 (set (reg/f:DI 816 [ D.3806 ])
        (reg:DI 708 [ ivtmp.64 ])) -1
     (nil))

;; i_655 = MEM[base: _1398, offset: -8B];

(insn 3478 3477 0 (set (reg/v:DI 674 [ i ])
        (mem:DI (plus:DI (reg/f:DI 816 [ D.3806 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _1398, offset: -8B]+0 S8 A64])) verify.c:118 -1
     (nil))

;; # DEBUG i => i_655

(debug_insn 3479 3478 0 (var_location:DI i (const_int 0 [0])) verify.c:118 -1
     (nil))
;; j_659 = MEM[base: _1398, offset: 0B];

(insn 3480 3479 0 (set (reg/v:DI 675 [ j ])
        (mem:DI (reg/f:DI 816 [ D.3806 ]) [4 MEM[base: _1398, offset: 0B]+0 S8 A64])) verify.c:119 -1
     (nil))

;; # DEBUG j => j_659

(debug_insn 3481 3480 0 (var_location:DI j (const_int 0 [0])) verify.c:119 -1
     (nil))
;; # DEBUG terr => err_788

(debug_insn 3482 3481 0 (var_location:SI terr (const_int 0 [0])) verify.c:121 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_662 != 0)

(insn 3483 3482 3484 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (const_int 0 [0]))) verify.c:123 -1
     (nil))

(insn 3484 3483 3485 (set (reg:CC_DLT 66 cc)
        (compare (ior:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (lt (reg/v:DI 675 [ j ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:123 -1
     (nil))

(insn 3485 3484 3486 (set:SI (reg:SI 1780)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:123 -1
     (nil))

(insn 3486 3485 3487 (set (reg:QI 1779 [ D.3813 ])
        (subreg:QI (reg:SI 1780) 0)) verify.c:123 -1
     (nil))

(insn 3487 3486 3488 (set (reg:SI 1781)
        (zero_extend:SI (reg:QI 1779 [ D.3813 ]))) verify.c:123 -1
     (nil))

(insn 3488 3487 3489 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1781)
            (const_int 0 [0]))) verify.c:123 -1
     (nil))

(jump_insn 3489 3488 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:123 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 242
Swap operands in stmt:
_665 = _663 & _664;
Cost left opnd=0, right opnd=1

;; _663 = _574 < i_655;

(insn 3491 3490 3492 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 674 [ i ]))) verify.c:124 -1
     (nil))

(insn 3492 3491 3493 (set (reg:SI 1783)
        (lt:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))

(insn 3493 3492 3494 (set (reg:QI 1782)
        (subreg:QI (reg:SI 1783) 0)) verify.c:124 -1
     (nil))

(insn 3494 3493 0 (set (reg:SI 679 [ D.3813 ])
        (zero_extend:SI (reg:QI 1782))) verify.c:124 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_665 != 0)

(insn 3495 3494 3496 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:124 -1
     (nil))

(insn 3496 3495 3497 (set (reg:SI 1785)
        (ge:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))

(insn 3497 3496 3498 (set (reg:QI 1784 [ D.3813 ])
        (subreg:QI (reg:SI 1785) 0)) verify.c:124 -1
     (nil))

(insn 3498 3497 3499 (set (reg:SI 1786)
        (and:SI (reg:SI 679 [ D.3813 ])
            (subreg:SI (reg:QI 1784 [ D.3813 ]) 0))) verify.c:124 -1
     (nil))

(insn 3499 3498 3500 (set (reg:QI 1787)
        (subreg:QI (reg:SI 1786) 0)) verify.c:124 -1
     (nil))

(insn 3500 3499 3501 (set (reg:SI 1788)
        (zero_extend:SI (reg:QI 1787))) verify.c:124 -1
     (nil))

(insn 3501 3500 3502 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1788)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))

(jump_insn 3502 3501 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:124 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 243

;; # DEBUG terr => err_788

(debug_insn 3504 3503 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_668 != 0)

(insn 3505 3504 3506 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 -1
     (nil))

(insn 3506 3505 3507 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(insn 3507 3506 3508 (set:SI (reg:SI 1790)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(insn 3508 3507 3509 (set (reg:QI 1789 [ D.3813 ])
        (subreg:QI (reg:SI 1790) 0)) verify.c:125 -1
     (nil))

(insn 3509 3508 3510 (set (reg:SI 1791)
        (zero_extend:SI (reg:QI 1789 [ D.3813 ]))) verify.c:125 -1
     (nil))

(insn 3510 3509 3511 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1791)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(jump_insn 3511 3510 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:125 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 244
Swap operands in stmt:
_671 = _663 | _670;
Cost left opnd=0, right opnd=1

;; # DEBUG err => err_788

(debug_insn 3513 3512 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_671 != 0)

(insn 3514 3513 3515 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:127 -1
     (nil))

(insn 3515 3514 3516 (set (reg:SI 1793)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:127 -1
     (nil))

(insn 3516 3515 3517 (set (reg:QI 1792 [ D.3813 ])
        (subreg:QI (reg:SI 1793) 0)) verify.c:127 -1
     (nil))

(insn 3517 3516 3518 (set (reg:SI 1794)
        (ior:SI (reg:SI 679 [ D.3813 ])
            (subreg:SI (reg:QI 1792 [ D.3813 ]) 0))) verify.c:127 -1
     (nil))

(insn 3518 3517 3519 (set (reg:QI 1795)
        (subreg:QI (reg:SI 1794) 0)) verify.c:127 -1
     (nil))

(insn 3519 3518 3520 (set (reg:SI 1796)
        (zero_extend:SI (reg:QI 1795))) verify.c:127 -1
     (nil))

(insn 3520 3519 3521 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1796)
            (const_int 0 [0]))) verify.c:127 -1
     (nil))

(jump_insn 3521 3520 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:127 -1
     (int_list:REG_BR_PROB 0 (nil)))

;; Generating RTL for gimple basic block 245

;; _673 = _672 * 8;

(insn 3523 3522 0 (set (reg:DI 688 [ D.3802 ])
        (ashift:DI (reg/v:DI 674 [ i ])
            (const_int 3 [0x3]))) verify.c:131 -1
     (nil))

;; _675 = *_674;

(insn 3524 3523 0 (set (reg:DI 690 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 688 [ D.3802 ])) [4 *_674+0 S8 A64])) verify.c:131 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_675 >= 0)

(insn 3525 3524 3526 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 690 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 -1
     (nil))

(jump_insn 3526 3525 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:131 -1
     (int_list:REG_BR_PROB 2700 (nil)))

;; Generating RTL for gimple basic block 246

;; _677 = _676 * 8;

(insn 3528 3527 0 (set (reg:DI 692 [ D.3802 ])
        (ashift:DI (reg/v:DI 675 [ j ])
            (const_int 3 [0x3]))) verify.c:131 -1
     (nil))

;; _679 = *_678;

(insn 3529 3528 0 (set (reg:DI 694 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 692 [ D.3802 ])) [4 *_678+0 S8 A64])) verify.c:131 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_679 < 0)

(insn 3530 3529 3531 246 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 694 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 -1
     (nil))

(jump_insn 3531 3530 3534 246 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:131 -1
     (int_list:REG_BR_PROB 2700 (nil)))

(note 3534 3531 3532 298 [bb 298] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3532 3534 3533 298 (set (pc)
        (label_ref 0)) verify.c:131 -1
     (nil))

(barrier 3533 3532 0)

;; Generating RTL for gimple basic block 247

;; if (j_659 == _675)

(insn 3536 3535 3537 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 675 [ j ])
            (reg:DI 690 [ D.3798 ]))) verify.c:145 -1
     (nil))

(jump_insn 3537 3536 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:145 -1
     (int_list:REG_BR_PROB 7200 (nil)))

;; Generating RTL for gimple basic block 248

;; *_687 = 1;

(insn 3539 3538 3540 (set (reg:DI 1797)
        (const_int 1 [0x1])) verify.c:146 -1
     (nil))

(insn 3540 3539 0 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 688 [ D.3802 ])) [4 *_687+0 S8 A64])
        (reg:DI 1797)) verify.c:146 -1
     (nil))

;; Generating RTL for gimple basic block 249

;; 

(code_label 3541 3540 3542 167 "" [0 uses])

(note 3542 3541 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_655 == _679)

(insn 3543 3542 3544 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg:DI 694 [ D.3798 ]))) verify.c:147 -1
     (nil))

(jump_insn 3544 3543 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:147 -1
     (int_list:REG_BR_PROB 2800 (nil)))

;; Generating RTL for gimple basic block 250

;; Generating RTL for gimple basic block 251

;; 

(code_label 3548 3547 3549 168 "" [0 uses])

(note 3549 3548 0 NOTE_INSN_BASIC_BLOCK)

;; *_689 = 1;

(insn 3550 3549 3551 (set (reg:DI 1798)
        (const_int 1 [0x1])) verify.c:148 -1
     (nil))

(insn 3551 3550 0 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 692 [ D.3802 ])) [4 *_689+0 S8 A64])
        (reg:DI 1798)) verify.c:148 -1
     (nil))

;; Generating RTL for gimple basic block 252

;; 

(code_label 3552 3551 3553 169 "" [0 uses])

(note 3553 3552 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG lvldiff => lvldiff_694

(debug_insn 3554 3553 0 (var_location:DI lvldiff (const_int 0 [0])) verify.c:150 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 2 [0x2])

Hot cost: 4 (final)

;; if (_696 > 2)

(insn 3555 3554 3556 (set (reg:DI 1800)
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [4 *_690+0 S8 A64])) verify.c:152 -1
     (nil))

(insn 3556 3555 3557 (set (reg:DI 1801)
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [4 *_692+0 S8 A64])) verify.c:152 -1
     (nil))

(insn 3557 3556 3558 (set (reg:DI 1799 [ lvldiff ])
        (minus:DI (reg:DI 1800)
            (reg:DI 1801))) verify.c:152 -1
     (nil))

(insn 3558 3557 3559 (set (reg:DI 1802 [ D.3810 ])
        (plus:DI (reg:DI 1799 [ lvldiff ])
            (const_int 1 [0x1]))) verify.c:152 -1
     (nil))

(insn 3559 3558 3560 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1802 [ D.3810 ])
            (const_int 2 [0x2]))) verify.c:152 -1
     (nil))

(jump_insn 3560 3559 0 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:152 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 253

;; Generating RTL for gimple basic block 254

;; 

(code_label 3562 3561 3563 161 "" [0 uses])

(note 3563 3562 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => err_731

(debug_insn 3564 3563 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedge_traversed => nedge_traversed_730

(debug_insn 3565 3564 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_729

(debug_insn 3566 3565 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG k => D#42

(debug_insn 3567 3566 0 (var_location:DI k (const_int 0 [0])) verify.c:117 -1
     (nil))
;; # DEBUG terr => err_731

(debug_insn 3568 3567 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG k => D#42

(debug_insn 3569 3568 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG nedge_traversed => nedge_traversed_730

(debug_insn 3570 3569 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_729

(debug_insn 3571 3570 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 16 [0x10])

Hot cost: 4 (final)
(const_int 16 [0x10])

Hot cost: 4 (final)

;; ivtmp.64_707 = ivtmp.64_706 + 16;

(insn 3572 3571 0 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg:DI 708 [ ivtmp.64 ])
            (const_int 16 [0x10]))) -1
     (nil))

;; if (ivtmp.64_707 != _741)

(insn 3574 3572 3575 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 708 [ ivtmp.64 ])
            (reg:DI 720 [ D.3810 ]))) verify.c:117 -1
     (nil))

(jump_insn 3575 3574 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3573)
            (pc))) verify.c:117 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 255
(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_731 == 0)

(insn 3577 3576 3578 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 716 [ err ])
            (const_int 0 [0]))) verify.c:157 -1
     (nil))

(jump_insn 3578 3577 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:157 -1
     (int_list:REG_BR_PROB 5495 (nil)))

;; Generating RTL for gimple basic block 256

;; # DEBUG k => 0

(debug_insn 3580 3579 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_729

(debug_insn 3581 3580 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (nv_635 > 0)

(insn 3582 3581 3583 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:160 -1
     (nil))

(jump_insn 3583 3582 0 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:160 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 257
(const_int 1 [0x1])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)

;; _1012 = (long int) _1344;

(insn 3585 3584 0 (set (reg:DI 755 [ D.3798 ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; Generating RTL for gimple basic block 258

;; # DEBUG k => k_298

(debug_insn 3587 3586 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_325

(debug_insn 3588 3587 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG terr => err_325

(debug_insn 3589 3588 0 (var_location:SI terr (const_int 0 [0])) verify.c:161 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_705 != 0)

(insn 3590 3589 3591 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:162 -1
     (nil))

(insn 3591 3590 3592 (set (reg:CC_DNE 66 cc)
        (compare (and:SI (ne (reg:CC_DEQ 66 cc)
                    (const_int 0 [0]))
                (ne (reg/v:DI 436 [ k ])
                    (reg:DI 624 [ D.3798 ])))
            (const_int 0 [0]))) verify.c:162 -1
     (nil))

(insn 3592 3591 3593 (set:SI (reg:SI 1804)
        (ne:SI (reg:CC_DNE 66 cc)
            (const_int 0 [0]))) verify.c:162 -1
     (nil))

(insn 3593 3592 3594 (set (reg:QI 1803 [ D.3813 ])
        (subreg:QI (reg:SI 1804) 0)) verify.c:162 -1
     (nil))

(insn 3594 3593 3595 (set (reg:SI 1805)
        (zero_extend:SI (reg:QI 1803 [ D.3813 ]))) verify.c:162 -1
     (nil))

(insn 3595 3594 3596 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1805)
            (const_int 0 [0]))) verify.c:162 -1
     (nil))

(jump_insn 3596 3595 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:162 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 259

;; _1276 = (sizetype) k_298;

(insn 3598 3597 0 (set (reg:DI 787 [ D.3805 ])
        (reg/v:DI 436 [ k ])) -1
     (nil))

;; _709 = MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B];

(insn 3599 3598 0 (set (reg:DI 710 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 787 [ D.3805 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_709 >= 0)

(insn 3600 3599 3601 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 710 [ D.3798 ])
            (const_int 0 [0]))) verify.c:163 -1
     (nil))

(jump_insn 3601 3600 0 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:163 -1
     (int_list:REG_BR_PROB 2700 (nil)))

;; Generating RTL for gimple basic block 260
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_711 == 0)

(insn 3603 3602 3604 (set (reg:DI 1806)
        (mem:DI (plus:DI (mult:DI (reg:DI 787 [ D.3805 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 746 [ seen_edge ])) [4 MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 -1
     (nil))

(insn 3604 3603 3605 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806)
            (const_int 0 [0]))) verify.c:163 -1
     (nil))

(jump_insn 3605 3604 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:163 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 261

;; Generating RTL for gimple basic block 262

;; 

(code_label 3607 3606 3608 174 "" [0 uses])

(note 3608 3607 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => err_734

(debug_insn 3609 3608 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; if (k_298 == _709)

(insn 3610 3609 3611 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:165 -1
     (nil))

(jump_insn 3611 3610 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:165 -1
     (int_list:REG_BR_PROB 3836 (nil)))

;; Generating RTL for gimple basic block 263

;; 

(code_label 3612 3611 3613 173 "" [0 uses])

(note 3613 3612 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => NULL

(debug_insn 3614 3613 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG terr => err_712

(debug_insn 3615 3614 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 264

;; 

(code_label 3616 3615 3617 172 "" [0 uses])

(note 3617 3616 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_735

(debug_insn 3618 3617 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; k_713 = k_298 + 1;

(insn 3619 3618 0 (set (reg/v:DI 436 [ k ])
        (plus:DI (reg/v:DI 436 [ k ])
            (const_int 1 [0x1]))) verify.c:160 -1
     (nil))

;; # DEBUG k => k_713

(debug_insn 3620 3619 0 (var_location:DI k (const_int 0 [0])) verify.c:160 -1
     (nil))
;; # DEBUG k => k_713

(debug_insn 3621 3620 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_735

(debug_insn 3622 3621 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; if (k_713 != _1012)

(insn 3624 3622 3625 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 755 [ D.3798 ]))) verify.c:160 -1
     (nil))

(jump_insn 3625 3624 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3623)
            (pc))) verify.c:160 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 265

;; done:

(code_label 3626 3625 3627 171 ("done") [0 uses])

(note 3627 3626 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nedge_traversed => nedge_traversed_557

(debug_insn 3628 3627 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_714

(debug_insn 3629 3628 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG p => seen_edge_794

(debug_insn 3630 3629 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; free (seen_edge_794);

(insn 3631 3630 3632 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))

(call_insn 3632 3631 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG p => NULL

(debug_insn 3633 3632 0 (var_location:DI p (const_int 0 [0])) verify.c:174 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_714 != 0)

(insn 3634 3633 3635 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:175 -1
     (nil))

(jump_insn 3635 3634 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:175 -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 266

;; # DEBUG nedge_traversed => NULL

(debug_insn 3637 3636 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_976

(debug_insn 3638 3637 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG p => NULL

(debug_insn 3639 3638 0 (var_location:DI p (const_int 0 [0])) verify.c:174 -1
     (nil))
;; _715 = (long int) err_976;

(insn 3640 3639 0 (set (reg:DI 712 [ D.3798 ])
        (sign_extend:DI (reg/v:SI 715 [ err ]))) verify.c:175 -1
     (nil))

;; # DEBUG bfs_tree_in => NULL

(debug_insn 3641 3640 0 (var_location:DI bfs_tree_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG max_bfsvtx => NULL

(debug_insn 3642 3641 0 (var_location:DI max_bfsvtx (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3643 3642 0 (var_location:DI root (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG IJ_in => NULL

(debug_insn 3644 3643 0 (var_location:DI IJ_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge => NULL

(debug_insn 3645 3644 0 (var_location:DI nedge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG lvldiff => NULL

(debug_insn 3646 3645 0 (var_location:DI lvldiff (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG j => NULL

(debug_insn 3647 3646 0 (var_location:DI j (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 3648 3647 0 (var_location:DI i (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3649 3648 0 (var_location:DI k (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3650 3649 0 (var_location:DI nv (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3651 3650 0 (var_location:DI level (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG seen_edge => NULL

(debug_insn 3652 3651 0 (var_location:DI seen_edge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge_traversed => NULL

(debug_insn 3653 3652 0 (var_location:SI nedge_traversed (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3654 3653 0 (var_location:SI err (const_int 0 [0])) graph500.c:204 -1
     (nil))(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)
(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)

;; MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _715;

(insn 3655 3654 3656 (set (reg:DI 1809)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))

(insn 3656 3655 3657 (set (reg:DI 1808)
        (lo_sum:DI (reg:DI 1809)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))

(insn 3657 3656 3658 (set (reg/f:DI 1807)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1808))) graph500.c:204 -1
     (nil))

(insn 3658 3657 0 (set (mem:DI (reg/f:DI 1807) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 712 [ D.3798 ])) graph500.c:204 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1517 != 0)

(insn 3659 3658 3660 266 (set (reg:DI 1811)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))

(insn 3660 3659 3661 266 (set (reg/f:DI 1810)
        (lo_sum:DI (reg:DI 1811)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3661 3660 3662 266 (set (reg:SI 1812)
        (mem/c:SI (reg/f:DI 1810) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))

(insn 3662 3661 3663 266 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1812)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))

(jump_insn 3663 3662 3666 266 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 10000 (nil)))

(note 3666 3663 3664 299 [bb 299] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3664 3666 3665 299 (set (pc)
        (label_ref 0)) graph500.c:205 -1
     (nil))

(barrier 3665 3664 0)

;; Generating RTL for gimple basic block 267

;; 

(code_label 3667 3665 3668 176 "" [0 uses])

(note 3668 3667 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG nedge_traversed => nedge_traversed_1191

(debug_insn 3669 3668 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3670 3669 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG p => NULL

(debug_insn 3671 3670 0 (var_location:DI p (const_int 0 [0])) verify.c:174 -1
     (nil))
;; # DEBUG bfs_tree_in => NULL

(debug_insn 3672 3671 0 (var_location:DI bfs_tree_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG max_bfsvtx => NULL

(debug_insn 3673 3672 0 (var_location:DI max_bfsvtx (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3674 3673 0 (var_location:DI root (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG IJ_in => NULL

(debug_insn 3675 3674 0 (var_location:DI IJ_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge => NULL

(debug_insn 3676 3675 0 (var_location:DI nedge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG lvldiff => NULL

(debug_insn 3677 3676 0 (var_location:DI lvldiff (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG j => NULL

(debug_insn 3678 3677 0 (var_location:DI j (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 3679 3678 0 (var_location:DI i (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3680 3679 0 (var_location:DI k (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3681 3680 0 (var_location:DI nv (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3682 3681 0 (var_location:DI level (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG seen_edge => NULL

(debug_insn 3683 3682 0 (var_location:DI seen_edge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge_traversed => NULL

(debug_insn 3684 3683 0 (var_location:SI nedge_traversed (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3685 3684 0 (var_location:SI err (const_int 0 [0])) graph500.c:204 -1
     (nil))(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)
(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)

;; MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = _717;

(insn 3686 3685 3687 (set (reg:DI 1815)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))

(insn 3687 3686 3688 (set (reg:DI 1814)
        (lo_sum:DI (reg:DI 1815)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))

(insn 3688 3687 3689 (set (reg/f:DI 1813)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1814))) graph500.c:204 -1
     (nil))

(insn 3689 3688 3690 (set (reg:DI 1816)
        (sign_extend:DI (reg/v:SI 610 [ nedge_traversed ]))) graph500.c:204 -1
     (nil))

(insn 3690 3689 0 (set (mem:DI (reg/f:DI 1813) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1816)) graph500.c:204 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1523 != 0)

(insn 3691 3690 3692 (set (reg:DI 1818)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))

(insn 3692 3691 3693 (set (reg/f:DI 1817)
        (lo_sum:DI (reg:DI 1818)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3693 3692 3694 (set (reg:SI 1819)
        (mem/c:SI (reg/f:DI 1817) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))

(insn 3694 3693 3695 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1819)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))

(jump_insn 3695 3694 0 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 268

;; 

(code_label 3696 3695 3697 177 "" [0 uses])

(note 3697 3696 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _580

(debug_insn 3698 3697 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:205 -1
     (nil))
;; # DEBUG __fmt => "done\n"

(debug_insn 3699 3698 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:205 -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1822) [2 stderr+0 S8 A64])

Hot cost: 16 (final)

;; __fprintf_chk (_580, 1, "done\n");

(insn 3700 3699 3701 (set (reg:DI 1821)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3701 3700 3702 (set (reg/f:DI 1820)
        (lo_sum:DI (reg:DI 1821)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
        (nil)))

(insn 3702 3701 3703 (set (reg:DI 1823)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 -1
     (nil))

(insn 3703 3702 3704 (set (reg/f:DI 1822)
        (lo_sum:DI (reg:DI 1823)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 3704 3703 3705 (set (reg:DI 1824)
        (mem/f/c:DI (reg/f:DI 1822) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3705 3704 3706 (set (reg:DI 2 x2)
        (reg/f:DI 1820)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3706 3705 3707 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3707 3706 3708 (set (reg:DI 0 x0)
        (reg:DI 1824)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 3708 3707 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)
(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)

;; _1286 = MEM[symbol: bfs_nedge, index: _1361, offset: 0B];

(insn 3709 3708 3710 (set (reg:DI 1827)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) -1
     (nil))

(insn 3710 3709 3711 (set (reg:DI 1826)
        (lo_sum:DI (reg:DI 1827)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))

(insn 3711 3710 3712 (set (reg/f:DI 1825)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1826))) -1
     (nil))

(insn 3712 3711 0 (set (reg:DI 712 [ D.3798 ])
        (mem:DI (reg/f:DI 1825) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])) -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1286 < 0)

(insn 3713 3712 3714 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 712 [ D.3798 ])
            (const_int 0 [0]))) graph500.c:206 -1
     (nil))

(jump_insn 3714 3713 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) graph500.c:206 -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 269

;; 

(code_label 3715 3714 3716 178 "" [0 uses])

(note 3716 3715 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __stream => _582

(debug_insn 3717 3716 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:207 -1
     (nil))
;; # DEBUG __fmt => "bfs %d from %ld failed verification (%ld)\n"

(debug_insn 3718 3717 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:207 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
(const_int 112 [0x70])

Cold cost: 4 (final)
(const_int 112 [0x70])

Cold cost: 4 (final)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
(mem:DI (plus:DI (mult:DI (reg:DI 1832)
            (const_int 8 [0x8]))
        (reg/f:DI 1831)) [4 bfs_root S8 A64])

Cold cost: 4 (final)
(const_int 1 [0x1])

Cold cost: 4 (final)
(mem/f/c:DI (reg/f:DI 1835) [2 stderr+0 S8 A64])

Cold cost: 4 (final)

;; __fprintf_chk (_582, 1, "bfs %d from %ld failed verification (%ld)\n", m_937, _583, _1156);

(insn 3719 3718 3720 (set (reg:DI 1829)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:207 -1
     (nil))

(insn 3720 3719 3721 (set (reg/f:DI 1828)
        (lo_sum:DI (reg:DI 1829)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:207 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3721 3720 3722 (set (reg:DI 1830)
        (reg/f:DI 1828)) graph500.c:207 -1
     (nil))

(insn 3722 3721 3723 (set (reg/f:DI 1831)
        (plus:DI (reg/f:DI 1828)
            (const_int 112 [0x70]))) graph500.c:207 -1
     (nil))

(insn 3723 3722 3724 (set (reg:DI 1832)
        (sign_extend:DI (reg/v:SI 752 [ m ]))) graph500.c:207 -1
     (nil))

(insn 3724 3723 3725 (set (reg:DI 1834)
        (high:DI (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3725 3724 3726 (set (reg/f:DI 1833)
        (lo_sum:DI (reg:DI 1834)
            (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)
        (nil)))

(insn 3726 3725 3727 (set (reg:DI 1836)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:207 -1
     (nil))

(insn 3727 3726 3728 (set (reg/f:DI 1835)
        (lo_sum:DI (reg:DI 1836)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:207 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))

(insn 3728 3727 3729 (set (reg:DI 5 x5)
        (reg:DI 712 [ D.3798 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3729 3728 3730 (set (reg:DI 4 x4)
        (mem:DI (plus:DI (mult:DI (reg:DI 1832)
                    (const_int 8 [0x8]))
                (reg/f:DI 1831)) [4 bfs_root S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3730 3729 3731 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3731 3730 3732 (set (reg:DI 2 x2)
        (reg/f:DI 1833)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3732 3731 3733 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(insn 3733 3732 3734 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1835) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))

(call_insn 3734 3733 0 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:DI (use (reg:DI 4 x4))
                                (expr_list:DI (use (reg:DI 5 x5))
                                    (nil))))))))))

;; # DEBUG __stream => NULL

(debug_insn 3735 3734 0 (var_location:DI __stream (const_int 0 [0])) graph500.c:207 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 3736 3735 0 (var_location:DI __fmt (const_int 0 [0])) graph500.c:207 -1
     (nil))
;; abort ();

(call_insn 3737 3736 3738 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))

(barrier 3738 3737 0)

;; Generating RTL for gimple basic block 270

;; 

(code_label 3739 3738 3740 179 "" [0 uses])

(note 3740 3739 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG p => bfs_tree_622

(debug_insn 3741 3740 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; free (bfs_tree_622);

(insn 3742 3741 3743 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) xalloc.c:132 -1
     (nil))

(call_insn 3743 3742 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG p => NULL

(debug_insn 3744 3743 0 (var_location:DI p (const_int 0 [0])) graph500.c:212 -1
     (nil))
;; max_bfsvtx ={v} {CLOBBER};

(nil)
(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; _759 = (int) _748;

(insn 3745 3744 0 (set (reg:SI 732 [ D.3797 ])
        (plus:SI (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)
            (const_int 1 [0x1]))) -1
     (nil))

;; # DEBUG m => _759

(debug_insn 3746 3745 0 (var_location:SI m (const_int 0 [0])) graph500.c:187 -1
     (nil))
;; # DEBUG m => _759

(debug_insn 3747 3746 0 (var_location:SI m (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; ivtmp.94_1263 = ivtmp.94_1264 + 1;

(insn 3748 3747 0 (set (reg:DI 777 [ ivtmp.94 ])
        (plus:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 1 [0x1]))) -1
     (nil))

;; if (_585 > _759)

(insn 3750 3748 3751 270 (set (reg:DI 1838)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (nil))

(insn 3751 3750 3752 270 (set (reg/f:DI 1837)
        (lo_sum:DI (reg:DI 1838)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 3752 3751 3753 270 (set (reg:SI 1839)
        (mem/c:SI (plus:DI (reg/f:DI 1837)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 -1
     (nil))

(insn 3753 3752 3754 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1839)
            (reg:SI 732 [ D.3797 ]))) graph500.c:187 -1
     (nil))

(jump_insn 3754 3753 3758 270 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3749)
            (pc))) graph500.c:187 -1
     (int_list:REG_BR_PROB 9775 (nil)))

(note 3758 3754 3756 300 [bb 300] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3756 3758 3757 300 (set (pc)
        (label_ref 3755)) graph500.c:187 -1
     (nil))

(barrier 3757 3756 0)

;; Generating RTL for gimple basic block 271

;; 

(code_label 3759 3757 3760 99 "" [0 uses])

(note 3760 3759 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 3761 3760 3762 (set (reg:SI 836 [ <retval> ])
        (reg:SI 240 [ D.3797 ])) -1
     (nil))

(jump_insn 3762 3761 3763 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 3763 3762 0)

;; Generating RTL for gimple basic block 272

;; 

(code_label 3764 3763 3765 61 "" [0 uses])

(note 3765 3764 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 273

;; 

(code_label 3766 3765 3767 62 "" [0 uses])

(note 3767 3766 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG seed => -1

(debug_insn 3768 3767 0 (var_location:DI seed (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 274

;; 

(code_label 3772 3771 3773 146 "" [0 uses])

(note 3773 3772 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => 0

(debug_insn 3774 3773 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 275

;; 

(code_label 3777 3776 3778 145 "" [0 uses])

(note 3778 3777 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => err_1109

(debug_insn 3779 3778 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 276

;; 

(code_label 3782 3781 3783 162 "" [0 uses])

(note 3783 3782 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => -10

(debug_insn 3784 3783 0 (var_location:SI terr (const_int 0 [0])) verify.c:124 -1
     (nil))
;; # DEBUG terr => -10

(debug_insn 3785 3784 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1105 != 0)

(insn 3786 3785 3787 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 -1
     (nil))

(insn 3787 3786 3788 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(insn 3788 3787 3789 (set:SI (reg:SI 1842)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(insn 3789 3788 3790 (set (reg:QI 1841 [ D.3813 ])
        (subreg:QI (reg:SI 1842) 0)) verify.c:125 -1
     (nil))

(insn 3790 3789 3791 (set (reg:SI 1843)
        (zero_extend:SI (reg:QI 1841 [ D.3813 ]))) verify.c:125 -1
     (nil))

(insn 3791 3790 3792 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))

(jump_insn 3792 3791 0 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) verify.c:125 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 277

;; Generating RTL for gimple basic block 278

;; 

(code_label 3796 3795 3797 165 "" [0 uses])

(note 3797 3796 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => err_1099

(debug_insn 3798 3797 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_1099

(debug_insn 3799 3798 0 (var_location:SI err (const_int 0 [0])) verify.c:133 -1
     (nil))
;; # DEBUG err => err_1099

(debug_insn 3800 3799 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 279

;; # DEBUG level => NULL

(debug_insn 3804 3803 0 (var_location:DI level (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3805 3804 0 (var_location:DI nv (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 3806 3805 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3807 3806 0 (var_location:DI root (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG lastlvl => NULL

(debug_insn 3808 3807 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3809 3808 0 (var_location:DI nhop (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG parent => NULL

(debug_insn 3810 3809 0 (var_location:DI parent (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3811 3810 0 (var_location:DI k (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3812 3811 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3813 3812 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nedge_traversed => 0

(debug_insn 3814 3813 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => err_792

(debug_insn 3815 3814 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG p => seen_edge_794

(debug_insn 3816 3815 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; free (seen_edge_794);

(insn 3817 3816 3818 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))

(call_insn 3818 3817 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG p => NULL

(debug_insn 3819 3818 0 (var_location:DI p (const_int 0 [0])) verify.c:174 -1
     (nil))
;; Generating RTL for gimple basic block 280

;; 

(code_label 3823 3822 3824 85 "" [0 uses])

(note 3824 3823 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG st => NULL

(debug_insn 3825 3824 0 (var_location:DI st (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG val => NULL

(debug_insn 3826 3825 0 (var_location:SI val (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG square => NULL

(debug_insn 3827 3826 0 (var_location:SI square (const_int 0 [0])) generator/graph_generator.c:137 -1
     (nil))
;; # DEBUG src_offset => NULL

(debug_insn 3828 3827 0 (var_location:SI src_offset (const_int 0 [0])) generator/graph_generator.c:138 -1
     (nil))
;; # DEBUG tgt_offset => NULL

(debug_insn 3829 3828 0 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
;; if (base_tgt_310 < base_src_819)

(insn 3830 3829 3831 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 -1
     (nil))

(jump_insn 3831 3830 0 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) generator/graph_generator.c:140 -1
     (int_list:REG_BR_PROB 2374 (nil)))

;; Generating RTL for gimple basic block 281

;; new_state.z5 = _1437;

(insn 3833 3832 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))

;; new_state.z4 = _1438;

(insn 3834 3833 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))

;; new_state.z3 = _1439;

(insn 3835 3834 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))

;; new_state.z2 = _1440;

(insn 3836 3835 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))

;; new_state.z1 = _1436;

(insn 3837 3836 0 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))

;; Generating RTL for gimple basic block 282

;; 

(code_label 3841 3840 3842 184 "" [0 uses])

(note 3842 3841 0 NOTE_INSN_BASIC_BLOCK)

;; _1448 = nverts_308 >> 1;

(insn 3843 3842 0 (set (reg:DI 830 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))

;; _1449 = _1443 * _1448;

(insn 3844 3843 0 (set (reg:DI 831 [ D.3798 ])
        (mult:DI (reg:DI 828 [ D.3798 ])
            (reg:DI 830 [ D.3798 ]))) -1
     (nil))

;; Generating RTL for gimple basic block 283

;; 

(code_label 3847 3846 3848 130 "" [0 uses])

(note 3848 3847 0 NOTE_INSN_BASIC_BLOCK)
(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_568 != 0)

(insn 3850 3848 3851 283 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 -1
     (nil))

(jump_insn 3851 3850 3855 283 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3849)
            (pc))) graph500.c:198 -1
     (int_list:REG_BR_PROB 4 (nil)))

(note 3855 3851 3853 301 [bb 301] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3853 3855 3854 301 (set (pc)
        (label_ref 3852)) graph500.c:198 -1
     (nil))

(barrier 3854 3853 0)

;; Generating RTL for gimple basic block 284

;; 

(code_label 3856 3854 3857 158 "" [0 uses])

(note 3857 3856 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG level => NULL

(debug_insn 3858 3857 0 (var_location:DI level (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3859 3858 0 (var_location:DI nv (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG bfs_tree => NULL

(debug_insn 3860 3859 0 (var_location:DI bfs_tree (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3861 3860 0 (var_location:DI root (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG lastlvl => NULL

(debug_insn 3862 3861 0 (var_location:DI lastlvl (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG nhop => NULL

(debug_insn 3863 3862 0 (var_location:DI nhop (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG parent => NULL

(debug_insn 3864 3863 0 (var_location:DI parent (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3865 3864 0 (var_location:DI k (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3866 3865 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3867 3866 0 (var_location:SI err (const_int 0 [0])) verify.c:104 -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (err_792 != 0)

(insn 3869 3867 3870 284 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:106 -1
     (nil))

(jump_insn 3870 3869 3874 284 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) verify.c:106 -1
     (int_list:REG_BR_PROB 5334 (nil)))

(note 3874 3870 3872 302 [bb 302] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3872 3874 3873 302 (set (pc)
        (label_ref 3871)) verify.c:106 -1
     (nil))

(barrier 3873 3872 0)

;; Generating RTL for gimple basic block 285

;; 

(code_label 3875 3873 3876 163 "" [0 uses])

(note 3876 3875 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG err => err_1143

(debug_insn 3877 3876 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 286

;; 

(code_label 3880 3879 3881 166 "" [0 uses])

(note 3881 3880 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => 0

(debug_insn 3882 3881 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG terr => 0

(debug_insn 3883 3882 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => 0

(debug_insn 3884 3883 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)
(const_int 1 [0x1])

Hot cost: 4 (final)

;; nedge_traversed_686 = nedge_traversed_728 + 1;

(insn 3885 3884 0 (set (reg/v:SI 610 [ nedge_traversed ])
        (plus:SI (reg/v:SI 610 [ nedge_traversed ])
            (const_int 1 [0x1]))) verify.c:142 -1
     (nil))

;; # DEBUG nedge_traversed => nedge_traversed_686

(debug_insn 3886 3885 0 (var_location:SI nedge_traversed (const_int 0 [0])) verify.c:142 -1
     (nil))
;; if (i_655 != j_659)

(insn 3888 3886 3889 286 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg/v:DI 675 [ j ]))) verify.c:144 -1
     (nil))

(jump_insn 3889 3888 3893 286 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3887)
            (pc))) verify.c:144 -1
     (int_list:REG_BR_PROB 7200 (nil)))

(note 3893 3889 3891 303 [bb 303] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3891 3893 3892 303 (set (pc)
        (label_ref 3890)) verify.c:144 -1
     (nil))

(barrier 3892 3891 0)

;; Generating RTL for gimple basic block 287

;; 

(code_label 3894 3892 3895 164 "" [0 uses])

(note 3895 3894 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG terr => 0

(debug_insn 3896 3895 0 (var_location:SI terr (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Hot cost: 0 (final)

;; if (_733 >= 0)

(insn 3897 3896 3898 287 (set (reg:DI 1844)
        (mem:DI (plus:DI (mult:DI (reg/v:DI 675 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_1073+0 S8 A64])) verify.c:132 -1
     (nil))

(insn 3898 3897 3899 287 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1844)
            (const_int 0 [0]))) verify.c:132 -1
     (nil))

(jump_insn 3899 3898 3902 287 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3796)
            (pc))) verify.c:132 -1
     (int_list:REG_BR_PROB 10000 (nil)))

(note 3902 3899 3900 304 [bb 304] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3900 3902 3901 304 (set (pc)
        (label_ref 3562)) verify.c:132 -1
     (nil))

(barrier 3901 3900 0)

;; Generating RTL for gimple basic block 288

;; # DEBUG nedge_traversed => 0

(debug_insn 3904 3903 0 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => 0

(debug_insn 3905 3904 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;; # DEBUG p => seen_edge_794

(debug_insn 3906 3905 0 (var_location:DI p (const_int 0 [0])) -1
     (nil))
;; free (seen_edge_794);

(insn 3907 3906 3908 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))

(call_insn 3908 3907 0 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))

;; # DEBUG p => NULL

(debug_insn 3909 3908 0 (var_location:DI p (const_int 0 [0])) verify.c:174 -1
     (nil))
;; Generating RTL for gimple basic block 289

;; 

(code_label 3912 3911 3913 160 "" [0 uses])

(note 3913 3912 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG k => 0

(debug_insn 3914 3913 0 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;; # DEBUG err => 0

(debug_insn 3915 3914 0 (var_location:SI err (const_int 0 [0])) -1
     (nil))(const_int 0 [0])

Cold cost: 0 (final)

;; if (nv_635 > 0)

(insn 3917 3915 3918 289 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:160 -1
     (nil))

(jump_insn 3918 3917 3922 289 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3916)
            (pc))) verify.c:160 -1
     (int_list:REG_BR_PROB 9100 (nil)))

(note 3922 3918 3920 305 [bb 305] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3920 3922 3921 305 (set (pc)
        (label_ref 3919)) verify.c:160 -1
     (nil))

(barrier 3921 3920 0)

;; Generating RTL for gimple basic block 290

;; 

(code_label 3923 3921 3924 134 "" [0 uses])

(note 3924 3923 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG bfs_tree_in => NULL

(debug_insn 3925 3924 0 (var_location:DI bfs_tree_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG max_bfsvtx => NULL

(debug_insn 3926 3925 0 (var_location:DI max_bfsvtx (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG root => NULL

(debug_insn 3927 3926 0 (var_location:DI root (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG IJ_in => NULL

(debug_insn 3928 3927 0 (var_location:DI IJ_in (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge => NULL

(debug_insn 3929 3928 0 (var_location:DI nedge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG lvldiff => NULL

(debug_insn 3930 3929 0 (var_location:DI lvldiff (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG j => NULL

(debug_insn 3931 3930 0 (var_location:DI j (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 3932 3931 0 (var_location:DI i (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG k => NULL

(debug_insn 3933 3932 0 (var_location:DI k (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nv => NULL

(debug_insn 3934 3933 0 (var_location:DI nv (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3935 3934 0 (var_location:DI level (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG seen_edge => NULL

(debug_insn 3936 3935 0 (var_location:DI seen_edge (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG nedge_traversed => NULL

(debug_insn 3937 3936 0 (var_location:SI nedge_traversed (const_int 0 [0])) graph500.c:204 -1
     (nil))
;; # DEBUG err => NULL

(debug_insn 3938 3937 0 (var_location:SI err (const_int 0 [0])) graph500.c:204 -1
     (nil))(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)
(symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)

Hot cost: 8 (final)

;; MEM[symbol: bfs_nedge, index: _1361, offset: 0B] = -999;

(insn 3939 3938 3940 (set (reg:DI 1847)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))

(insn 3940 3939 3941 (set (reg:DI 1846)
        (lo_sum:DI (reg:DI 1847)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))

(insn 3941 3940 3942 (set (reg/f:DI 1845)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1846))) graph500.c:204 -1
     (nil))

(insn 3942 3941 3943 (set (reg:DI 1848)
        (const_int -999 [0xfffffffffffffc19])) graph500.c:204 -1
     (nil))

(insn 3943 3942 0 (set (mem:DI (reg/f:DI 1845) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1848)) graph500.c:204 -1
     (nil))
(const_int 0 [0])

Hot cost: 0 (final)

;; if (_1193 != 0)

(insn 3944 3943 3945 290 (set (reg:DI 1850)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))

(insn 3945 3944 3946 290 (set (reg/f:DI 1849)
        (lo_sum:DI (reg:DI 1850)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 3946 3945 3947 290 (set (reg:SI 1851)
        (mem/c:SI (reg/f:DI 1849) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))

(insn 3947 3946 3948 290 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1851)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))

(jump_insn 3948 3947 3951 290 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 9984 (nil)))

(note 3951 3948 3949 306 [bb 306] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3949 3951 3950 306 (set (pc)
        (label_ref 3715)) graph500.c:205 -1
     (nil))

(barrier 3950 3949 0)

;; Generating RTL for gimple basic block 291
Swap operands in stmt:
base_tgt_1490 = base_tgt_310 + _1520;
Cost left opnd=0, right opnd=1

;; 

(code_label 3952 3950 3953 89 "" [0 uses])

(note 3953 3952 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG tgt_offset => NULL

(debug_insn 3954 3953 0 (var_location:SI tgt_offset (const_int 0 [0])) -1
     (nil))
;; # DEBUG src_offset => NULL

(debug_insn 3955 3954 0 (var_location:SI src_offset (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#31 => nverts_308 >> 1

(debug_insn 3956 3955 0 (var_location:DI D#31 (const_int 0 [0])) generator/graph_generator.c:149 -1
     (nil))
;; # DEBUG nverts => D#31

(debug_insn 3957 3956 0 (var_location:DI nverts (const_int 0 [0])) generator/graph_generator.c:149 -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3958 3957 0 (var_location:SI level (const_int 0 [0])) generator/graph_generator.c:150 -1
     (nil))
;; base_src_1482 = base_src_819 + _1478;

(insn 3959 3958 0 (set (reg/v:DI 747 [ base_src ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 831 [ D.3798 ]))) generator/graph_generator.c:151 -1
     (nil))

;; # DEBUG base_src => base_src_1482

(debug_insn 3960 3959 0 (var_location:DI base_src (const_int 0 [0])) generator/graph_generator.c:151 -1
     (nil))
;; base_tgt_1490 = _1520 + base_tgt_310;

(insn 3961 3960 3962 (set (reg:DI 1852 [ D.3798 ])
        (mult:DI (reg:DI 829 [ D.3798 ])
            (reg/v:DI 442 [ nverts ]))) generator/graph_generator.c:152 -1
     (nil))

(insn 3962 3961 0 (set (reg/v:DI 443 [ base_tgt ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 1852 [ D.3798 ]))) generator/graph_generator.c:152 -1
     (nil))

;; # DEBUG base_tgt => base_tgt_1490

(debug_insn 3963 3962 0 (var_location:DI base_tgt (const_int 0 [0])) generator/graph_generator.c:152 -1
     (nil))
;; # DEBUG base_tgt => base_tgt_1490

(debug_insn 3964 3963 0 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
;; # DEBUG base_src => base_src_1482

(debug_insn 3965 3964 0 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
;; # DEBUG level => NULL

(debug_insn 3966 3965 0 (var_location:SI level (const_int 0 [0])) -1
     (nil))
;; # DEBUG nverts => D#31

(debug_insn 3967 3966 0 (var_location:DI nverts (const_int 0 [0])) -1
     (nil))(const_int 1 [0x1])

Hot cost: 4 (final)

;; if (nverts_1481 != 1)

(insn 3969 3967 3970 291 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 -1
     (nil))

(jump_insn 3970 3969 3974 291 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3968)
            (pc))) generator/graph_generator.c:136 -1
     (int_list:REG_BR_PROB 9551 (nil)))

(note 3974 3970 3972 307 [bb 307] NOTE_INSN_BASIC_BLOCK)

(jump_insn 3972 3974 3973 307 (set (pc)
        (label_ref 3971)) generator/graph_generator.c:136 -1
     (nil))

(barrier 3973 3972 0)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Edge 102->101 redirected to 309
Edge 105->280 redirected to 310
Edge 107->280 redirected to 311
Edge 201->206 redirected to 313
Edge 202->205 redirected to 314
Edge 203->205 redirected to 315
Edge 220->275 redirected to 316
Edge 222->275 redirected to 317
Edge 241->254 redirected to 318
Edge 243->285 redirected to 319
Edge 244->254 redirected to 320
Edge 246->278 redirected to 321
Edge 252->254 redirected to 322
Edge 259->263 redirected to 324
Edge 260->262 redirected to 325
Edge 262->264 redirected to 326
Edge 276->285 redirected to 327
Edge 287->278 redirected to 328
Edge 289->257 redirected to 330
Purged non-fallthru edges from bb 333
Purged non-fallthru edges from bb 335
Purged non-fallthru edges from bb 337
Purged non-fallthru edges from bb 339
Purged non-fallthru edges from bb 342
Predictions for insn 320 bb 7
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 956 bb 58
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 84 failed.
Forwarding edge 2->4 to 84 failed.
Edge 30->32 redirected to 33
Forwarding edge 30->31 to 34 failed.
Forwarding edge 30->31 to 34 failed.
deleting block 32
Edge 39->41 redirected to 42
Forwarding edge 39->40 to 43 failed.
Forwarding edge 39->40 to 43 failed.
deleting block 41
Edge 48->50 redirected to 51
Forwarding edge 48->49 to 52 failed.
Forwarding edge 48->49 to 52 failed.
deleting block 50
Edge 57->59 redirected to 60
Forwarding edge 57->58 to 61 failed.
Forwarding edge 57->58 to 61 failed.
deleting block 59
Edge 78->80 redirected to 81
Forwarding edge 78->79 to 84 failed.
Forwarding edge 78->79 to 84 failed.
Redirecting jump 1085 from 4 to 84.
deleting block 80
Edge 82->4 redirected to 84
Edge 84->307 redirected to 308
Edge 85->307 redirected to 308
Forwarding edge 103->104 to 98 failed.
Forwarding edge 106->107 to 112 failed.
Redirecting jump 1729 from 107 to 112.
Forwarding edge 141->142 to 151 failed.
Edge 149->142 redirected to 151
Edge 166->168 redirected to 108
Merging block 168 into block 167...
Merged blocks 167 and 168.
Merged 167 and 168 without moving.
Edge 170->172 redirected to 112
Merging block 172 into block 171...
Merged blocks 171 and 172.
Merged 171 and 172 without moving.
Edge 186->188 redirected to 189
Merging block 188 into block 187...
Merged blocks 187 and 188.
Merged 187 and 188 without moving.
Forwarding edge 207->208 to 210 failed.
Forwarding edge 223->224 to 226 failed.
Edge 229->231 redirected to 232
Merging block 231 into block 230...
Merged blocks 230 and 231.
Merged 230 and 231 without moving.
Edge 234->312 redirected to 258
Edge 235->309 redirected to 258
Edge 251->309 redirected to 258
Forwarding edge 256->257 to 258 failed.
Removing jump 3399.
Forwarding edge 258->259 to 326 failed.
Forwarding edge 260->261 to 336 failed.
Forwarding edge 269->270 to 331 failed.
Forwarding edge 273->274 to 276 failed.
Forwarding edge 283->284 to 286 failed.
Forwarding edge 292->293 to 297 failed.
Redirecting jump 4026 from 295 to 297.
Merging block 295 into block 294...
Merged blocks 294 and 295.
Merged 294 and 295 without moving.
Forwarding edge 299->300 to 303 failed.
Forwarding edge 304->305 to 191 failed.
deleting block 307
deleting block 309
Redirecting jump 4005 from 312 to 258.
Merging block 312 into block 311...
Merged blocks 311 and 312.
Merged 311 and 312 without moving.
Forwarding edge 324->325 to 210 failed.
Redirecting jump 3853 from 208 to 210.
Forwarding edge 326->327 to 262 failed.
Forwarding edge 331->332 to 276 failed.
Redirecting jump 3891 from 274 to 276.
Forwarding edge 336->337 to 335 failed.
Forwarding edge 340->341 to 131 failed.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 84 failed.
Deleted label in block 4.
Forwarding edge 30->31 to 34 failed.
Forwarding edge 39->40 to 43 failed.
Forwarding edge 48->49 to 52 failed.
Forwarding edge 57->58 to 61 failed.
Forwarding edge 78->79 to 84 failed.
Forwarding edge 103->104 to 98 failed.
Forwarding edge 106->107 to 112 failed.
Deleted label in block 107.
Forwarding edge 141->142 to 151 failed.
Deleted label in block 142.
Forwarding edge 207->208 to 210 failed.
Deleted label in block 208.
Forwarding edge 223->224 to 226 failed.
Forwarding edge 256->257 to 258 failed.
Forwarding edge 258->259 to 326 failed.
Forwarding edge 260->261 to 336 failed.
Forwarding edge 269->270 to 331 failed.
Forwarding edge 273->274 to 276 failed.
Deleted label in block 274.
Forwarding edge 283->284 to 286 failed.
Forwarding edge 292->293 to 297 failed.
Forwarding edge 299->300 to 303 failed.
Forwarding edge 304->305 to 191 failed.
Forwarding edge 324->325 to 210 failed.
Forwarding edge 326->327 to 262 failed.
Forwarding edge 331->332 to 276 failed.
Forwarding edge 336->337 to 335 failed.
Forwarding edge 340->341 to 131 failed.


;;
;; Full RTL generated for this function:
;;
(note 168 0 287 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 287 168 169 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 169 287 170 2 (set (reg/v:SI 837 [ argc ])
        (reg:SI 0 x0 [ argc ])) graph500.c:58 -1
     (nil))
(insn 170 169 171 2 (set (reg/v/f:DI 838 [ argv ])
        (reg:DI 1 x1 [ argv ])) graph500.c:58 -1
     (nil))
(note 171 170 289 2 NOTE_INSN_FUNCTION_BEG)
(insn 289 171 290 2 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 837 [ argc ])
            (const_int 1 [0x1]))) graph500.c:65 -1
     (nil))
(jump_insn 290 289 291 2 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) graph500.c:65 -1
     (int_list:REG_BR_PROB 5248 (nil))
 -> 294)
;;  succ:       5 [52.5%] 
;;              4 [47.5%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 27
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [47.5%]  (FALLTHRU)
(note 291 290 292 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 292 291 293 4 (set (pc)
        (label_ref 1197)) graph500.c:65 -1
     (nil)
 -> 1197)
;;  succ:       84 [100.0%] 

(barrier 293 292 294)
;; basic block 5, loop depth 0, count 0, freq 30
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [52.5%] 
(code_label 294 293 295 5 11 "" [1 uses])
(note 295 294 296 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 296 295 297 5 (var_location:SI argc (reg/v:SI 837 [ argc ])) -1
     (nil))
(debug_insn 297 296 298 5 (var_location:DI argv (reg/v/f:DI 838 [ argv ])) -1
     (nil))
(debug_insn 298 297 299 5 (var_location:SI err (const_int 0 [0])) options.c:44 -1
     (nil))
(debug_insn 299 298 300 5 (var_location:SI nset (const_int 0 [0])) options.c:45 -1
     (nil))
(debug_insn 300 299 301 5 (var_location:SI whichset (const_int 0 [0])) options.c:46 -1
     (nil))
(insn 301 300 302 5 (set (reg:DI 840)
        (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 -1
     (nil))
(insn 302 301 303 5 (set (reg/f:DI 839)
        (lo_sum:DI (reg:DI 840)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>)
        (nil)))
(insn 303 302 304 5 (set (reg:DI 0 x0)
        (reg/f:DI 839)) options.c:48 -1
     (nil))
(call_insn 304 303 305 5 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:48 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 305 304 306 5 (set (reg/f:DI 293 [ D.3800 ])
        (reg:DI 0 x0)) options.c:48 -1
     (nil))
(insn 306 305 307 5 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 293 [ D.3800 ])
            (const_int 0 [0]))) options.c:48 -1
     (nil))
(jump_insn 307 306 308 5 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) options.c:48 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 313)
;;  succ:       6 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 

;; basic block 6, loop depth 0, count 0, freq 25
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [85.0%]  (FALLTHRU)
(note 308 307 309 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 6 (set (reg:DI 842)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:49 -1
     (nil))
(insn 310 309 311 6 (set (reg/f:DI 841)
        (lo_sum:DI (reg:DI 842)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:49 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 311 310 312 6 (set (reg:SI 843)
        (const_int 1 [0x1])) options.c:49 -1
     (nil))
(insn 312 311 313 6 (set (mem/c:SI (reg/f:DI 841) [3 VERBOSE+0 S4 A32])
        (reg:SI 843)) options.c:49 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 30
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [15.0%] 
;;              6 [100.0%]  (FALLTHRU)
(code_label 313 312 314 7 13 "" [1 uses])
(note 314 313 191 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 191 314 192 7 (set (reg/v:SI 320 [ whichset ])
        (const_int 0 [0])) options.c:117 -1
     (nil))
(insn 192 191 193 7 (set (reg/v:SI 328 [ nset ])
        (const_int 0 [0])) options.c:117 -1
     (nil))
(insn 193 192 315 7 (set (reg/v:SI 360 [ err ])
        (const_int 0 [0])) options.c:117 -1
     (nil))
(jump_insn 315 193 316 7 (set (pc)
        (label_ref 926)) options.c:49 -1
     (nil)
 -> 926)
;;  succ:       64 [100.0%] 

(barrier 316 315 939)
;; basic block 8, loop depth 1, count 0, freq 161, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 [97.0%] 
(code_label 939 316 317 8 48 "" [1 uses])
(note 317 939 318 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 8 (set (reg:SI 844)
        (plus:SI (reg/v:SI 294 [ c ])
            (const_int -63 [0xffffffffffffffc1]))) options.c:52 -1
     (nil))
(insn 319 318 320 8 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 844)
            (const_int 55 [0x37]))) options.c:52 -1
     (nil))
(jump_insn 320 319 4051 8 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) options.c:52 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 909)
;;  succ:       62 [50.0%] 
;;              9 [50.0%]  (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 81, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [50.0%]  (FALLTHRU)
(note 4051 320 321 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 321 4051 322 9 (set (reg:DI 846)
        (high:DI (label_ref 324))) options.c:52 -1
     (insn_list:REG_LABEL_OPERAND 324 (nil)))
(insn 322 321 323 9 (set (reg/f:DI 845)
        (lo_sum:DI (reg:DI 846)
            (label_ref 324))) options.c:52 -1
     (insn_list:REG_LABEL_OPERAND 324 (expr_list:REG_EQUAL (label_ref 324)
            (nil))))
(jump_insn 323 322 324 9 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 845)
                            (reg:SI 844)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 324))
        ]) options.c:52 -1
     (nil)
 -> 324)
;;  succ:       62 [4.0%] 
;;              11 [8.0%] 
;;              26 [8.0%] 
;;              35 [8.0%] 
;;              44 [8.0%] 
;;              53 [8.0%] 
;;              13 [8.0%] 
;;              12 [8.0%] 
;;              22 [8.0%] 
;;              14 [8.0%] 
;;              16 [8.0%] 
;;              18 [8.0%] 
;;              10 [8.0%] 

;; Insn is not within a basic block
(code_label 324 323 325 17 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 325 324 326 (addr_diff_vec:DI (label_ref:DI 324)
         [
            (label_ref:DI 343)
            (label_ref:DI 909)
            (label_ref:DI 557)
            (label_ref:DI 645)
            (label_ref:DI 733)
            (label_ref:DI 821)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 373)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 365)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 557)
            (label_ref:DI 645)
            (label_ref:DI 733)
            (label_ref:DI 821)
            (label_ref:DI 498)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 343)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 381)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 410)
            (label_ref:DI 439)
            (label_ref:DI 909)
            (label_ref:DI 909)
            (label_ref:DI 327)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 326 325 327)
;; basic block 10, loop depth 0, count 0, freq 12
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 327 326 328 10 28 "" [1 uses])
(note 328 327 329 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 329 328 330 10 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)) -1
     (nil))
(insn 330 329 331 10 (set (reg:DI 848)
        (high:DI (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 331 330 332 10 (set (reg/f:DI 847)
        (lo_sum:DI (reg:DI 848)
            (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>)
        (nil)))
(insn 332 331 333 10 (set (reg:DI 850)
        (high:DI (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 333 332 334 10 (set (reg/f:DI 849)
        (lo_sum:DI (reg:DI 850)
            (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)
        (nil)))
(insn 334 333 335 10 (set (reg:SI 3 x3)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 335 334 336 10 (set (reg:DI 2 x2)
        (reg/f:DI 847)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 336 335 337 10 (set (reg:DI 1 x1)
        (reg/f:DI 849)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 337 336 338 10 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(call_insn 338 337 339 10 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
(debug_insn 339 338 340 10 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:54 -1
     (nil))
(insn 340 339 341 10 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:55 -1
     (nil))
(call_insn 341 340 342 10 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:55 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 342 341 343)
;; basic block 11, loop depth 0, count 0, freq 12
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 343 342 344 11 16 "" [2 uses])
(note 344 343 345 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 345 344 346 11 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)) -1
     (nil))
(insn 346 345 347 11 (set (reg:DF 851)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 5.00000000000000444089209850062616169452667236328125e-2 [0x0.cccccccccccdp-4])
        (nil)))
(insn 347 346 348 11 (set (reg:DF 852)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))
(insn 348 347 349 11 (set (reg:DF 853)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))
(insn 349 348 350 11 (set (reg:DF 854)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (const_double:DF 5.6999999999999995115018691649311222136020660400390625e-1 [0x0.91eb851eb851e8p+0])
        (nil)))
(insn 350 349 351 11 (set (reg:DI 856)
        (high:DI (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 351 350 352 11 (set (reg/f:DI 855)
        (lo_sum:DI (reg:DI 856)
            (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)
        (nil)))
(insn 352 351 353 11 (set (reg:DF 35 v3)
        (reg:DF 851)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 353 352 354 11 (set (reg:DF 34 v2)
        (reg:DF 852)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 354 353 355 11 (set (reg:DF 33 v1)
        (reg:DF 853)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 355 354 356 11 (set (reg:DF 32 v0)
        (reg:DF 854)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 356 355 357 11 (set (reg:DI 3 x3)
        (const_int 16 [0x10])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 357 356 358 11 (set (reg:DI 2 x2)
        (const_int 14 [0xe])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 358 357 359 11 (set (reg:DI 1 x1)
        (reg/f:DI 855)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(insn 359 358 360 11 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (nil))
(call_insn 360 359 361 11 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (expr_list:DF (use (reg:DF 32 v0))
                                (expr_list:DF (use (reg:DF 33 v1))
                                    (expr_list:DF (use (reg:DF 34 v2))
                                        (expr_list:DF (use (reg:DF 35 v3))
                                            (nil))))))))))))
(debug_insn 361 360 362 11 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:59 -1
     (nil))
(insn 362 361 363 11 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:105 -1
     (nil))
(call_insn 363 362 364 11 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 364 363 365)
;; basic block 12, loop depth 1, count 0, freq 12
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 365 364 366 12 23 "" [1 uses])
(note 366 365 367 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 12 (set (reg:DI 858)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 -1
     (nil))
(insn 368 367 369 12 (set (reg/f:DI 857)
        (lo_sum:DI (reg:DI 858)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 369 368 370 12 (set (reg:SI 859)
        (const_int 1 [0x1])) options.c:108 -1
     (nil))
(insn 370 369 371 12 (set (mem/c:SI (reg/f:DI 857) [3 VERBOSE+0 S4 A32])
        (reg:SI 859)) options.c:108 -1
     (nil))
(jump_insn 371 370 372 12 (set (pc)
        (label_ref 924)) options.c:108 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 372 371 373)
;; basic block 13, loop depth 1, count 0, freq 12
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 373 372 374 13 22 "" [1 uses])
(note 374 373 375 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 13 (set (reg:DI 861)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 -1
     (nil))
(insn 376 375 377 13 (set (reg/f:DI 860)
        (lo_sum:DI (reg:DI 861)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 377 376 378 13 (set (reg:SI 862)
        (const_int 1 [0x1])) options.c:111 -1
     (nil))
(insn 378 377 379 13 (set (mem/c:SI (plus:DI (reg/f:DI 860)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])
        (reg:SI 862)) options.c:111 -1
     (nil))
(jump_insn 379 378 380 13 (set (pc)
        (label_ref 924)) options.c:111 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 380 379 381)
;; basic block 14, loop depth 1, count 0, freq 12
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 381 380 382 14 25 "" [1 uses])
(note 382 381 383 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 14 (set (reg:DI 864)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 -1
     (nil))
(insn 384 383 385 14 (set (reg/f:DI 863)
        (lo_sum:DI (reg:DI 864)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 385 384 386 14 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 863) [2 optarg+0 S8 A64])) options.c:114 -1
     (nil))
(call_insn 386 385 387 14 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 387 386 388 14 (set (reg/f:DI 865)
        (reg:DI 0 x0)) options.c:114 -1
     (expr_list:REG_NOALIAS (reg/f:DI 865)
        (nil)))
(insn 388 387 389 14 (set (reg/f:DI 296 [ D.3800 ])
        (reg/f:DI 865)) options.c:114 -1
     (nil))
(insn 389 388 390 14 (set (reg:DI 867)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 -1
     (nil))
(insn 390 389 391 14 (set (reg/f:DI 866)
        (lo_sum:DI (reg:DI 867)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 391 390 392 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 866)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])
        (reg/f:DI 296 [ D.3800 ])) options.c:114 -1
     (nil))
(insn 392 391 393 14 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 296 [ D.3800 ])
            (const_int 0 [0]))) options.c:115 -1
     (nil))
(jump_insn 393 392 394 14 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:115 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 924)
;;  succ:       15 [6.7%]  (FALLTHRU)
;;              63 [93.3%] 

;; basic block 15, loop depth 1, count 0, freq 1
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [6.7%]  (FALLTHRU)
(note 394 393 395 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(debug_insn 395 394 396 15 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:116 -1
     (nil))
(debug_insn 396 395 397 15 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)) options.c:116 -1
     (nil))
(insn 397 396 398 15 (set (reg:DI 869)
        (high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 398 397 399 15 (set (reg/f:DI 868)
        (lo_sum:DI (reg:DI 869)
            (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
        (nil)))
(insn 399 398 400 15 (set (reg:DI 871)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 -1
     (nil))
(insn 400 399 401 15 (set (reg/f:DI 870)
        (lo_sum:DI (reg:DI 871)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 401 400 402 15 (set (reg:DI 2 x2)
        (reg/f:DI 868)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 402 401 403 15 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 403 402 404 15 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 870) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 404 403 405 15 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 405 404 406 15 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
(debug_insn 406 405 407 15 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
(debug_insn 407 406 190 15 (var_location:SI err (const_int 1 [0x1])) options.c:117 -1
     (nil))
(insn 190 407 408 15 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:117 -1
     (nil))
(jump_insn 408 190 409 15 (set (pc)
        (label_ref 924)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 409 408 410)
;; basic block 16, loop depth 1, count 0, freq 12
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 410 409 411 16 26 "" [1 uses])
(note 411 410 412 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 16 (set (reg:DI 873)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 -1
     (nil))
(insn 413 412 414 16 (set (reg/f:DI 872)
        (lo_sum:DI (reg:DI 873)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 414 413 415 16 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 872) [2 optarg+0 S8 A64])) options.c:121 -1
     (nil))
(call_insn 415 414 416 16 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:121 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 416 415 417 16 (set (reg/f:DI 874)
        (reg:DI 0 x0)) options.c:121 -1
     (expr_list:REG_NOALIAS (reg/f:DI 874)
        (nil)))
(insn 417 416 418 16 (set (reg/f:DI 299 [ D.3800 ])
        (reg/f:DI 874)) options.c:121 -1
     (nil))
(insn 418 417 419 16 (set (reg:DI 876)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 -1
     (nil))
(insn 419 418 420 16 (set (reg/f:DI 875)
        (lo_sum:DI (reg:DI 876)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 420 419 421 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 875)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])
        (reg/f:DI 299 [ D.3800 ])) options.c:121 -1
     (nil))
(insn 421 420 422 16 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 299 [ D.3800 ])
            (const_int 0 [0]))) options.c:122 -1
     (nil))
(jump_insn 422 421 423 16 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:122 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 924)
;;  succ:       17 [6.7%]  (FALLTHRU)
;;              63 [93.3%] 

;; basic block 17, loop depth 1, count 0, freq 1
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 [6.7%]  (FALLTHRU)
(note 423 422 424 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 424 423 425 17 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:123 -1
     (nil))
(debug_insn 425 424 426 17 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)) options.c:123 -1
     (nil))
(insn 426 425 427 17 (set (reg:DI 878)
        (high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 427 426 428 17 (set (reg/f:DI 877)
        (lo_sum:DI (reg:DI 878)
            (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
        (nil)))
(insn 428 427 429 17 (set (reg:DI 880)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 -1
     (nil))
(insn 429 428 430 17 (set (reg/f:DI 879)
        (lo_sum:DI (reg:DI 880)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 430 429 431 17 (set (reg:DI 2 x2)
        (reg/f:DI 877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 431 430 432 17 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 432 431 433 17 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 879) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 433 432 434 17 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 434 433 435 17 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
(debug_insn 435 434 436 17 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
(debug_insn 436 435 189 17 (var_location:SI err (const_int 1 [0x1])) options.c:124 -1
     (nil))
(insn 189 436 437 17 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:124 -1
     (nil))
(jump_insn 437 189 438 17 (set (pc)
        (label_ref 924)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 438 437 439)
;; basic block 18, loop depth 1, count 0, freq 12
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 439 438 440 18 27 "" [1 uses])
(note 440 439 441 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 441 440 442 18 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:128 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 442 441 443 18 (set (reg/f:DI 301 [ D.3807 ])
        (reg:DI 0 x0)) options.c:128 -1
     (nil))
(insn 443 442 444 18 (set (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])
        (const_int 0 [0])) options.c:128 -1
     (nil))
(insn 444 443 445 18 (set (reg:DI 882)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 -1
     (nil))
(insn 445 444 446 18 (set (reg/f:DI 881)
        (lo_sum:DI (reg:DI 882)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 446 445 447 18 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:129 -1
     (nil))
(insn 447 446 448 18 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:129 -1
     (nil))
(insn 448 447 449 18 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) options.c:129 -1
     (nil))
(call_insn 449 448 450 18 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 450 449 451 18 (set (reg:DI 303 [ D.3798 ])
        (reg:DI 0 x0)) options.c:129 -1
     (nil))
(insn 451 450 452 18 (set (reg:DI 884)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 -1
     (nil))
(insn 452 451 453 18 (set (reg/f:DI 883)
        (lo_sum:DI (reg:DI 884)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 453 452 454 18 (set (mem/c:DI (reg/f:DI 883) [4 SCALE+0 S8 A64])
        (reg:DI 303 [ D.3798 ])) options.c:129 -1
     (nil))
(insn 454 453 455 18 (set (reg:SI 885)
        (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])) options.c:130 -1
     (nil))
(insn 455 454 456 18 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 885)
            (const_int 0 [0]))) options.c:130 -1
     (nil))
(jump_insn 456 455 457 18 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) options.c:130 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 474)
;;  succ:       19 [29.0%]  (FALLTHRU)
;;              20 [71.0%] 

;; basic block 19, loop depth 1, count 0, freq 4
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [29.0%]  (FALLTHRU)
(note 457 456 458 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 458 457 459 19 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:131 -1
     (nil))
(debug_insn 459 458 460 19 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)) options.c:131 -1
     (nil))
(insn 460 459 461 19 (set (reg:DI 887)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:131 -1
     (nil))
(insn 461 460 462 19 (set (reg/f:DI 886)
        (lo_sum:DI (reg:DI 887)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:131 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 462 461 463 19 (set (reg:DI 889)
        (high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 463 462 464 19 (set (reg/f:DI 888)
        (lo_sum:DI (reg:DI 889)
            (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
        (nil)))
(insn 464 463 465 19 (set (reg:DI 891)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 -1
     (nil))
(insn 465 464 466 19 (set (reg/f:DI 890)
        (lo_sum:DI (reg:DI 891)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 466 465 467 19 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 886) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 467 466 468 19 (set (reg:DI 2 x2)
        (reg/f:DI 888)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 468 467 469 19 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 469 468 470 19 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 890) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 470 469 471 19 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 471 470 472 19 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
(debug_insn 472 471 473 19 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
(debug_insn 473 472 172 19 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:132 -1
     (nil))
(insn 172 473 474 19 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:132 -1
     (nil))
;;  succ:       20 [100.0%]  (FALLTHRU)

;; basic block 20, loop depth 1, count 0, freq 12
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [71.0%] 
;;              19 [100.0%]  (FALLTHRU)
(code_label 474 172 475 20 30 "" [1 uses])
(note 475 474 476 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 476 475 477 20 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 477 476 478 20 (set (reg:DI 893)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 -1
     (nil))
(insn 478 477 479 20 (set (reg/f:DI 892)
        (lo_sum:DI (reg:DI 893)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 479 478 480 20 (set (reg:DI 894)
        (mem/c:DI (reg/f:DI 892) [4 SCALE+0 S8 A64])) options.c:134 -1
     (nil))
(insn 480 479 481 20 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 894)
            (const_int 0 [0]))) options.c:134 -1
     (nil))
(jump_insn 481 480 482 20 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:134 -1
     (int_list:REG_BR_PROB 8688 (nil))
 -> 924)
;;  succ:       21 [13.1%]  (FALLTHRU)
;;              63 [86.9%] 

;; basic block 21, loop depth 1, count 0, freq 2
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 [13.1%]  (FALLTHRU)
(note 482 481 483 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 483 482 484 21 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:135 -1
     (nil))
(debug_insn 484 483 485 21 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)) options.c:135 -1
     (nil))
(insn 485 484 486 21 (set (reg:DI 896)
        (high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 486 485 487 21 (set (reg/f:DI 895)
        (lo_sum:DI (reg:DI 896)
            (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
        (nil)))
(insn 487 486 488 21 (set (reg:DI 898)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 -1
     (nil))
(insn 488 487 489 21 (set (reg/f:DI 897)
        (lo_sum:DI (reg:DI 898)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 489 488 490 21 (set (reg:DI 2 x2)
        (reg/f:DI 895)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 490 489 491 21 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 491 490 492 21 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 897) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 492 491 493 21 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 493 492 494 21 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
(debug_insn 494 493 495 21 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
(debug_insn 495 494 188 21 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:136 -1
     (nil))
(insn 188 495 496 21 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:136 -1
     (nil))
(jump_insn 496 188 497 21 (set (pc)
        (label_ref 924)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 497 496 498)
;; basic block 22, loop depth 1, count 0, freq 12
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 498 497 499 22 24 "" [1 uses])
(note 499 498 500 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 500 499 501 22 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 501 500 502 22 (set (reg/f:DI 309 [ D.3807 ])
        (reg:DI 0 x0)) options.c:140 -1
     (nil))
(insn 502 501 503 22 (set (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])
        (const_int 0 [0])) options.c:140 -1
     (nil))
(insn 503 502 504 22 (set (reg:DI 900)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 -1
     (nil))
(insn 504 503 505 22 (set (reg/f:DI 899)
        (lo_sum:DI (reg:DI 900)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 505 504 506 22 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:141 -1
     (nil))
(insn 506 505 507 22 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:141 -1
     (nil))
(insn 507 506 508 22 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) options.c:141 -1
     (nil))
(call_insn 508 507 509 22 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 509 508 510 22 (set (reg:DI 311 [ D.3798 ])
        (reg:DI 0 x0)) options.c:141 -1
     (nil))
(insn 510 509 511 22 (set (reg:DI 902)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 -1
     (nil))
(insn 511 510 512 22 (set (reg/f:DI 901)
        (lo_sum:DI (reg:DI 902)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 512 511 513 22 (set (mem/c:DI (plus:DI (reg/f:DI 901)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])
        (reg:DI 311 [ D.3798 ])) options.c:141 -1
     (nil))
(insn 513 512 514 22 (set (reg:SI 903)
        (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])) options.c:142 -1
     (nil))
(insn 514 513 515 22 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 903)
            (const_int 0 [0]))) options.c:142 -1
     (nil))
(jump_insn 515 514 516 22 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 533)
            (pc))) options.c:142 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 533)
;;  succ:       23 [29.0%]  (FALLTHRU)
;;              24 [71.0%] 

;; basic block 23, loop depth 1, count 0, freq 4
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [29.0%]  (FALLTHRU)
(note 516 515 517 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 517 516 518 23 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:143 -1
     (nil))
(debug_insn 518 517 519 23 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)) options.c:143 -1
     (nil))
(insn 519 518 520 23 (set (reg:DI 905)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:143 -1
     (nil))
(insn 520 519 521 23 (set (reg/f:DI 904)
        (lo_sum:DI (reg:DI 905)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:143 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 521 520 522 23 (set (reg:DI 907)
        (high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 522 521 523 23 (set (reg/f:DI 906)
        (lo_sum:DI (reg:DI 907)
            (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
        (nil)))
(insn 523 522 524 23 (set (reg:DI 909)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 -1
     (nil))
(insn 524 523 525 23 (set (reg/f:DI 908)
        (lo_sum:DI (reg:DI 909)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 525 524 526 23 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 904) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 526 525 527 23 (set (reg:DI 2 x2)
        (reg/f:DI 906)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 527 526 528 23 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 528 527 529 23 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 908) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 529 528 530 23 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 530 529 531 23 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
(debug_insn 531 530 532 23 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
(debug_insn 532 531 173 23 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:144 -1
     (nil))
(insn 173 532 533 23 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:144 -1
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)

;; basic block 24, loop depth 1, count 0, freq 12
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 [71.0%] 
;;              23 [100.0%]  (FALLTHRU)
(code_label 533 173 534 24 31 "" [1 uses])
(note 534 533 535 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 535 534 536 24 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 536 535 537 24 (set (reg:DI 911)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 -1
     (nil))
(insn 537 536 538 24 (set (reg/f:DI 910)
        (lo_sum:DI (reg:DI 911)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 538 537 539 24 (set (reg:DI 912)
        (mem/c:DI (plus:DI (reg/f:DI 910)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) options.c:146 -1
     (nil))
(insn 539 538 540 24 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 912)
            (const_int 0 [0]))) options.c:146 -1
     (nil))
(jump_insn 540 539 541 24 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:146 -1
     (int_list:REG_BR_PROB 8688 (nil))
 -> 924)
;;  succ:       25 [13.1%]  (FALLTHRU)
;;              63 [86.9%] 

;; basic block 25, loop depth 1, count 0, freq 2
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [13.1%]  (FALLTHRU)
(note 541 540 542 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(debug_insn 542 541 543 25 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:147 -1
     (nil))
(debug_insn 543 542 544 25 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)) options.c:147 -1
     (nil))
(insn 544 543 545 25 (set (reg:DI 914)
        (high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 545 544 546 25 (set (reg/f:DI 913)
        (lo_sum:DI (reg:DI 914)
            (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
        (nil)))
(insn 546 545 547 25 (set (reg:DI 916)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 -1
     (nil))
(insn 547 546 548 25 (set (reg/f:DI 915)
        (lo_sum:DI (reg:DI 916)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 548 547 549 25 (set (reg:DI 2 x2)
        (reg/f:DI 913)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 549 548 550 25 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 550 549 551 25 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 915) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 551 550 552 25 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 552 551 553 25 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
(debug_insn 553 552 554 25 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
(debug_insn 554 553 187 25 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:148 -1
     (nil))
(insn 187 554 555 25 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:148 -1
     (nil))
(jump_insn 555 187 556 25 (set (pc)
        (label_ref 924)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 556 555 557)
;; basic block 26, loop depth 1, count 0, freq 12
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 557 556 558 26 18 "" [2 uses])
(note 558 557 559 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 559 558 560 26 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:153 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 560 559 561 26 (set (reg/f:DI 317 [ D.3807 ])
        (reg:DI 0 x0)) options.c:153 -1
     (nil))
(insn 561 560 562 26 (set (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])
        (const_int 0 [0])) options.c:153 -1
     (nil))
(insn 562 561 563 26 (set (reg:DI 918)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 -1
     (nil))
(insn 563 562 564 26 (set (reg/f:DI 917)
        (lo_sum:DI (reg:DI 918)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 564 563 565 26 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:154 -1
     (nil))
(insn 565 564 566 26 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 917) [2 optarg+0 S8 A64])) options.c:154 -1
     (nil))
(call_insn 566 565 567 26 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:154 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 567 566 568 26 (set (reg:DF 319 [ D.3804 ])
        (reg:DF 32 v0)) options.c:154 -1
     (nil))
(insn 568 567 569 26 (set (reg:DI 920)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 -1
     (nil))
(insn 569 568 570 26 (set (reg/f:DI 919)
        (lo_sum:DI (reg:DI 920)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 570 569 571 26 (set (mem/c:DF (plus:DI (reg/f:DI 919)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 319 [ D.3804 ])) options.c:154 -1
     (nil))
(insn 571 570 572 26 (set (reg:SI 921 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:155 -1
     (nil))
(insn 572 571 573 26 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 921 [ D.3797 ])
            (const_int 0 [0]))) options.c:155 -1
     (nil))
(jump_insn 573 572 574 26 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 588)
            (pc))) options.c:155 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 588)
;;  succ:       27 [29.0%]  (FALLTHRU)
;;              28 [71.0%] 

;; basic block 27, loop depth 1, count 0, freq 4
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 [29.0%]  (FALLTHRU)
(note 574 573 575 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 575 574 576 27 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:156 -1
     (nil))
(debug_insn 576 575 577 27 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)) options.c:156 -1
     (nil))
(insn 577 576 578 27 (set (reg:DI 923)
        (high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 578 577 579 27 (set (reg/f:DI 922)
        (lo_sum:DI (reg:DI 923)
            (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
        (nil)))
(insn 579 578 580 27 (set (reg:DI 925)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 -1
     (nil))
(insn 580 579 581 27 (set (reg/f:DI 924)
        (lo_sum:DI (reg:DI 925)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 581 580 582 27 (set (reg:DI 2 x2)
        (reg/f:DI 922)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 582 581 583 27 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 583 582 584 27 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 924) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 584 583 585 27 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 585 584 586 27 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
(debug_insn 586 585 587 27 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
(debug_insn 587 586 174 27 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:157 -1
     (nil))
(insn 174 587 588 27 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:157 -1
     (nil))
;;  succ:       28 [100.0%]  (FALLTHRU)

;; basic block 28, loop depth 1, count 0, freq 12
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [71.0%] 
;;              27 [100.0%]  (FALLTHRU)
(code_label 588 174 589 28 32 "" [1 uses])
(note 589 588 590 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 590 589 591 28 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 591 590 592 28 (set (reg:SI 926)
        (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])) options.c:159 -1
     (nil))
(insn 592 591 593 28 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 926)
            (const_int 0 [0]))) options.c:159 -1
     (nil))
(jump_insn 593 592 594 28 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 611)
            (pc))) options.c:159 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 611)
;;  succ:       29 [29.0%]  (FALLTHRU)
;;              30 [71.0%] 

;; basic block 29, loop depth 1, count 0, freq 4
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 [29.0%]  (FALLTHRU)
(note 594 593 595 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 595 594 596 29 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:160 -1
     (nil))
(debug_insn 596 595 597 29 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)) options.c:160 -1
     (nil))
(insn 597 596 598 29 (set (reg:DI 928)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 -1
     (nil))
(insn 598 597 599 29 (set (reg/f:DI 927)
        (lo_sum:DI (reg:DI 928)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 599 598 600 29 (set (reg:DI 930)
        (high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 600 599 601 29 (set (reg/f:DI 929)
        (lo_sum:DI (reg:DI 930)
            (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
        (nil)))
(insn 601 600 602 29 (set (reg:DI 932)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 -1
     (nil))
(insn 602 601 603 29 (set (reg/f:DI 931)
        (lo_sum:DI (reg:DI 932)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 603 602 604 29 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 927) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 604 603 605 29 (set (reg:DI 2 x2)
        (reg/f:DI 929)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 605 604 606 29 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 606 605 607 29 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 931) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 607 606 608 29 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 608 607 609 29 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
(debug_insn 609 608 610 29 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
(debug_insn 610 609 175 29 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:161 -1
     (nil))
(insn 175 610 611 29 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:161 -1
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU)

;; basic block 30, loop depth 1, count 0, freq 12
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 [71.0%] 
;;              29 [100.0%]  (FALLTHRU)
(code_label 611 175 612 30 33 "" [1 uses])
(note 612 611 613 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 613 612 614 30 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 614 613 615 30 (set (reg:DI 934)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 -1
     (nil))
(insn 615 614 616 30 (set (reg/f:DI 933)
        (lo_sum:DI (reg:DI 934)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 616 615 617 30 (set (reg:DF 935)
        (mem/c:DF (plus:DI (reg/f:DI 933)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:163 -1
     (nil))
(insn 617 616 618 30 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 935)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:163 -1
     (nil))
(jump_insn 618 617 4052 30 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4063)
            (pc))) options.c:163 7 {condjump}
     (int_list:REG_BR_PROB 1312 (nil))
 -> 4063)
;;  succ:       33 [13.1%] 
;;              31 [86.9%]  (FALLTHRU)

;; basic block 31, loop depth 1, count 0, freq 10
;;  prev block 30, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 [86.9%]  (FALLTHRU)
(note 4052 618 619 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(jump_insn 619 4052 620 31 (set (pc)
        (label_ref 636)) options.c:163 -1
     (nil)
 -> 636)
;;  succ:       34 [100.0%] 

(barrier 620 619 4063)
;; basic block 33, loop depth 1, count 0, freq 2
;;  prev block 31, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 [13.1%] 
(code_label 4063 620 622 33 215 "" [1 uses])
(note 622 4063 623 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(debug_insn 623 622 624 33 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:164 -1
     (nil))
(debug_insn 624 623 625 33 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)) options.c:164 -1
     (nil))
(insn 625 624 626 33 (set (reg:DI 937)
        (high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 626 625 627 33 (set (reg/f:DI 936)
        (lo_sum:DI (reg:DI 937)
            (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
        (nil)))
(insn 627 626 628 33 (set (reg:DI 939)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 -1
     (nil))
(insn 628 627 629 33 (set (reg/f:DI 938)
        (lo_sum:DI (reg:DI 939)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 629 628 630 33 (set (reg:DI 2 x2)
        (reg/f:DI 936)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 630 629 631 33 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 631 630 632 33 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 938) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 632 631 633 33 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 633 632 634 33 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
(debug_insn 634 633 635 33 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
(debug_insn 635 634 176 33 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:165 -1
     (nil))
(insn 176 635 636 33 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:165 -1
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)

;; basic block 34, loop depth 1, count 0, freq 12
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 [100.0%]  (FALLTHRU)
;;              31 [100.0%] 
(code_label 636 176 637 34 34 "" [1 uses])
(note 637 636 638 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(debug_insn 638 637 639 34 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 639 638 640 34 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:167 -1
     (nil))
(debug_insn 640 639 641 34 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:167 -1
     (nil))
(insn 641 640 642 34 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:168 -1
     (nil))
(debug_insn 642 641 643 34 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:168 -1
     (nil))
(jump_insn 643 642 644 34 (set (pc)
        (label_ref 924)) options.c:168 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 644 643 645)
;; basic block 35, loop depth 1, count 0, freq 12
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 645 644 646 35 19 "" [2 uses])
(note 646 645 647 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 647 646 648 35 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 648 647 649 35 (set (reg/f:DI 329 [ D.3807 ])
        (reg:DI 0 x0)) options.c:172 -1
     (nil))
(insn 649 648 650 35 (set (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])
        (const_int 0 [0])) options.c:172 -1
     (nil))
(insn 650 649 651 35 (set (reg:DI 941)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 -1
     (nil))
(insn 651 650 652 35 (set (reg/f:DI 940)
        (lo_sum:DI (reg:DI 941)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 652 651 653 35 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:173 -1
     (nil))
(insn 653 652 654 35 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 940) [2 optarg+0 S8 A64])) options.c:173 -1
     (nil))
(call_insn 654 653 655 35 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:173 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 655 654 656 35 (set (reg:DF 331 [ D.3804 ])
        (reg:DF 32 v0)) options.c:173 -1
     (nil))
(insn 656 655 657 35 (set (reg:DI 943)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 -1
     (nil))
(insn 657 656 658 35 (set (reg/f:DI 942)
        (lo_sum:DI (reg:DI 943)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 658 657 659 35 (set (mem/c:DF (plus:DI (reg/f:DI 942)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 331 [ D.3804 ])) options.c:173 -1
     (nil))
(insn 659 658 660 35 (set (reg:SI 944 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:174 -1
     (nil))
(insn 660 659 661 35 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 944 [ D.3797 ])
            (const_int 0 [0]))) options.c:174 -1
     (nil))
(jump_insn 661 660 662 35 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 676)
            (pc))) options.c:174 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 676)
;;  succ:       36 [29.0%]  (FALLTHRU)
;;              37 [71.0%] 

;; basic block 36, loop depth 1, count 0, freq 4
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 [29.0%]  (FALLTHRU)
(note 662 661 663 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(debug_insn 663 662 664 36 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:175 -1
     (nil))
(debug_insn 664 663 665 36 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)) options.c:175 -1
     (nil))
(insn 665 664 666 36 (set (reg:DI 946)
        (high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 666 665 667 36 (set (reg/f:DI 945)
        (lo_sum:DI (reg:DI 946)
            (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
        (nil)))
(insn 667 666 668 36 (set (reg:DI 948)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 -1
     (nil))
(insn 668 667 669 36 (set (reg/f:DI 947)
        (lo_sum:DI (reg:DI 948)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 669 668 670 36 (set (reg:DI 2 x2)
        (reg/f:DI 945)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 670 669 671 36 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 671 670 672 36 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 947) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 672 671 673 36 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 673 672 674 36 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
(debug_insn 674 673 675 36 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
(debug_insn 675 674 177 36 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:176 -1
     (nil))
(insn 177 675 676 36 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:176 -1
     (nil))
;;  succ:       37 [100.0%]  (FALLTHRU)

;; basic block 37, loop depth 1, count 0, freq 12
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 [71.0%] 
;;              36 [100.0%]  (FALLTHRU)
(code_label 676 177 677 37 36 "" [1 uses])
(note 677 676 678 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 678 677 679 37 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 679 678 680 37 (set (reg:SI 949)
        (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])) options.c:178 -1
     (nil))
(insn 680 679 681 37 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 949)
            (const_int 0 [0]))) options.c:178 -1
     (nil))
(jump_insn 681 680 682 37 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) options.c:178 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 699)
;;  succ:       38 [29.0%]  (FALLTHRU)
;;              39 [71.0%] 

;; basic block 38, loop depth 1, count 0, freq 4
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 [29.0%]  (FALLTHRU)
(note 682 681 683 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 683 682 684 38 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:179 -1
     (nil))
(debug_insn 684 683 685 38 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)) options.c:179 -1
     (nil))
(insn 685 684 686 38 (set (reg:DI 951)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 -1
     (nil))
(insn 686 685 687 38 (set (reg/f:DI 950)
        (lo_sum:DI (reg:DI 951)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 687 686 688 38 (set (reg:DI 953)
        (high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 688 687 689 38 (set (reg/f:DI 952)
        (lo_sum:DI (reg:DI 953)
            (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
        (nil)))
(insn 689 688 690 38 (set (reg:DI 955)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 -1
     (nil))
(insn 690 689 691 38 (set (reg/f:DI 954)
        (lo_sum:DI (reg:DI 955)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 691 690 692 38 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 950) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 692 691 693 38 (set (reg:DI 2 x2)
        (reg/f:DI 952)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 693 692 694 38 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 694 693 695 38 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 954) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 695 694 696 38 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 696 695 697 38 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
(debug_insn 697 696 698 38 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
(debug_insn 698 697 178 38 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:180 -1
     (nil))
(insn 178 698 699 38 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:180 -1
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)

;; basic block 39, loop depth 1, count 0, freq 12
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 [71.0%] 
;;              38 [100.0%]  (FALLTHRU)
(code_label 699 178 700 39 37 "" [1 uses])
(note 700 699 701 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(debug_insn 701 700 702 39 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 702 701 703 39 (set (reg:DI 957)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 -1
     (nil))
(insn 703 702 704 39 (set (reg/f:DI 956)
        (lo_sum:DI (reg:DI 957)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 704 703 705 39 (set (reg:DF 958)
        (mem/c:DF (plus:DI (reg/f:DI 956)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:182 -1
     (nil))
(insn 705 704 706 39 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 958)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:182 -1
     (nil))
(jump_insn 706 705 4054 39 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4064)
            (pc))) options.c:182 7 {condjump}
     (int_list:REG_BR_PROB 1312 (nil))
 -> 4064)
;;  succ:       42 [13.1%] 
;;              40 [86.9%]  (FALLTHRU)

;; basic block 40, loop depth 1, count 0, freq 10
;;  prev block 39, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 [86.9%]  (FALLTHRU)
(note 4054 706 707 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 707 4054 708 40 (set (pc)
        (label_ref 724)) options.c:182 -1
     (nil)
 -> 724)
;;  succ:       43 [100.0%] 

(barrier 708 707 4064)
;; basic block 42, loop depth 1, count 0, freq 2
;;  prev block 40, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 [13.1%] 
(code_label 4064 708 710 42 216 "" [1 uses])
(note 710 4064 711 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 711 710 712 42 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:183 -1
     (nil))
(debug_insn 712 711 713 42 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)) options.c:183 -1
     (nil))
(insn 713 712 714 42 (set (reg:DI 960)
        (high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 714 713 715 42 (set (reg/f:DI 959)
        (lo_sum:DI (reg:DI 960)
            (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
        (nil)))
(insn 715 714 716 42 (set (reg:DI 962)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 -1
     (nil))
(insn 716 715 717 42 (set (reg/f:DI 961)
        (lo_sum:DI (reg:DI 962)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 717 716 718 42 (set (reg:DI 2 x2)
        (reg/f:DI 959)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 718 717 719 42 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 719 718 720 42 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 961) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 720 719 721 42 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 721 720 722 42 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
(debug_insn 722 721 723 42 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
(debug_insn 723 722 179 42 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:184 -1
     (nil))
(insn 179 723 724 42 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:184 -1
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)

;; basic block 43, loop depth 1, count 0, freq 12
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 [100.0%]  (FALLTHRU)
;;              40 [100.0%] 
(code_label 724 179 725 43 38 "" [1 uses])
(note 725 724 726 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(debug_insn 726 725 727 43 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 727 726 728 43 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:186 -1
     (nil))
(debug_insn 728 727 729 43 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:186 -1
     (nil))
(insn 729 728 730 43 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:187 -1
     (nil))
(debug_insn 730 729 731 43 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:187 -1
     (nil))
(jump_insn 731 730 732 43 (set (pc)
        (label_ref 924)) options.c:187 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 732 731 733)
;; basic block 44, loop depth 1, count 0, freq 12
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 733 732 734 44 20 "" [2 uses])
(note 734 733 735 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 735 734 736 44 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 736 735 737 44 (set (reg/f:DI 339 [ D.3807 ])
        (reg:DI 0 x0)) options.c:191 -1
     (nil))
(insn 737 736 738 44 (set (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])
        (const_int 0 [0])) options.c:191 -1
     (nil))
(insn 738 737 739 44 (set (reg:DI 964)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 -1
     (nil))
(insn 739 738 740 44 (set (reg/f:DI 963)
        (lo_sum:DI (reg:DI 964)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 740 739 741 44 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:192 -1
     (nil))
(insn 741 740 742 44 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 963) [2 optarg+0 S8 A64])) options.c:192 -1
     (nil))
(call_insn 742 741 743 44 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 743 742 744 44 (set (reg:DF 341 [ D.3804 ])
        (reg:DF 32 v0)) options.c:192 -1
     (nil))
(insn 744 743 745 44 (set (reg:DI 966)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 -1
     (nil))
(insn 745 744 746 44 (set (reg/f:DI 965)
        (lo_sum:DI (reg:DI 966)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 746 745 747 44 (set (mem/c:DF (plus:DI (reg/f:DI 965)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 341 [ D.3804 ])) options.c:192 -1
     (nil))
(insn 747 746 748 44 (set (reg:SI 967 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:193 -1
     (nil))
(insn 748 747 749 44 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 967 [ D.3797 ])
            (const_int 0 [0]))) options.c:193 -1
     (nil))
(jump_insn 749 748 750 44 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 764)
            (pc))) options.c:193 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 764)
;;  succ:       45 [29.0%]  (FALLTHRU)
;;              46 [71.0%] 

;; basic block 45, loop depth 1, count 0, freq 4
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 [29.0%]  (FALLTHRU)
(note 750 749 751 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(debug_insn 751 750 752 45 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:194 -1
     (nil))
(debug_insn 752 751 753 45 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)) options.c:194 -1
     (nil))
(insn 753 752 754 45 (set (reg:DI 969)
        (high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 754 753 755 45 (set (reg/f:DI 968)
        (lo_sum:DI (reg:DI 969)
            (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
        (nil)))
(insn 755 754 756 45 (set (reg:DI 971)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 -1
     (nil))
(insn 756 755 757 45 (set (reg/f:DI 970)
        (lo_sum:DI (reg:DI 971)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 757 756 758 45 (set (reg:DI 2 x2)
        (reg/f:DI 968)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 758 757 759 45 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 759 758 760 45 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 970) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 760 759 761 45 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 761 760 762 45 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
(debug_insn 762 761 763 45 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
(debug_insn 763 762 180 45 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:195 -1
     (nil))
(insn 180 763 764 45 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:195 -1
     (nil))
;;  succ:       46 [100.0%]  (FALLTHRU)

;; basic block 46, loop depth 1, count 0, freq 12
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 [71.0%] 
;;              45 [100.0%]  (FALLTHRU)
(code_label 764 180 765 46 40 "" [1 uses])
(note 765 764 766 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(debug_insn 766 765 767 46 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 767 766 768 46 (set (reg:SI 972)
        (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])) options.c:197 -1
     (nil))
(insn 768 767 769 46 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 972)
            (const_int 0 [0]))) options.c:197 -1
     (nil))
(jump_insn 769 768 770 46 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 787)
            (pc))) options.c:197 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 787)
;;  succ:       47 [29.0%]  (FALLTHRU)
;;              48 [71.0%] 

;; basic block 47, loop depth 1, count 0, freq 4
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 [29.0%]  (FALLTHRU)
(note 770 769 771 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(debug_insn 771 770 772 47 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:198 -1
     (nil))
(debug_insn 772 771 773 47 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)) options.c:198 -1
     (nil))
(insn 773 772 774 47 (set (reg:DI 974)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 -1
     (nil))
(insn 774 773 775 47 (set (reg/f:DI 973)
        (lo_sum:DI (reg:DI 974)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 775 774 776 47 (set (reg:DI 976)
        (high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 776 775 777 47 (set (reg/f:DI 975)
        (lo_sum:DI (reg:DI 976)
            (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
        (nil)))
(insn 777 776 778 47 (set (reg:DI 978)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 -1
     (nil))
(insn 778 777 779 47 (set (reg/f:DI 977)
        (lo_sum:DI (reg:DI 978)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 779 778 780 47 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 973) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 780 779 781 47 (set (reg:DI 2 x2)
        (reg/f:DI 975)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 781 780 782 47 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 782 781 783 47 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 977) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 783 782 784 47 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 784 783 785 47 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
(debug_insn 785 784 786 47 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
(debug_insn 786 785 181 47 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:199 -1
     (nil))
(insn 181 786 787 47 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:199 -1
     (nil))
;;  succ:       48 [100.0%]  (FALLTHRU)

;; basic block 48, loop depth 1, count 0, freq 12
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 [71.0%] 
;;              47 [100.0%]  (FALLTHRU)
(code_label 787 181 788 48 41 "" [1 uses])
(note 788 787 789 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(debug_insn 789 788 790 48 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 790 789 791 48 (set (reg:DI 980)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 -1
     (nil))
(insn 791 790 792 48 (set (reg/f:DI 979)
        (lo_sum:DI (reg:DI 980)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 792 791 793 48 (set (reg:DF 981)
        (mem/c:DF (plus:DI (reg/f:DI 979)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:201 -1
     (nil))
(insn 793 792 794 48 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 981)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:201 -1
     (nil))
(jump_insn 794 793 4056 48 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4065)
            (pc))) options.c:201 7 {condjump}
     (int_list:REG_BR_PROB 1312 (nil))
 -> 4065)
;;  succ:       51 [13.1%] 
;;              49 [86.9%]  (FALLTHRU)

;; basic block 49, loop depth 1, count 0, freq 10
;;  prev block 48, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 [86.9%]  (FALLTHRU)
(note 4056 794 795 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 795 4056 796 49 (set (pc)
        (label_ref 812)) options.c:201 -1
     (nil)
 -> 812)
;;  succ:       52 [100.0%] 

(barrier 796 795 4065)
;; basic block 51, loop depth 1, count 0, freq 2
;;  prev block 49, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 [13.1%] 
(code_label 4065 796 798 51 217 "" [1 uses])
(note 798 4065 799 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(debug_insn 799 798 800 51 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:202 -1
     (nil))
(debug_insn 800 799 801 51 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)) options.c:202 -1
     (nil))
(insn 801 800 802 51 (set (reg:DI 983)
        (high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 802 801 803 51 (set (reg/f:DI 982)
        (lo_sum:DI (reg:DI 983)
            (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
        (nil)))
(insn 803 802 804 51 (set (reg:DI 985)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 -1
     (nil))
(insn 804 803 805 51 (set (reg/f:DI 984)
        (lo_sum:DI (reg:DI 985)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 805 804 806 51 (set (reg:DI 2 x2)
        (reg/f:DI 982)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 806 805 807 51 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 807 806 808 51 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 984) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 808 807 809 51 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 809 808 810 51 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
(debug_insn 810 809 811 51 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
(debug_insn 811 810 182 51 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:203 -1
     (nil))
(insn 182 811 812 51 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:203 -1
     (nil))
;;  succ:       52 [100.0%]  (FALLTHRU)

;; basic block 52, loop depth 1, count 0, freq 12
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       51 [100.0%]  (FALLTHRU)
;;              49 [100.0%] 
(code_label 812 182 813 52 42 "" [1 uses])
(note 813 812 814 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(debug_insn 814 813 815 52 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 815 814 816 52 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:205 -1
     (nil))
(debug_insn 816 815 817 52 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:205 -1
     (nil))
(insn 817 816 818 52 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:206 -1
     (nil))
(debug_insn 818 817 819 52 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:206 -1
     (nil))
(jump_insn 819 818 820 52 (set (pc)
        (label_ref 924)) options.c:206 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 820 819 821)
;; basic block 53, loop depth 1, count 0, freq 12
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [8.0%] 
(code_label 821 820 822 53 21 "" [2 uses])
(note 822 821 823 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 823 822 824 53 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:210 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 824 823 825 53 (set (reg/f:DI 349 [ D.3807 ])
        (reg:DI 0 x0)) options.c:210 -1
     (nil))
(insn 825 824 826 53 (set (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])
        (const_int 0 [0])) options.c:210 -1
     (nil))
(insn 826 825 827 53 (set (reg:DI 987)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 -1
     (nil))
(insn 827 826 828 53 (set (reg/f:DI 986)
        (lo_sum:DI (reg:DI 987)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 828 827 829 53 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:211 -1
     (nil))
(insn 829 828 830 53 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 986) [2 optarg+0 S8 A64])) options.c:211 -1
     (nil))
(call_insn 830 829 831 53 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:211 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 831 830 832 53 (set (reg:DF 351 [ D.3804 ])
        (reg:DF 32 v0)) options.c:211 -1
     (nil))
(insn 832 831 833 53 (set (reg:DI 989)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 -1
     (nil))
(insn 833 832 834 53 (set (reg/f:DI 988)
        (lo_sum:DI (reg:DI 989)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 834 833 835 53 (set (mem/c:DF (plus:DI (reg/f:DI 988)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 351 [ D.3804 ])) options.c:211 -1
     (nil))
(insn 835 834 836 53 (set (reg:SI 990 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:212 -1
     (nil))
(insn 836 835 837 53 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 990 [ D.3797 ])
            (const_int 0 [0]))) options.c:212 -1
     (nil))
(jump_insn 837 836 838 53 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 852)
            (pc))) options.c:212 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 852)
;;  succ:       54 [29.0%]  (FALLTHRU)
;;              55 [71.0%] 

;; basic block 54, loop depth 1, count 0, freq 4
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 [29.0%]  (FALLTHRU)
(note 838 837 839 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(debug_insn 839 838 840 54 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:213 -1
     (nil))
(debug_insn 840 839 841 54 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)) options.c:213 -1
     (nil))
(insn 841 840 842 54 (set (reg:DI 992)
        (high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 842 841 843 54 (set (reg/f:DI 991)
        (lo_sum:DI (reg:DI 992)
            (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
        (nil)))
(insn 843 842 844 54 (set (reg:DI 994)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 -1
     (nil))
(insn 844 843 845 54 (set (reg/f:DI 993)
        (lo_sum:DI (reg:DI 994)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 845 844 846 54 (set (reg:DI 2 x2)
        (reg/f:DI 991)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 846 845 847 54 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 847 846 848 54 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 993) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 848 847 849 54 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 849 848 850 54 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
(debug_insn 850 849 851 54 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
(debug_insn 851 850 183 54 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:214 -1
     (nil))
(insn 183 851 852 54 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:214 -1
     (nil))
;;  succ:       55 [100.0%]  (FALLTHRU)

;; basic block 55, loop depth 1, count 0, freq 12
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       53 [71.0%] 
;;              54 [100.0%]  (FALLTHRU)
(code_label 852 183 853 55 44 "" [1 uses])
(note 853 852 854 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(debug_insn 854 853 855 55 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 855 854 856 55 (set (reg:SI 995)
        (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])) options.c:216 -1
     (nil))
(insn 856 855 857 55 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 995)
            (const_int 0 [0]))) options.c:216 -1
     (nil))
(jump_insn 857 856 858 55 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) options.c:216 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 875)
;;  succ:       56 [29.0%]  (FALLTHRU)
;;              57 [71.0%] 

;; basic block 56, loop depth 1, count 0, freq 4
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 [29.0%]  (FALLTHRU)
(note 858 857 859 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(debug_insn 859 858 860 56 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:217 -1
     (nil))
(debug_insn 860 859 861 56 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)) options.c:217 -1
     (nil))
(insn 861 860 862 56 (set (reg:DI 997)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 -1
     (nil))
(insn 862 861 863 56 (set (reg/f:DI 996)
        (lo_sum:DI (reg:DI 997)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 863 862 864 56 (set (reg:DI 999)
        (high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 864 863 865 56 (set (reg/f:DI 998)
        (lo_sum:DI (reg:DI 999)
            (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
        (nil)))
(insn 865 864 866 56 (set (reg:DI 1001)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 -1
     (nil))
(insn 866 865 867 56 (set (reg/f:DI 1000)
        (lo_sum:DI (reg:DI 1001)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 867 866 868 56 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 996) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 868 867 869 56 (set (reg:DI 2 x2)
        (reg/f:DI 998)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 869 868 870 56 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 870 869 871 56 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1000) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 871 870 872 56 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 872 871 873 56 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
(debug_insn 873 872 874 56 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
(debug_insn 874 873 184 56 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:218 -1
     (nil))
(insn 184 874 875 56 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:218 -1
     (nil))
;;  succ:       57 [100.0%]  (FALLTHRU)

;; basic block 57, loop depth 1, count 0, freq 12
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 [71.0%] 
;;              56 [100.0%]  (FALLTHRU)
(code_label 875 184 876 57 45 "" [1 uses])
(note 876 875 877 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(debug_insn 877 876 878 57 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 878 877 879 57 (set (reg:DI 1003)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 -1
     (nil))
(insn 879 878 880 57 (set (reg/f:DI 1002)
        (lo_sum:DI (reg:DI 1003)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 880 879 881 57 (set (reg:DF 1004)
        (mem/c:DF (plus:DI (reg/f:DI 1002)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:220 -1
     (nil))
(insn 881 880 882 57 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1004)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:220 -1
     (nil))
(jump_insn 882 881 4058 57 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4066)
            (pc))) options.c:220 7 {condjump}
     (int_list:REG_BR_PROB 1312 (nil))
 -> 4066)
;;  succ:       60 [13.1%] 
;;              58 [86.9%]  (FALLTHRU)

;; basic block 58, loop depth 1, count 0, freq 10
;;  prev block 57, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 [86.9%]  (FALLTHRU)
(note 4058 882 883 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(jump_insn 883 4058 884 58 (set (pc)
        (label_ref 900)) options.c:220 -1
     (nil)
 -> 900)
;;  succ:       61 [100.0%] 

(barrier 884 883 4066)
;; basic block 60, loop depth 1, count 0, freq 2
;;  prev block 58, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 [13.1%] 
(code_label 4066 884 886 60 218 "" [1 uses])
(note 886 4066 887 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(debug_insn 887 886 888 60 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:221 -1
     (nil))
(debug_insn 888 887 889 60 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)) options.c:221 -1
     (nil))
(insn 889 888 890 60 (set (reg:DI 1006)
        (high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 890 889 891 60 (set (reg/f:DI 1005)
        (lo_sum:DI (reg:DI 1006)
            (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
        (nil)))
(insn 891 890 892 60 (set (reg:DI 1008)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 -1
     (nil))
(insn 892 891 893 60 (set (reg/f:DI 1007)
        (lo_sum:DI (reg:DI 1008)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 893 892 894 60 (set (reg:DI 2 x2)
        (reg/f:DI 1005)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 894 893 895 60 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 895 894 896 60 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1007) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 896 895 897 60 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 897 896 898 60 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
(debug_insn 898 897 899 60 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
(debug_insn 899 898 185 60 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:222 -1
     (nil))
(insn 185 899 900 60 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:222 -1
     (nil))
;;  succ:       61 [100.0%]  (FALLTHRU)

;; basic block 61, loop depth 1, count 0, freq 12
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 [100.0%]  (FALLTHRU)
;;              58 [100.0%] 
(code_label 900 185 901 61 46 "" [1 uses])
(note 901 900 902 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(debug_insn 902 901 903 61 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 903 902 904 61 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:224 -1
     (nil))
(debug_insn 904 903 905 61 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:224 -1
     (nil))
(insn 905 904 906 61 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:225 -1
     (nil))
(debug_insn 906 905 907 61 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:225 -1
     (nil))
(jump_insn 907 906 908 61 (set (pc)
        (label_ref 924)) options.c:225 -1
     (nil)
 -> 924)
;;  succ:       63 [100.0%] 

(barrier 908 907 909)
;; basic block 62, loop depth 1, count 0, freq 12
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 [4.0%] 
;;              8 [50.0%] 
(code_label 909 908 910 62 15 "" [40 uses])
(note 910 909 911 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(debug_insn 911 910 912 62 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:228 -1
     (nil))
(debug_insn 912 911 913 62 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)) options.c:228 -1
     (nil))
(insn 913 912 914 62 (set (reg:DI 1010)
        (high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 914 913 915 62 (set (reg/f:DI 1009)
        (lo_sum:DI (reg:DI 1010)
            (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)
        (nil)))
(insn 915 914 916 62 (set (reg:DI 1012)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 -1
     (nil))
(insn 916 915 917 62 (set (reg/f:DI 1011)
        (lo_sum:DI (reg:DI 1012)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 917 916 918 62 (set (reg:DI 2 x2)
        (reg/f:DI 1009)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 918 917 919 62 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 919 918 920 62 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1011) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 920 919 921 62 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 921 920 922 62 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
(debug_insn 922 921 923 62 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
(debug_insn 923 922 186 62 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:229 -1
     (nil))
(insn 186 923 924 62 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:229 -1
     (nil))
;;  succ:       63 [100.0%]  (FALLTHRU)

;; basic block 63, loop depth 1, count 0, freq 132, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [93.3%] 
;;              13 [100.0%] 
;;              12 [100.0%] 
;;              62 [100.0%]  (FALLTHRU)
;;              61 [100.0%] 
;;              52 [100.0%] 
;;              43 [100.0%] 
;;              34 [100.0%] 
;;              25 [100.0%] 
;;              24 [86.9%] 
;;              21 [100.0%] 
;;              20 [86.9%] 
;;              17 [100.0%] 
;;              16 [93.3%] 
;;              15 [100.0%] 
(code_label 924 186 925 63 29 "" [14 uses])
(note 925 924 926 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
;;  succ:       64 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 64, loop depth 1, count 0, freq 166, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%] 
;;              63 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 926 925 927 64 14 "" [1 uses])
(note 927 926 928 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(debug_insn 928 927 929 64 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) -1
     (nil))
(debug_insn 929 928 930 64 (var_location:SI nset (reg/v:SI 328 [ nset ])) -1
     (nil))
(debug_insn 930 929 931 64 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 931 930 932 64 (set (reg:DI 1014)
        (high:DI (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 -1
     (nil))
(insn 932 931 933 64 (set (reg/f:DI 1013)
        (lo_sum:DI (reg:DI 1014)
            (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
        (nil)))
(insn 933 932 934 64 (set (reg:DI 2 x2)
        (reg/f:DI 1013)) options.c:51 -1
     (nil))
(insn 934 933 935 64 (set (reg:DI 1 x1)
        (reg/v/f:DI 838 [ argv ])) options.c:51 -1
     (nil))
(insn 935 934 936 64 (set (reg:SI 0 x0)
        (reg/v:SI 837 [ argc ])) options.c:51 -1
     (nil))
(call_insn 936 935 937 64 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>) [0 getopt S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:51 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 937 936 938 64 (set (reg/v:SI 294 [ c ])
        (reg:SI 0 x0)) options.c:51 -1
     (nil))
(debug_insn 938 937 940 64 (var_location:SI c (reg/v:SI 294 [ c ])) options.c:51 -1
     (nil))
(insn 940 938 941 64 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 294 [ c ])
            (const_int -1 [0xffffffffffffffff]))) options.c:51 -1
     (nil))
(jump_insn 941 940 942 64 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 939)
            (pc))) options.c:51 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 939)
;;  succ:       8 [97.0%] 
;;              65 [3.0%]  (FALLTHRU)

;; basic block 65, loop depth 0, count 0, freq 5
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 [3.0%]  (FALLTHRU)
(note 942 941 943 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 65 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 360 [ err ])
            (const_int 0 [0]))) options.c:232 -1
     (nil))
(jump_insn 944 943 945 65 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 949)
            (pc))) options.c:232 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 949)
;;  succ:       66 [0.0%]  (FALLTHRU)
;;              67 [100.0%] 

;; basic block 66, loop depth 0, count 0, freq 0
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 [0.0%]  (FALLTHRU)
(note 945 944 946 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 66 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:233 -1
     (nil))
(call_insn 947 946 948 66 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:233 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 948 947 949)
;; basic block 67, loop depth 0, count 0, freq 5
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 [100.0%] 
(code_label 949 948 950 67 49 "" [1 uses])
(note 950 949 951 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 951 950 952 67 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 3 [0x3]))) options.c:234 -1
     (nil))
(jump_insn 952 951 953 67 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1115)
            (pc))) options.c:234 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1115)
;;  succ:       68 [28.0%]  (FALLTHRU)
;;              82 [72.0%] 

;; basic block 68, loop depth 0, count 0, freq 1
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 [28.0%]  (FALLTHRU)
(note 953 952 954 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 68 (set (reg:SI 1015)
        (plus:SI (reg/v:SI 320 [ whichset ])
            (const_int -7 [0xfffffffffffffff9]))) options.c:235 -1
     (nil))
(insn 955 954 956 68 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1015)
            (const_int 7 [0x7]))) options.c:235 -1
     (nil))
(jump_insn 956 955 4060 68 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1043)
            (pc))) options.c:235 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1043)
;;  succ:       74 [50.0%] 
;;              69 [50.0%]  (FALLTHRU)

;; basic block 69, loop depth 0, count 0, freq 1
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 [50.0%]  (FALLTHRU)
(note 4060 956 957 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 957 4060 958 69 (set (reg:DI 1017)
        (high:DI (label_ref 960))) options.c:235 -1
     (insn_list:REG_LABEL_OPERAND 960 (nil)))
(insn 958 957 959 69 (set (reg/f:DI 1016)
        (lo_sum:DI (reg:DI 1017)
            (label_ref 960))) options.c:235 -1
     (insn_list:REG_LABEL_OPERAND 960 (expr_list:REG_EQUAL (label_ref 960)
            (nil))))
(jump_insn 959 958 960 69 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 1016)
                            (reg:SI 1015)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 960))
        ]) options.c:235 -1
     (nil)
 -> 960)
;;  succ:       74 [11.1%] 
;;              70 [22.2%] 
;;              71 [22.2%] 
;;              72 [22.2%] 
;;              73 [22.2%] 

;; Insn is not within a basic block
(code_label 960 959 961 53 "" [3 uses])
;; Insn is not within a basic block
(jump_table_data 961 960 962 (addr_diff_vec:DI (label_ref:DI 960)
         [
            (label_ref:DI 963)
            (label_ref:DI 1043)
            (label_ref:DI 1043)
            (label_ref:DI 1043)
            (label_ref:DI 983)
            (label_ref:DI 1043)
            (label_ref:DI 1003)
            (label_ref:DI 1023)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 962 961 963)
;; basic block 70, loop depth 0, count 0, freq 0
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [22.2%] 
(code_label 963 962 964 70 52 "" [1 uses])
(note 964 963 965 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 966 70 (set (reg:DI 1019)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))
(insn 966 965 967 70 (set (reg/f:DI 1018)
        (lo_sum:DI (reg:DI 1019)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 967 966 968 70 (set (reg:DI 1021)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))
(insn 968 967 969 70 (set (reg/f:DI 1020)
        (lo_sum:DI (reg:DI 1021)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 969 968 970 70 (set (reg:DI 1023)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))
(insn 970 969 971 70 (set (reg/f:DI 1022)
        (lo_sum:DI (reg:DI 1023)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 971 970 972 70 (set (reg:DF 1025)
        (mem/c:DF (plus:DI (reg/f:DI 1020)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:237 -1
     (nil))
(insn 972 971 973 70 (set (reg:DF 1026)
        (mem/c:DF (plus:DI (reg/f:DI 1022)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:237 -1
     (nil))
(insn 973 972 974 70 (set (reg:DF 1024 [ D.3804 ])
        (plus:DF (reg:DF 1025)
            (reg:DF 1026))) options.c:237 -1
     (nil))
(insn 974 973 975 70 (set (reg:DI 1028)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (nil))
(insn 975 974 976 70 (set (reg/f:DI 1027)
        (lo_sum:DI (reg:DI 1028)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 976 975 977 70 (set (reg:DF 1030)
        (mem/c:DF (plus:DI (reg/f:DI 1027)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:237 -1
     (nil))
(insn 977 976 978 70 (set (reg:DF 1029 [ D.3804 ])
        (plus:DF (reg:DF 1024 [ D.3804 ])
            (reg:DF 1030))) options.c:237 -1
     (nil))
(insn 978 977 979 70 (set (reg:DF 1032)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:237 -1
     (nil))
(insn 979 978 980 70 (set (reg:DF 1031 [ D.3804 ])
        (minus:DF (reg:DF 1032)
            (reg:DF 1029 [ D.3804 ]))) options.c:237 -1
     (nil))
(insn 980 979 981 70 (set (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1031 [ D.3804 ])) options.c:237 -1
     (nil))
(jump_insn 981 980 982 70 (set (pc)
        (label_ref 1059)) options.c:237 -1
     (nil)
 -> 1059)
;;  succ:       75 [100.0%] 

(barrier 982 981 983)
;; basic block 71, loop depth 0, count 0, freq 0
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [22.2%] 
(code_label 983 982 984 71 54 "" [1 uses])
(note 984 983 985 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 986 71 (set (reg:DI 1034)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))
(insn 986 985 987 71 (set (reg/f:DI 1033)
        (lo_sum:DI (reg:DI 1034)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 987 986 988 71 (set (reg:DI 1036)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))
(insn 988 987 989 71 (set (reg/f:DI 1035)
        (lo_sum:DI (reg:DI 1036)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 989 988 990 71 (set (reg:DI 1038)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))
(insn 990 989 991 71 (set (reg/f:DI 1037)
        (lo_sum:DI (reg:DI 1038)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 991 990 992 71 (set (reg:DF 1040)
        (mem/c:DF (plus:DI (reg/f:DI 1035)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:240 -1
     (nil))
(insn 992 991 993 71 (set (reg:DF 1041)
        (mem/c:DF (plus:DI (reg/f:DI 1037)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:240 -1
     (nil))
(insn 993 992 994 71 (set (reg:DF 1039 [ D.3804 ])
        (plus:DF (reg:DF 1040)
            (reg:DF 1041))) options.c:240 -1
     (nil))
(insn 994 993 995 71 (set (reg:DI 1043)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (nil))
(insn 995 994 996 71 (set (reg/f:DI 1042)
        (lo_sum:DI (reg:DI 1043)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 996 995 997 71 (set (reg:DF 1045)
        (mem/c:DF (plus:DI (reg/f:DI 1042)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:240 -1
     (nil))
(insn 997 996 998 71 (set (reg:DF 1044 [ D.3804 ])
        (plus:DF (reg:DF 1039 [ D.3804 ])
            (reg:DF 1045))) options.c:240 -1
     (nil))
(insn 998 997 999 71 (set (reg:DF 1047)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:240 -1
     (nil))
(insn 999 998 1000 71 (set (reg:DF 1046 [ D.3804 ])
        (minus:DF (reg:DF 1047)
            (reg:DF 1044 [ D.3804 ]))) options.c:240 -1
     (nil))
(insn 1000 999 1001 71 (set (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 1046 [ D.3804 ])) options.c:240 -1
     (nil))
(jump_insn 1001 1000 1002 71 (set (pc)
        (label_ref 1059)) options.c:240 -1
     (nil)
 -> 1059)
;;  succ:       75 [100.0%] 

(barrier 1002 1001 1003)
;; basic block 72, loop depth 0, count 0, freq 0
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [22.2%] 
(code_label 1003 1002 1004 72 55 "" [1 uses])
(note 1004 1003 1005 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1005 1004 1006 72 (set (reg:DI 1049)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))
(insn 1006 1005 1007 72 (set (reg/f:DI 1048)
        (lo_sum:DI (reg:DI 1049)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1007 1006 1008 72 (set (reg:DI 1051)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))
(insn 1008 1007 1009 72 (set (reg/f:DI 1050)
        (lo_sum:DI (reg:DI 1051)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1009 1008 1010 72 (set (reg:DI 1053)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))
(insn 1010 1009 1011 72 (set (reg/f:DI 1052)
        (lo_sum:DI (reg:DI 1053)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1011 1010 1012 72 (set (reg:DF 1055)
        (mem/c:DF (plus:DI (reg/f:DI 1050)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:243 -1
     (nil))
(insn 1012 1011 1013 72 (set (reg:DF 1056)
        (mem/c:DF (plus:DI (reg/f:DI 1052)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:243 -1
     (nil))
(insn 1013 1012 1014 72 (set (reg:DF 1054 [ D.3804 ])
        (plus:DF (reg:DF 1055)
            (reg:DF 1056))) options.c:243 -1
     (nil))
(insn 1014 1013 1015 72 (set (reg:DI 1058)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (nil))
(insn 1015 1014 1016 72 (set (reg/f:DI 1057)
        (lo_sum:DI (reg:DI 1058)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1016 1015 1017 72 (set (reg:DF 1060)
        (mem/c:DF (plus:DI (reg/f:DI 1057)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:243 -1
     (nil))
(insn 1017 1016 1018 72 (set (reg:DF 1059 [ D.3804 ])
        (plus:DF (reg:DF 1054 [ D.3804 ])
            (reg:DF 1060))) options.c:243 -1
     (nil))
(insn 1018 1017 1019 72 (set (reg:DF 1062)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:243 -1
     (nil))
(insn 1019 1018 1020 72 (set (reg:DF 1061 [ D.3804 ])
        (minus:DF (reg:DF 1062)
            (reg:DF 1059 [ D.3804 ]))) options.c:243 -1
     (nil))
(insn 1020 1019 1021 72 (set (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 1061 [ D.3804 ])) options.c:243 -1
     (nil))
(jump_insn 1021 1020 1022 72 (set (pc)
        (label_ref 1059)) options.c:243 -1
     (nil)
 -> 1059)
;;  succ:       75 [100.0%] 

(barrier 1022 1021 1023)
;; basic block 73, loop depth 0, count 0, freq 0
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [22.2%] 
(code_label 1023 1022 1024 73 56 "" [1 uses])
(note 1024 1023 1025 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1025 1024 1026 73 (set (reg:DI 1064)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))
(insn 1026 1025 1027 73 (set (reg/f:DI 1063)
        (lo_sum:DI (reg:DI 1064)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1027 1026 1028 73 (set (reg:DI 1066)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))
(insn 1028 1027 1029 73 (set (reg/f:DI 1065)
        (lo_sum:DI (reg:DI 1066)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1029 1028 1030 73 (set (reg:DI 1068)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))
(insn 1030 1029 1031 73 (set (reg/f:DI 1067)
        (lo_sum:DI (reg:DI 1068)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1031 1030 1032 73 (set (reg:DF 1070)
        (mem/c:DF (plus:DI (reg/f:DI 1065)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:246 -1
     (nil))
(insn 1032 1031 1033 73 (set (reg:DF 1071)
        (mem/c:DF (plus:DI (reg/f:DI 1067)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:246 -1
     (nil))
(insn 1033 1032 1034 73 (set (reg:DF 1069 [ D.3804 ])
        (plus:DF (reg:DF 1070)
            (reg:DF 1071))) options.c:246 -1
     (nil))
(insn 1034 1033 1035 73 (set (reg:DI 1073)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (nil))
(insn 1035 1034 1036 73 (set (reg/f:DI 1072)
        (lo_sum:DI (reg:DI 1073)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1036 1035 1037 73 (set (reg:DF 1075)
        (mem/c:DF (plus:DI (reg/f:DI 1072)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:246 -1
     (nil))
(insn 1037 1036 1038 73 (set (reg:DF 1074 [ D.3804 ])
        (plus:DF (reg:DF 1069 [ D.3804 ])
            (reg:DF 1075))) options.c:246 -1
     (nil))
(insn 1038 1037 1039 73 (set (reg:DF 1077)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:246 -1
     (nil))
(insn 1039 1038 1040 73 (set (reg:DF 1076 [ D.3804 ])
        (minus:DF (reg:DF 1077)
            (reg:DF 1074 [ D.3804 ]))) options.c:246 -1
     (nil))
(insn 1040 1039 1041 73 (set (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 1076 [ D.3804 ])) options.c:246 -1
     (nil))
(jump_insn 1041 1040 1042 73 (set (pc)
        (label_ref 1059)) options.c:246 -1
     (nil)
 -> 1059)
;;  succ:       75 [100.0%] 

(barrier 1042 1041 1043)
;; basic block 74, loop depth 0, count 0, freq 0
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [11.1%] 
;;              68 [50.0%] 
(code_label 1043 1042 1044 74 51 "" [5 uses])
(note 1044 1043 1045 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1045 1044 1046 74 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:249 -1
     (nil))
(debug_insn 1046 1045 1047 74 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)) options.c:249 -1
     (nil))
(insn 1047 1046 1048 74 (set (reg:DI 1079)
        (high:DI (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1048 1047 1049 74 (set (reg/f:DI 1078)
        (lo_sum:DI (reg:DI 1079)
            (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)
        (nil)))
(insn 1049 1048 1050 74 (set (reg:DI 1081)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:249 -1
     (nil))
(insn 1050 1049 1051 74 (set (reg/f:DI 1080)
        (lo_sum:DI (reg:DI 1081)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:249 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 1051 1050 1052 74 (set (reg:DI 2 x2)
        (reg/f:DI 1078)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1052 1051 1053 74 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1053 1052 1054 74 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1080) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 1054 1053 1055 74 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 1055 1054 1056 74 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:249 -1
     (nil))
(debug_insn 1056 1055 1057 74 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:249 -1
     (nil))
(call_insn 1057 1056 1058 74 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 1058 1057 1059)
;; basic block 75, loop depth 0, count 0, freq 1
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       70 [100.0%] 
;;              71 [100.0%] 
;;              72 [100.0%] 
;;              73 [100.0%] 
(code_label 1059 1058 1060 75 57 "" [4 uses])
(note 1060 1059 1061 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1061 1060 1062 75 (set (reg:DI 1083)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))
(insn 1062 1061 1063 75 (set (reg/f:DI 1082)
        (lo_sum:DI (reg:DI 1083)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1063 1062 1064 75 (set (reg:DF 386 [ D.3804 ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:252 -1
     (nil))
(insn 1064 1063 1065 75 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 386 [ D.3804 ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))
(jump_insn 1065 1064 1066 75 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1088)
;;  succ:       81 [0.0%] 
;;              76 [100.0%]  (FALLTHRU)

;; basic block 76, loop depth 0, count 0, freq 1
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       75 [100.0%]  (FALLTHRU)
(note 1066 1065 1067 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1067 1066 1068 76 (set (reg:DI 1085)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))
(insn 1068 1067 1069 76 (set (reg/f:DI 1084)
        (lo_sum:DI (reg:DI 1085)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1069 1068 1070 76 (set (reg:DF 1086)
        (mem/c:DF (plus:DI (reg/f:DI 1084)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:252 -1
     (nil))
(insn 1070 1069 1071 76 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1086)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))
(jump_insn 1071 1070 1072 76 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1088)
;;  succ:       81 [0.0%] 
;;              77 [100.0%]  (FALLTHRU)

;; basic block 77, loop depth 0, count 0, freq 1
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 [100.0%]  (FALLTHRU)
(note 1072 1071 1073 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1072 1074 77 (set (reg:DI 1088)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))
(insn 1074 1073 1075 77 (set (reg/f:DI 1087)
        (lo_sum:DI (reg:DI 1088)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1075 1074 1076 77 (set (reg:DF 1089)
        (mem/c:DF (plus:DI (reg/f:DI 1087)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:252 -1
     (nil))
(insn 1076 1075 1077 77 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1089)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))
(jump_insn 1077 1076 1078 77 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1088)
;;  succ:       81 [0.0%] 
;;              78 [100.0%]  (FALLTHRU)

;; basic block 78, loop depth 0, count 0, freq 1
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 [100.0%]  (FALLTHRU)
(note 1078 1077 1080 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1078 1081 78 (set (reg:DI 1091)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (nil))
(insn 1081 1080 1082 78 (set (reg/f:DI 1090)
        (lo_sum:DI (reg:DI 1091)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1082 1081 1083 78 (set (reg:DF 1092)
        (mem/c:DF (plus:DI (reg/f:DI 1090)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:252 -1
     (nil))
(insn 1083 1082 1084 78 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1092)
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 -1
     (nil))
(jump_insn 1084 1083 4061 78 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1088)
            (pc))) options.c:252 7 {condjump}
     (int_list:REG_BR_PROB 4 (nil))
 -> 1088)
;;  succ:       81 [0.0%] 
;;              79 [100.0%]  (FALLTHRU)

;; basic block 79, loop depth 0, count 0, freq 1
;;  prev block 78, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 [100.0%]  (FALLTHRU)
(note 4061 1084 1085 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1085 4061 1086 79 (set (pc)
        (label_ref:DI 1197)) options.c:252 2 {jump}
     (nil)
 -> 1197)
;;  succ:       84 [100.0%] 

(barrier 1086 1085 1088)
;; basic block 81, loop depth 0, count 0, freq 0
;;  prev block 79, next block 82, flags: (NEW, REACHABLE, RTL)
;;  pred:       76 [0.0%] 
;;              75 [0.0%] 
;;              78 [0.0%] 
;;              77 [0.0%] 
(code_label 1088 1086 1089 81 58 "" [4 uses])
(note 1089 1088 1090 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1090 1089 1091 81 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:253 -1
     (nil))
(debug_insn 1091 1090 1092 81 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)) options.c:253 -1
     (nil))
(insn 1092 1091 1093 81 (set (reg:DI 1094)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))
(insn 1093 1092 1094 81 (set (reg/f:DI 1093)
        (lo_sum:DI (reg:DI 1094)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1094 1093 1095 81 (set (reg:DI 1096)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))
(insn 1095 1094 1096 81 (set (reg/f:DI 1095)
        (lo_sum:DI (reg:DI 1096)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1096 1095 1097 81 (set (reg:DI 1098)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (nil))
(insn 1097 1096 1098 81 (set (reg/f:DI 1097)
        (lo_sum:DI (reg:DI 1098)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1098 1097 1099 81 (set (reg:DI 1100)
        (high:DI (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1099 1098 1100 81 (set (reg/f:DI 1099)
        (lo_sum:DI (reg:DI 1100)
            (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)
        (nil)))
(insn 1100 1099 1101 81 (set (reg:DI 1102)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:253 -1
     (nil))
(insn 1101 1100 1102 81 (set (reg/f:DI 1101)
        (lo_sum:DI (reg:DI 1102)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:253 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 1102 1101 1103 81 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1093)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1103 1102 1104 81 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1095)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1104 1103 1105 81 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1097)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1105 1104 1106 81 (set (reg:DF 32 v0)
        (reg:DF 386 [ D.3804 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1106 1105 1107 81 (set (reg:DI 2 x2)
        (reg/f:DI 1099)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1107 1106 1108 81 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1108 1107 1109 81 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1101) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 1109 1108 1110 81 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (nil)))))))))))
(debug_insn 1110 1109 1111 81 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:253 -1
     (nil))
(debug_insn 1111 1110 1112 81 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:253 -1
     (nil))
(insn 1112 1111 1113 81 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:256 -1
     (nil))
(call_insn 1113 1112 1114 81 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:256 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 1114 1113 1115)
;; basic block 82, loop depth 0, count 0, freq 4
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 [72.0%] 
(code_label 1115 1114 1116 82 50 "" [1 uses])
(note 1116 1115 1117 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1117 1116 1118 82 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 0 [0]))) options.c:258 -1
     (nil))
(jump_insn 1118 1117 1119 82 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1197)
            (pc))) options.c:258 7 {condjump}
     (int_list:REG_BR_PROB 1912 (nil))
 -> 1197)
;;  succ:       83 [80.9%]  (FALLTHRU)
;;              84 [19.1%] 

;; basic block 83, loop depth 0, count 0, freq 3
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL)
;;  pred:       82 [80.9%]  (FALLTHRU)
(note 1119 1118 1120 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1120 1119 1121 83 (set (reg:DI 1104)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 -1
     (nil))
(insn 1121 1120 1122 83 (set (reg/f:DI 1103)
        (lo_sum:DI (reg:DI 1104)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1122 1121 1123 83 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:259 -1
     (nil))
(call_insn/u 1123 1122 1124 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:259 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1124 1123 1125 83 (set (reg:TF 1105)
        (reg:TF 32 v0)) options.c:259 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1103)
                    (const_int 16 [0x10])) [1 A+0 S8 A64]))
        (nil)))
(insn 1125 1124 1126 83 (set (reg/v:TF 395 [ sum ])
        (reg:TF 1105)) options.c:259 -1
     (nil))
(debug_insn 1126 1125 1127 83 (var_location:TF sum (reg/v:TF 395 [ sum ])) options.c:259 -1
     (nil))
(insn 1127 1126 1128 83 (set (reg:DI 1107)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:260 -1
     (nil))
(insn 1128 1127 1129 83 (set (reg/f:DI 1106)
        (lo_sum:DI (reg:DI 1107)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:260 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1129 1128 1130 83 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1106)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:260 -1
     (nil))
(call_insn/u 1130 1129 1131 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1131 1130 1132 83 (set (reg:TF 397 [ D.3808 ])
        (reg:TF 32 v0)) options.c:260 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1106)
                    (const_int 24 [0x18])) [1 B+0 S8 A64]))
        (nil)))
(insn 1132 1131 1133 83 (set (reg:TF 33 v1)
        (reg:TF 397 [ D.3808 ])) options.c:260 -1
     (nil))
(insn 1133 1132 1134 83 (set (reg:TF 32 v0)
        (reg/v:TF 395 [ sum ])) options.c:260 -1
     (nil))
(call_insn/u 1134 1133 1135 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1135 1134 1136 83 (set (reg:TF 1108)
        (reg:TF 32 v0)) options.c:260 -1
     (expr_list:REG_EQUAL (plus:TF (reg/v:TF 395 [ sum ])
            (reg:TF 397 [ D.3808 ]))
        (nil)))
(insn 1136 1135 1137 83 (set (reg/v:TF 398 [ sum ])
        (reg:TF 1108)) options.c:260 -1
     (nil))
(debug_insn 1137 1136 1138 83 (var_location:TF sum (reg/v:TF 398 [ sum ])) options.c:260 -1
     (nil))
(insn 1138 1137 1139 83 (set (reg:DI 1110)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:261 -1
     (nil))
(insn 1139 1138 1140 83 (set (reg/f:DI 1109)
        (lo_sum:DI (reg:DI 1110)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:261 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1140 1139 1141 83 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1109)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:261 -1
     (nil))
(call_insn/u 1141 1140 1142 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1142 1141 1143 83 (set (reg:TF 400 [ D.3808 ])
        (reg:TF 32 v0)) options.c:261 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1109)
                    (const_int 32 [0x20])) [1 C+0 S8 A64]))
        (nil)))
(insn 1143 1142 1144 83 (set (reg:TF 33 v1)
        (reg:TF 400 [ D.3808 ])) options.c:261 -1
     (nil))
(insn 1144 1143 1145 83 (set (reg:TF 32 v0)
        (reg/v:TF 398 [ sum ])) options.c:261 -1
     (nil))
(call_insn/u 1145 1144 1146 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1146 1145 1147 83 (set (reg:TF 1111)
        (reg:TF 32 v0)) options.c:261 -1
     (expr_list:REG_EQUAL (plus:TF (reg/v:TF 398 [ sum ])
            (reg:TF 400 [ D.3808 ]))
        (nil)))
(insn 1147 1146 1148 83 (set (reg/v:TF 401 [ sum ])
        (reg:TF 1111)) options.c:261 -1
     (nil))
(debug_insn 1148 1147 1149 83 (var_location:TF sum (reg/v:TF 401 [ sum ])) options.c:261 -1
     (nil))
(insn 1149 1148 1150 83 (set (reg:DI 1113)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:262 -1
     (nil))
(insn 1150 1149 1151 83 (set (reg/f:DI 1112)
        (lo_sum:DI (reg:DI 1113)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:262 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1151 1150 1152 83 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1112)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:262 -1
     (nil))
(call_insn/u 1152 1151 1153 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1153 1152 1154 83 (set (reg:TF 1114 [ D.3808 ])
        (reg:TF 32 v0)) options.c:262 -1
     (expr_list:REG_EQUAL (float_extend:TF (mem/c:DF (plus:DI (reg/f:DI 1112)
                    (const_int 40 [0x28])) [1 D+0 S8 A64]))
        (nil)))
(insn 1154 1153 1155 83 (set (reg:TF 33 v1)
        (reg/v:TF 401 [ sum ])) options.c:262 -1
     (nil))
(insn 1155 1154 1156 83 (set (reg:TF 32 v0)
        (reg:TF 1114 [ D.3808 ])) options.c:262 -1
     (nil))
(call_insn/u 1156 1155 1157 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1157 1156 1158 83 (set (reg:TF 1115)
        (reg:TF 32 v0)) options.c:262 -1
     (expr_list:REG_EQUAL (plus:TF (reg:TF 1114 [ D.3808 ])
            (reg/v:TF 401 [ sum ]))
        (nil)))
(insn 1158 1157 1159 83 (set (reg/v:TF 404 [ sum ])
        (reg:TF 1115)) options.c:262 -1
     (nil))
(debug_insn 1159 1158 1160 83 (var_location:TF sum (reg/v:TF 404 [ sum ])) options.c:262 -1
     (nil))
(insn 1160 1159 1161 83 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:263 -1
     (nil))
(insn 1161 1160 1162 83 (set (reg:TF 32 v0)
        (reg/v:TF 395 [ sum ])) options.c:263 -1
     (nil))
(call_insn/u 1162 1161 1163 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1163 1162 1164 83 (set (reg:TF 1116 [ D.3808 ])
        (reg:TF 32 v0)) options.c:263 -1
     (expr_list:REG_EQUAL (div:TF (reg/v:TF 395 [ sum ])
            (reg/v:TF 404 [ sum ]))
        (nil)))
(insn 1164 1163 1165 83 (set (reg:TF 32 v0)
        (reg:TF 1116 [ D.3808 ])) options.c:263 -1
     (nil))
(call_insn/u 1165 1164 1166 83 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1166 1165 1167 83 (set (reg:DF 406 [ D.3804 ])
        (reg:DF 32 v0)) options.c:263 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1116 [ D.3808 ]))
        (nil)))
(insn 1167 1166 1168 83 (set (reg:DI 1118)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:263 -1
     (nil))
(insn 1168 1167 1169 83 (set (reg/f:DI 1117)
        (lo_sum:DI (reg:DI 1118)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:263 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1169 1168 1170 83 (set (mem/c:DF (plus:DI (reg/f:DI 1117)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 406 [ D.3804 ])) options.c:263 -1
     (nil))
(insn 1170 1169 1171 83 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:264 -1
     (nil))
(insn 1171 1170 1172 83 (set (reg:TF 32 v0)
        (reg:TF 397 [ D.3808 ])) options.c:264 -1
     (nil))
(call_insn/u 1172 1171 1173 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1173 1172 1174 83 (set (reg:TF 1119 [ D.3808 ])
        (reg:TF 32 v0)) options.c:264 -1
     (expr_list:REG_EQUAL (div:TF (reg:TF 397 [ D.3808 ])
            (reg/v:TF 404 [ sum ]))
        (nil)))
(insn 1174 1173 1175 83 (set (reg:TF 32 v0)
        (reg:TF 1119 [ D.3808 ])) options.c:264 -1
     (nil))
(call_insn/u 1175 1174 1176 83 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1176 1175 1177 83 (set (reg:DF 408 [ D.3804 ])
        (reg:DF 32 v0)) options.c:264 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1119 [ D.3808 ]))
        (nil)))
(insn 1177 1176 1178 83 (set (reg:DI 1121)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:264 -1
     (nil))
(insn 1178 1177 1179 83 (set (reg/f:DI 1120)
        (lo_sum:DI (reg:DI 1121)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:264 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1179 1178 1180 83 (set (mem/c:DF (plus:DI (reg/f:DI 1120)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 408 [ D.3804 ])) options.c:264 -1
     (nil))
(insn 1180 1179 1181 83 (set (reg:TF 33 v1)
        (reg/v:TF 404 [ sum ])) options.c:265 -1
     (nil))
(insn 1181 1180 1182 83 (set (reg:TF 32 v0)
        (reg:TF 400 [ D.3808 ])) options.c:265 -1
     (nil))
(call_insn/u 1182 1181 1183 83 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1183 1182 1184 83 (set (reg:TF 1122 [ D.3808 ])
        (reg:TF 32 v0)) options.c:265 -1
     (expr_list:REG_EQUAL (div:TF (reg:TF 400 [ D.3808 ])
            (reg/v:TF 404 [ sum ]))
        (nil)))
(insn 1184 1183 1185 83 (set (reg:TF 32 v0)
        (reg:TF 1122 [ D.3808 ])) options.c:265 -1
     (nil))
(call_insn/u 1185 1184 1186 83 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1186 1185 1187 83 (set (reg:DF 410 [ D.3804 ])
        (reg:DF 32 v0)) options.c:265 -1
     (expr_list:REG_EQUAL (float_truncate:DF (reg:TF 1122 [ D.3808 ]))
        (nil)))
(insn 1187 1186 1188 83 (set (reg:DI 1124)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:265 -1
     (nil))
(insn 1188 1187 1189 83 (set (reg/f:DI 1123)
        (lo_sum:DI (reg:DI 1124)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:265 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1189 1188 1190 83 (set (mem/c:DF (plus:DI (reg/f:DI 1123)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 410 [ D.3804 ])) options.c:265 -1
     (nil))
(insn 1190 1189 1191 83 (set (reg:DI 1126)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:266 -1
     (nil))
(insn 1191 1190 1192 83 (set (reg/f:DI 1125)
        (lo_sum:DI (reg:DI 1126)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:266 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1192 1191 1193 83 (set (reg:DF 1127 [ D.3804 ])
        (plus:DF (reg:DF 406 [ D.3804 ])
            (reg:DF 408 [ D.3804 ]))) options.c:266 -1
     (nil))
(insn 1193 1192 1194 83 (set (reg:DF 1128 [ D.3804 ])
        (plus:DF (reg:DF 1127 [ D.3804 ])
            (reg:DF 410 [ D.3804 ]))) options.c:266 -1
     (nil))
(insn 1194 1193 1195 83 (set (reg:DF 1130)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:266 -1
     (nil))
(insn 1195 1194 1196 83 (set (reg:DF 1129 [ D.3804 ])
        (minus:DF (reg:DF 1130)
            (reg:DF 1128 [ D.3804 ]))) options.c:266 -1
     (nil))
(insn 1196 1195 1197 83 (set (mem/c:DF (plus:DI (reg/f:DI 1125)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1129 [ D.3804 ])) options.c:266 -1
     (nil))
;;  succ:       84 [100.0%]  (FALLTHRU)

;; basic block 84, loop depth 0, count 0, freq 32
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              83 [100.0%]  (FALLTHRU)
;;              79 [100.0%] 
;;              82 [19.1%] 
(code_label 1197 1196 1198 84 12 "" [3 uses])
(note 1198 1197 1199 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1199 1198 1200 84 (set (reg:DI 1132)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:68 -1
     (nil))
(insn 1200 1199 1201 84 (set (reg/f:DI 1131)
        (lo_sum:DI (reg:DI 1132)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:68 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1201 1200 1202 84 (set (reg:DI 1133)
        (mem/c:DI (reg/f:DI 1131) [4 SCALE+0 S8 A64])) graph500.c:68 -1
     (nil))
(insn 1202 1201 1203 84 (set (reg:QI 1134)
        (subreg:QI (reg:DI 1133) 0)) graph500.c:68 -1
     (nil))
(insn 1203 1202 1204 84 (set (reg:DI 1135)
        (const_int 1 [0x1])) graph500.c:68 -1
     (nil))
(insn 1204 1203 1205 84 (set (reg:DI 243 [ D.3798 ])
        (ashift:DI (reg:DI 1135)
            (reg:QI 1134))) graph500.c:68 -1
     (nil))
(insn 1205 1204 1206 84 (set (reg:DI 1137)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 -1
     (nil))
(insn 1206 1205 1207 84 (set (reg/f:DI 1136)
        (lo_sum:DI (reg:DI 1137)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1207 1206 1208 84 (set (mem/c:DI (plus:DI (reg/f:DI 1136)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])
        (reg:DI 243 [ D.3798 ])) graph500.c:68 -1
     (nil))
(debug_insn 1208 1207 1209 84 (var_location:DI seed (const_int -1 [0xffffffffffffffff])) prng.c:29 -1
     (nil))
(insn 1209 1208 1210 84 (set (reg:DI 1139)
        (high:DI (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 -1
     (nil))
(insn 1210 1209 1211 84 (set (reg/f:DI 1138)
        (lo_sum:DI (reg:DI 1139)
            (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
        (nil)))
(insn 1211 1210 1212 84 (set (reg:DI 0 x0)
        (reg/f:DI 1138)) prng.c:30 -1
     (nil))
(call_insn 1212 1211 1213 84 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:30 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1213 1212 1214 84 (set (reg/f:DI 286 [ D.3800 ])
        (reg:DI 0 x0)) prng.c:30 -1
     (nil))
(insn 1214 1213 1215 84 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 286 [ D.3800 ])
            (const_int 0 [0]))) prng.c:30 -1
     (nil))
(jump_insn 1215 1214 1216 84 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3766)
            (pc))) prng.c:30 7 {condjump}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 3766)
;;  succ:       85 [69.8%]  (FALLTHRU)
;;              308 [30.2%] 

;; basic block 85, loop depth 0, count 0, freq 22
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 [69.8%]  (FALLTHRU)
(note 1216 1215 1217 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1217 1216 1218 85 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 1218 1217 1219 85 (set (reg/f:DI 414 [ D.3807 ])
        (reg:DI 0 x0)) prng.c:31 -1
     (nil))
(insn 1219 1218 1220 85 (set (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])
        (const_int 0 [0])) prng.c:31 -1
     (nil))
(insn 1220 1219 1221 85 (set (reg:DI 1141)
        (high:DI (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:32 -1
     (nil))
(insn 1221 1220 1222 85 (set (reg/f:DI 1140)
        (lo_sum:DI (reg:DI 1141)
            (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:32 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
        (nil)))
(insn 1222 1221 1223 85 (set (reg:DI 0 x0)
        (reg/f:DI 1140)) prng.c:32 -1
     (nil))
(call_insn 1223 1222 1224 85 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1224 1223 1225 85 (set (reg/f:DI 415 [ D.3800 ])
        (reg:DI 0 x0)) prng.c:32 -1
     (nil))
(insn 1225 1224 1226 85 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) prng.c:32 -1
     (nil))
(insn 1226 1225 1227 85 (set (reg:DI 1 x1)
        (const_int 0 [0])) prng.c:32 -1
     (nil))
(insn 1227 1226 1228 85 (set (reg:DI 0 x0)
        (reg/f:DI 415 [ D.3800 ])) prng.c:32 -1
     (nil))
(call_insn 1228 1227 1229 85 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 1229 1228 1230 85 (set (reg/v:DI 416 [ seed ])
        (reg:DI 0 x0)) prng.c:32 -1
     (nil))
(debug_insn 1230 1229 1231 85 (var_location:DI seed (reg/v:DI 416 [ seed ])) prng.c:32 -1
     (nil))
(insn 1231 1230 1232 85 (set (reg:SI 1142)
        (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])) prng.c:33 -1
     (nil))
(insn 1232 1231 1233 85 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1142)
            (const_int 0 [0]))) prng.c:33 -1
     (nil))
(jump_insn 1233 1232 1234 85 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3766)
            (pc))) prng.c:33 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3766)
;;  succ:       308 [50.0%] 
;;              86 [50.0%]  (FALLTHRU)

;; basic block 86, loop depth 0, count 0, freq 11
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL)
;;  pred:       85 [50.0%]  (FALLTHRU)
(note 1234 1233 1235 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1235 1234 1236 86 (var_location:DI seed (reg/v:DI 416 [ seed ])) -1
     (nil))
(insn 1236 1235 1237 86 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 416 [ seed ])
            (const_int 0 [0]))) prng.c:36 -1
     (nil))
(jump_insn 1237 1236 3769 86 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3766)
            (pc))) prng.c:36 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 3766)
;;  succ:       308
;;              87 [100.0%]  (FALLTHRU)

;; basic block 87, loop depth 0, count 0, freq 32
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL)
;;  pred:       86 [100.0%]  (FALLTHRU)
;;              308 [100.0%] 
(code_label 3769 1237 1238 87 182 "" [1 uses])
(note 1238 3769 1239 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1239 1238 1240 87 (var_location:DI seed (reg/v:DI 416 [ seed ])) -1
     (nil))
(insn 1240 1239 1241 87 (set (reg:DI 419 [ D.3802 ])
        (reg/v:DI 416 [ seed ])) prng.c:37 -1
     (nil))
(insn 1241 1240 1242 87 (set (reg:DI 1144)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:37 -1
     (nil))
(insn 1242 1241 1243 87 (set (reg/f:DI 1143)
        (lo_sum:DI (reg:DI 1144)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:37 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1243 1242 1244 87 (set (mem/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])
        (reg:DI 419 [ D.3802 ])) prng.c:37 -1
     (nil))
(debug_insn 1244 1243 1245 87 (var_location:DI userseed (reg:DI 419 [ D.3802 ])) prng.c:38 -1
     (nil))
(debug_insn 1245 1244 1246 87 (var_location:DI seed (symbol_ref:DI ("prng_seed") [flags 0x82]  <var_decl 0x7f3c5e254a20 prng_seed>)) prng.c:38 -1
     (nil))
(insn 1246 1245 1247 87 (set (reg:DI 1145 [ D.3802 ])
        (and:DI (reg:DI 419 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:19 -1
     (nil))
(insn 1247 1246 1248 87 (set (reg:DI 421 [ D.3802 ])
        (plus:DI (reg:DI 1145 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:19 -1
     (nil))
(insn 1248 1247 1249 87 (set (reg:DI 1147)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:19 -1
     (nil))
(insn 1249 1248 1250 87 (set (reg/f:DI 1146)
        (lo_sum:DI (reg:DI 1147)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:19 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1250 1249 1251 87 (set (reg:DI 1148)
        (reg/f:DI 1146)) prng.c:19 -1
     (nil))
(insn 1251 1250 1252 87 (set (reg/f:DI 1149)
        (plus:DI (reg/f:DI 1146)
            (const_int 40 [0x28]))) prng.c:19 -1
     (nil))
(insn 1252 1251 1253 87 (set (mem/c:DI (reg/f:DI 1149) [4 MEM[(uint_fast32_t *)&prng_seed]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:19 -1
     (nil))
(insn 1253 1252 1254 87 (set (reg:DI 1150 [ D.3802 ])
        (lshiftrt:DI (reg:DI 419 [ D.3802 ])
            (const_int 30 [0x1e]))) prng.c:20 -1
     (nil))
(insn 1254 1253 1255 87 (set (reg:DI 1151 [ D.3802 ])
        (and:DI (reg:DI 1150 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:20 -1
     (nil))
(insn 1255 1254 1256 87 (set (reg:DI 424 [ D.3802 ])
        (plus:DI (reg:DI 1151 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:20 -1
     (nil))
(insn 1256 1255 1257 87 (set (reg:DI 1153)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:20 -1
     (nil))
(insn 1257 1256 1258 87 (set (reg/f:DI 1152)
        (lo_sum:DI (reg:DI 1153)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:20 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1258 1257 1259 87 (set (reg:DI 1154)
        (reg/f:DI 1152)) prng.c:20 -1
     (nil))
(insn 1259 1258 1260 87 (set (reg/f:DI 1155)
        (plus:DI (reg/f:DI 1152)
            (const_int 40 [0x28]))) prng.c:20 -1
     (nil))
(insn 1260 1259 1261 87 (set (mem/c:DI (plus:DI (reg/f:DI 1155)
                (const_int 8 [0x8])) [4 MEM[(uint_fast32_t *)&prng_seed + 8B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:20 -1
     (nil))
(insn 1261 1260 1262 87 (set (reg:DI 1157)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:21 -1
     (nil))
(insn 1262 1261 1263 87 (set (reg/f:DI 1156)
        (lo_sum:DI (reg:DI 1157)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:21 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1263 1262 1264 87 (set (reg:DI 1158)
        (reg/f:DI 1156)) prng.c:21 -1
     (nil))
(insn 1264 1263 1265 87 (set (reg/f:DI 1159)
        (plus:DI (reg/f:DI 1156)
            (const_int 40 [0x28]))) prng.c:21 -1
     (nil))
(insn 1265 1264 1266 87 (set (mem/c:DI (plus:DI (reg/f:DI 1159)
                (const_int 16 [0x10])) [4 MEM[(uint_fast32_t *)&prng_seed + 16B]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:21 -1
     (nil))
(insn 1266 1265 1267 87 (set (reg:DI 1161)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:22 -1
     (nil))
(insn 1267 1266 1268 87 (set (reg/f:DI 1160)
        (lo_sum:DI (reg:DI 1161)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:22 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1268 1267 1269 87 (set (reg:DI 1162)
        (reg/f:DI 1160)) prng.c:22 -1
     (nil))
(insn 1269 1268 1270 87 (set (reg/f:DI 1163)
        (plus:DI (reg/f:DI 1160)
            (const_int 40 [0x28]))) prng.c:22 -1
     (nil))
(insn 1270 1269 1271 87 (set (mem/c:DI (plus:DI (reg/f:DI 1163)
                (const_int 24 [0x18])) [4 MEM[(uint_fast32_t *)&prng_seed + 24B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:22 -1
     (nil))
(insn 1271 1270 1272 87 (set (reg:DI 425 [ D.3802 ])
        (lshiftrt:DI (reg:DI 419 [ D.3802 ])
            (const_int 60 [0x3c]))) prng.c:23 -1
     (nil))
(insn 1272 1271 1273 87 (set (reg:DI 1164 [ D.3802 ])
        (ashift:DI (reg:DI 425 [ D.3802 ])
            (const_int 4 [0x4]))) prng.c:23 -1
     (nil))
(insn 1273 1272 1274 87 (set (reg:DI 1165 [ D.3802 ])
        (plus:DI (reg:DI 425 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:23 -1
     (nil))
(insn 1274 1273 1275 87 (set (reg:DI 427 [ D.3802 ])
        (plus:DI (reg:DI 1164 [ D.3802 ])
            (reg:DI 1165 [ D.3802 ]))) prng.c:23 -1
     (nil))
(insn 1275 1274 1276 87 (set (reg:DI 1167)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:23 -1
     (nil))
(insn 1276 1275 1277 87 (set (reg/f:DI 1166)
        (lo_sum:DI (reg:DI 1167)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:23 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1277 1276 1278 87 (set (reg:DI 1168)
        (reg/f:DI 1166)) prng.c:23 -1
     (nil))
(insn 1278 1277 1279 87 (set (reg/f:DI 1169)
        (plus:DI (reg/f:DI 1166)
            (const_int 40 [0x28]))) prng.c:23 -1
     (nil))
(insn 1279 1278 1280 87 (set (mem/c:DI (plus:DI (reg/f:DI 1169)
                (const_int 32 [0x20])) [4 MEM[(uint_fast32_t *)&prng_seed + 32B]+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) prng.c:23 -1
     (nil))
(debug_insn 1280 1279 1281 87 (var_location:DI userseed (clobber (const_int 0 [0]))) prng.c:38 -1
     (nil))
(debug_insn 1281 1280 1282 87 (var_location:DI seed (clobber (const_int 0 [0]))) prng.c:38 -1
     (nil))
(debug_insn 1282 1281 1283 87 (var_location:DI st (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) prng.c:38 -1
     (nil))
(debug_insn 1283 1282 1284 87 (var_location:DI seed (symbol_ref:DI ("prng_seed") [flags 0x82]  <var_decl 0x7f3c5e254a20 prng_seed>)) prng.c:38 -1
     (nil))
(insn 1284 1283 1285 87 (set (reg:DI 1171)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 -1
     (nil))
(insn 1285 1284 1286 87 (set (reg/f:DI 1170)
        (lo_sum:DI (reg:DI 1171)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1286 1285 1287 87 (set (mem/c:DI (reg/f:DI 1170) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:280 -1
     (nil))
(insn 1287 1286 1288 87 (set (reg:DI 1173)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:281 -1
     (nil))
(insn 1288 1287 1289 87 (set (reg/f:DI 1172)
        (lo_sum:DI (reg:DI 1173)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:281 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1289 1288 1290 87 (set (mem/c:DI (plus:DI (reg/f:DI 1172)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:281 -1
     (nil))
(insn 1290 1289 1291 87 (set (reg:DI 1175)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:282 -1
     (nil))
(insn 1291 1290 1292 87 (set (reg/f:DI 1174)
        (lo_sum:DI (reg:DI 1175)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:282 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1292 1291 1293 87 (set (mem/c:DI (plus:DI (reg/f:DI 1174)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:282 -1
     (nil))
(insn 1293 1292 1294 87 (set (reg:DI 1177)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:283 -1
     (nil))
(insn 1294 1293 1295 87 (set (reg/f:DI 1176)
        (lo_sum:DI (reg:DI 1177)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:283 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1295 1294 1296 87 (set (mem/c:DI (plus:DI (reg/f:DI 1176)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:283 -1
     (nil))
(insn 1296 1295 1297 87 (set (reg:DI 1179)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:284 -1
     (nil))
(insn 1297 1296 1298 87 (set (reg/f:DI 1178)
        (lo_sum:DI (reg:DI 1179)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:284 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1298 1297 1299 87 (set (mem/c:DI (plus:DI (reg/f:DI 1178)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) generator/splittable_mrg.c:284 -1
     (nil))
(debug_insn 1299 1298 1300 87 (var_location:DI st (clobber (const_int 0 [0]))) prng.c:39 -1
     (nil))
(debug_insn 1300 1299 1301 87 (var_location:DI seed (clobber (const_int 0 [0]))) prng.c:39 -1
     (nil))
(debug_insn 1301 1300 1302 87 (var_location:DI seed (clobber (const_int 0 [0]))) graph500.c:70 -1
     (nil))
(insn 1302 1301 1303 87 (set (reg:DI 1181)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:72 -1
     (nil))
(insn 1303 1302 1304 87 (set (reg/f:DI 1180)
        (lo_sum:DI (reg:DI 1181)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:72 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1304 1303 1305 87 (set (reg:DI 244 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1180)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:72 -1
     (nil))
(insn 1305 1304 1306 87 (set (reg/v:DI 245 [ desired_nedge ])
        (mult:DI (reg:DI 243 [ D.3798 ])
            (reg:DI 244 [ D.3798 ]))) graph500.c:72 -1
     (nil))
(debug_insn 1306 1305 1307 87 (var_location:DI desired_nedge (reg/v:DI 245 [ desired_nedge ])) graph500.c:72 -1
     (nil))
(insn 1307 1306 1308 87 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 243 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:74 -1
     (nil))
(jump_insn 1308 1307 1309 87 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1322)
            (pc))) graph500.c:74 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1322)
;;  succ:       88 [0.0%]  (FALLTHRU)
;;              89 [100.0%] 

;; basic block 88, loop depth 0, count 0, freq 0
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL)
;;  pred:       87 [0.0%]  (FALLTHRU)
(note 1309 1308 1310 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1310 1309 1311 88 (set (reg:DI 1183)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 -1
     (nil))
(insn 1311 1310 1312 88 (set (reg/f:DI 1182)
        (lo_sum:DI (reg:DI 1183)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 1312 1311 1313 88 (set (reg:DI 1185)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 -1
     (nil))
(insn 1313 1312 1314 88 (set (reg/f:DI 1184)
        (lo_sum:DI (reg:DI 1185)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))
(insn 1314 1313 1315 88 (set (reg:DI 1187)
        (high:DI (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 -1
     (nil))
(insn 1315 1314 1316 88 (set (reg/f:DI 1186)
        (lo_sum:DI (reg:DI 1187)
            (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>)
        (nil)))
(insn 1316 1315 1317 88 (set (reg:DI 3 x3)
        (reg/f:DI 1182)) graph500.c:74 -1
     (nil))
(insn 1317 1316 1318 88 (set (reg:SI 2 x2)
        (const_int 74 [0x4a])) graph500.c:74 -1
     (nil))
(insn 1318 1317 1319 88 (set (reg:DI 1 x1)
        (reg/f:DI 1184)) graph500.c:74 -1
     (nil))
(insn 1319 1318 1320 88 (set (reg:DI 0 x0)
        (reg/f:DI 1186)) graph500.c:74 -1
     (nil))
(call_insn 1320 1319 1321 88 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 1321 1320 1322)
;; basic block 89, loop depth 0, count 0, freq 32
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL)
;;  pred:       87 [100.0%] 
(code_label 1322 1321 1323 89 63 "" [1 uses])
(note 1323 1322 1324 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1324 1323 1325 89 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 244 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:75 -1
     (nil))
(jump_insn 1325 1324 1326 89 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1339)
            (pc))) graph500.c:75 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1339)
;;  succ:       90 [0.0%]  (FALLTHRU)
;;              91 [100.0%] 

;; basic block 90, loop depth 0, count 0, freq 0
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL)
;;  pred:       89 [0.0%]  (FALLTHRU)
(note 1326 1325 1327 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1327 1326 1328 90 (set (reg:DI 1189)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 -1
     (nil))
(insn 1328 1327 1329 90 (set (reg/f:DI 1188)
        (lo_sum:DI (reg:DI 1189)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 1329 1328 1330 90 (set (reg:DI 1191)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 -1
     (nil))
(insn 1330 1329 1331 90 (set (reg/f:DI 1190)
        (lo_sum:DI (reg:DI 1191)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))
(insn 1331 1330 1332 90 (set (reg:DI 1193)
        (high:DI (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 -1
     (nil))
(insn 1332 1331 1333 90 (set (reg/f:DI 1192)
        (lo_sum:DI (reg:DI 1193)
            (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>)
        (nil)))
(insn 1333 1332 1334 90 (set (reg:DI 3 x3)
        (reg/f:DI 1188)) graph500.c:75 -1
     (nil))
(insn 1334 1333 1335 90 (set (reg:SI 2 x2)
        (const_int 75 [0x4b])) graph500.c:75 -1
     (nil))
(insn 1335 1334 1336 90 (set (reg:DI 1 x1)
        (reg/f:DI 1190)) graph500.c:75 -1
     (nil))
(insn 1336 1335 1337 90 (set (reg:DI 0 x0)
        (reg/f:DI 1192)) graph500.c:75 -1
     (nil))
(call_insn 1337 1336 1338 90 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 1338 1337 1339)
;; basic block 91, loop depth 0, count 0, freq 32
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL)
;;  pred:       89 [100.0%] 
(code_label 1339 1338 1340 91 64 "" [1 uses])
(note 1340 1339 1341 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1341 1340 1342 91 (set (reg:DI 1195)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:82 -1
     (nil))
(insn 1342 1341 1343 91 (set (reg/f:DI 1194)
        (lo_sum:DI (reg:DI 1195)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:82 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1343 1342 1344 91 (set (reg/f:DI 246 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1194)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])) graph500.c:82 -1
     (nil))
(insn 1344 1343 1345 91 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 246 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:82 -1
     (nil))
(jump_insn 1345 1344 1346 91 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2225)
            (pc))) graph500.c:82 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 2225)
;;  succ:       92 [30.2%]  (FALLTHRU)
;;              144 [69.8%] 

;; basic block 92, loop depth 0, count 0, freq 10
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL)
;;  pred:       91 [30.2%]  (FALLTHRU)
(note 1346 1345 1347 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1346 1348 92 (set (reg:DI 1197)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:83 -1
     (nil))
(insn 1348 1347 1349 92 (set (reg/f:DI 1196)
        (lo_sum:DI (reg:DI 1197)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:83 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1349 1348 1350 92 (set (reg:SI 1198)
        (mem/c:SI (reg/f:DI 1196) [3 VERBOSE+0 S4 A32])) graph500.c:83 -1
     (nil))
(insn 1350 1349 1351 92 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1198)
            (const_int 0 [0]))) graph500.c:83 -1
     (nil))
(jump_insn 1351 1350 1352 92 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) graph500.c:83 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1363)
;;  succ:       93 [29.0%]  (FALLTHRU)
;;              94 [71.0%] 

;; basic block 93, loop depth 0, count 0, freq 3
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL)
;;  pred:       92 [29.0%]  (FALLTHRU)
(note 1352 1351 1353 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1353 1352 1354 93 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:83 -1
     (nil))
(debug_insn 1354 1353 1355 93 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)) graph500.c:83 -1
     (nil))
(insn 1355 1354 1356 93 (set (reg:DI 1200)
        (high:DI (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1356 1355 1357 93 (set (reg/f:DI 1199)
        (lo_sum:DI (reg:DI 1200)
            (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)
        (nil)))
(insn 1357 1356 1358 93 (set (reg:DI 1202)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:83 -1
     (nil))
(insn 1358 1357 1359 93 (set (reg/f:DI 1201)
        (lo_sum:DI (reg:DI 1202)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:83 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 1359 1358 1360 93 (set (reg:DI 2 x2)
        (reg/f:DI 1199)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1360 1359 1361 93 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 1361 1360 1362 93 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1201) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 1362 1361 1363 93 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       94 [100.0%]  (FALLTHRU)

;; basic block 94, loop depth 0, count 0, freq 10
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL)
;;  pred:       92 [71.0%] 
;;              93 [100.0%]  (FALLTHRU)
(code_label 1363 1362 1364 94 66 "" [1 uses])
(note 1364 1363 1365 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1364 1366 94 (set (reg:DI 1204)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:84 -1
     (nil))
(insn 1366 1365 1367 94 (set (reg/f:DI 1203)
        (lo_sum:DI (reg:DI 1204)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:84 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1367 1366 1368 94 (set (reg:SI 1205)
        (mem/c:SI (plus:DI (reg/f:DI 1203)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])) graph500.c:84 -1
     (nil))
(insn 1368 1367 1369 94 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1205)
            (const_int 0 [0]))) graph500.c:84 -1
     (nil))
(jump_insn 1369 1368 1370 94 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1415)
            (pc))) graph500.c:84 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1415)
;;  succ:       95 [50.0%]  (FALLTHRU)
;;              96 [50.0%] 

;; basic block 95, loop depth 0, count 0, freq 5
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL)
;;  pred:       94 [50.0%]  (FALLTHRU)
(note 1370 1369 1371 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1371 1370 1372 95 (set (reg:DI 1207)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:85 -1
     (nil))
(insn 1372 1371 1373 95 (set (reg/f:DI 1206)
        (lo_sum:DI (reg:DI 1207)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:85 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1373 1372 1374 95 (set (mem/c:DI (plus:DI (reg/f:DI 1206)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) graph500.c:85 -1
     (nil))
(debug_insn 1374 1373 1375 95 (var_location:DI sz (ashift:DI (reg/v:DI 245 [ desired_nedge ])
        (const_int 4 [0x4]))) graph500.c:86 -1
     (nil))
(insn 1375 1374 1376 95 (set (reg:DI 1208 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) xalloc.c:104 -1
     (nil))
(insn 1376 1375 1377 95 (set (reg:DI 0 x0)
        (reg:DI 1208 [ D.3802 ])) xalloc.c:104 -1
     (nil))
(call_insn 1377 1376 1378 95 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1378 1377 1379 95 (set (reg/f:DI 289 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 -1
     (nil))
(debug_insn 1379 1378 1380 95 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:86 -1
     (nil))
(insn 1380 1379 1381 95 (set (reg:DI 1210)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:86 -1
     (nil))
(insn 1381 1380 1382 95 (set (reg/f:DI 1209)
        (lo_sum:DI (reg:DI 1210)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:86 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1382 1381 1383 95 (set (mem/f/c:DI (plus:DI (reg/f:DI 1209)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/f:DI 289 [ D.3806 ])) graph500.c:86 -1
     (nil))
(insn 1383 1382 1384 95 (set (reg:DI 1212)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))
(insn 1384 1383 1385 95 (set (reg/f:DI 1211)
        (lo_sum:DI (reg:DI 1212)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 1385 1384 1386 95 (set (reg:DI 1 x1)
        (reg/f:DI 1211)) timer.c:43 -1
     (nil))
(insn 1386 1385 1387 95 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))
(call_insn 1387 1386 1388 95 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 1388 1387 1389 95 (set (reg:DI 1214)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1389 1388 1390 95 (set (reg/f:DI 1213)
        (lo_sum:DI (reg:DI 1214)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1390 1389 1391 95 (set (reg:DI 1216)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1391 1390 1392 95 (set (reg/f:DI 1215)
        (lo_sum:DI (reg:DI 1216)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1392 1391 1393 95 (set (reg:DI 1218)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1393 1392 1394 95 (set (reg/f:DI 1217)
        (lo_sum:DI (reg:DI 1218)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1394 1393 1395 95 (set (reg:DI 1220)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1395 1394 1396 95 (set (reg/f:DI 1219)
        (lo_sum:DI (reg:DI 1220)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1396 1395 1397 95 (set (reg:DI 1221)
        (mem/c:DI (reg/f:DI 1219) [4 SCALE+0 S8 A64])) graph500.c:87 -1
     (nil))
(insn 1397 1396 1398 95 (set (reg:DI 1223)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1398 1397 1399 95 (set (reg/f:DI 1222)
        (lo_sum:DI (reg:DI 1223)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1399 1398 1400 95 (set (reg:DI 1225)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1400 1399 1401 95 (set (reg/f:DI 1224)
        (lo_sum:DI (reg:DI 1225)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1401 1400 1402 95 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1213)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:87 -1
     (nil))
(insn 1402 1401 1403 95 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1215)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:87 -1
     (nil))
(insn 1403 1402 1404 95 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1217)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:87 -1
     (nil))
(insn 1404 1403 1405 95 (set (reg:SI 2 x2)
        (subreg:SI (reg:DI 1221) 0)) graph500.c:87 -1
     (nil))
(insn 1405 1404 1406 95 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1222)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:87 -1
     (nil))
(insn 1406 1405 1407 95 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1224)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:87 -1
     (nil))
(call_insn 1407 1406 1408 95 (parallel [
            (call (mem:DI (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>) [0 rmat_edgelist S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (nil))))))))))
(call_insn 1408 1407 1409 95 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 1409 1408 1410 95 (set (reg:DF 259 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:87 -1
     (nil))
(insn 1410 1409 1411 95 (set (reg:DI 1227)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (nil))
(insn 1411 1410 1412 95 (set (reg/f:DI 1226)
        (lo_sum:DI (reg:DI 1227)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:87 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1412 1411 1413 95 (set (mem/c:DF (plus:DI (reg/f:DI 1226)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 259 [ D.3804 ])) graph500.c:87 -1
     (nil))
(jump_insn 1413 1412 1414 95 (set (pc)
        (label_ref 2201)) graph500.c:87 -1
     (nil)
 -> 2201)
;;  succ:       141 [100.0%] 

(barrier 1414 1413 1415)
;; basic block 96, loop depth 0, count 0, freq 5
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL)
;;  pred:       94 [50.0%] 
(code_label 1415 1414 1416 96 67 "" [1 uses])
(note 1416 1415 1417 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1417 1416 1418 96 (set (reg:DI 1229)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))
(insn 1418 1417 1419 96 (set (reg/f:DI 1228)
        (lo_sum:DI (reg:DI 1229)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 1419 1418 1420 96 (set (reg:DI 1 x1)
        (reg/f:DI 1228)) timer.c:43 -1
     (nil))
(insn 1420 1419 1421 96 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))
(call_insn 1421 1420 1422 96 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 1422 1421 1423 96 (set (reg:DI 1231)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:89 -1
     (nil))
(insn 1423 1422 1424 96 (set (reg/f:DI 1230)
        (lo_sum:DI (reg:DI 1231)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1424 1423 1425 96 (set (reg:DI 1232)
        (mem/c:DI (reg/f:DI 1230) [4 SCALE+0 S8 A64])) graph500.c:89 -1
     (nil))
(insn 1425 1424 1426 96 (set (reg:SI 261 [ D.3797 ])
        (subreg:SI (reg:DI 1232) 0)) graph500.c:89 -1
     (nil))
(insn 1426 1425 1427 96 (set (reg:DI 1234)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (nil))
(insn 1427 1426 1428 96 (set (reg/f:DI 1233)
        (lo_sum:DI (reg:DI 1234)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1428 1427 1429 96 (set (reg:DI 262 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 1233)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])) graph500.c:89 -1
     (nil))
(debug_insn 1429 1428 1430 96 (var_location:SI log_numverts (reg:SI 261 [ D.3797 ])) graph500.c:89 -1
     (nil))
(debug_insn 1430 1429 1431 96 (var_location:DI M (reg/v:DI 245 [ desired_nedge ])) graph500.c:89 -1
     (nil))
(debug_insn 1431 1430 1432 96 (var_location:DI userseed1 (reg:DI 262 [ D.3802 ])) graph500.c:89 -1
     (nil))
(debug_insn 1432 1431 1433 96 (var_location:DI userseed2 (reg:DI 262 [ D.3802 ])) graph500.c:89 -1
     (nil))
(debug_insn 1433 1432 1434 96 (var_location:DI result_ptr_in (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>)) -1
     (nil))
(debug_insn 1434 1433 1435 96 (var_location:DI nedges_ptr_in (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>)) -1
     (nil))
(debug_insn 1435 1434 1436 96 (var_location:DI nedges_ptr (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>)) generator/make_graph.c:44 -1
     (nil))
(debug_insn 1436 1435 1437 96 (var_location:DI result_ptr (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>)) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1437 1436 1438 96 (var_location:DI userseed1 (reg:DI 262 [ D.3802 ])) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1438 1437 1439 96 (var_location:DI userseed2 (reg:DI 262 [ D.3802 ])) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1439 1438 1440 96 (var_location:DI seed (debug_implicit_ptr:DI seed)) generator/make_graph.c:45 -1
     (nil))
(insn 1440 1439 1441 96 (set (reg:DI 1235 [ D.3802 ])
        (and:DI (reg:DI 262 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:52 -1
     (nil))
(insn 1441 1440 1442 96 (set (reg:DI 438 [ state$z1 ])
        (plus:DI (reg:DI 1235 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:52 -1
     (nil))
(insn 1442 1441 1443 96 (set (reg:DI 1236 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 30 [0x1e]))) generator/utils.c:53 -1
     (nil))
(insn 1443 1442 1444 96 (set (reg:DI 1237 [ D.3802 ])
        (and:DI (reg:DI 1236 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:53 -1
     (nil))
(insn 1444 1443 1445 96 (set (reg:DI 441 [ state$z2 ])
        (plus:DI (reg:DI 1237 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:53 -1
     (nil))
(insn 1445 1444 1446 96 (set (reg:DI 444 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 60 [0x3c]))) generator/utils.c:56 -1
     (nil))
(insn 1446 1445 1447 96 (set (reg:DI 1238 [ D.3802 ])
        (ashift:DI (reg:DI 444 [ D.3802 ])
            (const_int 4 [0x4]))) generator/utils.c:56 -1
     (nil))
(insn 1447 1446 1448 96 (set (reg:DI 1239 [ D.3802 ])
        (plus:DI (reg:DI 444 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:56 -1
     (nil))
(insn 1448 1447 1449 96 (set (reg:DI 447 [ state$z5 ])
        (plus:DI (reg:DI 1238 [ D.3802 ])
            (reg:DI 1239 [ D.3802 ]))) generator/utils.c:56 -1
     (nil))
(debug_insn 1449 1448 1450 96 (var_location:DI userseed1 (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(debug_insn 1450 1449 1451 96 (var_location:DI userseed2 (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(debug_insn 1451 1450 1452 96 (var_location:DI seed (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(insn 1452 1451 1453 96 (set (reg:DI 1241)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:52 -1
     (nil))
(insn 1453 1452 1454 96 (set (reg/f:DI 1240)
        (lo_sum:DI (reg:DI 1241)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1454 1453 1455 96 (set (mem/c:DI (plus:DI (reg/f:DI 1240)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) generator/make_graph.c:52 -1
     (nil))
(insn 1455 1454 1456 96 (set (reg:DI 1242 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) generator/make_graph.c:53 -1
     (nil))
(insn 1456 1455 1457 96 (set (reg:DI 0 x0)
        (reg:DI 1242 [ D.3802 ])) generator/make_graph.c:53 -1
     (nil))
(call_insn 1457 1456 1458 96 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/make_graph.c:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1458 1457 1459 96 (set (reg/v/f:DI 430 [ edges ])
        (reg:DI 0 x0)) generator/make_graph.c:53 -1
     (nil))
(debug_insn 1459 1458 1460 96 (var_location:DI edges (reg/v/f:DI 430 [ edges ])) generator/make_graph.c:53 -1
     (nil))
(insn 1460 1459 1461 96 (set (reg:DI 1244)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:54 -1
     (nil))
(insn 1461 1460 1462 96 (set (reg/f:DI 1243)
        (lo_sum:DI (reg:DI 1244)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) generator/make_graph.c:54 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1462 1461 1463 96 (set (mem/f/c:DI (plus:DI (reg/f:DI 1243)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/v/f:DI 430 [ edges ])) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1463 1462 1464 96 (var_location:DI seed (debug_implicit_ptr:DI seed)) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1464 1463 1465 96 (var_location:SI logN (reg:SI 261 [ D.3797 ])) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1465 1464 1466 96 (var_location:DI end_edge (reg/v:DI 245 [ desired_nedge ])) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1466 1465 1467 96 (var_location:DI edges (reg/v/f:DI 430 [ edges ])) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1467 1466 1468 96 (var_location:DI start_edge (const_int 0 [0])) -1
     (nil))
(insn 1468 1467 1469 96 (set (reg:DI 1245)
        (const_int 1 [0x1])) generator/graph_generator.c:169 -1
     (nil))
(insn 1469 1468 1470 96 (set (reg/v:DI 290 [ nverts ])
        (ashift:DI (reg:DI 1245)
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:169 -1
     (nil))
(debug_insn 1470 1469 1471 96 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) generator/graph_generator.c:169 -1
     (nil))
(debug_insn 1471 1470 1472 96 (var_location:DI st (debug_implicit_ptr:DI state)) generator/graph_generator.c:169 -1
     (nil))
(debug_insn 1472 1471 1473 96 (var_location:DI seed (debug_implicit_ptr:DI seed)) generator/graph_generator.c:169 -1
     (nil))
(debug_insn 1473 1472 1474 96 (var_location:DI state$z1 (reg:DI 438 [ state$z1 ])) generator/splittable_mrg.c:280 -1
     (nil))
(debug_insn 1474 1473 1475 96 (var_location:DI state$z2 (reg:DI 441 [ state$z2 ])) generator/splittable_mrg.c:281 -1
     (nil))
(debug_insn 1475 1474 1476 96 (var_location:DI state$z3 (reg:DI 438 [ state$z1 ])) generator/splittable_mrg.c:282 -1
     (nil))
(debug_insn 1476 1475 1477 96 (var_location:DI state$z4 (reg:DI 441 [ state$z2 ])) generator/splittable_mrg.c:283 -1
     (nil))
(debug_insn 1477 1476 1478 96 (var_location:DI state$z5 (reg:DI 447 [ state$z5 ])) generator/splittable_mrg.c:284 -1
     (nil))
(debug_insn 1478 1477 1479 96 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:172 -1
     (nil))
(debug_insn 1479 1478 1480 96 (var_location:DI seed (clobber (const_int 0 [0]))) generator/graph_generator.c:172 -1
     (nil))
(insn 1480 1479 1481 96 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 -1
     (nil))
(insn 1481 1480 1482 96 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 -1
     (nil))
(insn 1482 1481 1483 96 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 -1
     (nil))
(insn 1483 1482 1484 96 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 -1
     (nil))
(insn 1484 1483 1485 96 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:176 -1
     (nil))
(insn 1485 1484 1486 96 (set (reg:DI 1246)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:177 -1
     (nil))
(insn 1486 1485 1487 96 (set (reg:DI 2 x2)
        (const_int 7 [0x7])) generator/graph_generator.c:177 -1
     (nil))
(insn 1487 1486 1488 96 (set (reg:DI 1 x1)
        (const_int 50 [0x32])) generator/graph_generator.c:177 -1
     (nil))
(insn 1488 1487 1489 96 (set (reg:DI 0 x0)
        (reg:DI 1246)) generator/graph_generator.c:177 -1
     (nil))
(call_insn 1489 1488 1490 96 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>) [0 mrg_skip.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 1490 1489 1491 96 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:177 -1
     (nil))
(insn 1491 1490 1492 96 (set (reg:DI 1247)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))
(insn 1492 1491 1493 96 (set (reg:DI 0 x0)
        (reg:DI 1247)) generator/splittable_mrg.c:268 -1
     (nil))
(call_insn 1493 1492 1494 96 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1494 1493 1495 96 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:178 -1
     (nil))
(debug_insn 1495 1494 1496 96 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:178 -1
     (nil))
(insn 1496 1495 1497 96 (set (reg:DI 1248)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:179 -1
     (nil))
(insn 1497 1496 1498 96 (set (reg:DI 1249)
        (const_int 4294967295 [0xffffffff])) generator/graph_generator.c:179 -1
     (nil))
(insn 1498 1497 1499 96 (set (reg/v:DI 431 [ val0 ])
        (mult:DI (reg:DI 1248)
            (reg:DI 1249))) generator/graph_generator.c:179 -1
     (nil))
(debug_insn 1499 1498 1500 96 (var_location:DI val0 (reg/v:DI 431 [ val0 ])) generator/graph_generator.c:179 -1
     (nil))
(debug_insn 1500 1499 1501 96 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:179 -1
     (nil))
(insn 1501 1500 1502 96 (set (reg:DI 1250)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))
(insn 1502 1501 1503 96 (set (reg:DI 0 x0)
        (reg:DI 1250)) generator/splittable_mrg.c:268 -1
     (nil))
(call_insn 1503 1502 1504 96 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1504 1503 1505 96 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:180 -1
     (nil))
(insn 1505 1504 1506 96 (set (reg:DI 1251)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:180 -1
     (nil))
(insn 1506 1505 1507 96 (set (reg/v:DI 432 [ val0 ])
        (plus:DI (reg/v:DI 431 [ val0 ])
            (reg:DI 1251))) generator/graph_generator.c:180 -1
     (nil))
(debug_insn 1507 1506 1508 96 (var_location:DI val0 (reg/v:DI 432 [ val0 ])) generator/graph_generator.c:180 -1
     (nil))
(debug_insn 1508 1507 1509 96 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:180 -1
     (nil))
(insn 1509 1508 1510 96 (set (reg:DI 1252)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))
(insn 1510 1509 1511 96 (set (reg:DI 0 x0)
        (reg:DI 1252)) generator/splittable_mrg.c:268 -1
     (nil))
(call_insn 1511 1510 1512 96 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1512 1511 1513 96 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:181 -1
     (nil))
(debug_insn 1513 1512 1514 96 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:181 -1
     (nil))
(insn 1514 1513 1515 96 (set (reg:DI 1253)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:182 -1
     (nil))
(insn 1515 1514 1516 96 (set (reg:DI 1254)
        (const_int 4294967295 [0xffffffff])) generator/graph_generator.c:182 -1
     (nil))
(insn 1516 1515 1517 96 (set (reg/v:DI 433 [ val1 ])
        (mult:DI (reg:DI 1253)
            (reg:DI 1254))) generator/graph_generator.c:182 -1
     (nil))
(debug_insn 1517 1516 1518 96 (var_location:DI val1 (reg/v:DI 433 [ val1 ])) generator/graph_generator.c:182 -1
     (nil))
(debug_insn 1518 1517 1519 96 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:182 -1
     (nil))
(insn 1519 1518 1520 96 (set (reg:DI 1255)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:268 -1
     (nil))
(insn 1520 1519 1521 96 (set (reg:DI 0 x0)
        (reg:DI 1255)) generator/splittable_mrg.c:268 -1
     (nil))
(call_insn 1521 1520 1522 96 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1522 1521 1523 96 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:183 -1
     (nil))
(insn 1523 1522 1524 96 (set (reg:DI 1256)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:183 -1
     (nil))
(insn 1524 1523 1525 96 (set (reg/v:DI 434 [ val1 ])
        (plus:DI (reg/v:DI 433 [ val1 ])
            (reg:DI 1256))) generator/graph_generator.c:183 -1
     (nil))
(debug_insn 1525 1524 1526 96 (var_location:DI val1 (reg/v:DI 434 [ val1 ])) generator/graph_generator.c:183 -1
     (nil))
(debug_insn 1526 1525 1527 96 (var_location:DI ei (const_int 0 [0])) generator/graph_generator.c:193 -1
     (nil))
(insn 1527 1526 215 96 (set (reg:DI 576 [ ivtmp.134 ])
        (reg/v/f:DI 430 [ edges ])) -1
     (nil))
(insn 215 1527 1528 96 (set (reg/v:DI 435 [ start_edge ])
        (const_int 0 [0])) generator/graph_generator.c:193 -1
     (nil))
(jump_insn 1528 215 1529 96 (set (pc)
        (label_ref 2164)) -1
     (nil)
 -> 2164)
;;  succ:       139 [100.0%] 

(barrier 1529 1528 2167)
;; basic block 97, loop depth 1, count 0, freq 214, maybe hot
;; Invalid sum of incoming frequencies 19, should be 214
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL)
;;  pred:       139 [91.0%] 
(code_label 2167 1529 1530 97 94 "" [1 uses])
(note 1530 2167 1531 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1531 1530 1532 97 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 -1
     (nil))
(insn 1532 1531 1533 97 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 -1
     (nil))
(insn 1533 1532 1534 97 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 -1
     (nil))
(insn 1534 1533 1535 97 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 -1
     (nil))
(insn 1535 1534 1536 97 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:194 -1
     (nil))
(insn 1536 1535 1537 97 (set (reg/v:DI 266 [ exponent_middle ])
        (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1537 1536 1538 97 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1538 1537 1539 97 (var_location:DI exponent_high (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1539 1538 1540 97 (var_location:DI exponent_middle (reg/v:DI 266 [ exponent_middle ])) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1540 1539 1541 97 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
(debug_insn 1541 1540 1542 97 (var_location:SI byte_index (const_int 0 [0])) -1
     (nil))
(debug_insn 1542 1541 1543 97 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
(debug_insn 1543 1542 1544 97 (var_location:SI byte_index (const_int 8 [0x8])) -1
     (nil))
(debug_insn 1544 1543 1545 97 (var_location:DI exponent_middle (reg/v:DI 266 [ exponent_middle ])) -1
     (nil))
(insn 1545 1544 1546 97 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 -1
     (nil))
(jump_insn 1546 1545 1623 97 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1576)
            (pc))) generator/splittable_mrg.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1576)
;;  succ:       100 [91.0%] 
;;              98 [9.0%]  (FALLTHRU)

;; basic block 98, loop depth 1, count 0, freq 214, maybe hot
;; Invalid sum of incoming frequencies 36, should be 214
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL)
;;  pred:       97 [9.0%]  (FALLTHRU)
;;              104 [100.0%] 
(code_label 1623 1546 1547 98 75 "" [1 uses])
(note 1547 1623 1548 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1548 1547 1549 98 (var_location:SI byte_index (const_int 16 [0x10])) -1
     (nil))
(debug_insn 1549 1548 1550 98 (var_location:DI exponent_high (const_int 0 [0])) -1
     (nil))
(debug_insn 1550 1549 1551 98 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1551 1550 1552 98 (var_location:DI exponent_high (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1552 1551 1553 98 (var_location:DI exponent_middle (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1553 1552 1554 98 (var_location:SI byte_index (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1554 1553 1555 98 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1555 1554 1556 98 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1556 1555 1557 98 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1557 1556 1558 98 (var_location:DI exponent_low (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1558 1557 1559 98 (var_location:DI D#37 (ashift:DI (reg/v:DI 266 [ exponent_middle ])
        (const_int 4 [0x4]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1559 1558 1560 98 (var_location:DI D#36 (plus:DI (reg/v/f:DI 430 [ edges ])
        (debug_expr:DI D#37))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1560 1559 1561 98 (var_location:SI D#1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1561 1560 1562 98 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1562 1561 1563 98 (var_location:SI lgN (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1563 1562 1564 98 (var_location:DI st (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1564 1563 1565 98 (var_location:DI result (debug_expr:DI D#36)) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1565 1564 1566 98 (var_location:DI val0 (reg/v:DI 432 [ val0 ])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1566 1565 1567 98 (var_location:DI val1 (reg/v:DI 434 [ val1 ])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1567 1566 1568 98 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
(debug_insn 1568 1567 1569 98 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
(debug_insn 1569 1568 1570 98 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1570 1569 1571 98 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) -1
     (nil))
(insn 1571 1570 1572 98 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 290 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 -1
     (nil))
(jump_insn 1572 1571 1575 98 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1627)
            (pc))) generator/graph_generator.c:136 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1627)
;;  succ:       105 [95.5%] 
;;              99 [4.5%]  (FALLTHRU)

;; basic block 99, loop depth 1, count 0, freq 10
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 [4.5%]  (FALLTHRU)
(note 1575 1572 213 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 213 1575 214 99 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/graph_generator.c:135 -1
     (nil))
(insn 214 213 1573 99 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/graph_generator.c:135 -1
     (nil))
(jump_insn 1573 214 1574 99 (set (pc)
        (label_ref 1958)) generator/graph_generator.c:136 -1
     (nil)
 -> 1958)
;;  succ:       132 [100.0%] 

(barrier 1574 1573 1576)
;; basic block 100, loop depth 1, count 0, freq 195, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 [91.0%] 
(code_label 1576 1574 1577 100 70 "" [1 uses])
(note 1577 1576 195 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 195 1577 1620 100 (set (reg/v:SI 460 [ byte_index ])
        (const_int 8 [0x8])) generator/splittable_mrg.c:193 -1
     (nil))
;;  succ:       101 [100.0%]  (FALLTHRU)

;; basic block 101, loop depth 2, count 0, freq 194, maybe hot
;; Invalid sum of incoming frequencies 372, should be 194
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL)
;;  pred:       100 [100.0%]  (FALLTHRU)
;;              103 [91.0%]  (DFS_BACK)
(code_label 1620 195 1578 101 74 "" [1 uses])
(note 1578 1620 1579 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1579 1578 1580 101 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
(debug_insn 1580 1579 1581 101 (var_location:DI exponent_middle (reg/v:DI 266 [ exponent_middle ])) -1
     (nil))
(insn 1581 1580 1582 101 (set (reg/v:SI 457 [ val ])
        (zero_extend:SI (subreg:QI (reg/v:DI 266 [ exponent_middle ]) 0))) generator/splittable_mrg.c:194 -1
     (nil))
(debug_insn 1582 1581 1583 101 (var_location:QI val (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/splittable_mrg.c:194 -1
     (nil))
(insn 1583 1582 1584 101 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 457 [ val ])
            (const_int 0 [0]))) generator/splittable_mrg.c:195 -1
     (nil))
(jump_insn 1584 1583 1585 101 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1612)
            (pc))) generator/splittable_mrg.c:195 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1612)
;;  succ:       102 [29.0%]  (FALLTHRU)
;;              103 [71.0%] 

;; basic block 102, loop depth 2, count 0, freq 56, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL)
;;  pred:       101 [29.0%]  (FALLTHRU)
(note 1585 1584 3975 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3975 1585 1586 102 (var_location:QI D#50 (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/graph_generator.c:136 -1
     (nil))
(debug_insn 1586 3975 1587 102 (var_location:DI mat (plus:DI (plus:DI (mult:DI (zero_extend:DI (debug_expr:QI D#50))
                (const_int 72 [0x48]))
            (mult:DI (sign_extend:DI (reg/v:SI 460 [ byte_index ]))
                (const_int 18432 [0x4800])))
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))
(debug_insn 1587 1586 1588 102 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1588 1587 1589 102 (set (reg:DI 1257)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:165 -1
     (nil))
(insn 1589 1588 1590 102 (set (reg:DI 1258)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:165 -1
     (nil))
(insn 1590 1589 1591 102 (set (reg:DI 1259)
        (sign_extend:DI (reg/v:SI 457 [ val ]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1591 1590 1592 102 (set (reg:DI 1260)
        (reg:DI 1259)) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1592 1591 1593 102 (set (reg:DI 1261)
        (ashift:DI (reg:DI 1260)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1593 1592 1594 102 (set (reg:DI 1260)
        (reg:DI 1261)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 8 [0x8]))
        (nil)))
(insn 1594 1593 1595 102 (set (reg:DI 1262)
        (plus:DI (reg:DI 1260)
            (reg:DI 1259))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 9 [0x9]))
        (nil)))
(insn 1595 1594 1596 102 (set (reg:DI 1263)
        (ashift:DI (reg:DI 1262)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1596 1595 1597 102 (set (reg:DI 1262)
        (reg:DI 1263)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1259)
            (const_int 72 [0x48]))
        (nil)))
(insn 1597 1596 1598 102 (set (reg:DI 1264)
        (sign_extend:DI (reg/v:SI 460 [ byte_index ]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1598 1597 1599 102 (set (reg:DI 1265)
        (reg:DI 1264)) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1599 1598 1600 102 (set (reg:DI 1266)
        (ashift:DI (reg:DI 1265)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1600 1599 1601 102 (set (reg:DI 1265)
        (reg:DI 1266)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 8 [0x8]))
        (nil)))
(insn 1601 1600 1602 102 (set (reg:DI 1267)
        (plus:DI (reg:DI 1265)
            (reg:DI 1264))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 9 [0x9]))
        (nil)))
(insn 1602 1601 1603 102 (set (reg:DI 1268)
        (ashift:DI (reg:DI 1267)
            (const_int 11 [0xb]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1603 1602 1604 102 (set (reg:DI 1267)
        (reg:DI 1268)) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1264)
            (const_int 18432 [0x4800]))
        (nil)))
(insn 1604 1603 1605 102 (set (reg:DI 1269)
        (plus:DI (reg:DI 1262)
            (reg:DI 1267))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1605 1604 1606 102 (set (reg:DI 1272)
        (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1606 1605 1607 102 (set (reg:DI 1271)
        (lo_sum:DI (reg:DI 1272)
            (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)
        (nil)))
(insn 1607 1606 1608 102 (set (reg:DI 1270 [ D.3811 ])
        (plus:DI (reg:DI 1269)
            (reg:DI 1271))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1608 1607 1609 102 (set (reg:DI 2 x2)
        (reg:DI 1257)) generator/splittable_mrg.c:165 -1
     (nil))
(insn 1609 1608 1610 102 (set (reg:DI 1 x1)
        (reg:DI 1258)) generator/splittable_mrg.c:165 -1
     (nil))
(insn 1610 1609 1611 102 (set (reg:DI 0 x0)
        (reg:DI 1270 [ D.3811 ])) generator/splittable_mrg.c:165 -1
     (nil))
(call_insn 1611 1610 1612 102 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>) [0 mrg_apply_transition S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:165 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       103 [100.0%]  (FALLTHRU)

;; basic block 103, loop depth 2, count 0, freq 194, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL)
;;  pred:       101 [71.0%] 
;;              102 [100.0%]  (FALLTHRU)
(code_label 1612 1611 1613 103 73 "" [1 uses])
(note 1613 1612 1614 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1614 1613 1615 103 (set (reg/v:SI 460 [ byte_index ])
        (plus:SI (reg/v:SI 460 [ byte_index ])
            (const_int 1 [0x1]))) generator/splittable_mrg.c:193 -1
     (nil))
(debug_insn 1615 1614 1616 103 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) generator/splittable_mrg.c:193 -1
     (nil))
(insn 1616 1615 1617 103 (set (reg/v:DI 266 [ exponent_middle ])
        (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
            (const_int 8 [0x8]))) generator/splittable_mrg.c:193 -1
     (nil))
(debug_insn 1617 1616 1618 103 (var_location:DI exponent_middle (reg/v:DI 266 [ exponent_middle ])) generator/splittable_mrg.c:193 -1
     (nil))
(debug_insn 1618 1617 1619 103 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
(debug_insn 1619 1618 1621 103 (var_location:DI exponent_middle (reg/v:DI 266 [ exponent_middle ])) -1
     (nil))
(insn 1621 1619 1622 103 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 -1
     (nil))
(jump_insn 1622 1621 1626 103 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1620)
            (pc))) generator/splittable_mrg.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1620)
;;  succ:       101 [91.0%]  (DFS_BACK)
;;              104 [9.0%]  (FALLTHRU)

;; basic block 104, loop depth 1, count 0, freq 17
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL)
;;  pred:       103 [9.0%]  (FALLTHRU)
(note 1626 1622 1624 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1624 1626 1625 104 (set (pc)
        (label_ref 1623)) generator/splittable_mrg.c:193 -1
     (nil)
 -> 1623)
;;  succ:       98 [100.0%] 

(barrier 1625 1624 1627)
;; basic block 105, loop depth 1, count 0, freq 205, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL)
;;  pred:       98 [95.5%] 
(code_label 1627 1625 1628 105 71 "" [1 uses])
(note 1628 1627 1629 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1629 1628 1630 105 (var_location:SI D#9 (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1630 1629 1631 105 (var_location:DI st (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1631 1630 1632 105 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1632 1631 1633 105 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1633 1632 1634 105 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1634 1633 1635 105 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(insn 1635 1634 1636 105 (set (reg:DI 750 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1636 1635 1637 105 (var_location:DI a (reg:DI 750 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1637 1636 1638 105 (var_location:DI a (reg:DI 750 [ D.3802 ])) -1
     (nil))
(debug_insn 1638 1637 1639 105 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 1639 1638 1640 105 (set (reg:DI 1273)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 -1
     (nil))
(insn 1640 1639 1641 105 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 750 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:27 -1
     (nil))
(jump_insn 1641 1640 1642 105 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1671)
            (pc))) generator/mod_arith_64bit.h:27 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1671)
;;  succ:       108 [0.0%] 
;;              106 [100.0%]  (FALLTHRU)

;; basic block 106, loop depth 1, count 0, freq 204, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL)
;;  pred:       105 [100.0%]  (FALLTHRU)
(note 1642 1641 1643 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1643 1642 1644 106 (set (reg:DI 1275)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1644 1643 1645 106 (set (reg:DI 1274 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1275))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1645 1644 1646 106 (set (reg:DI 1277)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1646 1645 1647 106 (set (reg:DI 1276)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1277)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1647 1646 1648 106 (set (reg:DI 1278)
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1276))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1648 1647 1649 106 (set (reg:DI 1279)
        (lshiftrt:DI (reg:DI 1278)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1649 1648 1650 106 (set (reg:DI 1280)
        (plus:DI (reg:DI 1276)
            (reg:DI 1279))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1650 1649 1651 106 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1280)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1274 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1651 1650 1652 106 (set (reg:DI 1281)
        (reg:DI 468 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1652 1651 1653 106 (set (reg:DI 1282)
        (ashift:DI (reg:DI 1281)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1653 1652 1654 106 (set (reg:DI 1281)
        (reg:DI 1282)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))
(insn 1654 1653 1655 106 (set (reg:DI 1283)
        (minus:DI (reg:DI 1281)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1655 1654 1656 106 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1283))) generator/mod_arith_64bit.h:29 -1
     (nil))
(debug_insn 1656 1655 1657 106 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1657 1656 1658 106 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1658 1657 1659 106 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(insn 1659 1658 1660 106 (set (reg:DI 751 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1660 1659 1661 106 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1661 1660 1662 106 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1662 1661 1663 106 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1663 1662 1664 106 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1664 1663 1665 106 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1665 1664 1666 106 (set (reg:DI 1284)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1666 1665 1667 106 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1284))) generator/mod_arith_64bit.h:34 -1
     (nil))
(jump_insn 1667 1666 1668 106 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1751)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1751)
;;  succ:       107 [0.0%]  (FALLTHRU)
;;              113 [100.0%] 

;; basic block 107, loop depth 0, count 0, freq 0
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL)
;;  pred:       106 [0.0%]  (FALLTHRU)
(note 1668 1667 1669 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1669 1668 1670 107 (set (pc)
        (label_ref 1737)) generator/mod_arith_64bit.h:34 -1
     (nil)
 -> 1737)
;;  succ:       112 [100.0%] 

(barrier 1670 1669 1671)
;; basic block 108, loop depth 0, count 0, freq 1
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL)
;;  pred:       167 [100.0%] 
;;              105 [0.0%] 
;;              166 [100.0%] 
(code_label 1671 1670 1672 108 76 "" [3 uses])
(note 1672 1671 1673 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1673 1672 1674 108 (var_location:DI D#11 (const_int 107374182 [0x6666666])) -1
     (nil))
(call_insn/c/i 1674 1673 1675 108 (parallel [
            (call (mem:DI (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>) [0 mod_mul.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 1675 1674 3968)
;; basic block 109, loop depth 2, count 0, freq 143, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL)
;;  pred:       340 [95.5%] 
(code_label 3968 1675 1676 109 194 "" [1 uses])
(note 1676 3968 1677 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1677 1676 1678 109 (var_location:SI D#9 (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1678 1677 1679 109 (var_location:DI st (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1679 1678 1680 109 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1680 1679 1681 109 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1681 1680 1682 109 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1682 1681 1683 109 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1683 1682 1684 109 (var_location:DI D#30 (mem/j/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1684 1683 1685 109 (var_location:DI a (debug_expr:DI D#30)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1685 1684 1686 109 (var_location:DI a (debug_expr:DI D#30)) -1
     (nil))
(debug_insn 1686 1685 1687 109 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(debug_insn 1687 1686 1688 109 (var_location:SI D#9 (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1688 1687 1689 109 (var_location:DI st (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1689 1688 1690 109 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1690 1689 1691 109 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1691 1690 1692 109 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1692 1691 1693 109 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1693 1692 1694 109 (var_location:DI D#30 (mem/j/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1694 1693 1695 109 (var_location:DI a (debug_expr:DI D#30)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1695 1694 1696 109 (var_location:DI a (debug_expr:DI D#30)) -1
     (nil))
(debug_insn 1696 1695 1697 109 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 1697 1696 1698 109 (set (reg:DI 1286)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1698 1697 1699 109 (set (reg:DI 1285 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1286))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1699 1698 1700 109 (set (reg:DI 1288)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1700 1699 1701 109 (set (reg:DI 1287)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1288)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1701 1700 1702 109 (set (reg:DI 1289)
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1287))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1702 1701 1703 109 (set (reg:DI 1290)
        (lshiftrt:DI (reg:DI 1289)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1703 1702 1704 109 (set (reg:DI 1291)
        (plus:DI (reg:DI 1287)
            (reg:DI 1290))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1704 1703 1705 109 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1291)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1285 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1705 1704 1706 109 (set (reg:DI 1292)
        (reg:DI 468 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1706 1705 1707 109 (set (reg:DI 1293)
        (ashift:DI (reg:DI 1292)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1707 1706 1708 109 (set (reg:DI 1292)
        (reg:DI 1293)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))
(insn 1708 1707 1709 109 (set (reg:DI 1294)
        (minus:DI (reg:DI 1292)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1709 1708 1710 109 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1294))) generator/mod_arith_64bit.h:29 -1
     (nil))
(debug_insn 1710 1709 1711 109 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1711 1710 1712 109 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1712 1711 1713 109 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1713 1712 1714 109 (var_location:DI D#29 (mem/j/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1714 1713 1715 109 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1715 1714 1716 109 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1716 1715 1717 109 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1717 1716 1718 109 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1718 1717 1719 109 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1719 1718 1720 109 (set (reg:DI 1295)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1720 1719 1721 109 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1295))) generator/mod_arith_64bit.h:34 -1
     (nil))
(jump_insn 1721 1720 1722 109 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1756)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1756)
;;  succ:       110 [0.0%]  (FALLTHRU)
;;              114 [100.0%]  (DFS_BACK)

;; basic block 110, loop depth 0, count 0, freq 0
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109 [0.0%]  (FALLTHRU)
(note 1722 1721 1723 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1723 1722 1724 110 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))
(insn 1724 1723 1725 110 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))
(insn 1725 1724 1726 110 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 1726 1725 1727 110 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))
(insn 1727 1726 1729 110 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))
(jump_insn 1729 1727 1730 110 (set (pc)
        (label_ref:DI 1737)) 2 {jump}
     (nil)
 -> 1737)
;;  succ:       112 [100.0%] 

(barrier 1730 1729 1840)
;; basic block 111, loop depth 0, count 0, freq 1
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL)
;;  pred:       117 [0.0%] 
(code_label 1840 1730 1731 111 82 "" [1 uses])
(note 1731 1840 1732 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1732 1731 1733 111 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))
(insn 1733 1732 1734 111 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 1734 1733 1735 111 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))
(insn 1735 1734 1736 111 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))
(insn 1736 1735 1737 111 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 469 [ D.3802 ])) -1
     (nil))
;;  succ:       112 [100.0%]  (FALLTHRU)

;; basic block 112, loop depth 0, count 0, freq 1
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL)
;;  pred:       174 [100.0%] 
;;              107 [100.0%] 
;;              111 [100.0%]  (FALLTHRU)
;;              171 [100.0%] 
;;              110 [100.0%] 
;;              170 [100.0%] 
(code_label 1737 1736 1738 112 78 "" [5 uses])
(note 1738 1737 1739 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1739 1738 1740 112 (set (reg:DI 1297)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1740 1739 1741 112 (set (reg/f:DI 1296)
        (lo_sum:DI (reg:DI 1297)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>)
        (nil)))
(insn 1741 1740 1742 112 (set (reg:DI 1299)
        (high:DI (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1742 1741 1743 112 (set (reg/f:DI 1298)
        (lo_sum:DI (reg:DI 1299)
            (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>)
        (nil)))
(insn 1743 1742 1744 112 (set (reg:DI 1301)
        (high:DI (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1744 1743 1745 112 (set (reg/f:DI 1300)
        (lo_sum:DI (reg:DI 1301)
            (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>)
        (nil)))
(insn 1745 1744 1746 112 (set (reg:DI 3 x3)
        (reg/f:DI 1296)) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1746 1745 1747 112 (set (reg:SI 2 x2)
        (const_int 34 [0x22])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1747 1746 1748 112 (set (reg:DI 1 x1)
        (reg/f:DI 1298)) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1748 1747 1749 112 (set (reg:DI 0 x0)
        (reg/f:DI 1300)) generator/mod_arith_64bit.h:34 -1
     (nil))
(call_insn 1749 1748 1750 112 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/mod_arith_64bit.h:34 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 1750 1749 1751)
;; basic block 113, loop depth 1, count 0, freq 204, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106 [100.0%] 
(code_label 1751 1750 1752 113 77 "" [1 uses])
(note 1752 1751 1753 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1753 1752 1754 113 (set (reg:DI 714 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])) -1
     (nil))
(insn 1754 1753 1755 113 (set (reg:DI 826 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])) -1
     (nil))
(insn 1755 1754 196 113 (set (reg:DI 695 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])) -1
     (nil))
(insn 196 1755 197 113 (set (reg/v:DI 442 [ nverts ])
        (reg/v:DI 290 [ nverts ])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 197 196 198 113 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 198 197 1756 113 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 -1
     (nil))
;;  succ:       114 [100.0%]  (FALLTHRU)

;; basic block 114, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL)
;;  pred:       113 [100.0%]  (FALLTHRU)
;;              109 [100.0%]  (DFS_BACK)
(code_label 1756 198 1757 114 79 "" [1 uses])
(note 1757 1756 1758 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1758 1757 1759 114 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
(debug_insn 1759 1758 1760 114 (var_location:DI base_src (reg/v:DI 747 [ base_src ])) -1
     (nil))
(debug_insn 1760 1759 1761 114 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1761 1760 1762 114 (var_location:DI nverts (reg/v:DI 442 [ nverts ])) -1
     (nil))
(debug_insn 1762 1761 1763 114 (var_location:SI D#9 (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1763 1762 1764 114 (var_location:DI st (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1764 1763 1765 114 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1765 1764 1766 114 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1766 1765 1767 114 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1767 1766 1768 114 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1768 1767 1769 114 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1769 1768 1770 114 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1770 1769 1771 114 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1771 1770 1772 114 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1772 1771 1773 114 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1773 1772 1774 114 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1774 1773 1775 114 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1775 1774 1776 114 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1776 1775 1777 114 (set (reg:DI 1303)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1777 1776 1778 114 (set (reg:DI 1302 [ D.3802 ])
        (mult:DI (reg:DI 751 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1778 1777 1779 114 (set (reg:DI 1304 [ D.3802 ])
        (plus:DI (reg:DI 1302 [ D.3802 ])
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1779 1778 1780 114 (set (reg:DI 1306)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1780 1779 1781 114 (set (reg:DI 1305)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1781 1780 1782 114 (set (reg:DI 1307)
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1305))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1782 1781 1783 114 (set (reg:DI 1308)
        (lshiftrt:DI (reg:DI 1307)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1783 1782 1784 114 (set (reg:DI 1309)
        (plus:DI (reg:DI 1305)
            (reg:DI 1308))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1784 1783 1785 114 (set (reg:DI 469 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1309)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1304 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1785 1784 1786 114 (set (reg:DI 1310)
        (reg:DI 469 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1786 1785 1787 114 (set (reg:DI 1311)
        (ashift:DI (reg:DI 1310)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1787 1786 1788 114 (set (reg:DI 1310)
        (reg:DI 1311)) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))
(insn 1788 1787 1789 114 (set (reg:DI 1312)
        (minus:DI (reg:DI 1310)
            (reg:DI 469 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1789 1788 1790 114 (set (reg:DI 469 [ D.3802 ])
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1312))) generator/mod_arith_64bit.h:36 -1
     (nil))
(debug_insn 1790 1789 1791 114 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1791 1790 1792 114 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1792 1791 1793 114 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1793 1792 1794 114 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1794 1793 1795 114 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1795 1794 1796 114 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1796 1795 1797 114 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 1797 1796 1798 114 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:45 -1
     (nil))
(debug_insn 1798 1797 1799 114 (var_location:SI val (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))
(insn 1799 1798 1800 114 (set (reg:DI 1313)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:46 -1
     (nil))
(insn 1800 1799 1801 114 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 469 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:46 -1
     (nil))
(jump_insn 1801 1800 1802 114 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) generator/graph_generator.c:46 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1877)
;;  succ:       115 [50.0%]  (FALLTHRU)
;;              120 [50.0%] 

;; basic block 115, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL)
;;  pred:       114 [50.0%]  (FALLTHRU)
(note 1802 1801 3980 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3980 1802 3981 115 (set (pc)
        (label_ref 1869)) -1
     (nil)
 -> 1869)
;;  succ:       117 [100.0%] 

(barrier 3981 3980 3983)
;; basic block 116, loop depth 3, count 0, freq 1732, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 [91.0%]  (DFS_BACK)
(code_label 3983 3981 3982 116 196 "" [1 uses])
(note 3982 3983 199 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 199 3982 200 116 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:49 -1
     (nil))
(insn 200 199 201 116 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:49 -1
     (nil))
(insn 201 200 202 116 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:49 -1
     (nil))
(insn 202 201 1869 116 (set (reg:DI 469 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/graph_generator.c:49 -1
     (nil))
;;  succ:       117 [100.0%]  (FALLTHRU)

;; basic block 117, loop depth 3, count 0, freq 1906, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL)
;;  pred:       116 [100.0%]  (FALLTHRU)
;;              115 [100.0%] 
(code_label 1869 202 1803 117 83 "" [1 uses])
(note 1803 1869 1804 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1804 1803 1805 117 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1805 1804 1806 117 (var_location:DI state (plus:DI (reg/f:DI 68 virtual-stack-vars)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1806 1805 1807 117 (var_location:DI D#33 (mem/j/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1807 1806 1808 117 (var_location:DI a (debug_expr:DI D#33)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1808 1807 1809 117 (var_location:DI a (debug_expr:DI D#33)) -1
     (nil))
(debug_insn 1809 1808 1810 117 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 1810 1809 1811 117 (set (reg:DI 1315)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1811 1810 1812 117 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1315))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1812 1811 1813 117 (set (reg:DI 1317)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1813 1812 1814 117 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1814 1813 1815 117 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1815 1814 1816 117 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1816 1815 1817 117 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1817 1816 1818 117 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1818 1817 1819 117 (set (reg:DI 1321)
        (reg:DI 473 [ D.3802 ])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1819 1818 1820 117 (set (reg:DI 1322)
        (ashift:DI (reg:DI 1321)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1820 1819 1821 117 (set (reg:DI 1321)
        (reg:DI 1322)) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))
(insn 1821 1820 1822 117 (set (reg:DI 1323)
        (minus:DI (reg:DI 1321)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1822 1821 1823 117 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 -1
     (nil))
(debug_insn 1823 1822 1824 117 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1824 1823 1825 117 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1825 1824 1826 117 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1826 1825 1827 117 (var_location:DI D#32 (mem/j/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1827 1826 1828 117 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1828 1827 1829 117 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1829 1828 1830 117 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1830 1829 1831 117 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1831 1830 1832 117 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(debug_insn 1832 1831 1833 117 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1833 1832 1834 117 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1834 1833 1835 117 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1835 1834 1836 117 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1836 1835 1837 117 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1837 1836 1838 117 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1838 1837 1839 117 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1839 1838 1841 117 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1841 1839 1842 117 (set (reg:DI 1324)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1842 1841 1843 117 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1324))) generator/mod_arith_64bit.h:34 -1
     (nil))
(jump_insn 1843 1842 1844 117 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1840)
;;  succ:       111 [0.0%] 
;;              118 [100.0%]  (FALLTHRU)

;; basic block 118, loop depth 3, count 0, freq 1903, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 [100.0%]  (FALLTHRU)
(note 1844 1843 1845 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1845 1844 1846 118 (set (reg:DI 1326)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1846 1845 1847 118 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1326))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1847 1846 1848 118 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1848 1847 1849 118 (set (reg:DI 1329)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1849 1848 1850 118 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1329)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1850 1849 1851 118 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1851 1850 1852 118 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1852 1851 1853 118 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1853 1852 1854 118 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1854 1853 1855 118 (set (reg:DI 1333)
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1855 1854 1856 118 (set (reg:DI 1334)
        (ashift:DI (reg:DI 1333)
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1856 1855 1857 118 (set (reg:DI 1333)
        (reg:DI 1334)) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
            (const_int 2147483648 [0x80000000]))
        (nil)))
(insn 1857 1856 1858 118 (set (reg:DI 1335)
        (minus:DI (reg:DI 1333)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 1858 1857 1859 118 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 -1
     (nil))
(debug_insn 1859 1858 1860 118 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1860 1859 1861 118 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1861 1860 1862 118 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1862 1861 1863 118 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1863 1862 1864 118 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1864 1863 1865 118 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1865 1864 1866 118 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 1866 1865 1867 118 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:48 -1
     (nil))
(debug_insn 1867 1866 1868 118 (var_location:SI val (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
(insn 1868 1867 1870 118 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 1870 1868 1871 118 (set (reg:DI 1336)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:49 -1
     (nil))
(insn 1871 1870 1872 118 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1336))) generator/graph_generator.c:49 -1
     (nil))
(jump_insn 1872 1871 1873 118 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3983)
            (pc))) generator/graph_generator.c:49 7 {condjump}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 3983)
;;  succ:       116 [91.0%]  (DFS_BACK)
;;              119 [9.0%]  (FALLTHRU)

;; basic block 119, loop depth 2, count 0, freq 171, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL)
;;  pred:       118 [9.0%]  (FALLTHRU)
(note 1873 1872 1874 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1874 1873 208 119 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
(insn 208 1874 209 119 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:48 -1
     (nil))
(insn 209 208 210 119 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:48 -1
     (nil))
(insn 210 209 211 119 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:48 -1
     (nil))
(insn 211 210 212 119 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:48 -1
     (nil))
(insn 212 211 1875 119 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(jump_insn 1875 212 1876 119 (set (pc)
        (label_ref 1880)) generator/graph_generator.c:48 -1
     (nil)
 -> 1880)
;;  succ:       121 [100.0%] 

(barrier 1876 1875 1877)
;; basic block 120, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 [50.0%] 
(code_label 1877 1876 1878 120 81 "" [1 uses])
(note 1878 1877 1879 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1879 1878 203 120 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))
(insn 203 1879 204 120 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 714 [ D.3802 ])) generator/graph_generator.c:45 -1
     (nil))
(insn 204 203 205 120 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:45 -1
     (nil))
(insn 205 204 206 120 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:45 -1
     (nil))
(insn 206 205 207 120 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:45 -1
     (nil))
(insn 207 206 1880 120 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:45 -1
     (nil))
;;  succ:       121 [100.0%]  (FALLTHRU)

;; basic block 121, loop depth 2, count 0, freq 345, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 [100.0%]  (FALLTHRU)
;;              119 [100.0%] 
(code_label 1880 207 1881 121 84 "" [1 uses])
(note 1881 1880 1882 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1882 1881 1883 121 (var_location:SI val (reg/v:SI 463 [ val ])) -1
     (nil))
(debug_insn 1883 1882 1884 121 (var_location:SI spk_noise_factor (const_int 0 [0])) generator/graph_generator.c:52 -1
     (nil))
(debug_insn 1884 1883 1885 121 (var_location:SI adjusted_bc_numerator (const_int 1900 [0x76c])) generator/graph_generator.c:56 -1
     (nil))
(insn 1885 1884 1886 121 (set (reg:SI 1338)
        (const_int -776530087 [0xffffffffd1b71759])) generator/graph_generator.c:57 -1
     (nil))
(insn 1886 1885 1887 121 (set (reg:DI 1337)
        (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
            (zero_extend:DI (reg:SI 1338)))) generator/graph_generator.c:57 -1
     (nil))
(insn 1887 1886 1888 121 (set (reg:DI 1339)
        (lshiftrt:DI (reg:DI 1337)
            (const_int 32 [0x20]))) generator/graph_generator.c:57 -1
     (nil))
(insn 1888 1887 1889 121 (set (reg/v:SI 464 [ val ])
        (lshiftrt:SI (subreg:SI (reg:DI 1339) 0)
            (const_int 13 [0xd]))) generator/graph_generator.c:57 -1
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 463 [ val ])
            (const_int 10000 [0x2710]))
        (nil)))
(insn 1889 1888 1890 121 (set (reg:SI 1341)
        (const_int 10000 [0x2710])) generator/graph_generator.c:57 -1
     (nil))
(insn 1890 1889 1891 121 (set (reg:SI 1340)
        (mult:SI (reg/v:SI 464 [ val ])
            (reg:SI 1341))) generator/graph_generator.c:57 -1
     (nil))
(insn 1891 1890 1892 121 (set (reg/v:SI 464 [ val ])
        (minus:SI (reg/v:SI 463 [ val ])
            (reg:SI 1340))) generator/graph_generator.c:57 -1
     (nil))
(debug_insn 1892 1891 1893 121 (var_location:SI val (reg/v:SI 464 [ val ])) generator/graph_generator.c:57 -1
     (nil))
(insn 1893 1892 1894 121 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 464 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:58 -1
     (nil))
(jump_insn 1894 1893 1895 121 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3985)
            (pc))) generator/graph_generator.c:58 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 3985)
;;  succ:       319 [39.0%] 
;;              122 [61.0%]  (FALLTHRU)

;; basic block 122, loop depth 2, count 0, freq 210, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL)
;;  pred:       121 [61.0%]  (FALLTHRU)
(note 1895 1894 1896 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1896 1895 1897 122 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:59 -1
     (nil))
(insn 1897 1896 1898 122 (set (reg:SI 1342 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:60 -1
     (nil))
(insn 1898 1897 1899 122 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1342 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:60 -1
     (nil))
(jump_insn 1899 1898 1900 122 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1909)
            (pc))) generator/graph_generator.c:60 -1
     (int_list:REG_BR_PROB 6700 (nil))
 -> 1909)
;;  succ:       125 [67.0%] 
;;              123 [33.0%]  (FALLTHRU)

;; basic block 123, loop depth 2, count 0, freq 69, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 [33.0%]  (FALLTHRU)
(note 1900 1899 1901 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1901 1900 1902 123 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:61 -1
     (nil))
(insn 1902 1901 1903 123 (set (reg:SI 1343 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:63 -1
     (nil))
(insn 1903 1902 1904 123 (set (reg:SI 1344)
        (const_int 5699 [0x1643])) generator/graph_generator.c:63 -1
     (nil))
(insn 1904 1903 1905 123 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1343 [ val ])
            (reg:SI 1344))) generator/graph_generator.c:63 -1
     (nil))
(jump_insn 1905 1904 1906 123 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3989)
            (pc))) generator/graph_generator.c:63 7 {condjump}
     (int_list:REG_BR_PROB 6700 (nil))
 -> 3989)
;;  succ:       124 [33.0%]  (FALLTHRU)
;;              320 [67.0%] 

;; basic block 124, loop depth 2, count 0, freq 23
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL)
;;  pred:       123 [33.0%]  (FALLTHRU)
(note 1906 1905 274 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 274 1906 275 124 (set (reg:DI 829 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:63 -1
     (nil))
(insn 275 274 1907 124 (set (reg:DI 828 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:63 -1
     (nil))
(jump_insn 1907 275 1908 124 (set (pc)
        (label_ref 3823)) generator/graph_generator.c:63 -1
     (nil)
 -> 3823)
;;  succ:       321 [100.0%] 

(barrier 1908 1907 1909)
;; basic block 125, loop depth 2, count 0, freq 140, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL)
;;  pred:       122 [67.0%] 
(code_label 1909 1908 1910 125 86 "" [1 uses])
(note 1910 1909 1911 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1911 1910 1912 125 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1912 1911 1913 125 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1913 1912 1914 125 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1914 1913 1915 125 (var_location:SI src_offset (const_int 1 [0x1])) generator/graph_generator.c:138 -1
     (nil))
(debug_insn 1915 1914 1916 125 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
(insn 1916 1915 1917 125 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 -1
     (nil))
(jump_insn 1917 1916 1918 125 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1939)
            (pc))) generator/graph_generator.c:140 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1939)
;;  succ:       126 (FALLTHRU)
;;              128 [100.0%] 

;; basic block 126, loop depth 0, count 0, freq 0
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL)
;;  pred:       125 (FALLTHRU)
(note 1918 1917 1919 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1919 1918 1920 126 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))
(insn 1920 1919 1921 126 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))
(insn 1921 1920 1922 126 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 1922 1921 1923 126 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))
(insn 1923 1922 3838 126 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))
;;  succ:       127 [100.0%]  (FALLTHRU)

;; basic block 127, loop depth 0, count 0, freq 0
;; Invalid sum of incoming frequencies 156, should be 0
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL)
;;  pred:       322 [100.0%] 
;;              126 [100.0%]  (FALLTHRU)
(code_label 3838 1923 1924 127 185 "" [1 uses])
(note 1924 3838 1925 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1925 1924 1926 127 (set (reg:DI 1346)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 -1
     (nil))
(insn 1926 1925 1927 127 (set (reg/f:DI 1345)
        (lo_sum:DI (reg:DI 1346)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 1927 1926 1928 127 (set (reg:DI 1347)
        (reg/f:DI 1345)) generator/graph_generator.c:140 -1
     (nil))
(insn 1928 1927 1929 127 (set (reg/f:DI 1348)
        (plus:DI (reg/f:DI 1345)
            (const_int 16 [0x10]))) generator/graph_generator.c:140 -1
     (nil))
(insn 1929 1928 1930 127 (set (reg:DI 1350)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 -1
     (nil))
(insn 1930 1929 1931 127 (set (reg/f:DI 1349)
        (lo_sum:DI (reg:DI 1350)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
        (nil)))
(insn 1931 1930 1932 127 (set (reg:DI 1352)
        (high:DI (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 -1
     (nil))
(insn 1932 1931 1933 127 (set (reg/f:DI 1351)
        (lo_sum:DI (reg:DI 1352)
            (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>)
        (nil)))
(insn 1933 1932 1934 127 (set (reg:DI 3 x3)
        (reg/f:DI 1348)) generator/graph_generator.c:140 -1
     (nil))
(insn 1934 1933 1935 127 (set (reg:SI 2 x2)
        (const_int 140 [0x8c])) generator/graph_generator.c:140 -1
     (nil))
(insn 1935 1934 1936 127 (set (reg:DI 1 x1)
        (reg/f:DI 1349)) generator/graph_generator.c:140 -1
     (nil))
(insn 1936 1935 1937 127 (set (reg:DI 0 x0)
        (reg/f:DI 1351)) generator/graph_generator.c:140 -1
     (nil))
(call_insn 1937 1936 1938 127 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 1938 1937 1939)
;; basic block 128, loop depth 2, count 0, freq 48, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL)
;;  pred:       125 [100.0%] 
(code_label 1939 1938 1940 128 87 "" [1 uses])
(note 1940 1939 1941 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1941 1940 1942 128 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:143 -1
     (nil))
(jump_insn 1942 1941 1943 128 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1947)
            (pc))) generator/graph_generator.c:143 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 1947)
;;  succ:       129 [100.0%]  (FALLTHRU)
;;              130

;; basic block 129, loop depth 2, count 0, freq 48, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL)
;;  pred:       128 [100.0%]  (FALLTHRU)
(note 1943 1942 1944 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1944 1943 284 129 (set (reg:DI 832 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 284 1944 285 129 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 832 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
(insn 285 284 286 129 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:143 -1
     (nil))
(insn 286 285 1945 129 (set (reg:DI 831 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:143 -1
     (nil))
(jump_insn 1945 286 1946 129 (set (pc)
        (label_ref 3952)) -1
     (nil)
 -> 3952)
;;  succ:       340 [100.0%] 

(barrier 1946 1945 1947)
;; basic block 130, loop depth 2, count 0, freq 0
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL)
;;  pred:       128
(code_label 1947 1946 1948 130 88 "" [1 uses])
(note 1948 1947 1949 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1949 1948 282 130 (set (reg:DI 831 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 282 1949 283 130 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 831 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
(insn 283 282 1950 130 (set (reg:DI 829 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:143 -1
     (nil))
(jump_insn 1950 283 1951 130 (set (pc)
        (label_ref 3952)) -1
     (nil)
 -> 3952)
;;  succ:       340 [100.0%] 

(barrier 1951 1950 3971)
;; basic block 131, loop depth 1, count 0, freq 16
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL)
;;  pred:       341 [100.0%] 
(code_label 3971 1951 1952 131 195 "" [1 uses])
(note 1952 3971 1953 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1953 1952 1954 131 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))
(insn 1954 1953 1955 131 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))
(insn 1955 1954 1956 131 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 1956 1955 1957 131 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))
(insn 1957 1956 1958 131 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))
;;  succ:       132 [100.0%]  (FALLTHRU)

;; basic block 132, loop depth 1, count 0, freq 16
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL)
;;  pred:       131 [100.0%]  (FALLTHRU)
;;              99 [100.0%] 
(code_label 1958 1957 1959 132 72 "" [1 uses])
(note 1959 1958 1960 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1960 1959 1961 132 (var_location:DI v0 (reg/v:DI 747 [ base_src ])) -1
     (nil))
(debug_insn 1961 1960 1962 132 (var_location:SI lgN (reg:SI 261 [ D.3797 ])) -1
     (nil))
(debug_insn 1962 1961 1963 132 (var_location:DI val0 (reg/v:DI 432 [ val0 ])) -1
     (nil))
(debug_insn 1963 1962 1964 132 (var_location:DI val1 (reg/v:DI 434 [ val1 ])) -1
     (nil))
(insn 1964 1963 1965 132 (set (reg/v:DI 518 [ v ])
        (reg/v:DI 747 [ base_src ])) generator/graph_generator.c:121 -1
     (nil))
(debug_insn 1965 1964 1966 132 (var_location:DI v (reg/v:DI 518 [ v ])) generator/graph_generator.c:121 -1
     (nil))
(insn 1966 1965 1967 132 (set (reg:DI 519 [ D.3802 ])
        (plus:DI (reg/v:DI 432 [ val0 ])
            (reg/v:DI 434 [ val1 ]))) generator/graph_generator.c:122 -1
     (nil))
(insn 1967 1966 1968 132 (set (reg/v:DI 520 [ v ])
        (plus:DI (reg/v:DI 518 [ v ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 -1
     (nil))
(debug_insn 1968 1967 1969 132 (var_location:DI v (reg/v:DI 520 [ v ])) generator/graph_generator.c:122 -1
     (nil))
(insn 1969 1968 1970 132 (set (reg:DI 1353)
        (const_int 4979156007449604625 [0x4519840211493211])) generator/graph_generator.c:123 -1
     (nil))
(insn 1970 1969 1971 132 (set (reg:DI 521 [ D.3802 ])
        (ior:DI (reg/v:DI 432 [ val0 ])
            (reg:DI 1353))) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 1971 1970 1972 132 (var_location:DI v (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 1972 1971 1973 132 (var_location:DI x (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(insn 1973 1972 1974 132 (set (reg:DI 1354 [ v ])
        (mult:DI (reg/v:DI 520 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))
(insn 1974 1973 1975 132 (set (reg/v:DI 523 [ x ])
        (bswap:DI (reg:DI 1354 [ v ]))) generator/graph_generator.c:82 -1
     (nil))
(debug_insn 1975 1974 1976 132 (var_location:DI x (reg/v:DI 523 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 1976 1975 1977 132 (set (reg:DI 1355 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 523 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 1977 1976 1978 132 (set (reg:DI 525 [ D.3802 ])
        (and:DI (reg:DI 1355 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 1978 1977 1979 132 (set (reg:DI 1356 [ D.3802 ])
        (and:DI (reg/v:DI 523 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 1979 1978 1980 132 (set (reg:DI 527 [ D.3802 ])
        (ashift:DI (reg:DI 1356 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 1980 1979 1981 132 (set (reg/v:DI 528 [ x ])
        (ior:DI (reg:DI 525 [ D.3802 ])
            (reg:DI 527 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))
(debug_insn 1981 1980 1982 132 (var_location:DI x (reg/v:DI 528 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 1982 1981 1983 132 (set (reg:DI 1357 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 528 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 1983 1982 1984 132 (set (reg:DI 530 [ D.3802 ])
        (and:DI (reg:DI 1357 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 1984 1983 1985 132 (set (reg:DI 1358 [ D.3802 ])
        (and:DI (reg/v:DI 528 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 1985 1984 1986 132 (set (reg:DI 532 [ D.3802 ])
        (ashift:DI (reg:DI 1358 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 1986 1985 1987 132 (set (reg/v:DI 533 [ x ])
        (ior:DI (reg:DI 530 [ D.3802 ])
            (reg:DI 532 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))
(debug_insn 1987 1986 1988 132 (var_location:DI x (reg/v:DI 533 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 1988 1987 1989 132 (set (reg:DI 1359 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 533 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(insn 1989 1988 1990 132 (set (reg:DI 535 [ D.3802 ])
        (and:DI (reg:DI 1359 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 1990 1989 1991 132 (set (reg:DI 1360 [ D.3802 ])
        (and:DI (reg/v:DI 533 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 1991 1990 1992 132 (set (reg:DI 537 [ D.3802 ])
        (ashift:DI (reg:DI 1360 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 1992 1991 1993 132 (var_location:DI x (ior:DI (reg:DI 535 [ D.3802 ])
        (reg:DI 537 [ D.3802 ]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 1993 1992 1994 132 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
(insn 1994 1993 1995 132 (set (reg:SI 1361)
        (const_int 64 [0x40])) generator/graph_generator.c:124 -1
     (nil))
(insn 1995 1994 1996 132 (set (reg:SI 539 [ D.3797 ])
        (minus:SI (reg:SI 1361)
            (reg:SI 261 [ D.3797 ]))) generator/graph_generator.c:124 -1
     (nil))
(insn 1996 1995 1997 132 (set (reg:DI 1362 [ x ])
        (ior:DI (reg:DI 535 [ D.3802 ])
            (reg:DI 537 [ D.3802 ]))) generator/graph_generator.c:124 -1
     (nil))
(insn 1997 1996 1998 132 (set (reg/v:DI 540 [ v ])
        (lshiftrt:DI (reg:DI 1362 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 -1
     (nil))
(debug_insn 1998 1997 1999 132 (var_location:DI v (reg/v:DI 540 [ v ])) generator/graph_generator.c:124 -1
     (nil))
(insn 1999 1998 2000 132 (set (reg:DI 1363 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 540 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 -1
     (nil))
(insn 2000 1999 2001 132 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1363 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 -1
     (nil))
(jump_insn 2001 2000 2099 132 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2009)
            (pc))) generator/graph_generator.c:125 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2009)
;;  succ:       133 [0.0%]  (FALLTHRU)
;;              134 [100.0%] 

;; basic block 133, loop depth 0, count 0, freq 0
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL)
;;  pred:       132 [0.0%]  (FALLTHRU)
;;              136 [0.0%] 
(code_label 2099 2001 2002 133 92 "" [1 uses])
(note 2002 2099 2003 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2003 2002 2004 133 (var_location:DI D#12 (reg/v:DI 747 [ base_src ])) -1
     (nil))
(debug_insn 2004 2003 2005 133 (var_location:SI D#13 (reg:SI 261 [ D.3797 ])) -1
     (nil))
(debug_insn 2005 2004 2006 133 (var_location:DI D#14 (reg/v:DI 432 [ val0 ])) -1
     (nil))
(debug_insn 2006 2005 2007 133 (var_location:DI D#15 (reg/v:DI 434 [ val1 ])) -1
     (nil))
(call_insn/c/i 2007 2006 2008 133 (parallel [
            (call (mem:DI (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>) [0 scramble.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 2008 2007 2009)
;; basic block 134, loop depth 1, count 0, freq 16
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL)
;;  pred:       132 [100.0%] 
(code_label 2009 2008 2010 134 90 "" [1 uses])
(note 2010 2009 2011 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 2011 2010 2012 134 (set (reg:DI 1364)
        (const_int 3481428888784487333 [0x3050852102c843a5])) generator/graph_generator.c:126 -1
     (nil))
(insn 2012 2011 2013 134 (set (reg:DI 542 [ D.3802 ])
        (ior:DI (reg/v:DI 434 [ val1 ])
            (reg:DI 1364))) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2013 2012 2014 134 (var_location:DI v (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2014 2013 2015 134 (var_location:DI x (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(insn 2015 2014 2016 134 (set (reg:DI 1365 [ v ])
        (mult:DI (reg/v:DI 540 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))
(insn 2016 2015 2017 134 (set (reg/v:DI 544 [ x ])
        (bswap:DI (reg:DI 1365 [ v ]))) generator/graph_generator.c:82 -1
     (nil))
(debug_insn 2017 2016 2018 134 (var_location:DI x (reg/v:DI 544 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2018 2017 2019 134 (set (reg:DI 1366 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 544 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2019 2018 2020 134 (set (reg:DI 546 [ D.3802 ])
        (and:DI (reg:DI 1366 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2020 2019 2021 134 (set (reg:DI 1367 [ D.3802 ])
        (and:DI (reg/v:DI 544 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2021 2020 2022 134 (set (reg:DI 548 [ D.3802 ])
        (ashift:DI (reg:DI 1367 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2022 2021 2023 134 (set (reg/v:DI 549 [ x ])
        (ior:DI (reg:DI 546 [ D.3802 ])
            (reg:DI 548 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))
(debug_insn 2023 2022 2024 134 (var_location:DI x (reg/v:DI 549 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2024 2023 2025 134 (set (reg:DI 1368 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 549 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2025 2024 2026 134 (set (reg:DI 551 [ D.3802 ])
        (and:DI (reg:DI 1368 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2026 2025 2027 134 (set (reg:DI 1369 [ D.3802 ])
        (and:DI (reg/v:DI 549 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2027 2026 2028 134 (set (reg:DI 553 [ D.3802 ])
        (ashift:DI (reg:DI 1369 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2028 2027 2029 134 (set (reg/v:DI 554 [ x ])
        (ior:DI (reg:DI 551 [ D.3802 ])
            (reg:DI 553 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))
(debug_insn 2029 2028 2030 134 (var_location:DI x (reg/v:DI 554 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2030 2029 2031 134 (set (reg:DI 1370 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 554 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2031 2030 2032 134 (set (reg:DI 556 [ D.3802 ])
        (and:DI (reg:DI 1370 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2032 2031 2033 134 (set (reg:DI 1371 [ D.3802 ])
        (and:DI (reg/v:DI 554 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2033 2032 2034 134 (set (reg:DI 558 [ D.3802 ])
        (ashift:DI (reg:DI 1371 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2034 2033 2035 134 (var_location:DI x (ior:DI (reg:DI 556 [ D.3802 ])
        (reg:DI 558 [ D.3802 ]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2035 2034 2036 134 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2036 2035 2037 134 (set (reg:DI 1372 [ x ])
        (ior:DI (reg:DI 556 [ D.3802 ])
            (reg:DI 558 [ D.3802 ]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2037 2036 2038 134 (set (reg/v:DI 560 [ v ])
        (lshiftrt:DI (reg:DI 1372 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 -1
     (nil))
(debug_insn 2038 2037 2039 134 (var_location:DI v (reg/v:DI 560 [ v ])) generator/graph_generator.c:127 -1
     (nil))
(insn 2039 2038 2040 134 (set (reg:DI 1373 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 560 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 -1
     (nil))
(insn 2040 2039 2041 134 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1373 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 -1
     (nil))
(jump_insn 2041 2040 2130 134 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2055)
            (pc))) generator/graph_generator.c:128 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2055)
;;  succ:       135 [0.0%]  (FALLTHRU)
;;              136 [100.0%] 

;; basic block 135, loop depth 0, count 0, freq 0
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL)
;;  pred:       134 [0.0%]  (FALLTHRU)
;;              137 [0.0%] 
(code_label 2130 2041 2042 135 93 "" [1 uses])
(note 2042 2130 2043 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 2043 2042 2044 135 (set (reg:DI 1375)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 -1
     (nil))
(insn 2044 2043 2045 135 (set (reg/f:DI 1374)
        (lo_sum:DI (reg:DI 1375)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>)
        (nil)))
(insn 2045 2044 2046 135 (set (reg:DI 1377)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 -1
     (nil))
(insn 2046 2045 2047 135 (set (reg/f:DI 1376)
        (lo_sum:DI (reg:DI 1377)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
        (nil)))
(insn 2047 2046 2048 135 (set (reg:DI 1379)
        (high:DI (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 -1
     (nil))
(insn 2048 2047 2049 135 (set (reg/f:DI 1378)
        (lo_sum:DI (reg:DI 1379)
            (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>)
        (nil)))
(insn 2049 2048 2050 135 (set (reg:DI 3 x3)
        (reg/f:DI 1374)) generator/graph_generator.c:128 -1
     (nil))
(insn 2050 2049 2051 135 (set (reg:SI 2 x2)
        (const_int 128 [0x80])) generator/graph_generator.c:128 -1
     (nil))
(insn 2051 2050 2052 135 (set (reg:DI 1 x1)
        (reg/f:DI 1376)) generator/graph_generator.c:128 -1
     (nil))
(insn 2052 2051 2053 135 (set (reg:DI 0 x0)
        (reg/f:DI 1378)) generator/graph_generator.c:128 -1
     (nil))
(call_insn 2053 2052 2054 135 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:128 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 2054 2053 2055)
;; basic block 136, loop depth 1, count 0, freq 16
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL)
;;  pred:       134 [100.0%] 
(code_label 2055 2054 2056 136 91 "" [1 uses])
(note 2056 2055 2057 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 2057 2056 2058 136 (set (reg:DI 562 [ D.3798 ])
        (reg/v:DI 560 [ v ])) generator/graph_generator.c:129 -1
     (nil))
(debug_insn 2058 2057 2059 136 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2059 2058 2060 136 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2060 2059 2061 136 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2061 2060 2062 136 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2062 2061 2063 136 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2063 2062 2064 136 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2064 2063 2065 136 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2065 2064 2066 136 (var_location:DI v0 (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2066 2065 2067 136 (var_location:SI lgN (reg:SI 261 [ D.3797 ])) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2067 2066 2068 136 (var_location:DI val0 (reg/v:DI 432 [ val0 ])) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2068 2067 2069 136 (var_location:DI val1 (reg/v:DI 434 [ val1 ])) generator/graph_generator.c:154 -1
     (nil))
(insn 2069 2068 2070 136 (set (reg/v:DI 477 [ v ])
        (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:121 -1
     (nil))
(debug_insn 2070 2069 2071 136 (var_location:DI v (reg/v:DI 477 [ v ])) generator/graph_generator.c:121 -1
     (nil))
(insn 2071 2070 2072 136 (set (reg/v:DI 478 [ v ])
        (plus:DI (reg/v:DI 477 [ v ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 -1
     (nil))
(debug_insn 2072 2071 2073 136 (var_location:DI v (reg/v:DI 478 [ v ])) generator/graph_generator.c:122 -1
     (nil))
(debug_insn 2073 2072 2074 136 (var_location:DI v (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 2074 2073 2075 136 (var_location:DI x (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(insn 2075 2074 2076 136 (set (reg:DI 1380 [ v ])
        (mult:DI (reg/v:DI 478 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))
(insn 2076 2075 2077 136 (set (reg/v:DI 480 [ x ])
        (bswap:DI (reg:DI 1380 [ v ]))) generator/graph_generator.c:82 -1
     (nil))
(debug_insn 2077 2076 2078 136 (var_location:DI x (reg/v:DI 480 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2078 2077 2079 136 (set (reg:DI 1381 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 480 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2079 2078 2080 136 (set (reg:DI 482 [ D.3802 ])
        (and:DI (reg:DI 1381 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2080 2079 2081 136 (set (reg:DI 1382 [ D.3802 ])
        (and:DI (reg/v:DI 480 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2081 2080 2082 136 (set (reg:DI 484 [ D.3802 ])
        (ashift:DI (reg:DI 1382 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2082 2081 2083 136 (set (reg/v:DI 485 [ x ])
        (ior:DI (reg:DI 482 [ D.3802 ])
            (reg:DI 484 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))
(debug_insn 2083 2082 2084 136 (var_location:DI x (reg/v:DI 485 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2084 2083 2085 136 (set (reg:DI 1383 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 485 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2085 2084 2086 136 (set (reg:DI 487 [ D.3802 ])
        (and:DI (reg:DI 1383 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2086 2085 2087 136 (set (reg:DI 1384 [ D.3802 ])
        (and:DI (reg/v:DI 485 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2087 2086 2088 136 (set (reg:DI 489 [ D.3802 ])
        (ashift:DI (reg:DI 1384 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2088 2087 2089 136 (set (reg/v:DI 490 [ x ])
        (ior:DI (reg:DI 487 [ D.3802 ])
            (reg:DI 489 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))
(debug_insn 2089 2088 2090 136 (var_location:DI x (reg/v:DI 490 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2090 2089 2091 136 (set (reg:DI 1385 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 490 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2091 2090 2092 136 (set (reg:DI 492 [ D.3802 ])
        (and:DI (reg:DI 1385 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2092 2091 2093 136 (set (reg:DI 1386 [ D.3802 ])
        (and:DI (reg/v:DI 490 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2093 2092 2094 136 (set (reg:DI 494 [ D.3802 ])
        (ashift:DI (reg:DI 1386 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2094 2093 2095 136 (var_location:DI x (ior:DI (reg:DI 492 [ D.3802 ])
        (reg:DI 494 [ D.3802 ]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2095 2094 2096 136 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
(insn 2096 2095 2097 136 (set (reg:DI 1387 [ x ])
        (ior:DI (reg:DI 492 [ D.3802 ])
            (reg:DI 494 [ D.3802 ]))) generator/graph_generator.c:124 -1
     (nil))
(insn 2097 2096 2098 136 (set (reg/v:DI 496 [ v ])
        (lshiftrt:DI (reg:DI 1387 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 -1
     (nil))
(debug_insn 2098 2097 2100 136 (var_location:DI v (reg/v:DI 496 [ v ])) generator/graph_generator.c:124 -1
     (nil))
(insn 2100 2098 2101 136 (set (reg:DI 1388 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 496 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 -1
     (nil))
(insn 2101 2100 2102 136 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1388 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 -1
     (nil))
(jump_insn 2102 2101 2103 136 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2099)
            (pc))) generator/graph_generator.c:125 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 2099)
;;  succ:       133 [0.0%] 
;;              137 [100.0%]  (FALLTHRU)

;; basic block 137, loop depth 1, count 0, freq 16
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL)
;;  pred:       136 [100.0%]  (FALLTHRU)
(note 2103 2102 2104 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2104 2103 2105 137 (var_location:DI v (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2105 2104 2106 137 (var_location:DI x (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(insn 2106 2105 2107 137 (set (reg:DI 1389 [ v ])
        (mult:DI (reg/v:DI 496 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 -1
     (nil))
(insn 2107 2106 2108 137 (set (reg/v:DI 499 [ x ])
        (bswap:DI (reg:DI 1389 [ v ]))) generator/graph_generator.c:82 -1
     (nil))
(debug_insn 2108 2107 2109 137 (var_location:DI x (reg/v:DI 499 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2109 2108 2110 137 (set (reg:DI 1390 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 499 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2110 2109 2111 137 (set (reg:DI 501 [ D.3802 ])
        (and:DI (reg:DI 1390 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2111 2110 2112 137 (set (reg:DI 1391 [ D.3802 ])
        (and:DI (reg/v:DI 499 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2112 2111 2113 137 (set (reg:DI 503 [ D.3802 ])
        (ashift:DI (reg:DI 1391 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 -1
     (nil))
(insn 2113 2112 2114 137 (set (reg/v:DI 504 [ x ])
        (ior:DI (reg:DI 501 [ D.3802 ])
            (reg:DI 503 [ D.3802 ]))) generator/graph_generator.c:88 -1
     (nil))
(debug_insn 2114 2113 2115 137 (var_location:DI x (reg/v:DI 504 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2115 2114 2116 137 (set (reg:DI 1392 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 504 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2116 2115 2117 137 (set (reg:DI 506 [ D.3802 ])
        (and:DI (reg:DI 1392 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2117 2116 2118 137 (set (reg:DI 1393 [ D.3802 ])
        (and:DI (reg/v:DI 504 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2118 2117 2119 137 (set (reg:DI 508 [ D.3802 ])
        (ashift:DI (reg:DI 1393 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 -1
     (nil))
(insn 2119 2118 2120 137 (set (reg/v:DI 509 [ x ])
        (ior:DI (reg:DI 506 [ D.3802 ])
            (reg:DI 508 [ D.3802 ]))) generator/graph_generator.c:89 -1
     (nil))
(debug_insn 2120 2119 2121 137 (var_location:DI x (reg/v:DI 509 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2121 2120 2122 137 (set (reg:DI 1394 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 509 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2122 2121 2123 137 (set (reg:DI 511 [ D.3802 ])
        (and:DI (reg:DI 1394 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2123 2122 2124 137 (set (reg:DI 1395 [ D.3802 ])
        (and:DI (reg/v:DI 509 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 -1
     (nil))
(insn 2124 2123 2125 137 (set (reg:DI 513 [ D.3802 ])
        (ashift:DI (reg:DI 1395 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2125 2124 2126 137 (var_location:DI x (ior:DI (reg:DI 511 [ D.3802 ])
        (reg:DI 513 [ D.3802 ]))) generator/graph_generator.c:90 -1
     (nil))
(debug_insn 2126 2125 2127 137 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2127 2126 2128 137 (set (reg:DI 1396 [ x ])
        (ior:DI (reg:DI 511 [ D.3802 ])
            (reg:DI 513 [ D.3802 ]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2128 2127 2129 137 (set (reg/v:DI 515 [ v ])
        (lshiftrt:DI (reg:DI 1396 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 -1
     (nil))
(debug_insn 2129 2128 2131 137 (var_location:DI v (reg/v:DI 515 [ v ])) generator/graph_generator.c:127 -1
     (nil))
(insn 2131 2129 2132 137 (set (reg:DI 1397 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 515 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 -1
     (nil))
(insn 2132 2131 2133 137 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1397 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 -1
     (nil))
(jump_insn 2133 2132 2134 137 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2130)
            (pc))) generator/graph_generator.c:128 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 2130)
;;  succ:       135 [0.0%] 
;;              138 [100.0%]  (FALLTHRU)

;; basic block 138, loop depth 1, count 0, freq 16
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL)
;;  pred:       137 [100.0%]  (FALLTHRU)
(note 2134 2133 2135 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2135 2134 2136 138 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2136 2135 2137 138 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2137 2136 2138 138 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2138 2137 2139 138 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2139 2138 2140 138 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2140 2139 2141 138 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2141 2140 2142 138 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2142 2141 2143 138 (var_location:DI p (debug_expr:DI D#36)) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2143 2142 2144 138 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2144 2143 2145 138 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(insn 2145 2144 2146 138 (set (reg/f:DI 580 [ D.3806 ])
        (reg:DI 576 [ ivtmp.134 ])) -1
     (nil))
(insn 2146 2145 2147 138 (set (mem:DI (reg/f:DI 580 [ D.3806 ]) [4 MEM[base: _513, offset: 0B]+0 S8 A64])
        (reg:DI 562 [ D.3798 ])) generator/graph_generator.h:65 -1
     (nil))
(insn 2147 2146 2148 138 (set (mem:DI (plus:DI (reg/f:DI 580 [ D.3806 ])
                (const_int 8 [0x8])) [4 MEM[base: _513, offset: 8B]+0 S8 A64])
        (reg/v:DI 515 [ v ])) generator/graph_generator.h:66 -1
     (nil))
(debug_insn 2148 2147 2149 138 (var_location:DI p (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2149 2148 2150 138 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2150 2149 2151 138 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2151 2150 2152 138 (var_location:DI nverts (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2152 2151 2153 138 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2153 2152 2154 138 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2154 2153 2155 138 (var_location:DI result (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2155 2154 2156 138 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2156 2155 2157 138 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2157 2156 2158 138 (var_location:DI base_src (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2158 2157 2159 138 (var_location:DI base_tgt (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2159 2158 2160 138 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2160 2159 2161 138 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(insn 2161 2160 2162 138 (set (reg/v:DI 435 [ start_edge ])
        (plus:DI (reg/v:DI 435 [ start_edge ])
            (const_int 1 [0x1]))) generator/graph_generator.c:193 -1
     (nil))
(debug_insn 2162 2161 2163 138 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:193 -1
     (nil))
(insn 2163 2162 2164 138 (set (reg:DI 576 [ ivtmp.134 ])
        (plus:DI (reg:DI 576 [ ivtmp.134 ])
            (const_int 16 [0x10]))) -1
     (nil))
;;  succ:       139 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 139, loop depth 1, count 0, freq 21
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL)
;;  pred:       96 [100.0%] 
;;              138 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 2164 2163 2165 139 69 "" [1 uses])
(note 2165 2164 2166 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2166 2165 2168 139 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) -1
     (nil))
(insn 2168 2166 2169 139 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 245 [ desired_nedge ])
            (reg/v:DI 435 [ start_edge ]))) generator/graph_generator.c:193 -1
     (nil))
(jump_insn 2169 2168 2170 139 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2167)
            (pc))) generator/graph_generator.c:193 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2167)
;;  succ:       97 [91.0%] 
;;              140 [9.0%]  (FALLTHRU)

;; basic block 140, loop depth 0, count 0, freq 2
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL)
;;  pred:       139 [9.0%]  (FALLTHRU)
(note 2170 2169 2171 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2171 2170 2172 140 (var_location:DI D#18 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2172 2171 2173 140 (var_location:DI state$z1 (debug_expr:DI D#18)) -1
     (nil))
(debug_insn 2173 2172 2174 140 (var_location:DI D#19 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2174 2173 2175 140 (var_location:DI state$z2 (debug_expr:DI D#19)) -1
     (nil))
(debug_insn 2175 2174 2176 140 (var_location:DI D#20 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2176 2175 2177 140 (var_location:DI state$z3 (debug_expr:DI D#20)) -1
     (nil))
(debug_insn 2177 2176 2178 140 (var_location:DI D#21 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2178 2177 2179 140 (var_location:DI state$z4 (debug_expr:DI D#21)) -1
     (nil))
(debug_insn 2179 2178 2180 140 (var_location:DI D#22 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2180 2179 2181 140 (var_location:DI state$z5 (debug_expr:DI D#22)) -1
     (nil))
(debug_insn 2181 2180 2182 140 (var_location:DI seed (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2182 2181 2183 140 (var_location:SI logN (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2183 2182 2184 140 (var_location:DI end_edge (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2184 2183 2185 140 (var_location:DI edges (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2185 2184 2186 140 (var_location:DI nverts (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2186 2185 2187 140 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2187 2186 2188 140 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2188 2187 2189 140 (var_location:DI start_edge (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2189 2188 2190 140 (var_location:SI log_numverts (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2190 2189 2191 140 (var_location:DI M (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2191 2190 2192 140 (var_location:DI userseed1 (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2192 2191 2193 140 (var_location:DI userseed2 (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2193 2192 2194 140 (var_location:DI edges (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2194 2193 2195 140 (var_location:DI nedges_ptr_in (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2195 2194 2196 140 (var_location:DI result_ptr_in (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(call_insn 2196 2195 2197 140 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 2197 2196 2198 140 (set (reg:DF 263 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:89 -1
     (nil))
(insn 2198 2197 2199 140 (set (reg:DI 1399)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (nil))
(insn 2199 2198 2200 140 (set (reg/f:DI 1398)
        (lo_sum:DI (reg:DI 1399)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2200 2199 2201 140 (set (mem/c:DF (plus:DI (reg/f:DI 1398)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 263 [ D.3804 ])) graph500.c:89 -1
     (nil))
;;  succ:       141 [100.0%]  (FALLTHRU)

;; basic block 141, loop depth 0, count 0, freq 7
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL)
;;  pred:       95 [100.0%] 
;;              140 [100.0%]  (FALLTHRU)
(code_label 2201 2200 2202 141 68 "" [1 uses])
(note 2202 2201 2203 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 2203 2202 2204 141 (set (reg:DI 1401)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:91 -1
     (nil))
(insn 2204 2203 2205 141 (set (reg/f:DI 1400)
        (lo_sum:DI (reg:DI 1401)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:91 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2205 2204 2206 141 (set (reg:SI 1402)
        (mem/c:SI (reg/f:DI 1400) [3 VERBOSE+0 S4 A32])) graph500.c:91 -1
     (nil))
(insn 2206 2205 2207 141 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1402)
            (const_int 0 [0]))) graph500.c:91 -1
     (nil))
(jump_insn 2207 2206 2208 141 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2211)
            (pc))) graph500.c:91 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 2211)
;;  succ:       143 [29.0%] 
;;              142 [71.0%]  (FALLTHRU)

;; basic block 142, loop depth 0, count 0, freq 5
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL)
;;  pred:       141 [71.0%]  (FALLTHRU)
(note 2208 2207 2209 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2209 2208 2210 142 (set (pc)
        (label_ref 2297)) graph500.c:91 -1
     (nil)
 -> 2297)
;;  succ:       151 [100.0%] 

(barrier 2210 2209 2211)
;; basic block 143, loop depth 0, count 0, freq 2
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL)
;;  pred:       141 [29.0%] 
(code_label 2211 2210 2212 143 95 "" [1 uses])
(note 2212 2211 2213 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2213 2212 2214 143 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:91 -1
     (nil))
(debug_insn 2214 2213 2215 143 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)) graph500.c:91 -1
     (nil))
(insn 2215 2214 2216 143 (set (reg:DI 1404)
        (high:DI (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2216 2215 2217 143 (set (reg/f:DI 1403)
        (lo_sum:DI (reg:DI 1404)
            (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)
        (nil)))
(insn 2217 2216 2218 143 (set (reg:DI 1406)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:91 -1
     (nil))
(insn 2218 2217 2219 143 (set (reg/f:DI 1405)
        (lo_sum:DI (reg:DI 1406)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:91 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2219 2218 2220 143 (set (reg:DI 2 x2)
        (reg/f:DI 1403)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2220 2219 2221 143 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2221 2220 2222 143 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1405) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2222 2221 2223 143 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(jump_insn 2223 2222 2224 143 (set (pc)
        (label_ref 2278)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil)
 -> 2278)
;;  succ:       149 [100.0%] 

(barrier 2224 2223 2225)
;; basic block 144, loop depth 0, count 0, freq 22
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL)
;;  pred:       91 [69.8%] 
(code_label 2225 2224 2226 144 65 "" [1 uses])
(note 2226 2225 2227 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2227 2226 2228 144 (var_location:DI __path (reg/f:DI 246 [ D.3800 ])) graph500.c:95 -1
     (nil))
(debug_insn 2228 2227 2229 144 (var_location:SI __oflag (const_int 0 [0])) graph500.c:95 -1
     (nil))
(insn 2229 2228 2230 144 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(insn 2230 2229 2231 144 (set (reg:DI 0 x0)
        (reg/f:DI 246 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(call_insn 2231 2230 2232 144 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 2232 2231 2233 144 (set (reg:SI 283 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(debug_insn 2233 2232 2234 144 (var_location:DI __path (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(debug_insn 2234 2233 2235 144 (var_location:SI __oflag (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(debug_insn 2235 2234 2236 144 (var_location:SI fd (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(insn 2236 2235 2237 144 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 283 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(jump_insn 2237 2236 2238 144 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2245)
            (pc))) graph500.c:95 -1
     (int_list:REG_BR_PROB 9119 (nil))
 -> 2245)
;;  succ:       145 [8.8%]  (FALLTHRU)
;;              146 [91.2%] 

;; basic block 145, loop depth 0, count 0, freq 2
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL)
;;  pred:       144 [8.8%]  (FALLTHRU)
(note 2238 2237 2239 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 2239 2238 2240 145 (set (reg:DI 1408)
        (high:DI (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 -1
     (nil))
(insn 2240 2239 2241 145 (set (reg/f:DI 1407)
        (lo_sum:DI (reg:DI 1408)
            (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>)
        (nil)))
(insn 2241 2240 2242 145 (set (reg:DI 0 x0)
        (reg/f:DI 1407)) graph500.c:96 -1
     (nil))
(call_insn 2242 2241 265 145 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:96 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 265 2242 2243 145 (set (reg:SI 240 [ D.3797 ])
        (const_int 1 [0x1])) graph500.c:97 -1
     (nil))
(jump_insn 2243 265 2244 145 (set (pc)
        (label_ref 3759)) graph500.c:96 -1
     (nil)
 -> 3759)
;;  succ:       306 [100.0%] 

(barrier 2244 2243 2245)
;; basic block 146, loop depth 0, count 0, freq 20
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL)
;;  pred:       144 [91.2%] 
(code_label 2245 2244 2246 146 98 "" [1 uses])
(note 2246 2245 2247 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 2247 2246 2248 146 (set (reg:DI 1410)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:99 -1
     (nil))
(insn 2248 2247 2249 146 (set (reg/f:DI 1409)
        (lo_sum:DI (reg:DI 1410)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:99 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2249 2248 2250 146 (set (reg:DI 1411)
        (mem/c:DI (plus:DI (reg/f:DI 1409)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:99 -1
     (nil))
(insn 2250 2249 2251 146 (set (reg:DI 269 [ D.3802 ])
        (ashift:DI (reg:DI 1411)
            (const_int 4 [0x4]))) graph500.c:99 -1
     (nil))
(debug_insn 2251 2250 2252 146 (var_location:DI sz (reg:DI 269 [ D.3802 ])) graph500.c:99 -1
     (nil))
(debug_insn 2252 2251 2253 146 (var_location:SI __fd (reg:SI 283 [ D.3797 ])) graph500.c:100 -1
     (nil))
(debug_insn 2253 2252 2254 146 (var_location:DI __buf (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:100 -1
     (nil))
(debug_insn 2254 2253 2255 146 (var_location:DI __nbytes (reg:DI 269 [ D.3802 ])) graph500.c:100 -1
     (nil))
(insn 2255 2254 2256 146 (set (reg:DI 1413)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:100 -1
     (nil))
(insn 2256 2255 2257 146 (set (reg/f:DI 1412)
        (lo_sum:DI (reg:DI 1413)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:100 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2257 2256 2258 146 (set (reg:DI 2 x2)
        (reg:DI 269 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))
(insn 2258 2257 2259 146 (set (reg:DI 1 x1)
        (mem/f/c:DI (plus:DI (reg/f:DI 1412)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))
(insn 2259 2258 2260 146 (set (reg:SI 0 x0)
        (reg:SI 283 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))
(call_insn 2260 2259 2261 146 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>) [0 __read_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2261 2260 2262 146 (set (reg:DI 285 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 -1
     (nil))
(debug_insn 2262 2261 2263 146 (var_location:SI __fd (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(debug_insn 2263 2262 2264 146 (var_location:DI __buf (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(debug_insn 2264 2263 2265 146 (var_location:DI __nbytes (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(insn 2265 2264 2266 146 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 269 [ D.3802 ])
            (reg:DI 285 [ D.3798 ]))) graph500.c:100 -1
     (nil))
(jump_insn 2266 2265 2267 146 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2274)
            (pc))) graph500.c:100 -1
     (int_list:REG_BR_PROB 3782 (nil))
 -> 2274)
;;  succ:       147 [62.2%]  (FALLTHRU)
;;              148 [37.8%] 

;; basic block 147, loop depth 0, count 0, freq 13
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL)
;;  pred:       146 [62.2%]  (FALLTHRU)
(note 2267 2266 2268 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 2268 2267 2269 147 (set (reg:DI 1415)
        (high:DI (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 -1
     (nil))
(insn 2269 2268 2270 147 (set (reg/f:DI 1414)
        (lo_sum:DI (reg:DI 1415)
            (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>)
        (nil)))
(insn 2270 2269 2271 147 (set (reg:DI 0 x0)
        (reg/f:DI 1414)) graph500.c:101 -1
     (nil))
(call_insn 2271 2270 266 147 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 266 2271 2272 147 (set (reg:SI 240 [ D.3797 ])
        (const_int 1 [0x1])) graph500.c:102 -1
     (nil))
(jump_insn 2272 266 2273 147 (set (pc)
        (label_ref 3759)) graph500.c:101 -1
     (nil)
 -> 3759)
;;  succ:       306 [100.0%] 

(barrier 2273 2272 2274)
;; basic block 148, loop depth 0, count 0, freq 8
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL)
;;  pred:       146 [37.8%] 
(code_label 2274 2273 2275 148 100 "" [1 uses])
(note 2275 2274 2276 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 2276 2275 2277 148 (set (reg:SI 0 x0)
        (reg:SI 283 [ D.3797 ])) graph500.c:104 -1
     (nil))
(call_insn 2277 2276 2278 148 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:       149 [100.0%]  (FALLTHRU)

;; basic block 149, loop depth 0, count 0, freq 9
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148 [100.0%]  (FALLTHRU)
;;              143 [100.0%] 
(code_label 2278 2277 2279 149 97 "" [1 uses])
(note 2279 2278 2281 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 2281 2279 2282 149 (set (reg:DI 1417)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:124 -1
     (nil))
(insn 2282 2281 2283 149 (set (reg/f:DI 1416)
        (lo_sum:DI (reg:DI 1417)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:124 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2283 2282 2284 149 (set (reg:SI 1418)
        (mem/c:SI (reg/f:DI 1416) [3 VERBOSE+0 S4 A32])) graph500.c:124 -1
     (nil))
(insn 2284 2283 2285 149 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1418)
            (const_int 0 [0]))) graph500.c:124 -1
     (nil))
(jump_insn 2285 2284 2286 149 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2297)
            (pc))) graph500.c:124 7 {condjump}
     (int_list:REG_BR_PROB 5504 (nil))
 -> 2297)
;;  succ:       150 [45.0%]  (FALLTHRU)
;;              151 [55.0%] 

;; basic block 150, loop depth 0, count 0, freq 4
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL)
;;  pred:       149 [45.0%]  (FALLTHRU)
(note 2286 2285 2287 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2287 2286 2288 150 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:124 -1
     (nil))
(debug_insn 2288 2287 2289 150 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)) graph500.c:124 -1
     (nil))
(insn 2289 2288 2290 150 (set (reg:DI 1420)
        (high:DI (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2290 2289 2291 150 (set (reg/f:DI 1419)
        (lo_sum:DI (reg:DI 1420)
            (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)
        (nil)))
(insn 2291 2290 2292 150 (set (reg:DI 1422)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:124 -1
     (nil))
(insn 2292 2291 2293 150 (set (reg/f:DI 1421)
        (lo_sum:DI (reg:DI 1422)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:124 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2293 2292 2294 150 (set (reg:DI 2 x2)
        (reg/f:DI 1419)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2294 2293 2295 150 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2295 2294 2296 150 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1421) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2296 2295 2297 150 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       151 [100.0%]  (FALLTHRU)

;; basic block 151, loop depth 0, count 0, freq 14
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL)
;;  pred:       150 [100.0%]  (FALLTHRU)
;;              142 [100.0%] 
;;              149 [55.0%] 
(code_label 2297 2296 2298 151 96 "" [2 uses])
(note 2298 2297 2299 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 2299 2298 2300 151 (set (reg:DI 1424)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))
(insn 2300 2299 2301 151 (set (reg/f:DI 1423)
        (lo_sum:DI (reg:DI 1424)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2301 2300 2302 151 (set (reg:DI 1 x1)
        (reg/f:DI 1423)) timer.c:43 -1
     (nil))
(insn 2302 2301 2303 151 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))
(call_insn 2303 2302 2304 151 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2304 2303 2305 151 (set (reg:DI 1426)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))
(insn 2305 2304 2306 151 (set (reg/f:DI 1425)
        (lo_sum:DI (reg:DI 1426)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2306 2305 2307 151 (set (reg:DI 1428)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))
(insn 2307 2306 2308 151 (set (reg/f:DI 1427)
        (lo_sum:DI (reg:DI 1428)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2308 2307 2309 151 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1425)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:125 -1
     (nil))
(insn 2309 2308 2310 151 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1427)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:125 -1
     (nil))
(call_insn 2310 2309 2311 151 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>) [0 create_graph_from_edgelist S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2311 2310 2312 151 (set (reg/v:SI 566 [ err ])
        (reg:SI 0 x0)) graph500.c:125 -1
     (nil))
(debug_insn 2312 2311 2313 151 (var_location:SI err (reg/v:SI 566 [ err ])) graph500.c:125 -1
     (nil))
(call_insn 2313 2312 2314 151 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 2314 2313 2315 151 (set (reg:DF 567 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:125 -1
     (nil))
(insn 2315 2314 2316 151 (set (reg:DI 1430)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (nil))
(insn 2316 2315 2317 151 (set (reg/f:DI 1429)
        (lo_sum:DI (reg:DI 1430)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2317 2316 2318 151 (set (mem/c:DF (plus:DI (reg/f:DI 1429)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])
        (reg:DF 567 [ D.3804 ])) graph500.c:125 -1
     (nil))
(insn 2318 2317 2319 151 (set (reg:DI 1432)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:126 -1
     (nil))
(insn 2319 2318 2320 151 (set (reg/f:DI 1431)
        (lo_sum:DI (reg:DI 1432)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:126 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2320 2319 2321 151 (set (reg:SI 1433)
        (mem/c:SI (reg/f:DI 1431) [3 VERBOSE+0 S4 A32])) graph500.c:126 -1
     (nil))
(insn 2321 2320 2322 151 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1433)
            (const_int 0 [0]))) graph500.c:126 -1
     (nil))
(jump_insn 2322 2321 2323 151 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2334)
            (pc))) graph500.c:126 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2334)
;;  succ:       152 [29.0%]  (FALLTHRU)
;;              153 [71.0%] 

;; basic block 152, loop depth 0, count 0, freq 4
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL)
;;  pred:       151 [29.0%]  (FALLTHRU)
(note 2323 2322 2324 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2324 2323 2325 152 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:126 -1
     (nil))
(debug_insn 2325 2324 2326 152 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)) graph500.c:126 -1
     (nil))
(insn 2326 2325 2327 152 (set (reg:DI 1435)
        (high:DI (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2327 2326 2328 152 (set (reg/f:DI 1434)
        (lo_sum:DI (reg:DI 1435)
            (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)
        (nil)))
(insn 2328 2327 2329 152 (set (reg:DI 1437)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:126 -1
     (nil))
(insn 2329 2328 2330 152 (set (reg/f:DI 1436)
        (lo_sum:DI (reg:DI 1437)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:126 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2330 2329 2331 152 (set (reg:DI 2 x2)
        (reg/f:DI 1434)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2331 2330 2332 152 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2332 2331 2333 152 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1436) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2333 2332 2334 152 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       153 [100.0%]  (FALLTHRU)

;; basic block 153, loop depth 0, count 0, freq 14
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL)
;;  pred:       151 [71.0%] 
;;              152 [100.0%]  (FALLTHRU)
(code_label 2334 2333 2335 153 102 "" [1 uses])
(note 2335 2334 2336 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 2336 2335 2337 153 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 566 [ err ])
            (const_int 0 [0]))) graph500.c:127 -1
     (nil))
(jump_insn 2337 2336 2338 153 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2354)
            (pc))) graph500.c:127 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2354)
;;  succ:       154 [0.0%]  (FALLTHRU)
;;              155 [100.0%] 

;; basic block 154, loop depth 0, count 0, freq 0
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL)
;;  pred:       153 [0.0%]  (FALLTHRU)
(note 2338 2337 2339 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2339 2338 2340 154 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:128 -1
     (nil))
(debug_insn 2340 2339 2341 154 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)) graph500.c:128 -1
     (nil))
(insn 2341 2340 2342 154 (set (reg:DI 1439)
        (high:DI (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2342 2341 2343 154 (set (reg/f:DI 1438)
        (lo_sum:DI (reg:DI 1439)
            (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)
        (nil)))
(insn 2343 2342 2344 154 (set (reg:DI 1441)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:128 -1
     (nil))
(insn 2344 2343 2345 154 (set (reg/f:DI 1440)
        (lo_sum:DI (reg:DI 1441)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:128 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2345 2344 2346 154 (set (reg:DI 2 x2)
        (reg/f:DI 1438)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2346 2345 2347 154 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2347 2346 2348 154 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1440) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2348 2347 2349 154 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 2349 2348 2350 154 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:128 -1
     (nil))
(debug_insn 2350 2349 2351 154 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:128 -1
     (nil))
(insn 2351 2350 2352 154 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:129 -1
     (nil))
(call_insn 2352 2351 2353 154 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 2353 2352 2354)
;; basic block 155, loop depth 0, count 0, freq 14
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL)
;;  pred:       153 [100.0%] 
(code_label 2354 2353 2355 155 103 "" [1 uses])
(note 2355 2354 2356 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 2356 2355 2357 155 (set (reg:DI 1443)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:137 -1
     (nil))
(insn 2357 2356 2358 155 (set (reg/f:DI 1442)
        (lo_sum:DI (reg:DI 1443)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:137 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2358 2357 2359 155 (set (reg/f:DI 571 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1442)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])) graph500.c:137 -1
     (nil))
(insn 2359 2358 2360 155 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 571 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:137 -1
     (nil))
(jump_insn 2360 2359 2361 155 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2788)
            (pc))) graph500.c:137 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 2788)
;;  succ:       156 [15.0%]  (FALLTHRU)
;;              192 [85.0%] 

;; basic block 156, loop depth 0, count 0, freq 2
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL)
;;  pred:       155 [15.0%]  (FALLTHRU)
(note 2361 2360 2362 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 2362 2361 2363 156 (set (reg:DI 1445)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:138 -1
     (nil))
(insn 2363 2362 2364 156 (set (reg/f:DI 1444)
        (lo_sum:DI (reg:DI 1445)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:138 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2364 2363 2365 156 (set (reg:DI 572 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1444)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:138 -1
     (nil))
(insn 2365 2364 2366 156 (set (reg:DI 573 [ D.3802 ])
        (reg:DI 572 [ D.3798 ])) graph500.c:138 -1
     (nil))
(debug_insn 2366 2365 2367 156 (var_location:DI sz (ashift:DI (reg:DI 573 [ D.3802 ])
        (const_int 2 [0x2]))) graph500.c:138 -1
     (nil))
(insn 2367 2366 2368 156 (set (reg:DI 1446 [ D.3802 ])
        (ashift:DI (reg:DI 573 [ D.3802 ])
            (const_int 2 [0x2]))) xalloc.c:104 -1
     (nil))
(insn 2368 2367 2369 156 (set (reg:DI 0 x0)
        (reg:DI 1446 [ D.3802 ])) xalloc.c:104 -1
     (nil))
(call_insn 2369 2368 2370 156 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2370 2369 2371 156 (set (reg/f:DI 291 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 -1
     (nil))
(debug_insn 2371 2370 2372 156 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:138 -1
     (nil))
(debug_insn 2372 2371 2373 156 (var_location:DI has_adj (clobber (const_int 0 [0]))) graph500.c:138 -1
     (nil))
(debug_insn 2373 2372 216 156 (var_location:DI k (const_int 0 [0])) graph500.c:141 -1
     (nil))
(insn 216 2373 2374 156 (set (reg/v:DI 575 [ k ])
        (const_int 0 [0])) graph500.c:141 -1
     (nil))
(jump_insn 2374 216 2375 156 (set (pc)
        (label_ref 2380)) xalloc.c:104 -1
     (nil)
 -> 2380)
;;  succ:       158 [100.0%] 

(barrier 2375 2374 2383)
;; basic block 157, loop depth 1, count 0, freq 22
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL)
;;  pred:       158 [91.0%] 
(code_label 2383 2375 2376 157 106 "" [1 uses])
(note 2376 2383 2377 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 2377 2376 2378 157 (set (mem:SI (plus:DI (mult:DI (reg/v:DI 575 [ k ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: _512, step: 4, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) graph500.c:142 -1
     (nil))
(insn 2378 2377 2379 157 (set (reg/v:DI 575 [ k ])
        (plus:DI (reg/v:DI 575 [ k ])
            (const_int 1 [0x1]))) graph500.c:141 -1
     (nil))
(debug_insn 2379 2378 2380 157 (var_location:DI k (reg/v:DI 575 [ k ])) graph500.c:141 -1
     (nil))
;;  succ:       158 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 158, loop depth 1, count 0, freq 24
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL)
;;  pred:       156 [100.0%] 
;;              157 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 2380 2379 2381 158 105 "" [1 uses])
(note 2381 2380 2382 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2382 2381 2384 158 (var_location:DI k (reg/v:DI 575 [ k ])) -1
     (nil))
(insn 2384 2382 2385 158 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 575 [ k ]))) graph500.c:141 -1
     (nil))
(jump_insn 2385 2384 2386 158 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2383)
            (pc))) graph500.c:141 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2383)
;;  succ:       157 [91.0%] 
;;              159 [9.0%]  (FALLTHRU)

;; basic block 159, loop depth 0, count 0, freq 2
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL)
;;  pred:       158 [9.0%]  (FALLTHRU)
(note 2386 2385 2387 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 2387 2386 2388 159 (set (reg:DI 1448)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:144 -1
     (nil))
(insn 2388 2387 2389 159 (set (reg/f:DI 1447)
        (lo_sum:DI (reg:DI 1448)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:144 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2389 2388 2390 159 (set (reg:DI 590 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1447)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:144 -1
     (nil))
(insn 2390 2389 2391 159 (set (reg:DI 1450)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:145 -1
     (nil))
(insn 2391 2390 2392 159 (set (reg/f:DI 1449)
        (lo_sum:DI (reg:DI 1450)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:145 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2392 2391 217 159 (set (reg:DI 592 [ ivtmp.110 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1449)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) -1
     (nil))
(insn 217 2392 2393 159 (set (reg/v:DI 578 [ k ])
        (const_int 0 [0])) graph500.c:145 -1
     (nil))
(jump_insn 2393 217 2394 159 (set (pc)
        (label_ref 2418)) -1
     (nil)
 -> 2418)
;;  succ:       163 [100.0%] 

(barrier 2394 2393 2421)
;; basic block 160, loop depth 1, count 0, freq 22
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL)
;;  pred:       163 [91.0%] 
(code_label 2421 2394 2395 160 109 "" [1 uses])
(note 2395 2421 2396 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2396 2395 2397 160 (var_location:DI D#43 (reg:DI 592 [ ivtmp.110 ])) -1
     (nil))
(insn 2397 2396 2398 160 (set (reg/f:DI 771 [ D.3806 ])
        (reg:DI 592 [ ivtmp.110 ])) -1
     (nil))
(insn 2398 2397 2399 160 (set (reg:DI 582 [ D.3798 ])
        (mem:DI (reg/f:DI 771 [ D.3806 ]) [4 MEM[base: _1250, offset: 0B]+0 S8 A64])) -1
     (nil))
(debug_insn 2399 2398 2400 160 (var_location:DI D#16 (debug_expr:DI D#43)) graph500.c:145 -1
     (nil))
(debug_insn 2400 2399 2401 160 (var_location:DI p (debug_expr:DI D#16)) -1
     (nil))
(debug_insn 2401 2400 2402 160 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:145 -1
     (nil))
(insn 2402 2401 2403 160 (set (reg:DI 583 [ D.3798 ])
        (mem:DI (plus:DI (reg/f:DI 771 [ D.3806 ])
                (const_int 8 [0x8])) [4 MEM[base: _1250, offset: 8B]+0 S8 A64])) -1
     (nil))
(debug_insn 2403 2402 2404 160 (var_location:DI D#17 (debug_expr:DI D#43)) graph500.c:146 -1
     (nil))
(debug_insn 2404 2403 2405 160 (var_location:DI p (debug_expr:DI D#17)) -1
     (nil))
(debug_insn 2405 2404 2406 160 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:146 -1
     (nil))
(insn 2406 2405 2407 160 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 582 [ D.3798 ])
            (reg:DI 583 [ D.3798 ]))) graph500.c:147 -1
     (nil))
(jump_insn 2407 2406 2408 160 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2413)
            (pc))) graph500.c:147 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 2413)
;;  succ:       161 [72.0%]  (FALLTHRU)
;;              162 [28.0%] 

;; basic block 161, loop depth 1, count 0, freq 16
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL)
;;  pred:       160 [72.0%]  (FALLTHRU)
(note 2408 2407 2409 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 2409 2408 2410 161 (set (reg:SI 1451)
        (const_int 1 [0x1])) graph500.c:148 -1
     (nil))
(insn 2410 2409 2411 161 (set (mem:SI (plus:DI (mult:DI (reg:DI 583 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_522+0 S4 A32])
        (reg:SI 1451)) graph500.c:148 -1
     (nil))
(insn 2411 2410 2412 161 (set (reg:SI 1452)
        (const_int 1 [0x1])) graph500.c:148 -1
     (nil))
(insn 2412 2411 2413 161 (set (mem:SI (plus:DI (mult:DI (reg:DI 582 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_519+0 S4 A32])
        (reg:SI 1452)) graph500.c:148 -1
     (nil))
;;  succ:       162 [100.0%]  (FALLTHRU)

;; basic block 162, loop depth 1, count 0, freq 22
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL)
;;  pred:       160 [28.0%] 
;;              161 [100.0%]  (FALLTHRU)
(code_label 2413 2412 2414 162 108 "" [1 uses])
(note 2414 2413 2415 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 2415 2414 2416 162 (set (reg/v:DI 578 [ k ])
        (plus:DI (reg/v:DI 578 [ k ])
            (const_int 1 [0x1]))) graph500.c:144 -1
     (nil))
(debug_insn 2416 2415 2417 162 (var_location:DI k (reg/v:DI 578 [ k ])) graph500.c:144 -1
     (nil))
(insn 2417 2416 2418 162 (set (reg:DI 592 [ ivtmp.110 ])
        (plus:DI (reg:DI 592 [ ivtmp.110 ])
            (const_int 16 [0x10]))) -1
     (nil))
;;  succ:       163 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 163, loop depth 1, count 0, freq 24
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL)
;;  pred:       159 [100.0%] 
;;              162 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 2418 2417 2419 163 107 "" [1 uses])
(note 2419 2418 2420 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2420 2419 2422 163 (var_location:DI k (reg/v:DI 578 [ k ])) -1
     (nil))
(insn 2422 2420 2423 163 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 578 [ k ])
            (reg:DI 590 [ D.3798 ]))) graph500.c:144 -1
     (nil))
(jump_insn 2423 2422 2424 163 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) graph500.c:144 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2421)
;;  succ:       160 [91.0%] 
;;              164 [9.0%]  (FALLTHRU)

;; basic block 164, loop depth 0, count 0, freq 2
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL)
;;  pred:       163 [9.0%]  (FALLTHRU)
(note 2424 2423 2425 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 2425 2424 2426 164 (set (reg:DI 1454)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:155 -1
     (nil))
(insn 2426 2425 2427 164 (set (reg/f:DI 1453)
        (lo_sum:DI (reg:DI 1454)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:155 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2427 2426 2428 164 (set (reg:SI 600 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1453)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:155 -1
     (nil))
(insn 2428 2427 2429 164 (set (reg:DI 1456)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2429 2428 2430 164 (set (reg/f:DI 1455)
        (lo_sum:DI (reg:DI 1456)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2430 2429 2431 164 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (mem/c:DI (reg/f:DI 1455) [4 prng_state_store.z1+0 S8 A64])) -1
     (nil))
(insn 2431 2430 2432 164 (set (reg:DI 1458)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2432 2431 2433 164 (set (reg/f:DI 1457)
        (lo_sum:DI (reg:DI 1458)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2433 2432 2434 164 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1457)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])) -1
     (nil))
(insn 2434 2433 2435 164 (set (reg:DI 1460)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2435 2434 2436 164 (set (reg/f:DI 1459)
        (lo_sum:DI (reg:DI 1460)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2436 2435 2437 164 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1459)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])) -1
     (nil))
(insn 2437 2436 2438 164 (set (reg:DI 1462)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2438 2437 2439 164 (set (reg/f:DI 1461)
        (lo_sum:DI (reg:DI 1462)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2439 2438 2440 164 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1461)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])) -1
     (nil))
(insn 2440 2439 2441 164 (set (reg:DI 1464)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2441 2440 2442 164 (set (reg/f:DI 1463)
        (lo_sum:DI (reg:DI 1464)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2442 2441 219 164 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1463)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])) -1
     (nil))
(insn 219 2442 220 164 (set (reg:DI 788 [ ivtmp.101 ])
        (const_int 0 [0])) graph500.c:155 -1
     (nil))
(insn 220 219 221 164 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (const_int 0 [0])) graph500.c:155 -1
     (nil))
(insn 221 220 2443 164 (set (reg/v:SI 596 [ m ])
        (const_int 0 [0])) graph500.c:155 -1
     (nil))
(jump_insn 2443 221 2444 164 (set (pc)
        (label_ref 2633)) -1
     (nil)
 -> 2633)
;;  succ:       179 [100.0%] 

(barrier 2444 2443 2641)
;; basic block 165, loop depth 1, count 0, freq 22
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL)
;;  pred:       180 [95.5%] 
(code_label 2641 2444 2445 165 118 "" [1 uses])
(note 2445 2641 2446 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2446 2445 2447 165 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) graph500.c:156 -1
     (nil))
(debug_insn 2447 2446 2448 165 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
(debug_insn 2448 2447 2449 165 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
(debug_insn 2449 2448 2450 165 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2450 2449 2451 165 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(debug_insn 2451 2450 2452 165 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 2452 2451 2453 165 (set (reg:DI 1465)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 -1
     (nil))
(insn 2453 2452 2454 165 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1465))) generator/mod_arith_64bit.h:27 -1
     (nil))
(jump_insn 2454 2453 2455 165 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2478)
            (pc))) generator/mod_arith_64bit.h:27 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2478)
;;  succ:       166 [0.0%]  (FALLTHRU)
;;              169 [100.0%] 

;; basic block 166, loop depth 0, count 0, freq 0
;;  prev block 165, next block 167, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       165 [0.0%]  (FALLTHRU)
(note 2455 2454 2456 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 2456 2455 2457 166 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 2457 2456 2458 166 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1671)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1671)
;;  succ:       108 [100.0%] 
;;              167 (FALLTHRU)

;; basic block 167, loop depth 0, count 0, freq 0
;;  prev block 166, next block 169, flags: (NEW, REACHABLE, RTL)
;;  pred:       166 (FALLTHRU)
(note 2458 2457 2459 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2459 2458 2460 167 (set (reg:DI 1467)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2460 2459 2461 167 (set (reg/f:DI 1466)
        (lo_sum:DI (reg:DI 1467)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2461 2460 2462 167 (set (mem/c:DI (reg/f:DI 1466) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(insn 2462 2461 2463 167 (set (reg:DI 1469)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2463 2462 2464 167 (set (reg/f:DI 1468)
        (lo_sum:DI (reg:DI 1469)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2464 2463 2465 167 (set (mem/c:DI (plus:DI (reg/f:DI 1468)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2465 2464 2466 167 (set (reg:DI 1471)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2466 2465 2467 167 (set (reg/f:DI 1470)
        (lo_sum:DI (reg:DI 1471)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2467 2466 2468 167 (set (mem/c:DI (plus:DI (reg/f:DI 1470)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2468 2467 2469 167 (set (reg:DI 1473)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2469 2468 2470 167 (set (reg/f:DI 1472)
        (lo_sum:DI (reg:DI 1473)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2470 2469 2471 167 (set (mem/c:DI (plus:DI (reg/f:DI 1472)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2471 2470 2472 167 (set (reg:DI 1475)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2472 2471 2473 167 (set (reg/f:DI 1474)
        (lo_sum:DI (reg:DI 1475)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2473 2472 2476 167 (set (mem/c:DI (plus:DI (reg/f:DI 1474)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(jump_insn 2476 2473 2477 167 (set (pc)
        (label_ref 1671)) -1
     (nil)
 -> 1671)
;;  succ:       108 [100.0%] 

(barrier 2477 2476 2478)
;; basic block 169, loop depth 1, count 0, freq 22
;;  prev block 167, next block 170, flags: (NEW, REACHABLE, RTL)
;;  pred:       165 [100.0%] 
(code_label 2478 2477 2479 169 111 "" [1 uses])
(note 2479 2478 2480 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 2480 2479 2481 169 (set (reg:DI 1477)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2481 2480 2482 169 (set (reg:DI 1476 [ D.3802 ])
        (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1477))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2482 2481 2483 169 (set (reg:DI 1481)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2483 2482 2484 169 (set (reg:DI 1480)
        (udiv:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2484 2483 2485 169 (set (reg:DI 1483)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2485 2484 2486 169 (set (reg:DI 1482)
        (mult:DI (reg:DI 1480)
            (reg:DI 1483))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2486 2485 2487 169 (set (reg:DI 640 [ D.3802 ])
        (minus:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1482))) generator/mod_arith_64bit.h:29 -1
     (nil))
(debug_insn 2487 2486 2488 169 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2488 2487 2489 169 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2489 2488 2490 169 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2490 2489 2491 169 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2491 2490 2492 169 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2492 2491 2493 169 (var_location:DI sum (reg:DI 640 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2493 2492 2494 169 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2494 2493 2495 169 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 2495 2494 2496 169 (set (reg:DI 1484)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 2496 2495 2497 169 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1484))) generator/mod_arith_64bit.h:34 -1
     (nil))
(jump_insn 2497 2496 2498 169 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2521)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2521)
;;  succ:       170 [0.0%]  (FALLTHRU)
;;              173 [100.0%] 

;; basic block 170, loop depth 0, count 0, freq 0
;;  prev block 169, next block 171, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       169 [0.0%]  (FALLTHRU)
(note 2498 2497 2499 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 2499 2498 2500 170 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 2500 2499 2501 170 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1737)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1737)
;;  succ:       112 [100.0%] 
;;              171 (FALLTHRU)

;; basic block 171, loop depth 0, count 0, freq 0
;;  prev block 170, next block 173, flags: (NEW, REACHABLE, RTL)
;;  pred:       170 (FALLTHRU)
(note 2501 2500 2502 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 2502 2501 2503 171 (set (reg:DI 1486)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2503 2502 2504 171 (set (reg/f:DI 1485)
        (lo_sum:DI (reg:DI 1486)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2504 2503 2505 171 (set (mem/c:DI (reg/f:DI 1485) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(insn 2505 2504 2506 171 (set (reg:DI 1488)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2506 2505 2507 171 (set (reg/f:DI 1487)
        (lo_sum:DI (reg:DI 1488)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2507 2506 2508 171 (set (mem/c:DI (plus:DI (reg/f:DI 1487)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2508 2507 2509 171 (set (reg:DI 1490)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2509 2508 2510 171 (set (reg/f:DI 1489)
        (lo_sum:DI (reg:DI 1490)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2510 2509 2511 171 (set (mem/c:DI (plus:DI (reg/f:DI 1489)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2511 2510 2512 171 (set (reg:DI 1492)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2512 2511 2513 171 (set (reg/f:DI 1491)
        (lo_sum:DI (reg:DI 1492)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2513 2512 2514 171 (set (mem/c:DI (plus:DI (reg/f:DI 1491)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2514 2513 2515 171 (set (reg:DI 1494)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2515 2514 2516 171 (set (reg/f:DI 1493)
        (lo_sum:DI (reg:DI 1494)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2516 2515 2519 171 (set (mem/c:DI (plus:DI (reg/f:DI 1493)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(jump_insn 2519 2516 2520 171 (set (pc)
        (label_ref 1737)) -1
     (nil)
 -> 1737)
;;  succ:       112 [100.0%] 

(barrier 2520 2519 2521)
;; basic block 173, loop depth 1, count 0, freq 22
;;  prev block 171, next block 174, flags: (NEW, REACHABLE, RTL)
;;  pred:       169 [100.0%] 
(code_label 2521 2520 2522 173 113 "" [1 uses])
(note 2522 2521 2523 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 2523 2522 2524 173 (set (reg:DI 1496)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2524 2523 2525 173 (set (reg:DI 1495 [ D.3802 ])
        (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1496))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2525 2524 2526 173 (set (reg:DI 1497 [ D.3802 ])
        (plus:DI (reg:DI 1495 [ D.3802 ])
            (reg:DI 640 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2526 2525 2527 173 (set (reg:DI 1501)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2527 2526 2528 173 (set (reg:DI 1500)
        (udiv:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1501))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2528 2527 2529 173 (set (reg:DI 1503)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2529 2528 2530 173 (set (reg:DI 1502)
        (mult:DI (reg:DI 1500)
            (reg:DI 1503))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2530 2529 2531 173 (set (reg:DI 643 [ D.3802 ])
        (minus:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1502))) generator/mod_arith_64bit.h:36 -1
     (nil))
(debug_insn 2531 2530 2532 173 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2532 2531 2533 173 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2533 2532 2534 173 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2534 2533 2535 173 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2535 2534 2536 173 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2536 2535 2537 173 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2537 2536 2538 173 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 2538 2537 2539 173 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2539 2538 2540 173 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2540 2539 2541 173 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2541 2540 2542 173 (var_location:DI a (reg:DI 643 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2542 2541 2543 173 (var_location:DI a (reg:DI 643 [ D.3802 ])) -1
     (nil))
(debug_insn 2543 2542 2544 173 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 2544 2543 2545 173 (set (reg:DI 1505)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2545 2544 2546 173 (set (reg:DI 1504 [ D.3802 ])
        (mult:DI (reg:DI 643 [ D.3802 ])
            (reg:DI 1505))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2546 2545 2547 173 (set (reg:DI 1509)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2547 2546 2548 173 (set (reg:DI 1508)
        (udiv:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1509))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2548 2547 2549 173 (set (reg:DI 1511)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2549 2548 2550 173 (set (reg:DI 1510)
        (mult:DI (reg:DI 1508)
            (reg:DI 1511))) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2550 2549 2551 173 (set (reg:DI 638 [ D.3802 ])
        (minus:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1510))) generator/mod_arith_64bit.h:29 -1
     (nil))
(debug_insn 2551 2550 2552 173 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2552 2551 2553 173 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2553 2552 2554 173 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2554 2553 2555 173 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2555 2554 2556 173 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2556 2555 2557 173 (var_location:DI sum (reg:DI 638 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2557 2556 2558 173 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2558 2557 2559 173 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 2559 2558 2560 173 (set (reg:DI 1512)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 2560 2559 2561 173 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1512))) generator/mod_arith_64bit.h:34 -1
     (nil))
(jump_insn 2561 2560 2562 173 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2580)
            (pc))) generator/mod_arith_64bit.h:34 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2580)
;;  succ:       174 [0.0%]  (FALLTHRU)
;;              175 [100.0%] 

;; basic block 174, loop depth 0, count 0, freq 0
;;  prev block 173, next block 175, flags: (NEW, REACHABLE, RTL)
;;  pred:       173 [0.0%]  (FALLTHRU)
(note 2562 2561 2563 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 2563 2562 2564 174 (set (reg:DI 1514)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2564 2563 2565 174 (set (reg/f:DI 1513)
        (lo_sum:DI (reg:DI 1514)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2565 2564 2566 174 (set (mem/c:DI (reg/f:DI 1513) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 643 [ D.3802 ])) -1
     (nil))
(insn 2566 2565 2567 174 (set (reg:DI 1516)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2567 2566 2568 174 (set (reg/f:DI 1515)
        (lo_sum:DI (reg:DI 1516)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2568 2567 2569 174 (set (mem/c:DI (plus:DI (reg/f:DI 1515)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2569 2568 2570 174 (set (reg:DI 1518)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2570 2569 2571 174 (set (reg/f:DI 1517)
        (lo_sum:DI (reg:DI 1518)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2571 2570 2572 174 (set (mem/c:DI (plus:DI (reg/f:DI 1517)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2572 2571 2573 174 (set (reg:DI 1520)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2573 2572 2574 174 (set (reg/f:DI 1519)
        (lo_sum:DI (reg:DI 1520)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2574 2573 2575 174 (set (mem/c:DI (plus:DI (reg/f:DI 1519)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2575 2574 2576 174 (set (reg:DI 1522)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2576 2575 2577 174 (set (reg/f:DI 1521)
        (lo_sum:DI (reg:DI 1522)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2577 2576 2578 174 (set (mem/c:DI (plus:DI (reg/f:DI 1521)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(jump_insn 2578 2577 2579 174 (set (pc)
        (label_ref 1737)) -1
     (nil)
 -> 1737)
;;  succ:       112 [100.0%] 

(barrier 2579 2578 2580)
;; basic block 175, loop depth 1, count 0, freq 22
;;  prev block 174, next block 176, flags: (NEW, REACHABLE, RTL)
;;  pred:       173 [100.0%] 
(code_label 2580 2579 2581 175 115 "" [1 uses])
(note 2581 2580 2582 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 2582 2581 2583 175 (set (reg:DI 1524)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2583 2582 2584 175 (set (reg:DI 1523 [ D.3802 ])
        (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1524))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2584 2583 2585 175 (set (reg:DI 1525 [ D.3802 ])
        (plus:DI (reg:DI 1523 [ D.3802 ])
            (reg:DI 638 [ D.3802 ]))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2585 2584 2586 175 (set (reg:DI 1529)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2586 2585 2587 175 (set (reg:DI 1528)
        (udiv:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1529))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2587 2586 2588 175 (set (reg:DI 1531)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2588 2587 2589 175 (set (reg:DI 1530)
        (mult:DI (reg:DI 1528)
            (reg:DI 1531))) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2589 2588 2590 175 (set (reg:DI 646 [ D.3802 ])
        (minus:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1530))) generator/mod_arith_64bit.h:36 -1
     (nil))
(debug_insn 2590 2589 2591 175 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2591 2590 2592 175 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2592 2591 2593 175 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2593 2592 2594 175 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2594 2593 2595 175 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2595 2594 2596 175 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2596 2595 2597 175 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 2597 2596 2598 175 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:275 -1
     (nil))
(debug_insn 2598 2597 2599 175 (var_location:DI state (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
(debug_insn 2599 2598 2600 175 (var_location:DF R (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
(insn 2600 2599 2601 175 (set (reg:SI 1532)
        (mem:SI (plus:DI (mult:DI (reg:DI 788 [ ivtmp.101 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B]+0 S4 A32])) graph500.c:157 -1
     (nil))
(insn 2601 2600 2602 175 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1532)
            (const_int 0 [0]))) graph500.c:157 -1
     (nil))
(jump_insn 2602 2601 2603 175 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2629)
            (pc))) graph500.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2629)
;;  succ:       178 [50.0%] 
;;              176 [50.0%]  (FALLTHRU)

;; basic block 176, loop depth 1, count 0, freq 11
;;  prev block 175, next block 177, flags: (NEW, REACHABLE, RTL)
;;  pred:       175 [50.0%]  (FALLTHRU)
(note 2603 2602 2604 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 2604 2603 2605 176 (set (reg:DF 1533 [ D.3804 ])
        (float:DF (reg:DI 643 [ D.3802 ]))) graph500.c:157 -1
     (nil))
(insn 2605 2604 2606 176 (set (reg:DF 1535)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])) graph500.c:157 -1
     (expr_list:REG_EQUAL (const_double:DF 4.6566128752457969230960088680149056017398834228515625e-10 [0x0.80000001p-30])
        (nil)))
(insn 2606 2605 2607 176 (set (reg:DF 1534 [ D.3804 ])
        (mult:DF (reg:DF 1533 [ D.3804 ])
            (reg:DF 1535))) graph500.c:157 -1
     (nil))
(insn 2607 2606 2608 176 (set (reg:DF 1536 [ D.3804 ])
        (float:DF (reg:DI 646 [ D.3802 ]))) graph500.c:157 -1
     (nil))
(insn 2608 2607 2609 176 (set (reg:DF 1538)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])) graph500.c:157 -1
     (expr_list:REG_EQUAL (const_double:DF 2.168404346990492785380695823593908549975495247963408e-19 [0x0.80000002p-61])
        (nil)))
(insn 2609 2608 2610 176 (set (reg:DF 1537 [ D.3804 ])
        (mult:DF (reg:DF 1536 [ D.3804 ])
            (reg:DF 1538))) graph500.c:157 -1
     (nil))
(insn 2610 2609 2611 176 (set (reg:DF 1539 [ D.3804 ])
        (plus:DF (reg:DF 1534 [ D.3804 ])
            (reg:DF 1537 [ D.3804 ]))) graph500.c:157 -1
     (nil))
(insn 2611 2610 2612 176 (set (reg:DI 1540 [ D.3810 ])
        (minus:DI (reg:DI 573 [ D.3802 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:157 -1
     (nil))
(insn 2612 2611 2613 176 (set (reg:DF 1541 [ D.3804 ])
        (float:DF (reg:DI 1540 [ D.3810 ]))) graph500.c:157 -1
     (nil))
(insn 2613 2612 2614 176 (set (reg:DF 1542 [ D.3804 ])
        (mult:DF (reg:DF 1539 [ D.3804 ])
            (reg:DF 1541 [ D.3804 ]))) graph500.c:157 -1
     (nil))
(insn 2614 2613 2615 176 (set (reg:SI 1543 [ D.3797 ])
        (minus:SI (reg:SI 600 [ D.3797 ])
            (reg/v:SI 596 [ m ]))) graph500.c:157 -1
     (nil))
(insn 2615 2614 2616 176 (set (reg:DF 1544 [ D.3804 ])
        (float:DF (reg:SI 1543 [ D.3797 ]))) graph500.c:157 -1
     (nil))
(insn 2616 2615 2617 176 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1542 [ D.3804 ])
            (reg:DF 1544 [ D.3804 ]))) graph500.c:157 -1
     (nil))
(jump_insn 2617 2616 2618 176 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 2629)
            (pc))) graph500.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2629)
;;  succ:       178 [50.0%] 
;;              177 [50.0%]  (FALLTHRU)

;; basic block 177, loop depth 1, count 0, freq 5
;;  prev block 176, next block 178, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       176 [50.0%]  (FALLTHRU)
(note 2618 2617 2619 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 2619 2618 2620 177 (set (reg/v:SI 599 [ m ])
        (plus:SI (reg/v:SI 596 [ m ])
            (const_int 1 [0x1]))) graph500.c:158 -1
     (nil))
(debug_insn 2620 2619 2621 177 (var_location:SI m (reg/v:SI 599 [ m ])) graph500.c:158 -1
     (nil))
(debug_insn 2621 2620 2622 177 (var_location:DI D#45 (plus:DI (reg:DI 788 [ ivtmp.101 ])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 2622 2621 2623 177 (var_location:DI t (debug_expr:DI D#45)) graph500.c:158 -1
     (nil))
(insn 2623 2622 2624 177 (set (reg:DI 1546)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 -1
     (nil))
(insn 2624 2623 2625 177 (set (reg/f:DI 1545)
        (lo_sum:DI (reg:DI 1546)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2625 2624 2626 177 (set (reg:DI 1547)
        (reg/f:DI 1545)) graph500.c:158 -1
     (nil))
(insn 2626 2625 2627 177 (set (reg/f:DI 1548)
        (plus:DI (reg/f:DI 1545)
            (const_int 112 [0x70]))) graph500.c:158 -1
     (nil))
(insn 2627 2626 2628 177 (set (reg:DI 1549)
        (sign_extend:DI (reg/v:SI 596 [ m ]))) graph500.c:158 -1
     (nil))
(insn 2628 2627 218 177 (set (mem:DI (plus:DI (mult:DI (reg:DI 1549)
                    (const_int 8 [0x8]))
                (reg/f:DI 1548)) [4 bfs_root S8 A64])
        (reg/v:DI 591 [ t ])) graph500.c:158 -1
     (nil))
(insn 218 2628 2629 177 (set (reg/v:SI 596 [ m ])
        (reg/v:SI 599 [ m ])) graph500.c:158 -1
     (nil))
;;  succ:       178 [100.0%]  (FALLTHRU)

;; basic block 178, loop depth 1, count 0, freq 21
;;  prev block 177, next block 179, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       175 [50.0%] 
;;              177 [100.0%]  (FALLTHRU)
;;              176 [50.0%] 
(code_label 2629 218 2630 178 116 "" [2 uses])
(note 2630 2629 2631 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 2631 2630 2632 178 (set (reg:DI 788 [ ivtmp.101 ])
        (plus:DI (reg:DI 788 [ ivtmp.101 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 2632 2631 222 178 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 222 2632 223 178 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 223 222 224 178 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 643 [ D.3802 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 224 223 225 178 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 225 224 226 178 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 226 225 2633 178 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (reg:DI 646 [ D.3802 ])) generator/splittable_mrg.c:177 -1
     (nil))
;;  succ:       179 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 179, loop depth 1, count 0, freq 24
;;  prev block 178, next block 180, flags: (NEW, REACHABLE, RTL)
;;  pred:       164 [100.0%] 
;;              178 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 2633 226 2634 179 110 "" [1 uses])
(note 2634 2633 2635 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 2635 2634 2636 179 (set (reg/v:DI 591 [ t ])
        (reg:DI 788 [ ivtmp.101 ])) -1
     (nil))
(debug_insn 2636 2635 2637 179 (var_location:DI t (reg/v:DI 591 [ t ])) -1
     (nil))
(debug_insn 2637 2636 2638 179 (var_location:SI m (reg/v:SI 596 [ m ])) -1
     (nil))
(insn 2638 2637 2639 179 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (reg:SI 600 [ D.3797 ]))) graph500.c:155 -1
     (nil))
(jump_insn 2639 2638 2640 179 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2704)
            (pc))) graph500.c:155 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2704)
;;  succ:       180 [95.5%]  (FALLTHRU)
;;              186 [4.5%] 

;; basic block 180, loop depth 1, count 0, freq 23
;;  prev block 179, next block 181, flags: (NEW, REACHABLE, RTL)
;;  pred:       179 [95.5%]  (FALLTHRU)
(note 2640 2639 2642 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 2642 2640 2643 180 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 591 [ t ]))) graph500.c:155 -1
     (nil))
(jump_insn 2643 2642 2644 180 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2641)
            (pc))) graph500.c:155 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 2641)
;;  succ:       165 [95.5%] 
;;              181 [4.5%]  (FALLTHRU)

;; basic block 181, loop depth 0, count 0, freq 1
;;  prev block 180, next block 182, flags: (NEW, REACHABLE, RTL)
;;  pred:       180 [4.5%]  (FALLTHRU)
(note 2644 2643 2645 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 2645 2644 2646 181 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 2646 2645 2647 181 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2663)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2663)
;;  succ:       183 [100.0%] 
;;              182 (FALLTHRU)

;; basic block 182, loop depth 0, count 0, freq 0
;;  prev block 181, next block 183, flags: (NEW, REACHABLE, RTL)
;;  pred:       181 (FALLTHRU)
(note 2647 2646 2648 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 2648 2647 2649 182 (set (reg:DI 1551)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2649 2648 2650 182 (set (reg/f:DI 1550)
        (lo_sum:DI (reg:DI 1551)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2650 2649 2651 182 (set (mem/c:DI (reg/f:DI 1550) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(insn 2651 2650 2652 182 (set (reg:DI 1553)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2652 2651 2653 182 (set (reg/f:DI 1552)
        (lo_sum:DI (reg:DI 1553)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2653 2652 2654 182 (set (mem/c:DI (plus:DI (reg/f:DI 1552)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2654 2653 2655 182 (set (reg:DI 1555)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2655 2654 2656 182 (set (reg/f:DI 1554)
        (lo_sum:DI (reg:DI 1555)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2656 2655 2657 182 (set (mem/c:DI (plus:DI (reg/f:DI 1554)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2657 2656 2658 182 (set (reg:DI 1557)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2658 2657 2659 182 (set (reg/f:DI 1556)
        (lo_sum:DI (reg:DI 1557)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2659 2658 2660 182 (set (mem/c:DI (plus:DI (reg/f:DI 1556)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2660 2659 2661 182 (set (reg:DI 1559)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2661 2660 2662 182 (set (reg/f:DI 1558)
        (lo_sum:DI (reg:DI 1559)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2662 2661 2663 182 (set (mem/c:DI (plus:DI (reg/f:DI 1558)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
;;  succ:       183 [100.0%]  (FALLTHRU)

;; basic block 183, loop depth 0, count 0, freq 1
;;  prev block 182, next block 184, flags: (NEW, REACHABLE, RTL)
;;  pred:       181 [100.0%] 
;;              182 [100.0%]  (FALLTHRU)
(code_label 2663 2662 2664 183 119 "" [1 uses])
(note 2664 2663 2665 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 2665 2664 2666 183 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (const_int 0 [0]))) graph500.c:161 -1
     (nil))
(jump_insn 2666 2665 2667 183 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2687)
            (pc))) graph500.c:161 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 2687)
;;  succ:       184 [100.0%]  (FALLTHRU)
;;              185 [0.0%] 

;; basic block 184, loop depth 0, count 0, freq 1
;;  prev block 183, next block 185, flags: (NEW, REACHABLE, RTL)
;;  pred:       183 [100.0%]  (FALLTHRU)
(note 2667 2666 2668 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2668 2667 2669 184 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:162 -1
     (nil))
(debug_insn 2669 2668 2670 184 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)) graph500.c:162 -1
     (nil))
(insn 2670 2669 2671 184 (set (reg:DI 1561)
        (high:DI (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2671 2670 2672 184 (set (reg/f:DI 1560)
        (lo_sum:DI (reg:DI 1561)
            (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)
        (nil)))
(insn 2672 2671 2673 184 (set (reg:DI 1563)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:162 -1
     (nil))
(insn 2673 2672 2674 184 (set (reg/f:DI 1562)
        (lo_sum:DI (reg:DI 1563)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:162 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2674 2673 2675 184 (set (reg:SI 4 x4)
        (reg/v:SI 596 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2675 2674 2676 184 (set (reg:SI 3 x3)
        (reg:SI 600 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2676 2675 2677 184 (set (reg:DI 2 x2)
        (reg/f:DI 1560)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2677 2676 2678 184 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2678 2677 2679 184 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1562) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2679 2678 2680 184 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:SI (use (reg:SI 4 x4))
                                (nil)))))))))
(debug_insn 2680 2679 2681 184 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:162 -1
     (nil))
(debug_insn 2681 2680 2682 184 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:162 -1
     (nil))
(insn 2682 2681 2683 184 (set (reg:DI 1565)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:164 -1
     (nil))
(insn 2683 2682 2684 184 (set (reg/f:DI 1564)
        (lo_sum:DI (reg:DI 1565)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:164 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2684 2683 2685 184 (set (mem/c:SI (plus:DI (reg/f:DI 1564)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])
        (reg/v:SI 596 [ m ])) graph500.c:164 -1
     (nil))
(jump_insn 2685 2684 2686 184 (set (pc)
        (label_ref 2726)) graph500.c:164 -1
     (nil)
 -> 2726)
;;  succ:       189 [100.0%] 

(barrier 2686 2685 2687)
;; basic block 185, loop depth 0, count 0, freq 0
;;  prev block 184, next block 186, flags: (NEW, REACHABLE, RTL)
;;  pred:       183 [0.0%] 
(code_label 2687 2686 2688 185 120 "" [1 uses])
(note 2688 2687 2689 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2689 2688 2690 185 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:166 -1
     (nil))
(debug_insn 2690 2689 2691 185 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)) graph500.c:166 -1
     (nil))
(insn 2691 2690 2692 185 (set (reg:DI 1567)
        (high:DI (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2692 2691 2693 185 (set (reg/f:DI 1566)
        (lo_sum:DI (reg:DI 1567)
            (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)
        (nil)))
(insn 2693 2692 2694 185 (set (reg:DI 1569)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:166 -1
     (nil))
(insn 2694 2693 2695 185 (set (reg/f:DI 1568)
        (lo_sum:DI (reg:DI 1569)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:166 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2695 2694 2696 185 (set (reg:DI 2 x2)
        (reg/f:DI 1566)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2696 2695 2697 185 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2697 2696 2698 185 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1568) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2698 2697 2699 185 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 2699 2698 2700 185 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:166 -1
     (nil))
(debug_insn 2700 2699 2701 185 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:166 -1
     (nil))
(insn 2701 2700 2702 185 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:167 -1
     (nil))
(call_insn 2702 2701 2703 185 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 2703 2702 2704)
;; basic block 186, loop depth 0, count 0, freq 1
;;  prev block 185, next block 187, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       179 [4.5%] 
(code_label 2704 2703 2705 186 117 "" [1 uses])
(note 2705 2704 2706 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 2706 2705 2707 186 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 2707 2706 2708 186 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2726)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2726)
;;  succ:       189 [100.0%] 
;;              187 (FALLTHRU)

;; basic block 187, loop depth 0, count 0, freq 0
;;  prev block 186, next block 189, flags: (NEW, REACHABLE, RTL)
;;  pred:       186 (FALLTHRU)
(note 2708 2707 2709 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 2709 2708 2710 187 (set (reg:DI 1571)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2710 2709 2711 187 (set (reg/f:DI 1570)
        (lo_sum:DI (reg:DI 1571)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2711 2710 2712 187 (set (mem/c:DI (reg/f:DI 1570) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(insn 2712 2711 2713 187 (set (reg:DI 1573)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2713 2712 2714 187 (set (reg/f:DI 1572)
        (lo_sum:DI (reg:DI 1573)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2714 2713 2715 187 (set (mem/c:DI (plus:DI (reg/f:DI 1572)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2715 2714 2716 187 (set (reg:DI 1575)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2716 2715 2717 187 (set (reg/f:DI 1574)
        (lo_sum:DI (reg:DI 1575)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2717 2716 2718 187 (set (mem/c:DI (plus:DI (reg/f:DI 1574)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
(insn 2718 2717 2719 187 (set (reg:DI 1577)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2719 2718 2720 187 (set (reg/f:DI 1576)
        (lo_sum:DI (reg:DI 1577)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2720 2719 2721 187 (set (mem/c:DI (plus:DI (reg/f:DI 1576)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) -1
     (nil))
(insn 2721 2720 2722 187 (set (reg:DI 1579)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (nil))
(insn 2722 2721 2723 187 (set (reg/f:DI 1578)
        (lo_sum:DI (reg:DI 1579)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2723 2722 2726 187 (set (mem/c:DI (plus:DI (reg/f:DI 1578)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) -1
     (nil))
;;  succ:       189 [100.0%]  (FALLTHRU)

;; basic block 189, loop depth 0, count 0, freq 2
;;  prev block 187, next block 190, flags: (NEW, REACHABLE, RTL)
;;  pred:       184 [100.0%] 
;;              187 [100.0%]  (FALLTHRU)
;;              186 [100.0%] 
(code_label 2726 2723 2727 189 121 "" [2 uses])
(note 2727 2726 2728 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2728 2727 2729 189 (var_location:DI p (reg/f:DI 291 [ D.3806 ])) -1
     (nil))
(insn 2729 2728 2730 189 (set (reg:DI 0 x0)
        (reg/f:DI 291 [ D.3806 ])) xalloc.c:132 -1
     (nil))
(call_insn 2730 2729 2848 189 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:       190 [100.0%]  (FALLTHRU)

;; basic block 190, loop depth 0, count 0, freq 14
;;  prev block 189, next block 191, flags: (NEW, REACHABLE, RTL)
;;  pred:       196 [100.0%] 
;;              189 [100.0%]  (FALLTHRU)
(code_label 2848 2730 2731 190 126 "" [1 uses])
(note 2731 2848 2732 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2732 2731 2733 190 (var_location:SI m (const_int 0 [0])) -1
     (nil))
(insn 2733 2732 2734 190 (set (reg:DI 1581)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (nil))
(insn 2734 2733 2735 190 (set (reg/f:DI 1580)
        (lo_sum:DI (reg:DI 1581)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2735 2734 2736 190 (set (reg:SI 1582)
        (mem/c:SI (plus:DI (reg/f:DI 1580)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 -1
     (nil))
(insn 2736 2735 2737 190 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1582)
            (const_int 0 [0]))) graph500.c:187 -1
     (nil))
(jump_insn 2737 2736 3755 190 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2851)
            (pc))) graph500.c:187 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 2851)
;;  succ:       197 [97.8%] 
;;              191 [2.2%]  (FALLTHRU)

;; basic block 191, loop depth 0, count 0, freq 4
;;  prev block 190, next block 192, flags: (NEW, REACHABLE, RTL)
;;  pred:       190 [2.2%]  (FALLTHRU)
;;              305 [100.0%] 
(code_label 3755 2737 2738 191 181 "" [1 uses])
(note 2738 3755 2739 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(call_insn 2739 2738 2740 191 (parallel [
            (call (mem:DI (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>) [0 destroy_graph S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(debug_insn 2740 2739 2741 191 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2741 2740 2742 191 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2742 2741 2743 191 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2743 2742 2744 191 (var_location:DF R (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2744 2743 2745 191 (var_location:DI t (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2745 2744 2746 191 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2746 2745 2747 191 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2747 2746 2748 191 (var_location:SI m (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2748 2747 2749 191 (var_location:DI has_adj (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2749 2748 2750 191 (var_location:DI p (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:109 -1
     (nil))
(insn 2750 2749 2751 191 (set (reg:DI 1584)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:109 -1
     (nil))
(insn 2751 2750 2752 191 (set (reg/f:DI 1583)
        (lo_sum:DI (reg:DI 1584)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:109 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2752 2751 2753 191 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1583)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) xalloc.c:132 -1
     (nil))
(call_insn 2753 2752 2754 191 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 2754 2753 2755 191 (var_location:DI p (clobber (const_int 0 [0]))) graph500.c:109 -1
     (nil))
(insn 2755 2754 2756 191 (set (reg:DI 1586)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2756 2755 2757 191 (set (reg/f:DI 1585)
        (lo_sum:DI (reg:DI 1586)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2757 2756 2758 191 (set (reg:DI 1588)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2758 2757 2759 191 (set (reg/f:DI 1587)
        (lo_sum:DI (reg:DI 1588)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2759 2758 2760 191 (set (reg:DI 1590)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2760 2759 2761 191 (set (reg/f:DI 1589)
        (lo_sum:DI (reg:DI 1590)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2761 2760 2762 191 (set (reg:DI 1592)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2762 2761 2763 191 (set (reg/f:DI 1591)
        (lo_sum:DI (reg:DI 1592)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2763 2762 2764 191 (set (reg:DI 1594)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2764 2763 2765 191 (set (reg/f:DI 1593)
        (lo_sum:DI (reg:DI 1594)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2765 2764 2766 191 (set (reg:DI 1596)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2766 2765 2767 191 (set (reg/f:DI 1595)
        (lo_sum:DI (reg:DI 1596)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2767 2766 2768 191 (set (reg:DI 1598)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2768 2767 2769 191 (set (reg/f:DI 1597)
        (lo_sum:DI (reg:DI 1598)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2769 2768 2770 191 (set (reg:DI 1600)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2770 2769 2771 191 (set (reg/f:DI 1599)
        (lo_sum:DI (reg:DI 1600)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2771 2770 2772 191 (set (reg:DI 1602)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2772 2771 2773 191 (set (reg/f:DI 1601)
        (lo_sum:DI (reg:DI 1602)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2773 2772 2774 191 (set (reg:DI 1604)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (nil))
(insn 2774 2773 2775 191 (set (reg/f:DI 1603)
        (lo_sum:DI (reg:DI 1604)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2775 2774 2776 191 (set (reg:SI 3 x3)
        (mem/c:SI (plus:DI (reg/f:DI 1585)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:111 -1
     (nil))
(insn 2776 2775 2777 191 (set (reg:DF 37 v5)
        (mem/c:DF (plus:DI (reg/f:DI 1587)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2777 2776 2778 191 (set (reg:DF 36 v4)
        (mem/c:DF (plus:DI (reg/f:DI 1589)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2778 2777 2779 191 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1591)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2779 2778 2780 191 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1593)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2780 2779 2781 191 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1595)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2781 2780 2782 191 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1597)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2782 2781 2783 191 (set (reg:DI 2 x2)
        (mem/c:DI (plus:DI (reg/f:DI 1599)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2783 2782 2784 191 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1601)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:111 -1
     (nil))
(insn 2784 2783 2785 191 (set (reg:DI 0 x0)
        (mem/c:DI (reg/f:DI 1603) [4 SCALE+0 S8 A64])) graph500.c:111 -1
     (nil))
(call_insn 2785 2784 267 191 (parallel [
            (call (mem:DI (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>) [0 output_results.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (expr_list:DF (use (reg:DF 36 v4))
                                            (expr_list:DF (use (reg:DF 37 v5))
                                                (expr_list:SI (use (reg:SI 3 x3))
                                                    (nil))))))))))))))
(insn 267 2785 2786 191 (set (reg:SI 240 [ D.3797 ])
        (const_int 0 [0])) graph500.c:114 -1
     (nil))
(jump_insn 2786 267 2787 191 (set (pc)
        (label_ref 3759)) graph500.c:111 -1
     (nil)
 -> 3759)
;;  succ:       306 [100.0%] 

(barrier 2787 2786 2788)
;; basic block 192, loop depth 0, count 0, freq 12
;;  prev block 191, next block 193, flags: (NEW, REACHABLE, RTL)
;;  pred:       155 [85.0%] 
(code_label 2788 2787 2789 192 104 "" [1 uses])
(note 2789 2788 2790 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2790 2789 2791 192 (var_location:DI __path (reg/f:DI 571 [ D.3800 ])) graph500.c:175 -1
     (nil))
(debug_insn 2791 2790 2792 192 (var_location:SI __oflag (const_int 0 [0])) graph500.c:175 -1
     (nil))
(insn 2792 2791 2793 192 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(insn 2793 2792 2794 192 (set (reg:DI 0 x0)
        (reg/f:DI 571 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(call_insn 2794 2793 2795 192 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 2795 2794 2796 192 (set (reg:SI 603 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 -1
     (nil))
(debug_insn 2796 2795 2797 192 (var_location:DI __path (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(debug_insn 2797 2796 2798 192 (var_location:SI __oflag (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(debug_insn 2798 2797 2799 192 (var_location:SI fd (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(insn 2799 2798 2800 192 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 603 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(jump_insn 2800 2799 2801 192 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2809)
            (pc))) graph500.c:175 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2809)
;;  succ:       193 [0.0%]  (FALLTHRU)
;;              194 [100.0%] 

;; basic block 193, loop depth 0, count 0, freq 0
;;  prev block 192, next block 194, flags: (NEW, REACHABLE, RTL)
;;  pred:       192 [0.0%]  (FALLTHRU)
(note 2801 2800 2802 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 2802 2801 2803 193 (set (reg:DI 1606)
        (high:DI (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 -1
     (nil))
(insn 2803 2802 2804 193 (set (reg/f:DI 1605)
        (lo_sum:DI (reg:DI 1606)
            (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>)
        (nil)))
(insn 2804 2803 2805 193 (set (reg:DI 0 x0)
        (reg/f:DI 1605)) graph500.c:176 -1
     (nil))
(call_insn 2805 2804 2806 193 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2806 2805 2807 193 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:177 -1
     (nil))
(call_insn 2807 2806 2808 193 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 2808 2807 2809)
;; basic block 194, loop depth 0, count 0, freq 12
;;  prev block 193, next block 195, flags: (NEW, REACHABLE, RTL)
;;  pred:       192 [100.0%] 
(code_label 2809 2808 2810 194 124 "" [1 uses])
(note 2810 2809 2811 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 2811 2810 2812 194 (set (reg:DI 1608)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:179 -1
     (nil))
(insn 2812 2811 2813 194 (set (reg/f:DI 1607)
        (lo_sum:DI (reg:DI 1608)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:179 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2813 2812 2814 194 (set (reg:SI 604 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1607)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:179 -1
     (nil))
(insn 2814 2813 2815 194 (set (reg:DI 605 [ D.3802 ])
        (sign_extend:DI (reg:SI 604 [ D.3797 ]))) graph500.c:179 -1
     (nil))
(insn 2815 2814 2816 194 (set (reg:DI 1609)
        (sign_extend:DI (reg:SI 604 [ D.3797 ]))) graph500.c:179 -1
     (nil))
(insn 2816 2815 2817 194 (set (reg:DI 606 [ D.3802 ])
        (ashift:DI (reg:DI 1609)
            (const_int 3 [0x3]))) graph500.c:179 -1
     (nil))
(debug_insn 2817 2816 2818 194 (var_location:DI sz (reg:DI 606 [ D.3802 ])) graph500.c:179 -1
     (nil))
(debug_insn 2818 2817 2819 194 (var_location:SI __fd (reg:SI 603 [ D.3797 ])) graph500.c:180 -1
     (nil))
(debug_insn 2819 2818 2820 194 (var_location:DI __buf (symbol_ref:DI ("bfs_root") [flags 0x82]  <var_decl 0x7f3c5e2545a0 bfs_root>)) graph500.c:180 -1
     (nil))
(debug_insn 2820 2819 2821 194 (var_location:DI __nbytes (reg:DI 606 [ D.3802 ])) graph500.c:180 -1
     (nil))
(insn 2821 2820 2822 194 (set (reg:DI 1611)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2822 2821 2823 194 (set (reg/f:DI 1610)
        (lo_sum:DI (reg:DI 1611)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2823 2822 2824 194 (set (reg:DI 1612)
        (reg/f:DI 1610)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2824 2823 2825 194 (set (reg/f:DI 1613)
        (plus:DI (reg/f:DI 1610)
            (const_int 112 [0x70]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2825 2824 2826 194 (set (reg:DI 3 x3)
        (const_int 512 [0x200])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2826 2825 2827 194 (set (reg:DI 2 x2)
        (reg:DI 606 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2827 2826 2828 194 (set (reg:DI 1 x1)
        (reg/f:DI 1613)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(insn 2828 2827 2829 194 (set (reg:SI 0 x0)
        (reg:SI 603 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(call_insn 2829 2828 2830 194 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>) [0 __read_chk_warn S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(insn 2830 2829 2831 194 (set (reg:DI 608 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 -1
     (nil))
(debug_insn 2831 2830 2832 194 (var_location:SI __fd (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(debug_insn 2832 2831 2833 194 (var_location:DI __buf (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(debug_insn 2833 2832 2834 194 (var_location:DI __nbytes (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(insn 2834 2833 2835 194 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 606 [ D.3802 ])
            (reg:DI 608 [ D.3798 ]))) graph500.c:180 -1
     (nil))
(jump_insn 2835 2834 2836 194 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2844)
            (pc))) graph500.c:180 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2844)
;;  succ:       195 [0.0%]  (FALLTHRU)
;;              196 [100.0%] 

;; basic block 195, loop depth 0, count 0, freq 0
;;  prev block 194, next block 196, flags: (NEW, REACHABLE, RTL)
;;  pred:       194 [0.0%]  (FALLTHRU)
(note 2836 2835 2837 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 2837 2836 2838 195 (set (reg:DI 1615)
        (high:DI (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 -1
     (nil))
(insn 2838 2837 2839 195 (set (reg/f:DI 1614)
        (lo_sum:DI (reg:DI 1615)
            (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>)
        (nil)))
(insn 2839 2838 2840 195 (set (reg:DI 0 x0)
        (reg/f:DI 1614)) graph500.c:181 -1
     (nil))
(call_insn 2840 2839 2841 195 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:181 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2841 2840 2842 195 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:182 -1
     (nil))
(call_insn 2842 2841 2843 195 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      

(barrier 2843 2842 2844)
;; basic block 196, loop depth 0, count 0, freq 12
;;  prev block 195, next block 197, flags: (NEW, REACHABLE, RTL)
;;  pred:       194 [100.0%] 
(code_label 2844 2843 2845 196 125 "" [1 uses])
(note 2845 2844 2846 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 2846 2845 2847 196 (set (reg:SI 0 x0)
        (reg:SI 603 [ D.3797 ])) graph500.c:184 -1
     (nil))
(call_insn 2847 2846 2849 196 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:184 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
(jump_insn 2849 2847 2850 196 (set (pc)
        (label_ref 2848)) graph500.c:184 -1
     (nil)
 -> 2848)
;;  succ:       190 [100.0%] 

(barrier 2850 2849 2851)
;; basic block 197, loop depth 0, count 0, freq 14
;;  prev block 196, next block 198, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       190 [97.8%] 
(code_label 2851 2850 2852 197 123 "" [1 uses])
(note 2852 2851 227 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 227 2852 3749 197 (set (reg:DI 777 [ ivtmp.94 ])
        (const_int 0 [0])) graph500.c:187 -1
     (nil))
;;  succ:       198 [100.0%]  (FALLTHRU)

;; basic block 198, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 197, next block 199, flags: (NEW, REACHABLE, RTL)
;;  pred:       197 [100.0%]  (FALLTHRU)
;;              304 [97.8%]  (DFS_BACK)
(code_label 3749 227 2853 198 180 "" [1 uses])
(note 2853 3749 2854 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 2854 2853 2855 198 (set (reg/v:SI 752 [ m ])
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) -1
     (nil))
(debug_insn 2855 2854 2856 198 (var_location:SI m (reg/v:SI 752 [ m ])) -1
     (nil))
(insn 2856 2855 2857 198 (set (reg:DI 1617)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 -1
     (nil))
(insn 2857 2856 2858 198 (set (reg/f:DI 1616)
        (lo_sum:DI (reg:DI 1617)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2858 2857 2859 198 (set (reg:DI 611 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:191 -1
     (nil))
(insn 2859 2858 2860 198 (set (reg:DI 613 [ D.3802 ])
        (ashift:DI (reg:DI 611 [ D.3798 ])
            (const_int 3 [0x3]))) graph500.c:191 -1
     (nil))
(debug_insn 2860 2859 2861 198 (var_location:DI sz (reg:DI 613 [ D.3802 ])) graph500.c:191 -1
     (nil))
(debug_insn 2861 2860 2862 198 (var_location:DI n (reg:DI 613 [ D.3802 ])) -1
     (nil))
(insn 2862 2861 2863 198 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) generator/utils.c:32 -1
     (nil))
(call_insn 2863 2862 2864 198 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2864 2863 2865 198 (set (reg/f:DI 1618)
        (reg:DI 0 x0)) generator/utils.c:32 -1
     (expr_list:REG_NOALIAS (reg/f:DI 1618)
        (nil)))
(insn 2865 2864 2866 198 (set (reg/v/f:DI 647 [ bfs_tree ])
        (reg/f:DI 1618)) generator/utils.c:32 -1
     (nil))
(debug_insn 2866 2865 2867 198 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) generator/utils.c:32 -1
     (nil))
(insn 2867 2866 2868 198 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 647 [ bfs_tree ])
            (const_int 0 [0]))) generator/utils.c:33 -1
     (nil))
(jump_insn 2868 2867 2869 198 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2873)
            (pc))) generator/utils.c:33 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2873)
;;  succ:       199 [0.0%]  (FALLTHRU)
;;              200 [100.0%] 

;; basic block 199, loop depth 0, count 0, freq 0
;;  prev block 198, next block 200, flags: (NEW, REACHABLE, RTL)
;;  pred:       198 [0.0%]  (FALLTHRU)
(note 2869 2868 2870 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 2870 2869 2871 199 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) -1
     (nil))
(call_insn/c/i 2871 2870 2872 199 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:      

(barrier 2872 2871 2873)
;; basic block 200, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 199, next block 201, flags: (NEW, REACHABLE, RTL)
;;  pred:       198 [100.0%] 
(code_label 2873 2872 2874 200 127 "" [1 uses])
(note 2874 2873 2875 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2875 2874 2876 200 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 2876 2875 2877 200 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 2877 2876 2878 200 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
(debug_insn 2878 2877 2879 200 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
(insn 2879 2878 2880 200 (set (reg:DI 811 [ D.3805 ])
        (ashift:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 2880 2879 2881 200 (set (reg:DI 1620)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:192 -1
     (nil))
(insn 2881 2880 2882 200 (set (reg/f:DI 1619)
        (lo_sum:DI (reg:DI 1620)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2882 2881 2883 200 (set (reg:DI 1621)
        (reg/f:DI 1619)) graph500.c:192 -1
     (nil))
(insn 2883 2882 2884 200 (set (reg/f:DI 1622)
        (plus:DI (reg/f:DI 1619)
            (const_int 112 [0x70]))) graph500.c:192 -1
     (nil))
(insn 2884 2883 2885 200 (set (reg:DI 1623)
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1622)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:192 -1
     (nil))
(insn 2885 2884 2886 200 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 611 [ D.3798 ])
            (reg:DI 1623))) graph500.c:192 -1
     (nil))
(jump_insn 2886 2885 2887 200 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2901)
            (pc))) graph500.c:192 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2901)
;;  succ:       201 [0.0%]  (FALLTHRU)
;;              202 [100.0%] 

;; basic block 201, loop depth 0, count 0, freq 0
;;  prev block 200, next block 202, flags: (NEW, REACHABLE, RTL)
;;  pred:       200 [0.0%]  (FALLTHRU)
(note 2887 2886 2888 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 2888 2887 2889 201 (set (reg:DI 1625)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 -1
     (nil))
(insn 2889 2888 2890 201 (set (reg/f:DI 1624)
        (lo_sum:DI (reg:DI 1625)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 2890 2889 2891 201 (set (reg:DI 1626)
        (plus:DI (reg/f:DI 1624)
            (const_int 32 [0x20]))) graph500.c:192 -1
     (nil))
(insn 2891 2890 2892 201 (set (reg:DI 1628)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 -1
     (nil))
(insn 2892 2891 2893 201 (set (reg/f:DI 1627)
        (lo_sum:DI (reg:DI 1628)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
        (nil)))
(insn 2893 2892 2894 201 (set (reg:DI 1630)
        (high:DI (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 -1
     (nil))
(insn 2894 2893 2895 201 (set (reg/f:DI 1629)
        (lo_sum:DI (reg:DI 1630)
            (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>)
        (nil)))
(insn 2895 2894 2896 201 (set (reg:DI 3 x3)
        (reg:DI 1626)) graph500.c:192 -1
     (nil))
(insn 2896 2895 2897 201 (set (reg:SI 2 x2)
        (const_int 192 [0xc0])) graph500.c:192 -1
     (nil))
(insn 2897 2896 2898 201 (set (reg:DI 1 x1)
        (reg/f:DI 1627)) graph500.c:192 -1
     (nil))
(insn 2898 2897 2899 201 (set (reg:DI 0 x0)
        (reg/f:DI 1629)) graph500.c:192 -1
     (nil))
(call_insn 2899 2898 2900 201 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 2900 2899 2901)
;; basic block 202, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 201, next block 203, flags: (NEW, REACHABLE, RTL)
;;  pred:       200 [100.0%] 
(code_label 2901 2900 2902 202 128 "" [1 uses])
(note 2902 2901 2903 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 2903 2902 2904 202 (set (reg:DI 1632)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:194 -1
     (nil))
(insn 2904 2903 2905 202 (set (reg/f:DI 1631)
        (lo_sum:DI (reg:DI 1632)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2905 2904 2906 202 (set (reg:SI 1633)
        (mem/c:SI (reg/f:DI 1631) [3 VERBOSE+0 S4 A32])) graph500.c:194 -1
     (nil))
(insn 2906 2905 2907 202 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1633)
            (const_int 0 [0]))) graph500.c:194 -1
     (nil))
(jump_insn 2907 2906 2908 202 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2921)
            (pc))) graph500.c:194 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2921)
;;  succ:       203 [29.0%]  (FALLTHRU)
;;              204 [71.0%] 

;; basic block 203, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 202, next block 204, flags: (NEW, REACHABLE, RTL)
;;  pred:       202 [29.0%]  (FALLTHRU)
(note 2908 2907 2909 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2909 2908 2910 203 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:194 -1
     (nil))
(debug_insn 2910 2909 2911 203 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)) graph500.c:194 -1
     (nil))
(insn 2911 2910 2912 203 (set (reg:DI 1635)
        (high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2912 2911 2913 203 (set (reg/f:DI 1634)
        (lo_sum:DI (reg:DI 1635)
            (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)
        (nil)))
(insn 2913 2912 2914 203 (set (reg:DI 1637)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 -1
     (nil))
(insn 2914 2913 2915 203 (set (reg/f:DI 1636)
        (lo_sum:DI (reg:DI 1637)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2915 2914 2916 203 (set (reg:DI 1638)
        (mem/f/c:DI (reg/f:DI 1636) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2916 2915 2917 203 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2917 2916 2918 203 (set (reg:DI 2 x2)
        (reg/f:DI 1634)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2918 2917 2919 203 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2919 2918 2920 203 (set (reg:DI 0 x0)
        (reg:DI 1638)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2920 2919 2921 203 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;;  succ:       204 [100.0%]  (FALLTHRU)

;; basic block 204, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 203, next block 205, flags: (NEW, REACHABLE, RTL)
;;  pred:       203 [100.0%]  (FALLTHRU)
;;              202 [71.0%] 
(code_label 2921 2920 2922 204 129 "" [1 uses])
(note 2922 2921 2923 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 2923 2922 2924 204 (set (reg:DI 1640)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (nil))
(insn 2924 2923 2925 204 (set (reg/f:DI 1639)
        (lo_sum:DI (reg:DI 1640)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2925 2924 2926 204 (set (reg:DI 1 x1)
        (reg/f:DI 1639)) timer.c:43 -1
     (nil))
(insn 2926 2925 2927 204 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 -1
     (nil))
(call_insn 2927 2926 2928 204 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2928 2927 2929 204 (set (reg:DI 1642)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:195 -1
     (nil))
(insn 2929 2928 2930 204 (set (reg/f:DI 1641)
        (lo_sum:DI (reg:DI 1642)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2930 2929 2931 204 (set (reg:DI 1643)
        (reg/f:DI 1641)) graph500.c:195 -1
     (nil))
(insn 2931 2930 2932 204 (set (reg/f:DI 1644)
        (plus:DI (reg/f:DI 1641)
            (const_int 112 [0x70]))) graph500.c:195 -1
     (nil))
(insn 2932 2931 2933 204 (set (reg:DI 1645)
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1644)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:195 -1
     (nil))
(insn 2933 2932 2934 204 (set (reg:DI 1646)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -48 [0xffffffffffffffd0]))) graph500.c:195 -1
     (nil))
(insn 2934 2933 2935 204 (set (reg:DI 2 x2)
        (reg:DI 1645)) graph500.c:195 -1
     (nil))
(insn 2935 2934 2936 204 (set (reg:DI 1 x1)
        (reg:DI 1646)) graph500.c:195 -1
     (nil))
(insn 2936 2935 2937 204 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:195 -1
     (nil))
(call_insn 2937 2936 2938 204 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>) [0 make_bfs_tree S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:195 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2938 2937 2939 204 (set (reg/v:SI 618 [ err ])
        (reg:SI 0 x0)) graph500.c:195 -1
     (nil))
(debug_insn 2939 2938 2940 204 (var_location:SI err (reg/v:SI 618 [ err ])) graph500.c:195 -1
     (nil))
(insn 2940 2939 2941 204 (set (reg:DI 1647)
        (plus:DI (reg/f:DI 68 virtual-stack-vars)
            (const_int -40 [0xffffffffffffffd8]))) timer.c:68 -1
     (nil))
(insn 2941 2940 2942 204 (set (reg:DI 1 x1)
        (reg:DI 1647)) timer.c:68 -1
     (nil))
(insn 2942 2941 2943 204 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:68 -1
     (nil))
(call_insn 2943 2942 2944 204 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:68 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2944 2943 2945 204 (set (reg:DI 1649)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 ts.tv_nsec+0 S8 A64])) timer.c:69 -1
     (nil))
(insn 2945 2944 2946 204 (set (reg:DF 1648 [ D.3804 ])
        (float:DF (reg:DI 1649))) timer.c:69 -1
     (nil))
(insn 2946 2945 2947 204 (set (reg:DI 1651)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:69 -1
     (nil))
(insn 2947 2946 2948 204 (set (reg/f:DI 1650)
        (lo_sum:DI (reg:DI 1651)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:69 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2948 2947 2949 204 (set (reg:DI 1653)
        (mem/c:DI (plus:DI (reg/f:DI 1650)
                (const_int 8 [0x8])) [4 tic_ts.tv_nsec+0 S8 A64])) timer.c:69 -1
     (nil))
(insn 2949 2948 2950 204 (set (reg:DF 1652 [ D.3804 ])
        (float:DF (reg:DI 1653))) timer.c:69 -1
     (nil))
(insn 2950 2949 2951 204 (set (reg:DF 1654 [ D.3804 ])
        (minus:DF (reg:DF 1648 [ D.3804 ])
            (reg:DF 1652 [ D.3804 ]))) timer.c:69 -1
     (nil))
(insn 2951 2950 2952 204 (set (reg:DF 1655)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])) timer.c:69 -1
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 2952 2951 2953 204 (set (reg/v:DF 653 [ out ])
        (mult:DF (reg:DF 1654 [ D.3804 ])
            (reg:DF 1655))) timer.c:69 -1
     (nil))
(debug_insn 2953 2952 2954 204 (var_location:DF out (reg/v:DF 653 [ out ])) timer.c:69 -1
     (nil))
(insn 2954 2953 2955 204 (set (reg:DI 1657)
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 ts.tv_sec+0 S8 A64])) timer.c:70 -1
     (nil))
(insn 2955 2954 2956 204 (set (reg:DF 1656 [ D.3804 ])
        (float:DF (reg:DI 1657))) timer.c:70 -1
     (nil))
(insn 2956 2955 2957 204 (set (reg:DI 1659)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:70 -1
     (nil))
(insn 2957 2956 2958 204 (set (reg/f:DI 1658)
        (lo_sum:DI (reg:DI 1659)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:70 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2958 2957 2959 204 (set (reg:DI 1661)
        (mem/c:DI (reg/f:DI 1658) [4 tic_ts.tv_sec+0 S8 A64])) timer.c:70 -1
     (nil))
(insn 2959 2958 2960 204 (set (reg:DF 1660 [ D.3804 ])
        (float:DF (reg:DI 1661))) timer.c:70 -1
     (nil))
(insn 2960 2959 2961 204 (set (reg:DF 1662 [ D.3804 ])
        (minus:DF (reg:DF 1656 [ D.3804 ])
            (reg:DF 1660 [ D.3804 ]))) timer.c:70 -1
     (nil))
(insn 2961 2960 2962 204 (set (reg/v:DF 659 [ out ])
        (plus:DF (reg:DF 1662 [ D.3804 ])
            (reg/v:DF 653 [ out ]))) timer.c:70 -1
     (nil))
(debug_insn 2962 2961 2963 204 (var_location:DF out (reg/v:DF 659 [ out ])) timer.c:70 -1
     (nil))
(debug_insn 2963 2962 2964 204 (var_location:DF out (clobber (const_int 0 [0]))) graph500.c:195 -1
     (nil))
(insn 2964 2963 2965 204 (set (reg:DI 1665)
        (high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 -1
     (nil))
(insn 2965 2964 2966 204 (set (reg:DI 1664)
        (lo_sum:DI (reg:DI 1665)
            (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)
        (nil)))
(insn 2966 2965 2967 204 (set (reg/f:DI 1663)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1664))) graph500.c:195 -1
     (nil))
(insn 2967 2966 2968 204 (set (mem:DF (reg/f:DI 1663) [1 MEM[symbol: bfs_time, index: _1361, offset: 0B]+0 S8 A64])
        (reg/v:DF 659 [ out ])) graph500.c:195 -1
     (nil))
(insn 2968 2967 2969 204 (set (reg:DI 1667)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:196 -1
     (nil))
(insn 2969 2968 2970 204 (set (reg/f:DI 1666)
        (lo_sum:DI (reg:DI 1667)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:196 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2970 2969 2971 204 (set (reg:SI 1668)
        (mem/c:SI (reg/f:DI 1666) [3 VERBOSE+0 S4 A32])) graph500.c:196 -1
     (nil))
(insn 2971 2970 2972 204 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1668)
            (const_int 0 [0]))) graph500.c:196 -1
     (nil))
(jump_insn 2972 2971 2973 204 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3847)
            (pc))) graph500.c:196 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 3847)
;;  succ:       205 [29.0%]  (FALLTHRU)
;;              324 [71.0%] 

;; basic block 205, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 204, next block 206, flags: (NEW, REACHABLE, RTL)
;;  pred:       204 [29.0%]  (FALLTHRU)
(note 2973 2972 2974 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2974 2973 2975 205 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:196 -1
     (nil))
(debug_insn 2975 2974 2976 205 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:196 -1
     (nil))
(insn 2976 2975 2977 205 (set (reg:DI 1670)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2977 2976 2978 205 (set (reg/f:DI 1669)
        (lo_sum:DI (reg:DI 1670)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
        (nil)))
(insn 2978 2977 2979 205 (set (reg:DI 1672)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 -1
     (nil))
(insn 2979 2978 2980 205 (set (reg/f:DI 1671)
        (lo_sum:DI (reg:DI 1672)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 2980 2979 2981 205 (set (reg:DI 1673)
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2981 2980 2982 205 (set (reg:DI 2 x2)
        (reg/f:DI 1669)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2982 2981 2983 205 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2983 2982 2984 205 (set (reg:DI 0 x0)
        (reg:DI 1673)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 2984 2983 2985 205 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2985 2984 2986 205 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 -1
     (nil))
(jump_insn 2986 2985 3849 205 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2994)
            (pc))) graph500.c:198 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2994)
;;  succ:       206 [0.0%]  (FALLTHRU)
;;              207 [100.0%] 

;; basic block 206, loop depth 0, count 0, freq 0
;;  prev block 205, next block 207, flags: (NEW, REACHABLE, RTL)
;;  pred:       205 [0.0%]  (FALLTHRU)
;;              324 [0.0%] 
(code_label 3849 2986 2987 206 186 "" [1 uses])
(note 2987 3849 2988 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 2988 2987 2989 206 (set (reg:DI 1675)
        (high:DI (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 -1
     (nil))
(insn 2989 2988 2990 206 (set (reg/f:DI 1674)
        (lo_sum:DI (reg:DI 1675)
            (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>)
        (nil)))
(insn 2990 2989 2991 206 (set (reg:DI 0 x0)
        (reg/f:DI 1674)) graph500.c:199 -1
     (nil))
(call_insn 2991 2990 2992 206 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:199 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(call_insn 2992 2991 2993 206 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 2993 2992 2994)
;; basic block 207, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 206, next block 208, flags: (NEW, REACHABLE, RTL)
;;  pred:       205 [100.0%] 
(code_label 2994 2993 2995 207 131 "" [1 uses])
(note 2995 2994 2996 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 2996 2995 2997 207 (set (reg:DI 1677)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:203 -1
     (nil))
(insn 2997 2996 2998 207 (set (reg/f:DI 1676)
        (lo_sum:DI (reg:DI 1677)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:203 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2998 2997 2999 207 (set (reg:SI 1678)
        (mem/c:SI (reg/f:DI 1676) [3 VERBOSE+0 S4 A32])) graph500.c:203 -1
     (nil))
(insn 2999 2998 3000 207 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1678)
            (const_int 0 [0]))) graph500.c:203 -1
     (nil))
(jump_insn 3000 2999 3001 207 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3004)
            (pc))) graph500.c:203 -1
     (int_list:REG_BR_PROB 9990 (nil))
 -> 3004)
;;  succ:       209 [99.9%] 
;;              208 [0.1%]  (FALLTHRU)

;; basic block 208, loop depth 1, count 0, freq 0
;;  prev block 207, next block 209, flags: (NEW, REACHABLE, RTL)
;;  pred:       207 [0.1%]  (FALLTHRU)
(note 3001 3000 3002 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3002 3001 3003 208 (set (pc)
        (label_ref 3018)) graph500.c:203 -1
     (nil)
 -> 3018)
;;  succ:       210 [100.0%] 

(barrier 3003 3002 3004)
;; basic block 209, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 208, next block 210, flags: (NEW, REACHABLE, RTL)
;;  pred:       207 [99.9%] 
(code_label 3004 3003 3005 209 132 "" [1 uses])
(note 3005 3004 3006 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3006 3005 3007 209 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:203 -1
     (nil))
(debug_insn 3007 3006 3008 209 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)) graph500.c:203 -1
     (nil))
(insn 3008 3007 3009 209 (set (reg:DI 1680)
        (high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3009 3008 3010 209 (set (reg/f:DI 1679)
        (lo_sum:DI (reg:DI 1680)
            (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
        (nil)))
(insn 3010 3009 3011 209 (set (reg:DI 1682)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:203 -1
     (nil))
(insn 3011 3010 3012 209 (set (reg/f:DI 1681)
        (lo_sum:DI (reg:DI 1682)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:203 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 3012 3011 3013 209 (set (reg:DI 1683)
        (mem/f/c:DI (reg/f:DI 1681) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3013 3012 3014 209 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3014 3013 3015 209 (set (reg:DI 2 x2)
        (reg/f:DI 1679)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3015 3014 3016 209 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3016 3015 3017 209 (set (reg:DI 0 x0)
        (reg:DI 1683)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 3017 3016 3018 209 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;;  succ:       210 [100.0%]  (FALLTHRU)

;; basic block 210, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 209, next block 211, flags: (NEW, REACHABLE, RTL)
;;  pred:       208 [100.0%] 
;;              209 [100.0%]  (FALLTHRU)
;;              325 [100.0%] 
(code_label 3018 3017 3019 210 133 "" [2 uses])
(note 3019 3018 3020 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 3020 3019 3021 210 (set (reg:DI 623 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 max_bfsvtx+0 S8 A128])) graph500.c:204 -1
     (nil))
(insn 3021 3020 3022 210 (set (reg:DI 1685)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))
(insn 3022 3021 3023 210 (set (reg/f:DI 1684)
        (lo_sum:DI (reg:DI 1685)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3023 3022 3024 210 (set (reg:DI 1686)
        (reg/f:DI 1684)) graph500.c:204 -1
     (nil))
(insn 3024 3023 3025 210 (set (reg/f:DI 1687)
        (plus:DI (reg/f:DI 1684)
            (const_int 112 [0x70]))) graph500.c:204 -1
     (nil))
(insn 3025 3024 3026 210 (set (reg:DI 624 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1687)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3026 3025 3027 210 (var_location:DI D#35 (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3027 3026 3028 210 (var_location:DI D#34 (mem/c:DI (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>) [4 nedge+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3028 3027 3029 210 (var_location:DI bfs_tree_in (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:204 -1
     (nil))
(debug_insn 3029 3028 3030 210 (var_location:DI max_bfsvtx (reg:DI 623 [ D.3798 ])) graph500.c:204 -1
     (nil))
(debug_insn 3030 3029 3031 210 (var_location:DI root (reg:DI 624 [ D.3798 ])) graph500.c:204 -1
     (nil))
(debug_insn 3031 3030 3032 210 (var_location:DI IJ_in (debug_expr:DI D#35)) graph500.c:204 -1
     (nil))
(debug_insn 3032 3031 3033 210 (var_location:DI nedge (debug_expr:DI D#34)) graph500.c:204 -1
     (nil))
(debug_insn 3033 3032 3034 210 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:83 -1
     (nil))
(debug_insn 3034 3033 3035 210 (var_location:DI IJ (debug_expr:DI D#35)) verify.c:84 -1
     (nil))
(insn 3035 3034 3036 210 (set (reg/v:DI 660 [ nv ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:89 -1
     (nil))
(debug_insn 3036 3035 3037 210 (var_location:DI nv (reg/v:DI 660 [ nv ])) verify.c:89 -1
     (nil))
(insn 3037 3036 3038 210 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 624 [ D.3798 ]))) verify.c:96 -1
     (nil))
(jump_insn 3038 3037 3039 210 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 3923)
;;  succ:       338 [4.0%] 
;;              211 [96.0%]  (FALLTHRU)

;; basic block 211, loop depth 1, count 0, freq 185, maybe hot
;;  prev block 210, next block 212, flags: (NEW, REACHABLE, RTL)
;;  pred:       210 [96.0%]  (FALLTHRU)
(note 3039 3038 3040 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 3040 3039 3041 211 (set (reg:DI 1688)
        (mem:DI (plus:DI (mult:DI (reg:DI 624 [ D.3798 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_638+0 S8 A64])) verify.c:96 -1
     (nil))
(insn 3041 3040 3042 211 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg:DI 1688))) verify.c:96 -1
     (nil))
(jump_insn 3042 3041 3043 211 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 -1
     (int_list:REG_BR_PROB 2078 (nil))
 -> 3923)
;;  succ:       338 [20.8%] 
;;              212 [79.2%]  (FALLTHRU)

;; basic block 212, loop depth 1, count 0, freq 147, maybe hot
;;  prev block 211, next block 213, flags: (NEW, REACHABLE, RTL)
;;  pred:       211 [79.2%]  (FALLTHRU)
(note 3043 3042 3044 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 3044 3043 3045 212 (set (reg:DI 1690)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))
(insn 3045 3044 3046 212 (set (reg/f:DI 1689)
        (lo_sum:DI (reg:DI 1690)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3046 3045 3047 212 (set (reg/f:DI 625 [ D.3803 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1689)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:204 -1
     (nil))
(insn 3047 3046 3048 212 (set (reg:DI 1692)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (nil))
(insn 3048 3047 3049 212 (set (reg/f:DI 1691)
        (lo_sum:DI (reg:DI 1692)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3049 3048 3050 212 (set (reg:DI 626 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1691)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3050 3049 3051 212 (var_location:SI err (const_int 0 [0])) verify.c:99 -1
     (nil))
(debug_insn 3051 3050 3052 212 (var_location:SI nedge_traversed (const_int 0 [0])) verify.c:100 -1
     (nil))
(insn 3052 3051 3053 212 (set (reg:DI 665 [ D.3802 ])
        (reg/v:DI 660 [ nv ])) verify.c:101 -1
     (nil))
(insn 3053 3052 3054 212 (set (reg:DI 666 [ D.3802 ])
        (ashift:DI (reg:DI 665 [ D.3802 ])
            (const_int 4 [0x4]))) verify.c:101 -1
     (nil))
(debug_insn 3054 3053 3055 212 (var_location:DI sz (reg:DI 666 [ D.3802 ])) verify.c:101 -1
     (nil))
(debug_insn 3055 3054 3056 212 (var_location:DI n (reg:DI 666 [ D.3802 ])) -1
     (nil))
(insn 3056 3055 3057 212 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) generator/utils.c:32 -1
     (nil))
(call_insn 3057 3056 3058 212 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 3058 3057 3059 212 (set (reg/f:DI 1693)
        (reg:DI 0 x0)) generator/utils.c:32 -1
     (expr_list:REG_NOALIAS (reg/f:DI 1693)
        (nil)))
(insn 3059 3058 3060 212 (set (reg/v/f:DI 746 [ seen_edge ])
        (reg/f:DI 1693)) generator/utils.c:32 -1
     (nil))
(debug_insn 3060 3059 3061 212 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) generator/utils.c:32 -1
     (nil))
(insn 3061 3060 3062 212 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 746 [ seen_edge ])
            (const_int 0 [0]))) generator/utils.c:33 -1
     (nil))
(jump_insn 3062 3061 3063 212 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3067)
            (pc))) generator/utils.c:33 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 3067)
;;  succ:       213 [0.0%]  (FALLTHRU)
;;              214 [100.0%] 

;; basic block 213, loop depth 0, count 0, freq 0
;;  prev block 212, next block 214, flags: (NEW, REACHABLE, RTL)
;;  pred:       212 [0.0%]  (FALLTHRU)
(note 3063 3062 3064 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 3064 3063 3065 213 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) -1
     (nil))
(call_insn/c/i 3065 3064 3066 213 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:      

(barrier 3066 3065 3067)
;; basic block 214, loop depth 1, count 0, freq 147, maybe hot
;;  prev block 213, next block 215, flags: (NEW, REACHABLE, RTL)
;;  pred:       212 [100.0%] 
(code_label 3067 3066 3068 214 135 "" [1 uses])
(note 3068 3067 3069 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3069 3068 3070 214 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 3070 3069 3071 214 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 3071 3070 3072 214 (var_location:DI sz (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
(debug_insn 3072 3071 3073 214 (var_location:DI seen_edge (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
(insn 3073 3072 3074 214 (set (reg:DI 1694 [ D.3802 ])
        (ashift:DI (reg:DI 665 [ D.3802 ])
            (const_int 3 [0x3]))) verify.c:102 -1
     (nil))
(insn 3074 3073 3075 214 (set (reg/v/f:DI 668 [ level ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1694 [ D.3802 ]))) verify.c:102 -1
     (nil))
(debug_insn 3075 3074 3076 214 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
(debug_insn 3076 3075 3077 214 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
(debug_insn 3077 3076 3078 214 (var_location:DI nv (reg/v:DI 660 [ nv ])) verify.c:102 -1
     (nil))
(debug_insn 3078 3077 3079 214 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:102 -1
     (nil))
(debug_insn 3079 3078 3080 214 (var_location:DI root (reg:DI 624 [ D.3798 ])) verify.c:102 -1
     (nil))
(debug_insn 3080 3079 3081 214 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3081 3080 3082 214 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:27 -1
     (nil))
(jump_insn 3082 3081 3083 214 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3416)
            (pc))) verify.c:27 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 3416)
;;  succ:       215 [91.0%]  (FALLTHRU)
;;              260 [9.0%] 

;; basic block 215, loop depth 1, count 0, freq 134, maybe hot
;;  prev block 214, next block 216, flags: (NEW, REACHABLE, RTL)
;;  pred:       214 [91.0%]  (FALLTHRU)
(note 3083 3082 3084 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 3084 3083 3085 215 (set (reg:DI 671 [ D.3810 ])
        (reg:DI 623 [ D.3798 ])) -1
     (nil))
(insn 3085 3084 3086 215 (set (reg:DI 670 [ niters.29 ])
        (plus:DI (reg:DI 671 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3086 3085 3087 215 (set (reg:DI 672 [ ivtmp.84 ])
        (reg/v/f:DI 668 [ level ])) -1
     (nil))
(insn 3087 3086 3088 215 (set (reg:DI 1695 [ D.3810 ])
        (and:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 15 [0xf]))) -1
     (nil))
(insn 3088 3087 3089 215 (set (reg:DI 1696 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1695 [ D.3810 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 3089 3088 3090 215 (set (reg:DI 1697 [ D.3810 ])
        (neg:DI (reg:DI 1696 [ D.3810 ]))) -1
     (nil))
(insn 3090 3089 3091 215 (set (reg:DI 1698 [ D.3810 ])
        (and:DI (reg:DI 1697 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3091 3090 3092 215 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1698 [ D.3810 ])
            (reg:DI 670 [ niters.29 ]))) -1
     (nil))
(insn 3092 3091 3093 215 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 1698 [ D.3810 ])
            (reg:DI 670 [ niters.29 ]))) -1
     (nil))
(insn 3093 3092 3094 215 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 670 [ niters.29 ])
            (const_int 3 [0x3]))) -1
     (nil))
(jump_insn 3094 3093 3095 215 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3096)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil))
 -> 3096)
;;  succ:       216 [66.7%]  (FALLTHRU)
;;              217 [33.3%] 

;; basic block 216, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 215, next block 217, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       215 [66.7%]  (FALLTHRU)
(note 3095 3094 228 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 228 3095 3096 216 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (reg:DI 670 [ niters.29 ])) verify.c:27 -1
     (nil))
;;  succ:       217 [100.0%]  (FALLTHRU)

;; basic block 217, loop depth 1, count 0, freq 134, maybe hot
;;  prev block 216, next block 218, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       216 [100.0%]  (FALLTHRU)
;;              215 [33.3%] 
(code_label 3096 228 3097 217 137 "" [1 uses])
(note 3097 3096 3098 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 3098 3097 3099 217 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 3099 3098 3100 217 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3994)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 3334 (nil))
 -> 3994)
;;  succ:       218 [66.7%]  (FALLTHRU)
;;              225 [33.3%] 

;; basic block 218, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 217, next block 219, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       217 [66.7%]  (FALLTHRU)
(note 3100 3099 3101 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3101 3100 3102 218 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3102 3101 3103 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 0 [0]))) verify.c:28 -1
     (nil))
(insn 3103 3102 3104 218 (set (reg:SI 1700)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))
(insn 3104 3103 3105 218 (set (reg:DI 1699 [ D.3809 ])
        (zero_extend:DI (reg:SI 1700))) verify.c:28 -1
     (nil))
(insn 3105 3104 3106 218 (set (reg:DI 1701 [ D.3798 ])
        (neg:DI (reg:DI 1699 [ D.3809 ]))) verify.c:28 -1
     (nil))
(insn 3106 3105 3107 218 (set (mem:DI (reg/v/f:DI 668 [ level ]) [4 *level_644+0 S8 A64])
        (reg:DI 1701 [ D.3798 ])) verify.c:28 -1
     (nil))
(debug_insn 3107 3106 3108 218 (var_location:DI k (const_int 1 [0x1])) verify.c:27 -1
     (nil))
(debug_insn 3108 3107 3109 218 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
(insn 3109 3108 3110 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 1 [0x1]))) -1
     (nil))
(jump_insn 3110 3109 3111 218 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3998)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 3998)
;;  succ:       219 [66.7%]  (FALLTHRU)
;;              221 [33.3%] 

;; basic block 219, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 218, next block 220, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       218 [66.7%]  (FALLTHRU)
(note 3111 3110 3112 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3112 3111 3113 219 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
(insn 3113 3112 3114 219 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:28 -1
     (nil))
(insn 3114 3113 3115 219 (set (reg:SI 1703)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))
(insn 3115 3114 3116 219 (set (reg:DI 1702 [ D.3809 ])
        (zero_extend:DI (reg:SI 1703))) verify.c:28 -1
     (nil))
(insn 3116 3115 3117 219 (set (reg:DI 1704 [ D.3798 ])
        (neg:DI (reg:DI 1702 [ D.3809 ]))) verify.c:28 -1
     (nil))
(insn 3117 3116 3118 219 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 8 [0x8])) [4 MEM[(int64_t *)level_644 + 8B]+0 S8 A64])
        (reg:DI 1704 [ D.3798 ])) verify.c:28 -1
     (nil))
(debug_insn 3118 3117 3119 219 (var_location:DI k (const_int 2 [0x2])) verify.c:27 -1
     (nil))
(debug_insn 3119 3118 3120 219 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
(insn 3120 3119 3121 219 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 3 [0x3]))) -1
     (nil))
(jump_insn 3121 3120 3122 219 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4002)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 4002)
;;  succ:       220 [66.7%]  (FALLTHRU)
;;              222 [33.3%] 

;; basic block 220, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 219, next block 221, flags: (NEW, REACHABLE, RTL)
;;  pred:       219 [66.7%]  (FALLTHRU)
(note 3122 3121 3123 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3123 3122 3124 220 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
(insn 3124 3123 3125 220 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 2 [0x2]))) verify.c:28 -1
     (nil))
(insn 3125 3124 3126 220 (set (reg:SI 1706)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))
(insn 3126 3125 3127 220 (set (reg:DI 1705 [ D.3809 ])
        (zero_extend:DI (reg:SI 1706))) verify.c:28 -1
     (nil))
(insn 3127 3126 3128 220 (set (reg:DI 1707 [ D.3798 ])
        (neg:DI (reg:DI 1705 [ D.3809 ]))) verify.c:28 -1
     (nil))
(insn 3128 3127 3129 220 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 16 [0x10])) [4 MEM[(int64_t *)level_644 + 16B]+0 S8 A64])
        (reg:DI 1707 [ D.3798 ])) verify.c:28 -1
     (nil))
(debug_insn 3129 3128 3130 220 (var_location:DI k (const_int 3 [0x3])) verify.c:27 -1
     (nil))
(debug_insn 3130 3129 229 220 (var_location:DI k (const_int 3 [0x3])) -1
     (nil))
(insn 229 3130 3995 220 (set (reg/v:DI 806 [ k ])
        (const_int 3 [0x3])) verify.c:27 -1
     (nil))
(jump_insn 3995 229 3996 220 (set (pc)
        (label_ref 3131)) -1
     (nil)
 -> 3131)
;;  succ:       223 [100.0%] 

(barrier 3996 3995 3998)
;; basic block 221, loop depth 1, count 0, freq 30
;;  prev block 220, next block 222, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       218 [33.3%] 
(code_label 3998 3996 3997 221 200 "" [1 uses])
(note 3997 3998 230 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 230 3997 3999 221 (set (reg/v:DI 806 [ k ])
        (const_int 1 [0x1])) verify.c:27 -1
     (nil))
(jump_insn 3999 230 4000 221 (set (pc)
        (label_ref 3131)) -1
     (nil)
 -> 3131)
;;  succ:       223 [100.0%] 

(barrier 4000 3999 4002)
;; basic block 222, loop depth 1, count 0, freq 30
;;  prev block 221, next block 223, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       219 [33.3%] 
(code_label 4002 4000 4001 222 201 "" [1 uses])
(note 4001 4002 231 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 231 4001 3131 222 (set (reg/v:DI 806 [ k ])
        (const_int 2 [0x2])) verify.c:27 -1
     (nil))
;;  succ:       223 [100.0%]  (FALLTHRU)

;; basic block 223, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 222, next block 224, flags: (NEW, REACHABLE, RTL)
;;  pred:       222 [100.0%]  (FALLTHRU)
;;              220 [100.0%] 
;;              221 [100.0%] 
(code_label 3131 231 3132 223 139 "" [2 uses])
(note 3132 3131 3133 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 3133 3132 3134 223 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))
(jump_insn 3134 3133 3990 223 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3192)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil))
 -> 3192)
;;  succ:       224 [66.7%]  (FALLTHRU)
;;              232 [33.3%] 

;; basic block 224, loop depth 1, count 0, freq 59, maybe hot
;;  prev block 223, next block 225, flags: (NEW, REACHABLE, RTL)
;;  pred:       223 [66.7%]  (FALLTHRU)
(note 3990 3134 3991 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3991 3990 3992 224 (set (pc)
        (label_ref 3135)) -1
     (nil)
 -> 3135)
;;  succ:       226 [100.0%] 

(barrier 3992 3991 3994)
;; basic block 225, loop depth 1, count 0, freq 45, maybe hot
;;  prev block 224, next block 226, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       217 [33.3%] 
(code_label 3994 3992 3993 225 199 "" [1 uses])
(note 3993 3994 232 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 232 3993 3135 225 (set (reg/v:DI 806 [ k ])
        (const_int 0 [0])) verify.c:27 -1
     (nil))
;;  succ:       226 [100.0%]  (FALLTHRU)

;; basic block 226, loop depth 1, count 0, freq 104, maybe hot
;;  prev block 225, next block 227, flags: (NEW, REACHABLE, RTL)
;;  pred:       225 [100.0%]  (FALLTHRU)
;;              224 [100.0%] 
(code_label 3135 232 3136 226 138 "" [1 uses])
(note 3136 3135 3137 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 3137 3136 3138 226 (set (reg:DI 754 [ niters.33 ])
        (minus:DI (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))
(insn 3138 3137 3139 226 (set (reg:DI 1708 [ D.3810 ])
        (plus:DI (reg:DI 754 [ niters.33 ])
            (const_int -2 [0xfffffffffffffffe]))) -1
     (nil))
(insn 3139 3138 3140 226 (set (reg:DI 1709 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1708 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3140 3139 3141 226 (set (reg:DI 753 [ bnd.34 ])
        (plus:DI (reg:DI 1709 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3141 3140 3142 226 (set (reg:DI 799 [ ratio_mult_vf.35 ])
        (ashift:DI (reg:DI 753 [ bnd.34 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3142 3141 3143 226 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 671 [ D.3810 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))
(jump_insn 3143 3142 3144 226 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3179)
            (pc))) -1
     (int_list:REG_BR_PROB 3334 (nil))
 -> 3179)
;;  succ:       227 [66.7%]  (FALLTHRU)
;;              230 [33.3%] 

;; basic block 227, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 226, next block 228, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       226 [66.7%]  (FALLTHRU)
(note 3144 3143 3145 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 3145 3144 3146 227 (set (reg:DI 1711 [ stmp_var_.37 ])
        (plus:DI (reg/v:DI 806 [ k ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3146 3145 3147 227 (set (reg:DI 1712)
        (reg/v:DI 806 [ k ])) -1
     (nil))
(insn 3147 3146 3148 227 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1712))
            (reg:V2DI 1710)
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3148 3147 3149 227 (set (reg:DI 1713)
        (reg:DI 1711 [ stmp_var_.37 ])) -1
     (nil))
(insn 3149 3148 3150 227 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1713))
            (reg:V2DI 1710)
            (const_int 2 [0x2]))) -1
     (nil))
(insn 3150 3149 3151 227 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 1710)) -1
     (nil))
(insn 3151 3150 3152 227 (set (reg:DI 1715)
        (reg:DI 624 [ D.3798 ])) -1
     (nil))
(insn 3152 3151 3153 227 (set (reg:V2DI 1714)
        (vec_duplicate:V2DI (reg:DI 1715))) -1
     (nil))
(insn 3153 3152 3154 227 (set (reg:V2DI 800 [ vect_cst_.42 ])
        (reg:V2DI 1714)) -1
     (nil))
(insn 3154 3153 3155 227 (set (reg:DI 1716 [ D.3802 ])
        (plus:DI (reg:DI 670 [ niters.29 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) -1
     (nil))
(insn 3155 3154 3156 227 (set (reg:DI 1717 [ D.3802 ])
        (ashift:DI (reg:DI 1716 [ D.3802 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 3156 3155 233 227 (set (reg/f:DI 782 [ vectp.48 ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1717 [ D.3802 ]))) -1
     (nil))
(insn 233 3156 3172 227 (set (reg:DI 776 [ D.3810 ])
        (const_int 0 [0])) verify.c:27 -1
     (nil))
;;  succ:       228 [100.0%]  (FALLTHRU)

;; basic block 228, loop depth 2, count 0, freq 345, maybe hot
;;  prev block 227, next block 229, flags: (NEW, REACHABLE, RTL)
;;  pred:       227 [100.0%]  (FALLTHRU)
;;              228 [80.0%]  (DFS_BACK)
(code_label 3172 233 3157 228 142 "" [1 uses])
(note 3157 3172 3158 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 3158 3157 3159 228 (set (reg:V2DI 1718)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 2 [0x2])
                (const_int 2 [0x2])
            ])
        (nil)))
(insn 3159 3158 3160 228 (set (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (plus:V2DI (reg:V2DI 770 [ vect_vec_iv_.40 ])
            (reg:V2DI 1718))) -1
     (nil))
(debug_insn 3160 3159 3161 228 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
(insn 3161 3160 3162 228 (set (reg:DI 1719 [ D.3805 ])
        (ashift:DI (reg:DI 776 [ D.3810 ])
            (const_int 4 [0x4]))) verify.c:28 -1
     (nil))
(insn 3162 3161 3163 228 (set (reg:V2DI 1721)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 1 [0x1])
                (const_int 1 [0x1])
            ])
        (nil)))
(insn 3163 3162 3164 228 (set (reg:V2DI 1722)
        (neg:V2DI (eq:V2DI (reg:V2DI 800 [ vect_cst_.42 ])
                (reg:V2DI 770 [ vect_vec_iv_.40 ])))) -1
     (nil))
(insn 3164 3163 3165 228 (set (reg:V2DI 1723)
        (const_vector:V2DI [
                (const_int 0 [0])
                (const_int 0 [0])
            ])) -1
     (nil))
(insn 3165 3164 3166 228 (set (reg:V2DI 1720 [ vect_patt_839.41 ])
        (xor:V2DI (and:V2DI (xor:V2DI (reg:V2DI 1721)
                    (reg:V2DI 1723))
                (reg:V2DI 1722))
            (reg:V2DI 1721))) -1
     (nil))
(insn 3166 3165 3167 228 (set (reg:V2DI 1724 [ vect__599.46 ])
        (neg:V2DI (reg:V2DI 1720 [ vect_patt_839.41 ]))) verify.c:28 -1
     (nil))
(insn 3167 3166 3168 228 (set (mem:V2DI (plus:DI (reg/f:DI 782 [ vectp.48 ])
                (reg:DI 1719 [ D.3805 ])) [4 MEM[base: vectp.48_1271, index: _743, offset: 0B]+0 S16 A128])
        (reg:V2DI 1724 [ vect__599.46 ])) verify.c:28 -1
     (nil))
(debug_insn 3168 3167 3169 228 (var_location:DI k (debug_expr:DI D#41)) verify.c:27 -1
     (nil))
(debug_insn 3169 3168 3170 228 (var_location:DI k (debug_expr:DI D#41)) -1
     (nil))
(insn 3170 3169 3171 228 (set (reg:DI 776 [ D.3810 ])
        (plus:DI (reg:DI 776 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3171 3170 3173 228 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 795 [ vect_vec_iv_.40 ])) -1
     (nil))
(insn 3173 3171 3174 228 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 753 [ bnd.34 ])
            (reg:DI 776 [ D.3810 ]))) -1
     (nil))
(jump_insn 3174 3173 3175 228 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3172)
            (pc))) -1
     (int_list:REG_BR_PROB 8000 (nil))
 -> 3172)
;;  succ:       228 [80.0%]  (DFS_BACK)
;;              229 [20.0%]  (FALLTHRU)

;; basic block 229, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 228, next block 230, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       228 [20.0%]  (FALLTHRU)
(note 3175 3174 3176 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 3176 3175 3177 229 (set (reg/v:DI 806 [ k ])
        (plus:DI (reg/v:DI 806 [ k ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))
(insn 3177 3176 3178 229 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 754 [ niters.33 ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))
(jump_insn 3178 3177 3179 229 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3192)
            (pc))) 7 {condjump}
     (int_list:REG_BR_PROB 3334 (nil))
 -> 3192)
;;  succ:       230 [66.7%]  (FALLTHRU)
;;              232 [33.3%] 

;; basic block 230, loop depth 1, count 0, freq 162, maybe hot
;;  prev block 229, next block 232, flags: (NEW, REACHABLE, RTL)
;;  pred:       229 [66.7%]  (FALLTHRU)
;;              226 [33.3%] 
(code_label 3179 3178 3180 230 141 "" [1 uses])
(note 3180 3179 3181 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3181 3180 3182 230 (var_location:DI k (reg/v:DI 806 [ k ])) -1
     (nil))
(insn 3182 3181 3183 230 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 806 [ k ]))) verify.c:28 -1
     (nil))
(insn 3183 3182 3184 230 (set (reg:SI 1726)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 -1
     (nil))
(insn 3184 3183 3185 230 (set (reg:DI 1725 [ D.3809 ])
        (zero_extend:DI (reg:SI 1726))) verify.c:28 -1
     (nil))
(insn 3185 3184 3186 230 (set (reg:DI 1727 [ D.3798 ])
        (neg:DI (reg:DI 1725 [ D.3809 ]))) verify.c:28 -1
     (nil))
(insn 3186 3185 3187 230 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 806 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 668 [ level ])) [4 *_1336+0 S8 A64])
        (reg:DI 1727 [ D.3798 ])) verify.c:28 -1
     (nil))
(debug_insn 3187 3186 3188 230 (var_location:DI D#44 (plus:DI (reg/v:DI 806 [ k ])
        (const_int 1 [0x1]))) verify.c:27 -1
     (nil))
(debug_insn 3188 3187 3189 230 (var_location:DI k (debug_expr:DI D#44)) verify.c:27 -1
     (nil))
(debug_insn 3189 3188 3192 230 (var_location:DI k (debug_expr:DI D#44)) -1
     (nil))
;;  succ:       232 [100.0%]  (FALLTHRU)

;; basic block 232, loop depth 1, count 0, freq 134, maybe hot
;;  prev block 230, next block 233, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       230 [100.0%]  (FALLTHRU)
;;              223 [33.3%] 
;;              229 [33.3%] 
(code_label 3192 3189 3193 232 140 "" [2 uses])
(note 3193 3192 3194 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 3194 3193 234 232 (set (reg:DI 673 [ D.3798 ])
        (reg:DI 670 [ niters.29 ])) -1
     (nil))
(insn 234 3194 235 232 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:27 -1
     (nil))
(insn 235 234 3410 232 (set (reg/v:DI 745 [ parent ])
        (const_int 0 [0])) verify.c:27 -1
     (nil))
;;  succ:       233 [100.0%]  (FALLTHRU)

;; basic block 233, loop depth 2, count 0, freq 6736, maybe hot
;;  prev block 232, next block 234, flags: (NEW, REACHABLE, RTL)
;;  pred:       232 [100.0%]  (FALLTHRU)
;;              258 [98.0%]  (DFS_BACK)
(code_label 3410 235 3195 233 157 "" [1 uses])
(note 3195 3410 3196 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3196 3195 3197 233 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
(debug_insn 3197 3196 3198 233 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3198 3197 3199 233 (set (reg/f:DI 724 [ D.3812 ])
        (reg:DI 672 [ ivtmp.84 ])) verify.c:32 -1
     (nil))
(insn 3199 3198 3200 233 (set (reg:DI 1728)
        (mem:DI (reg/f:DI 724 [ D.3812 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:32 -1
     (nil))
(insn 3200 3199 3201 233 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1728)
            (const_int 0 [0]))) verify.c:32 -1
     (nil))
(jump_insn 3201 3200 3202 233 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3402)
            (pc))) verify.c:32 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 3402)
;;  succ:       258 [73.0%] 
;;              234 [27.0%]  (FALLTHRU)

;; basic block 234, loop depth 2, count 0, freq 1819, maybe hot
;;  prev block 233, next block 235, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       233 [27.0%]  (FALLTHRU)
(note 3202 3201 3203 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3203 3202 3204 234 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:33 -1
     (nil))
(insn 3204 3203 3205 234 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:34 -1
     (nil))
(jump_insn 3205 3204 3206 234 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3402)
;;  succ:       235 [50.0%]  (FALLTHRU)
;;              258 [50.0%] 

;; basic block 235, loop depth 2, count 0, freq 909, maybe hot
;;  prev block 234, next block 236, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       234 [50.0%]  (FALLTHRU)
(note 3206 3205 3207 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3207 3206 3208 235 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:33 -1
     (nil))
(debug_insn 3208 3207 3209 235 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
(insn 3209 3208 3210 235 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 745 [ parent ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B]+0 S8 A64])) verify.c:34 -1
     (nil))
(insn 3210 3209 3211 235 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:34 -1
     (nil))
(insn 3211 3210 3212 235 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DNE 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 809 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:34 -1
     (nil))
(insn 3212 3211 3213 235 (set:SI (reg:SI 1730)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:34 -1
     (nil))
(insn 3213 3212 3214 235 (set (reg:QI 1729 [ D.3809 ])
        (subreg:QI (reg:SI 1730) 0)) verify.c:34 -1
     (nil))
(insn 3214 3213 3215 235 (set (reg:SI 1731)
        (zero_extend:SI (reg:QI 1729 [ D.3809 ]))) verify.c:34 -1
     (nil))
(insn 3215 3214 3216 235 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1731)
            (const_int 0 [0]))) verify.c:34 -1
     (nil))
(jump_insn 3216 3215 3217 235 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (int_list:REG_BR_PROB 2 (nil))
 -> 3402)
;;  succ:       236 [100.0%]  (FALLTHRU)
;;              258 [0.0%] 

;; basic block 236, loop depth 2, count 0, freq 909, maybe hot
;;  prev block 235, next block 237, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       235 [100.0%]  (FALLTHRU)
(note 3217 3216 236 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 236 3217 237 236 (set (reg:DI 462 [ D.3798 ])
        (reg:DI 809 [ D.3798 ])) verify.c:34 -1
     (nil))
(insn 237 236 238 236 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 745 [ parent ])) verify.c:34 -1
     (nil))
(insn 238 237 239 236 (set (reg/v:DI 609 [ nhop ])
        (const_int 0 [0])) verify.c:34 -1
     (nil))
(insn 239 238 3218 236 (set (reg/v:DI 581 [ parent ])
        (reg:DI 462 [ D.3798 ])) verify.c:34 -1
     (nil))
(jump_insn 3218 239 3219 236 (set (pc)
        (label_ref 3223)) verify.c:34 -1
     (nil)
 -> 3223)
;;  succ:       238 [100.0%] 

(barrier 3219 3218 3261)
;; basic block 237, loop depth 3, count 0, freq 8646, maybe hot
;;  prev block 236, next block 238, flags: (NEW, REACHABLE, RTL)
;;  pred:       241 [97.5%] 
(code_label 3261 3219 3220 237 149 "" [1 uses])
(note 3220 3261 3221 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 3221 3220 3222 237 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) -1
     (nil))
(insn 3222 3221 3223 237 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) -1
     (nil))
;;  succ:       238 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 238, loop depth 3, count 0, freq 9340, maybe hot
;; Invalid sum of incoming frequencies 9555, should be 9340
;;  prev block 237, next block 239, flags: (NEW, REACHABLE, RTL)
;;  pred:       236 [100.0%] 
;;              237 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 3223 3222 3224 238 147 "" [1 uses])
(note 3224 3223 3225 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3225 3224 3226 238 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3226 3225 3227 238 (var_location:DI parent (reg/v:DI 456 [ parent ])) -1
     (nil))
(debug_insn 3227 3226 3228 238 (var_location:DI D#28 (mem:DI (debug_expr:DI D#40) [0 +0 S8 A64])) verify.c:39 -1
     (nil))
(insn 3228 3227 3229 238 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 -1
     (nil))
(jump_insn 3229 3228 3230 238 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) verify.c:39 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 3245)
;;  succ:       239 [0.0%]  (FALLTHRU)
;;              240 [100.0%] 

;; basic block 239, loop depth 0, count 0, freq 4
;;  prev block 238, next block 240, flags: (NEW, REACHABLE, RTL)
;;  pred:       238 [0.0%]  (FALLTHRU)
(note 3230 3229 3231 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 3231 3230 3232 239 (set (reg:DI 1733)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 -1
     (nil))
(insn 3232 3231 3233 239 (set (reg/f:DI 1732)
        (lo_sum:DI (reg:DI 1733)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 3233 3232 3234 239 (set (reg:DI 1734)
        (reg/f:DI 1732)) verify.c:39 -1
     (nil))
(insn 3234 3233 3235 239 (set (reg/f:DI 1735)
        (plus:DI (reg/f:DI 1732)
            (const_int 48 [0x30]))) verify.c:39 -1
     (nil))
(insn 3235 3234 3236 239 (set (reg:DI 1737)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 -1
     (nil))
(insn 3236 3235 3237 239 (set (reg/f:DI 1736)
        (lo_sum:DI (reg:DI 1737)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))
(insn 3237 3236 3238 239 (set (reg:DI 1739)
        (high:DI (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 -1
     (nil))
(insn 3238 3237 3239 239 (set (reg/f:DI 1738)
        (lo_sum:DI (reg:DI 1739)
            (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>)
        (nil)))
(insn 3239 3238 3240 239 (set (reg:DI 3 x3)
        (reg/f:DI 1735)) verify.c:39 -1
     (nil))
(insn 3240 3239 3241 239 (set (reg:SI 2 x2)
        (const_int 39 [0x27])) verify.c:39 -1
     (nil))
(insn 3241 3240 3242 239 (set (reg:DI 1 x1)
        (reg/f:DI 1736)) verify.c:39 -1
     (nil))
(insn 3242 3241 3243 239 (set (reg:DI 0 x0)
        (reg/f:DI 1738)) verify.c:39 -1
     (nil))
(call_insn 3243 3242 3244 239 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 3244 3243 3245)
;; basic block 240, loop depth 3, count 0, freq 9336, maybe hot
;;  prev block 239, next block 241, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       238 [100.0%] 
(code_label 3245 3244 3246 240 148 "" [1 uses])
(note 3246 3245 3247 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3247 3246 3248 240 (var_location:DI parent (debug_expr:DI D#28)) verify.c:40 -1
     (nil))
(insn 3248 3247 3249 240 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 -1
     (nil))
(debug_insn 3249 3248 3250 240 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) verify.c:41 -1
     (nil))
(debug_insn 3250 3249 3251 240 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3251 3250 3252 240 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
(insn 3252 3251 3253 240 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 -1
     (nil))
(jump_insn 3253 3252 3254 240 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4004)
            (pc))) verify.c:38 7 {condjump}
     (int_list:REG_BR_PROB 241 (nil))
 -> 4004)
;;  succ:       241 [97.6%]  (FALLTHRU)
;;              310 [2.4%] 

;; basic block 241, loop depth 3, count 0, freq 8866, maybe hot
;; Invalid sum of incoming frequencies 9111, should be 8866
;;  prev block 240, next block 242, flags: (NEW, REACHABLE, RTL)
;;  pred:       240 [97.6%]  (FALLTHRU)
(note 3254 3253 3255 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3255 3254 3256 241 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3256 3255 3257 241 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
(debug_insn 3257 3256 3258 241 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3258 3257 3259 241 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
(insn 3259 3258 3260 241 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 -1
     (nil))
(insn 3260 3259 3262 241 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 -1
     (nil))
(insn 3262 3260 3263 241 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 -1
     (nil))
(insn 3263 3262 3264 241 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 -1
     (nil))
(insn 3264 3263 3265 241 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 -1
     (nil))
(insn 3265 3264 3266 241 (set (reg:QI 1740 [ D.3809 ])
        (subreg:QI (reg:SI 1741) 0)) verify.c:38 -1
     (nil))
(insn 3266 3265 3267 241 (set (reg:SI 1742)
        (zero_extend:SI (reg:QI 1740 [ D.3809 ]))) verify.c:38 -1
     (nil))
(insn 3267 3266 3268 241 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742)
            (const_int 0 [0]))) verify.c:38 -1
     (nil))
(jump_insn 3268 3267 3269 241 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 -1
     (int_list:REG_BR_PROB 9752 (nil))
 -> 3261)
;;  succ:       237 [97.5%] 
;;              242 [2.5%]  (FALLTHRU)

;; basic block 242, loop depth 2, count 0, freq 482, maybe hot
;; Invalid sum of incoming frequencies 220, should be 482
;;  prev block 241, next block 243, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       241 [2.5%]  (FALLTHRU)
(note 3269 3268 3270 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3270 3269 3271 242 (var_location:QI D#49 (le:QI (reg/v:DI 660 [ nv ])
        (reg/v:DI 609 [ nhop ]))) verify.c:43 -1
     (nil))
(debug_insn 3271 3270 3272 242 (var_location:SI D#48 (zero_extend:SI (debug_expr:QI D#49))) verify.c:43 -1
     (nil))
(debug_insn 3272 3271 3273 242 (var_location:SI D#47 (neg:SI (debug_expr:SI D#48))) verify.c:43 -1
     (nil))
(debug_insn 3273 3272 3274 242 (var_location:SI terr (debug_expr:SI D#47)) -1
     (nil))
(debug_insn 3274 3273 3275 242 (var_location:SI terr (debug_expr:SI D#47)) -1
     (nil))
(insn 3275 3274 3276 242 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (reg/v:DI 609 [ nhop ]))) verify.c:46 -1
     (nil))
(jump_insn 3276 3275 3277 242 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4008)
            (pc))) verify.c:46 7 {condjump}
     (int_list:REG_BR_PROB 3154 (nil))
 -> 4008)
;;  succ:       243 [68.5%]  (FALLTHRU)
;;              311 [31.5%] 

;; basic block 243, loop depth 2, count 0, freq 330, maybe hot
;;  prev block 242, next block 244, flags: (NEW, REACHABLE, RTL)
;;  pred:       242 [68.5%]  (FALLTHRU)
(note 3277 3276 3278 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 3278 3277 3279 243 (set (reg/v:DI 733 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (reg:DI 731 [ D.3798 ]))) verify.c:49 -1
     (nil))
(debug_insn 3279 3278 3280 243 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) verify.c:49 -1
     (nil))
(debug_insn 3280 3279 3281 243 (var_location:DI parent (reg/v:DI 745 [ parent ])) verify.c:50 -1
     (nil))
(debug_insn 3281 3280 3282 243 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
(debug_insn 3282 3281 3283 243 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3283 3282 3284 243 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 733 [ nhop ])
            (const_int 0 [0]))) verify.c:52 -1
     (nil))
(jump_insn 3284 3283 3285 243 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 3288)
;;  succ:       245 [0.0%] 
;;              244 [100.0%]  (FALLTHRU)

;; basic block 244, loop depth 2, count 0, freq 330, maybe hot
;;  prev block 243, next block 245, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       243 [100.0%]  (FALLTHRU)
(note 3285 3284 240 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 240 3285 241 244 (set (reg:DI 805 [ D.3798 ])
        (reg:DI 809 [ D.3798 ])) verify.c:52 -1
     (nil))
(insn 241 240 3286 244 (set (reg/f:DI 461 [ D.3812 ])
        (reg/f:DI 724 [ D.3812 ])) verify.c:52 -1
     (nil))
(jump_insn 3286 241 3287 244 (set (pc)
        (label_ref 3309)) verify.c:52 -1
     (nil)
 -> 3309)
;;  succ:       248 [100.0%] 

(barrier 3287 3286 3288)
;; basic block 245, loop depth 0, count 0, freq 3
;;  prev block 244, next block 246, flags: (NEW, REACHABLE, RTL)
;;  pred:       243 [0.0%] 
;;              246 [0.0%] 
(code_label 3288 3287 3289 245 150 "" [2 uses])
(note 3289 3288 3290 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 3290 3289 3291 245 (set (reg:DI 1744)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 -1
     (nil))
(insn 3291 3290 3292 245 (set (reg/f:DI 1743)
        (lo_sum:DI (reg:DI 1744)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 3292 3291 3293 245 (set (reg:DI 1745)
        (reg/f:DI 1743)) verify.c:52 -1
     (nil))
(insn 3293 3292 3294 245 (set (reg/f:DI 1746)
        (plus:DI (reg/f:DI 1743)
            (const_int 48 [0x30]))) verify.c:52 -1
     (nil))
(insn 3294 3293 3295 245 (set (reg:DI 1748)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 -1
     (nil))
(insn 3295 3294 3296 245 (set (reg/f:DI 1747)
        (lo_sum:DI (reg:DI 1748)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))
(insn 3296 3295 3297 245 (set (reg:DI 1750)
        (high:DI (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 -1
     (nil))
(insn 3297 3296 3298 245 (set (reg/f:DI 1749)
        (lo_sum:DI (reg:DI 1750)
            (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>)
        (nil)))
(insn 3298 3297 3299 245 (set (reg:DI 3 x3)
        (reg/f:DI 1746)) verify.c:52 -1
     (nil))
(insn 3299 3298 3300 245 (set (reg:SI 2 x2)
        (const_int 52 [0x34])) verify.c:52 -1
     (nil))
(insn 3300 3299 3301 245 (set (reg:DI 1 x1)
        (reg/f:DI 1747)) verify.c:52 -1
     (nil))
(insn 3301 3300 3302 245 (set (reg:DI 0 x0)
        (reg/f:DI 1749)) verify.c:52 -1
     (nil))
(call_insn 3302 3301 3303 245 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:52 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 3303 3302 3323)
;; basic block 246, loop depth 3, count 0, freq 6632, maybe hot
;;  prev block 245, next block 247, flags: (NEW, REACHABLE, RTL)
;;  pred:       248 [95.5%] 
(code_label 3323 3303 3304 246 152 "" [1 uses])
(note 3304 3323 3305 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 3305 3304 3306 246 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 -1
     (nil))
(jump_insn 3306 3305 3307 246 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 3288)
;;  succ:       245 [0.0%] 
;;              247 [100.0%]  (FALLTHRU)

;; basic block 247, loop depth 3, count 0, freq 6629, maybe hot
;;  prev block 246, next block 248, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       246 [100.0%]  (FALLTHRU)
(note 3307 3306 3308 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 3308 3307 242 247 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) -1
     (nil))
(insn 242 3308 3309 247 (set (reg/v:DI 733 [ nhop ])
        (reg/v:DI 734 [ nhop ])) verify.c:52 -1
     (nil))
;;  succ:       248 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 248, loop depth 3, count 0, freq 6944, maybe hot
;;  prev block 247, next block 249, flags: (NEW, REACHABLE, RTL)
;;  pred:       244 [100.0%] 
;;              247 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 3309 242 3310 248 151 "" [1 uses])
(note 3310 3309 3311 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3311 3310 3312 248 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
(debug_insn 3312 3311 3313 248 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3313 3312 3314 248 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 -1
     (nil))
(debug_insn 3314 3313 3315 248 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) verify.c:53 -1
     (nil))
(insn 3315 3314 3316 248 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 -1
     (nil))
(debug_insn 3316 3315 3317 248 (var_location:DI D#27 (mem:DI (debug_expr:DI D#39) [0 +0 S8 A64])) verify.c:54 -1
     (nil))
(debug_insn 3317 3316 3318 248 (var_location:DI parent (debug_expr:DI D#27)) verify.c:54 -1
     (nil))
(debug_insn 3318 3317 3319 248 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) -1
     (nil))
(debug_insn 3319 3318 3320 248 (var_location:DI parent (debug_expr:DI D#27)) -1
     (nil))
(insn 3320 3319 3321 248 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 -1
     (nil))
(insn 3321 3320 3322 248 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 -1
     (nil))
(insn 3322 3321 3324 248 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 -1
     (nil))
(insn 3324 3322 3325 248 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 -1
     (nil))
(jump_insn 3325 3324 3326 248 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 3323)
;;  succ:       246 [95.5%] 
;;              249 [4.5%]  (FALLTHRU)

;; basic block 249, loop depth 2, count 0, freq 327, maybe hot
;;  prev block 248, next block 250, flags: (NEW, REACHABLE, RTL)
;;  pred:       248 [4.5%]  (FALLTHRU)
(note 3326 3325 3327 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 3327 3326 3328 249 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (reg:DI 737 [ D.3798 ]))) verify.c:56 -1
     (nil))
(jump_insn 3328 3327 3329 249 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3344)
            (pc))) verify.c:56 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 3344)
;;  succ:       250 [0.0%]  (FALLTHRU)
;;              251 [100.0%] 

;; basic block 250, loop depth 0, count 0, freq 0
;;  prev block 249, next block 251, flags: (NEW, REACHABLE, RTL)
;;  pred:       249 [0.0%]  (FALLTHRU)
(note 3329 3328 3330 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 3330 3329 3331 250 (set (reg:DI 1752)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 -1
     (nil))
(insn 3331 3330 3332 250 (set (reg/f:DI 1751)
        (lo_sum:DI (reg:DI 1752)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 3332 3331 3333 250 (set (reg:DI 1753)
        (reg/f:DI 1751)) verify.c:56 -1
     (nil))
(insn 3333 3332 3334 250 (set (reg/f:DI 1754)
        (plus:DI (reg/f:DI 1751)
            (const_int 48 [0x30]))) verify.c:56 -1
     (nil))
(insn 3334 3333 3335 250 (set (reg:DI 1756)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 -1
     (nil))
(insn 3335 3334 3336 250 (set (reg/f:DI 1755)
        (lo_sum:DI (reg:DI 1756)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))
(insn 3336 3335 3337 250 (set (reg:DI 1758)
        (high:DI (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 -1
     (nil))
(insn 3337 3336 3338 250 (set (reg/f:DI 1757)
        (lo_sum:DI (reg:DI 1758)
            (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>)
        (nil)))
(insn 3338 3337 3339 250 (set (reg:DI 3 x3)
        (reg/f:DI 1754)) verify.c:56 -1
     (nil))
(insn 3339 3338 3340 250 (set (reg:SI 2 x2)
        (const_int 56 [0x38])) verify.c:56 -1
     (nil))
(insn 3340 3339 3341 250 (set (reg:DI 1 x1)
        (reg/f:DI 1755)) verify.c:56 -1
     (nil))
(insn 3341 3340 3342 250 (set (reg:DI 0 x0)
        (reg/f:DI 1757)) verify.c:56 -1
     (nil))
(call_insn 3342 3341 3343 250 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:56 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 3343 3342 3344)
;; basic block 251, loop depth 2, count 0, freq 327, maybe hot
;;  prev block 250, next block 252, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       249 [100.0%] 
(code_label 3344 3343 3345 251 153 "" [1 uses])
(note 3345 3344 3346 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3346 3345 3347 251 (var_location:DI nhop (const_int 0 [0])) verify.c:60 -1
     (nil))
(debug_insn 3347 3346 3348 251 (var_location:DI parent (reg/v:DI 745 [ parent ])) verify.c:61 -1
     (nil))
(insn 3348 3347 3349 251 (set (reg/v:DI 738 [ lastlvl ])
        (mem:DI (reg/f:DI 724 [ D.3812 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:62 -1
     (nil))
(debug_insn 3349 3348 3350 251 (var_location:DI D#23 (plus:DI (reg/v:DI 738 [ lastlvl ])
        (const_int 1 [0x1]))) verify.c:62 -1
     (nil))
(debug_insn 3350 3349 3351 251 (var_location:DI lastlvl (debug_expr:DI D#23)) verify.c:62 -1
     (nil))
(debug_insn 3351 3350 3352 251 (var_location:DI lastlvl (debug_expr:DI D#23)) -1
     (nil))
(debug_insn 3352 3351 3353 251 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3353 3352 3354 251 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3354 3353 3355 251 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 738 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 -1
     (nil))
(jump_insn 3355 3354 3356 251 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:63 7 {condjump}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3402)
;;  succ:       252 [95.5%]  (FALLTHRU)
;;              258 [4.5%] 

;; basic block 252, loop depth 2, count 0, freq 312, maybe hot
;;  prev block 251, next block 253, flags: (NEW, REACHABLE, RTL)
;;  pred:       251 [95.5%]  (FALLTHRU)
(note 3356 3355 3357 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3357 3356 3358 252 (set (pc)
        (label_ref 3383)) verify.c:63 -1
     (nil)
 -> 3383)
;;  succ:       256 [100.0%] 

(barrier 3358 3357 3396)
;; basic block 253, loop depth 3, count 0, freq 6572, maybe hot
;;  prev block 252, next block 254, flags: (NEW, REACHABLE, RTL)
;;  pred:       256 [95.5%] 
(code_label 3396 3358 3359 253 156 "" [1 uses])
(note 3359 3396 3360 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 3360 3359 3361 253 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 -1
     (nil))
(insn 3361 3360 3362 253 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 -1
     (nil))
(jump_insn 3362 3361 3363 253 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3367)
            (pc))) verify.c:64 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 3367)
;;  succ:       255 [0.0%] 
;;              254 [100.0%]  (FALLTHRU)

;; basic block 254, loop depth 3, count 0, freq 6569, maybe hot
;;  prev block 253, next block 255, flags: (NEW, REACHABLE, RTL)
;;  pred:       253 [100.0%]  (FALLTHRU)
(note 3363 3362 3364 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 3364 3363 243 254 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) -1
     (nil))
(insn 243 3364 3365 254 (set (reg/v:DI 738 [ lastlvl ])
        (reg/v:DI 739 [ lastlvl ])) verify.c:64 -1
     (nil))
(jump_insn 3365 243 3366 254 (set (pc)
        (label_ref 3383)) -1
     (nil)
 -> 3383)
;;  succ:       256 [100.0%]  (DFS_BACK)

(barrier 3366 3365 3367)
;; basic block 255, loop depth 0, count 0, freq 3
;;  prev block 254, next block 256, flags: (NEW, REACHABLE, RTL)
;;  pred:       253 [0.0%] 
(code_label 3367 3366 3368 255 155 "" [1 uses])
(note 3368 3367 3369 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 3369 3368 3370 255 (set (reg:DI 1761)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 -1
     (nil))
(insn 3370 3369 3371 255 (set (reg/f:DI 1760)
        (lo_sum:DI (reg:DI 1761)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
        (nil)))
(insn 3371 3370 3372 255 (set (reg:DI 1762)
        (reg/f:DI 1760)) verify.c:64 -1
     (nil))
(insn 3372 3371 3373 255 (set (reg/f:DI 1763)
        (plus:DI (reg/f:DI 1760)
            (const_int 48 [0x30]))) verify.c:64 -1
     (nil))
(insn 3373 3372 3374 255 (set (reg:DI 1765)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 -1
     (nil))
(insn 3374 3373 3375 255 (set (reg/f:DI 1764)
        (lo_sum:DI (reg:DI 1765)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
        (nil)))
(insn 3375 3374 3376 255 (set (reg:DI 1767)
        (high:DI (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 -1
     (nil))
(insn 3376 3375 3377 255 (set (reg/f:DI 1766)
        (lo_sum:DI (reg:DI 1767)
            (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>)
        (nil)))
(insn 3377 3376 3378 255 (set (reg:DI 3 x3)
        (reg/f:DI 1763)) verify.c:64 -1
     (nil))
(insn 3378 3377 3379 255 (set (reg:SI 2 x2)
        (const_int 64 [0x40])) verify.c:64 -1
     (nil))
(insn 3379 3378 3380 255 (set (reg:DI 1 x1)
        (reg/f:DI 1764)) verify.c:64 -1
     (nil))
(insn 3380 3379 3381 255 (set (reg:DI 0 x0)
        (reg/f:DI 1766)) verify.c:64 -1
     (nil))
(call_insn 3381 3380 3382 255 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:64 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      

(barrier 3382 3381 3383)
;; basic block 256, loop depth 3, count 0, freq 6883, maybe hot
;;  prev block 255, next block 257, flags: (NEW, REACHABLE, RTL)
;;  pred:       252 [100.0%] 
;;              254 [100.0%]  (DFS_BACK)
(code_label 3383 3382 3384 256 154 "" [2 uses])
(note 3384 3383 3385 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3385 3384 3386 256 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3386 3385 3387 256 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(debug_insn 3387 3386 3388 256 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) verify.c:65 -1
     (nil))
(debug_insn 3388 3387 3389 256 (var_location:DI D#26 (mem:DI (debug_expr:DI D#38) [0 +0 S8 A64])) verify.c:66 -1
     (nil))
(debug_insn 3389 3388 3390 256 (var_location:DI parent (debug_expr:DI D#26)) verify.c:66 -1
     (nil))
(debug_insn 3390 3389 3391 256 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:67 -1
     (nil))
(debug_insn 3391 3390 3392 256 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) -1
     (nil))
(debug_insn 3392 3391 3393 256 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3393 3392 3394 256 (var_location:DI parent (debug_expr:DI D#26)) -1
     (nil))
(insn 3394 3393 3395 256 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 -1
     (nil))
(insn 3395 3394 3397 256 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 -1
     (nil))
(insn 3397 3395 3398 256 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 -1
     (nil))
(jump_insn 3398 3397 3401 256 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 3396)
;;  succ:       253 [95.5%] 
;;              257 [4.5%]  (FALLTHRU)

;; basic block 257, loop depth 2, count 0, freq 310, maybe hot
;;  prev block 256, next block 258, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       256 [4.5%]  (FALLTHRU)
(note 3401 3398 3402 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
;;  succ:       258 [100.0%]  (FALLTHRU)

;; basic block 258, loop depth 2, count 0, freq 6729, maybe hot
;; Invalid sum of incoming frequencies 6529, should be 6729
;;  prev block 257, next block 259, flags: (NEW, REACHABLE, RTL)
;;  pred:       233 [73.0%] 
;;              257 [100.0%]  (FALLTHRU)
;;              311 [100.0%] 
;;              234 [50.0%] 
;;              235 [0.0%] 
;;              251 [4.5%] 
;;              310 [100.0%] 
(code_label 3402 3401 3403 258 144 "" [6 uses])
(note 3403 3402 3404 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3404 3403 3405 258 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3405 3404 3406 258 (set (reg/v:DI 745 [ parent ])
        (plus:DI (reg/v:DI 745 [ parent ])
            (const_int 1 [0x1]))) verify.c:31 -1
     (nil))
(debug_insn 3406 3405 3407 258 (var_location:DI k (reg/v:DI 745 [ parent ])) verify.c:31 -1
     (nil))
(debug_insn 3407 3406 3408 258 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
(debug_insn 3408 3407 3409 258 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3409 3408 3411 258 (set (reg:DI 672 [ ivtmp.84 ])
        (plus:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 8 [0x8]))) -1
     (nil))
(insn 3411 3409 3412 258 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 673 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:31 -1
     (nil))
(jump_insn 3412 3411 3415 258 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3410)
            (pc))) verify.c:31 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 3410)
;;  succ:       233 [98.0%]  (DFS_BACK)
;;              259 [2.0%]  (FALLTHRU)

;; basic block 259, loop depth 1, count 0, freq 135, maybe hot
;;  prev block 258, next block 260, flags: (NEW, REACHABLE, RTL)
;;  pred:       258 [2.0%]  (FALLTHRU)
(note 3415 3412 3413 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3413 3415 3414 259 (set (pc)
        (label_ref 3856)) verify.c:31 -1
     (nil)
 -> 3856)
;;  succ:       326 [100.0%] 

(barrier 3414 3413 3416)
;; basic block 260, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 259, next block 261, flags: (NEW, REACHABLE, RTL)
;;  pred:       214 [9.0%] 
;;              262 [100.0%] 
(code_label 3416 3414 3417 260 136 "" [2 uses])
(note 3417 3416 3418 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3418 3417 3419 260 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3419 3418 3420 260 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3420 3419 3421 260 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3421 3420 3422 260 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 3422 3421 3423 260 (set (reg:DI 763 [ D.3798 ])
        (ashift:DI (reg:DI 626 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:117 -1
     (nil))
(insn 3423 3422 3424 260 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 763 [ D.3798 ])
            (const_int 0 [0]))) verify.c:117 -1
     (nil))
(jump_insn 3424 3423 3427 260 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3464)
            (pc))) verify.c:117 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 3464)
;;  succ:       263 [91.0%] 
;;              261 [9.0%]  (FALLTHRU)

;; basic block 261, loop depth 1, count 0, freq 6
;;  prev block 260, next block 262, flags: (NEW, REACHABLE, RTL)
;;  pred:       260 [9.0%]  (FALLTHRU)
(note 3427 3424 3425 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3425 3427 3426 261 (set (pc)
        (label_ref 3912)) verify.c:117 -1
     (nil)
 -> 3912)
;;  succ:       336 [100.0%] 

(barrier 3426 3425 3871)
;; basic block 262, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 261, next block 263, flags: (NEW, REACHABLE, RTL)
;;  pred:       327 [100.0%] 
(code_label 3871 3426 3428 262 189 "" [1 uses])
(note 3428 3871 3429 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3429 3428 3430 262 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3430 3429 3431 262 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3431 3430 3432 262 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3432 3431 3433 262 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3433 3432 3434 262 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3434 3433 3435 262 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3435 3434 3436 262 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3436 3435 3437 262 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3437 3436 3438 262 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3438 3437 3439 262 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3439 3438 3440 262 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3440 3439 3441 262 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3441 3440 3442 262 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3442 3441 3443 262 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3443 3442 3444 262 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3444 3443 3445 262 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3445 3444 3446 262 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3446 3445 3447 262 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3447 3446 3448 262 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3448 3447 3449 262 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3449 3448 3450 262 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3450 3449 3451 262 (set (reg:DI 1769)
        (const_int 0 [0])) -1
     (nil))
(insn 3451 3450 3452 262 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 3452 3451 3453 262 (set (reg:DI 1768 [ D.3798 ])
        (if_then_else:DI (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 623 [ D.3798 ])
            (reg:DI 1769))) -1
     (nil))
(insn 3453 3452 3454 262 (set (reg:DI 1770 [ D.3805 ])
        (plus:DI (reg:DI 1768 [ D.3798 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3454 3453 3455 262 (set (reg:DI 1771 [ D.3805 ])
        (ashift:DI (reg:DI 1770 [ D.3805 ])
            (const_int 3 [0x3]))) -1
     (nil))
(insn 3455 3454 3456 262 (set (reg:DI 1772)
        (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3456 3455 3457 262 (set (reg:DI 1773)
        (reg:DI 1771 [ D.3805 ])) -1
     (nil))
(insn 3457 3456 3458 262 (set (reg:DI 2 x2)
        (reg:DI 1773)) -1
     (nil))
(insn 3458 3457 3459 262 (set (reg:SI 1 x1)
        (const_int 0 [0])) -1
     (nil))
(insn 3459 3458 3460 262 (set (reg:DI 0 x0)
        (reg:DI 1772)) -1
     (nil))
(call_insn 3460 3459 3461 262 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>) [0 memset S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 3461 3460 3462 262 (set (reg:DI 1774)
        (reg:DI 0 x0)) -1
     (nil))
(jump_insn 3462 3461 3463 262 (set (pc)
        (label_ref 3416)) -1
     (nil)
 -> 3416)
;;  succ:       260 [100.0%] 

(barrier 3463 3462 3464)
;; basic block 263, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 262, next block 264, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       260 [91.0%] 
(code_label 3464 3463 3465 263 159 "" [1 uses])
(note 3465 3464 3466 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 3466 3465 3467 263 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (const_int 8 [0x8]))) -1
     (nil))
(insn 3467 3466 3468 263 (set (reg:DI 1775 [ D.3810 ])
        (plus:DI (reg:DI 763 [ D.3798 ])
            (const_int -1 [0xffffffffffffffff]))) -1
     (nil))
(insn 3468 3467 3469 263 (set (reg:DI 1776 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1775 [ D.3810 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3469 3468 3470 263 (set (reg:DI 1777 [ D.3810 ])
        (ashift:DI (reg:DI 1776 [ D.3810 ])
            (const_int 4 [0x4]))) -1
     (nil))
(insn 3470 3469 3471 263 (set (reg:DI 1778 [ D.3805 ])
        (plus:DI (reg:DI 1777 [ D.3810 ])
            (const_int 24 [0x18]))) -1
     (nil))
(insn 3471 3470 244 263 (set (reg:DI 720 [ D.3810 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (reg:DI 1778 [ D.3805 ]))) -1
     (nil))
(insn 244 3471 245 263 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:117 -1
     (nil))
(insn 245 244 3573 263 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:117 -1
     (nil))
;;  succ:       264 [100.0%]  (FALLTHRU)

;; basic block 264, loop depth 2, count 0, freq 695, maybe hot
;;  prev block 263, next block 265, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       263 [100.0%]  (FALLTHRU)
;;              281 [91.0%]  (DFS_BACK)
(code_label 3573 245 3472 264 170 "" [1 uses])
(note 3472 3573 3473 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3473 3472 3474 264 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3474 3473 3475 264 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3475 3474 3476 264 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3476 3475 3477 264 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3477 3476 3478 264 (set (reg/f:DI 816 [ D.3806 ])
        (reg:DI 708 [ ivtmp.64 ])) -1
     (nil))
(insn 3478 3477 3479 264 (set (reg/v:DI 674 [ i ])
        (mem:DI (plus:DI (reg/f:DI 816 [ D.3806 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _1398, offset: -8B]+0 S8 A64])) verify.c:118 -1
     (nil))
(debug_insn 3479 3478 3480 264 (var_location:DI i (reg/v:DI 674 [ i ])) verify.c:118 -1
     (nil))
(insn 3480 3479 3481 264 (set (reg/v:DI 675 [ j ])
        (mem:DI (reg/f:DI 816 [ D.3806 ]) [4 MEM[base: _1398, offset: 0B]+0 S8 A64])) verify.c:119 -1
     (nil))
(debug_insn 3481 3480 3482 264 (var_location:DI j (reg/v:DI 675 [ j ])) verify.c:119 -1
     (nil))
(debug_insn 3482 3481 3483 264 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:121 -1
     (nil))
(insn 3483 3482 3484 264 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (const_int 0 [0]))) verify.c:123 -1
     (nil))
(insn 3484 3483 3485 264 (set (reg:CC_DLT 66 cc)
        (compare (ior:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (lt (reg/v:DI 675 [ j ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:123 -1
     (nil))
(insn 3485 3484 3486 264 (set:SI (reg:SI 1780)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:123 -1
     (nil))
(insn 3486 3485 3487 264 (set (reg:QI 1779 [ D.3813 ])
        (subreg:QI (reg:SI 1780) 0)) verify.c:123 -1
     (nil))
(insn 3487 3486 3488 264 (set (reg:SI 1781)
        (zero_extend:SI (reg:QI 1779 [ D.3813 ]))) verify.c:123 -1
     (nil))
(insn 3488 3487 3489 264 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1781)
            (const_int 0 [0]))) verify.c:123 -1
     (nil))
(jump_insn 3489 3488 3490 264 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4012)
            (pc))) verify.c:123 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 4012)
;;  succ:       278 [50.0%] 
;;              265 [50.0%]  (FALLTHRU)

;; basic block 265, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 264, next block 266, flags: (NEW, REACHABLE, RTL)
;;  pred:       264 [50.0%]  (FALLTHRU)
(note 3490 3489 3491 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 3491 3490 3492 265 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 674 [ i ]))) verify.c:124 -1
     (nil))
(insn 3492 3491 3493 265 (set (reg:SI 1783)
        (lt:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))
(insn 3493 3492 3494 265 (set (reg:QI 1782)
        (subreg:QI (reg:SI 1783) 0)) verify.c:124 -1
     (nil))
(insn 3494 3493 3495 265 (set (reg:SI 679 [ D.3813 ])
        (zero_extend:SI (reg:QI 1782))) verify.c:124 -1
     (nil))
(insn 3495 3494 3496 265 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:124 -1
     (nil))
(insn 3496 3495 3497 265 (set (reg:SI 1785)
        (ge:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))
(insn 3497 3496 3498 265 (set (reg:QI 1784 [ D.3813 ])
        (subreg:QI (reg:SI 1785) 0)) verify.c:124 -1
     (nil))
(insn 3498 3497 3499 265 (set (reg:SI 1786)
        (and:SI (reg:SI 679 [ D.3813 ])
            (subreg:SI (reg:QI 1784 [ D.3813 ]) 0))) verify.c:124 -1
     (nil))
(insn 3499 3498 3500 265 (set (reg:QI 1787)
        (subreg:QI (reg:SI 1786) 0)) verify.c:124 -1
     (nil))
(insn 3500 3499 3501 265 (set (reg:SI 1788)
        (zero_extend:SI (reg:QI 1787))) verify.c:124 -1
     (nil))
(insn 3501 3500 3502 265 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1788)
            (const_int 0 [0]))) verify.c:124 -1
     (nil))
(jump_insn 3502 3501 3503 265 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3782)
            (pc))) verify.c:124 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3782)
;;  succ:       313 [50.0%] 
;;              266 [50.0%]  (FALLTHRU)

;; basic block 266, loop depth 2, count 0, freq 173, maybe hot
;;  prev block 265, next block 267, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       265 [50.0%]  (FALLTHRU)
(note 3503 3502 3504 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3504 3503 3505 266 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3505 3504 3506 266 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 -1
     (nil))
(insn 3506 3505 3507 266 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(insn 3507 3506 3508 266 (set:SI (reg:SI 1790)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(insn 3508 3507 3509 266 (set (reg:QI 1789 [ D.3813 ])
        (subreg:QI (reg:SI 1790) 0)) verify.c:125 -1
     (nil))
(insn 3509 3508 3510 266 (set (reg:SI 1791)
        (zero_extend:SI (reg:QI 1789 [ D.3813 ]))) verify.c:125 -1
     (nil))
(insn 3510 3509 3511 266 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1791)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(jump_insn 3511 3510 3512 266 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4014)
            (pc))) verify.c:125 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 4014)
;;  succ:       328 [50.0%] 
;;              267 [50.0%]  (FALLTHRU)

;; basic block 267, loop depth 2, count 0, freq 86, maybe hot
;;  prev block 266, next block 268, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       266 [50.0%]  (FALLTHRU)
(note 3512 3511 3513 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3513 3512 3514 267 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3514 3513 3515 267 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:127 -1
     (nil))
(insn 3515 3514 3516 267 (set (reg:SI 1793)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:127 -1
     (nil))
(insn 3516 3515 3517 267 (set (reg:QI 1792 [ D.3813 ])
        (subreg:QI (reg:SI 1793) 0)) verify.c:127 -1
     (nil))
(insn 3517 3516 3518 267 (set (reg:SI 1794)
        (ior:SI (reg:SI 679 [ D.3813 ])
            (subreg:SI (reg:QI 1792 [ D.3813 ]) 0))) verify.c:127 -1
     (nil))
(insn 3518 3517 3519 267 (set (reg:QI 1795)
        (subreg:QI (reg:SI 1794) 0)) verify.c:127 -1
     (nil))
(insn 3519 3518 3520 267 (set (reg:SI 1796)
        (zero_extend:SI (reg:QI 1795))) verify.c:127 -1
     (nil))
(insn 3520 3519 3521 267 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1796)
            (const_int 0 [0]))) verify.c:127 -1
     (nil))
(jump_insn 3521 3520 3522 267 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4018)
            (pc))) verify.c:127 7 {condjump}
     (int_list:REG_BR_PROB 0 (nil))
 -> 4018)
;;  succ:       279
;;              268 [100.0%]  (FALLTHRU)

;; basic block 268, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 267, next block 269, flags: (NEW, REACHABLE, RTL)
;;  pred:       267 [100.0%]  (FALLTHRU)
(note 3522 3521 3523 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 3523 3522 3524 268 (set (reg:DI 688 [ D.3802 ])
        (ashift:DI (reg/v:DI 674 [ i ])
            (const_int 3 [0x3]))) verify.c:131 -1
     (nil))
(insn 3524 3523 3525 268 (set (reg:DI 690 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 688 [ D.3802 ])) [4 *_674+0 S8 A64])) verify.c:131 -1
     (nil))
(insn 3525 3524 3526 268 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 690 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 -1
     (nil))
(jump_insn 3526 3525 3527 268 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3894)
            (pc))) verify.c:131 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 3894)
;;  succ:       269 [73.0%]  (FALLTHRU)
;;              333 [27.0%] 

;; basic block 269, loop depth 2, count 0, freq 127, maybe hot
;;  prev block 268, next block 270, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       268 [73.0%]  (FALLTHRU)
(note 3527 3526 3528 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 3528 3527 3529 269 (set (reg:DI 692 [ D.3802 ])
        (ashift:DI (reg/v:DI 675 [ j ])
            (const_int 3 [0x3]))) verify.c:131 -1
     (nil))
(insn 3529 3528 3530 269 (set (reg:DI 694 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 692 [ D.3802 ])) [4 *_678+0 S8 A64])) verify.c:131 -1
     (nil))
(insn 3530 3529 3531 269 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 694 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 -1
     (nil))
(jump_insn 3531 3530 3534 269 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4020)
            (pc))) verify.c:131 7 {condjump}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 4020)
;;  succ:       315 [27.0%] 
;;              270 [73.0%]  (FALLTHRU)

;; basic block 270, loop depth 2, count 0, freq 93, maybe hot
;;  prev block 269, next block 271, flags: (NEW, REACHABLE, RTL)
;;  pred:       269 [73.0%]  (FALLTHRU)
(note 3534 3531 3532 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3532 3534 3533 270 (set (pc)
        (label_ref 3880)) verify.c:131 -1
     (nil)
 -> 3880)
;;  succ:       331 [100.0%] 

(barrier 3533 3532 3887)
;; basic block 271, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 270, next block 272, flags: (NEW, REACHABLE, RTL)
;;  pred:       331 [72.0%] 
(code_label 3887 3533 3535 271 190 "" [1 uses])
(note 3535 3887 3536 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 3536 3535 3537 271 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 675 [ j ])
            (reg:DI 690 [ D.3798 ]))) verify.c:145 -1
     (nil))
(jump_insn 3537 3536 3538 271 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3541)
            (pc))) verify.c:145 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3541)
;;  succ:       272 [28.0%]  (FALLTHRU)
;;              273 [72.0%] 

;; basic block 272, loop depth 2, count 0, freq 13
;;  prev block 271, next block 273, flags: (NEW, REACHABLE, RTL)
;;  pred:       271 [28.0%]  (FALLTHRU)
(note 3538 3537 3539 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 3539 3538 3540 272 (set (reg:DI 1797)
        (const_int 1 [0x1])) verify.c:146 -1
     (nil))
(insn 3540 3539 3541 272 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 688 [ D.3802 ])) [4 *_687+0 S8 A64])
        (reg:DI 1797)) verify.c:146 -1
     (nil))
;;  succ:       273 [100.0%]  (FALLTHRU)

;; basic block 273, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 272, next block 274, flags: (NEW, REACHABLE, RTL)
;;  pred:       271 [72.0%] 
;;              272 [100.0%]  (FALLTHRU)
(code_label 3541 3540 3542 273 167 "" [1 uses])
(note 3542 3541 3543 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 3543 3542 3544 273 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg:DI 694 [ D.3798 ]))) verify.c:147 -1
     (nil))
(jump_insn 3544 3543 3545 273 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3548)
            (pc))) verify.c:147 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3548)
;;  succ:       275 [28.0%] 
;;              274 [72.0%]  (FALLTHRU)

;; basic block 274, loop depth 2, count 0, freq 33
;;  prev block 273, next block 275, flags: (NEW, REACHABLE, RTL)
;;  pred:       273 [72.0%]  (FALLTHRU)
(note 3545 3544 3546 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3546 3545 3547 274 (set (pc)
        (label_ref 3552)) verify.c:147 -1
     (nil)
 -> 3552)
;;  succ:       276 [100.0%] 

(barrier 3547 3546 3548)
;; basic block 275, loop depth 2, count 0, freq 13
;;  prev block 274, next block 276, flags: (NEW, REACHABLE, RTL)
;;  pred:       273 [28.0%] 
(code_label 3548 3547 3549 275 168 "" [1 uses])
(note 3549 3548 3550 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 3550 3549 3551 275 (set (reg:DI 1798)
        (const_int 1 [0x1])) verify.c:148 -1
     (nil))
(insn 3551 3550 3552 275 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 692 [ D.3802 ])) [4 *_689+0 S8 A64])
        (reg:DI 1798)) verify.c:148 -1
     (nil))
;;  succ:       276 [100.0%]  (FALLTHRU)

;; basic block 276, loop depth 2, count 0, freq 63, maybe hot
;;  prev block 275, next block 277, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       275 [100.0%]  (FALLTHRU)
;;              274 [100.0%] 
;;              332 [100.0%] 
(code_label 3552 3551 3553 276 169 "" [2 uses])
(note 3553 3552 3554 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3554 3553 3555 276 (var_location:DI lvldiff (minus:DI (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [0 *_690+0 S8 A64])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [0 *_692+0 S8 A64]))) verify.c:150 -1
     (nil))
(insn 3555 3554 3556 276 (set (reg:DI 1800)
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [4 *_690+0 S8 A64])) verify.c:152 -1
     (nil))
(insn 3556 3555 3557 276 (set (reg:DI 1801)
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [4 *_692+0 S8 A64])) verify.c:152 -1
     (nil))
(insn 3557 3556 3558 276 (set (reg:DI 1799 [ lvldiff ])
        (minus:DI (reg:DI 1800)
            (reg:DI 1801))) verify.c:152 -1
     (nil))
(insn 3558 3557 3559 276 (set (reg:DI 1802 [ D.3810 ])
        (plus:DI (reg:DI 1799 [ lvldiff ])
            (const_int 1 [0x1]))) verify.c:152 -1
     (nil))
(insn 3559 3558 3560 276 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1802 [ D.3810 ])
            (const_int 2 [0x2]))) verify.c:152 -1
     (nil))
(jump_insn 3560 3559 3561 276 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4024)
            (pc))) verify.c:152 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 4024)
;;  succ:       280 [50.0%] 
;;              277 [50.0%]  (FALLTHRU)

;; basic block 277, loop depth 2, count 0, freq 32
;;  prev block 276, next block 278, flags: (NEW, REACHABLE, RTL)
;;  pred:       276 [50.0%]  (FALLTHRU)
(note 3561 3560 250 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 250 3561 251 277 (set (reg/v:SI 716 [ err ])
        (const_int 0 [0])) verify.c:152 -1
     (nil))
(insn 251 250 4009 277 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:152 -1
     (nil))
(jump_insn 4009 251 4010 277 (set (pc)
        (label_ref 3562)) -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 4010 4009 4012)
;; basic block 278, loop depth 2, count 0, freq 348, maybe hot
;;  prev block 277, next block 279, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       264 [50.0%] 
(code_label 4012 4010 4011 278 204 "" [1 uses])
(note 4011 4012 246 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 246 4011 4015 278 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:123 -1
     (nil))
(jump_insn 4015 246 4016 278 (set (pc)
        (label_ref 3562)) -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 4016 4015 4018)
;; basic block 279, loop depth 2, count 0, freq 0
;;  prev block 278, next block 280, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       267
(code_label 4018 4016 4017 279 206 "" [1 uses])
(note 4017 4018 247 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 247 4017 4021 279 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:127 -1
     (nil))
(jump_insn 4021 247 4022 279 (set (pc)
        (label_ref 3562)) -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 4022 4021 4024)
;; basic block 280, loop depth 2, count 0, freq 32
;;  prev block 279, next block 281, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       276 [50.0%] 
(code_label 4024 4022 4023 280 208 "" [1 uses])
(note 4023 4024 252 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 252 4023 253 280 (set (reg/v:SI 716 [ err ])
        (const_int -14 [0xfffffffffffffff2])) verify.c:153 -1
     (nil))
(insn 253 252 3562 280 (set (reg/v:SI 715 [ err ])
        (const_int -14 [0xfffffffffffffff2])) verify.c:153 -1
     (nil))
;;  succ:       281 [100.0%]  (FALLTHRU)

;; basic block 281, loop depth 2, count 0, freq 695, maybe hot
;;  prev block 280, next block 282, flags: (NEW, REACHABLE, RTL)
;;  pred:       277 [100.0%] 
;;              278 [100.0%] 
;;              330 [100.0%] 
;;              334 [100.0%] 
;;              280 [100.0%]  (FALLTHRU)
;;              317 [100.0%] 
;;              279 [100.0%] 
(code_label 3562 253 3563 281 161 "" [6 uses])
(note 3563 3562 3564 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3564 3563 3565 281 (var_location:SI terr (reg/v:SI 716 [ err ])) -1
     (nil))
(debug_insn 3565 3564 3566 281 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3566 3565 3567 281 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3567 3566 3568 281 (var_location:DI k (debug_expr:DI D#42)) verify.c:117 -1
     (nil))
(debug_insn 3568 3567 3569 281 (var_location:SI terr (reg/v:SI 716 [ err ])) -1
     (nil))
(debug_insn 3569 3568 3570 281 (var_location:DI k (debug_expr:DI D#42)) -1
     (nil))
(debug_insn 3570 3569 3571 281 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3571 3570 3572 281 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3572 3571 3574 281 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg:DI 708 [ ivtmp.64 ])
            (const_int 16 [0x10]))) -1
     (nil))
(insn 3574 3572 3575 281 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 708 [ ivtmp.64 ])
            (reg:DI 720 [ D.3810 ]))) verify.c:117 -1
     (nil))
(jump_insn 3575 3574 3576 281 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3573)
            (pc))) verify.c:117 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 3573)
;;  succ:       264 [91.0%]  (DFS_BACK)
;;              282 [9.0%]  (FALLTHRU)

;; basic block 282, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 281, next block 283, flags: (NEW, REACHABLE, RTL)
;;  pred:       281 [9.0%]  (FALLTHRU)
(note 3576 3575 3577 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 3577 3576 3578 282 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 716 [ err ])
            (const_int 0 [0]))) verify.c:157 -1
     (nil))
(jump_insn 3578 3577 3579 282 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:157 -1
     (int_list:REG_BR_PROB 5495 (nil))
 -> 3626)
;;  succ:       283 [45.0%]  (FALLTHRU)
;;              298 [55.0%] 

;; basic block 283, loop depth 1, count 0, freq 29
;;  prev block 282, next block 284, flags: (NEW, REACHABLE, RTL)
;;  pred:       282 [45.0%]  (FALLTHRU)
(note 3579 3578 3580 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3580 3579 3581 283 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3581 3580 3582 283 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3582 3581 3583 283 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:160 -1
     (nil))
(jump_insn 3583 3582 4046 283 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:160 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 3626)
;;  succ:       284 [91.0%]  (FALLTHRU)
;;              298 [9.0%] 

;; basic block 284, loop depth 1, count 0, freq 26
;;  prev block 283, next block 285, flags: (NEW, REACHABLE, RTL)
;;  pred:       283 [91.0%]  (FALLTHRU)
(note 4046 3583 4047 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(jump_insn 4047 4046 4048 284 (set (pc)
        (label_ref 3916)) -1
     (nil)
 -> 3916)
;;  succ:       286 [100.0%] 

(barrier 4048 4047 4050)
;; basic block 285, loop depth 1, count 0, freq 5
;;  prev block 284, next block 286, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       336 [91.0%] 
(code_label 4050 4048 4049 285 214 "" [1 uses])
(note 4049 4050 256 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 256 4049 257 285 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:160 -1
     (nil))
(insn 257 256 3916 285 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:160 -1
     (nil))
;;  succ:       286 [100.0%]  (FALLTHRU)

;; basic block 286, loop depth 1, count 0, freq 32
;;  prev block 285, next block 287, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       285 [100.0%]  (FALLTHRU)
;;              284 [100.0%] 
(code_label 3916 257 3584 286 192 "" [1 uses])
(note 3584 3916 3585 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 3585 3584 258 286 (set (reg:DI 755 [ D.3798 ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 258 3585 3623 286 (set (reg/v:DI 436 [ k ])
        (const_int 0 [0])) verify.c:160 -1
     (nil))
;;  succ:       287 [100.0%]  (FALLTHRU)

;; basic block 287, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 286, next block 288, flags: (NEW, REACHABLE, RTL)
;;  pred:       286 [100.0%]  (FALLTHRU)
;;              297 [91.0%]  (DFS_BACK)
(code_label 3623 258 3586 287 175 "" [1 uses])
(note 3586 3623 3587 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3587 3586 3588 287 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
(debug_insn 3588 3587 3589 287 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3589 3588 3590 287 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:161 -1
     (nil))
(insn 3590 3589 3591 287 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:162 -1
     (nil))
(insn 3591 3590 3592 287 (set (reg:CC_DNE 66 cc)
        (compare (and:SI (ne (reg:CC_DEQ 66 cc)
                    (const_int 0 [0]))
                (ne (reg/v:DI 436 [ k ])
                    (reg:DI 624 [ D.3798 ])))
            (const_int 0 [0]))) verify.c:162 -1
     (nil))
(insn 3592 3591 3593 287 (set:SI (reg:SI 1804)
        (ne:SI (reg:CC_DNE 66 cc)
            (const_int 0 [0]))) verify.c:162 -1
     (nil))
(insn 3593 3592 3594 287 (set (reg:QI 1803 [ D.3813 ])
        (subreg:QI (reg:SI 1804) 0)) verify.c:162 -1
     (nil))
(insn 3594 3593 3595 287 (set (reg:SI 1805)
        (zero_extend:SI (reg:QI 1803 [ D.3813 ]))) verify.c:162 -1
     (nil))
(insn 3595 3594 3596 287 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1805)
            (const_int 0 [0]))) verify.c:162 -1
     (nil))
(jump_insn 3596 3595 3597 287 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3616)
            (pc))) verify.c:162 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3616)
;;  succ:       288 [50.0%]  (FALLTHRU)
;;              297 [50.0%] 

;; basic block 288, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 287, next block 289, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       287 [50.0%]  (FALLTHRU)
(note 3597 3596 3598 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 3598 3597 3599 288 (set (reg:DI 787 [ D.3805 ])
        (reg/v:DI 436 [ k ])) -1
     (nil))
(insn 3599 3598 3600 288 (set (reg:DI 710 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 787 [ D.3805 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 -1
     (nil))
(insn 3600 3599 3601 288 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 710 [ D.3798 ])
            (const_int 0 [0]))) verify.c:163 -1
     (nil))
(jump_insn 3601 3600 3602 288 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4029)
            (pc))) verify.c:163 7 {condjump}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 4029)
;;  succ:       289 [73.0%]  (FALLTHRU)
;;              294 [27.0%] 

;; basic block 289, loop depth 2, count 0, freq 127, maybe hot
;;  prev block 288, next block 290, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       288 [73.0%]  (FALLTHRU)
(note 3602 3601 3603 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 3603 3602 3604 289 (set (reg:DI 1806)
        (mem:DI (plus:DI (mult:DI (reg:DI 787 [ D.3805 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 746 [ seen_edge ])) [4 MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 -1
     (nil))
(insn 3604 3603 3605 289 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806)
            (const_int 0 [0]))) verify.c:163 -1
     (nil))
(jump_insn 3605 3604 3606 289 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4033)
            (pc))) verify.c:163 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 4033)
;;  succ:       291 [50.0%] 
;;              290 [50.0%]  (FALLTHRU)

;; basic block 290, loop depth 2, count 0, freq 64, maybe hot
;;  prev block 289, next block 291, flags: (NEW, REACHABLE, RTL)
;;  pred:       289 [50.0%]  (FALLTHRU)
(note 3606 3605 260 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 260 3606 4030 290 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:163 -1
     (nil))
(jump_insn 4030 260 4031 290 (set (pc)
        (label_ref 3607)) -1
     (nil)
 -> 3607)
;;  succ:       292 [100.0%] 

(barrier 4031 4030 4033)
;; basic block 291, loop depth 2, count 0, freq 64, maybe hot
;;  prev block 290, next block 292, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       289 [50.0%] 
(code_label 4033 4031 4032 291 210 "" [1 uses])
(note 4032 4033 259 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 259 4032 3607 291 (set (reg/v:SI 715 [ err ])
        (const_int -15 [0xfffffffffffffff1])) verify.c:164 -1
     (nil))
;;  succ:       292 [100.0%]  (FALLTHRU)

;; basic block 292, loop depth 2, count 0, freq 127, maybe hot
;;  prev block 291, next block 293, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       291 [100.0%]  (FALLTHRU)
;;              290 [100.0%] 
(code_label 3607 259 3608 292 174 "" [1 uses])
(note 3608 3607 3609 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3609 3608 3610 292 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3610 3609 3611 292 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:165 -1
     (nil))
(jump_insn 3611 3610 4025 292 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4037)
            (pc))) verify.c:165 7 {condjump}
     (int_list:REG_BR_PROB 3836 (nil))
 -> 4037)
;;  succ:       296 [38.4%] 
;;              293 [61.6%]  (FALLTHRU)

;; basic block 293, loop depth 2, count 0, freq 78, maybe hot
;;  prev block 292, next block 294, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       292 [61.6%]  (FALLTHRU)
(note 4025 3611 4026 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(jump_insn 4026 4025 4027 293 (set (pc)
        (label_ref:DI 3616)) 2 {jump}
     (nil)
 -> 3616)
;;  succ:       297 [100.0%] 

(barrier 4027 4026 4029)
;; basic block 294, loop depth 2, count 0, freq 47, maybe hot
;;  prev block 293, next block 296, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       288 [27.0%] 
(code_label 4029 4027 4028 294 209 "" [1 uses])
(note 4028 4029 261 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 261 4028 3614 294 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:163 -1
     (nil))
(debug_insn 3614 261 3615 294 (var_location:SI terr (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3615 3614 4034 294 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(jump_insn 4034 3615 4035 294 (set (pc)
        (label_ref 3616)) -1
     (nil)
 -> 3616)
;;  succ:       297 [100.0%] 

(barrier 4035 4034 4037)
;; basic block 296, loop depth 2, count 0, freq 49, maybe hot
;;  prev block 294, next block 297, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       292 [38.4%] 
(code_label 4037 4035 4036 296 211 "" [1 uses])
(note 4036 4037 262 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 262 4036 3616 296 (set (reg/v:SI 715 [ err ])
        (const_int -16 [0xfffffffffffffff0])) verify.c:166 -1
     (nil))
;;  succ:       297 [100.0%]  (FALLTHRU)

;; basic block 297, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 296, next block 298, flags: (NEW, REACHABLE, RTL)
;;  pred:       287 [50.0%] 
;;              296 [100.0%]  (FALLTHRU)
;;              294 [100.0%] 
;;              293 [100.0%] 
(code_label 3616 262 3617 297 172 "" [3 uses])
(note 3617 3616 3618 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3618 3617 3619 297 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3619 3618 3620 297 (set (reg/v:DI 436 [ k ])
        (plus:DI (reg/v:DI 436 [ k ])
            (const_int 1 [0x1]))) verify.c:160 -1
     (nil))
(debug_insn 3620 3619 3621 297 (var_location:DI k (reg/v:DI 436 [ k ])) verify.c:160 -1
     (nil))
(debug_insn 3621 3620 3622 297 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
(debug_insn 3622 3621 3624 297 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3624 3622 3625 297 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 755 [ D.3798 ]))) verify.c:160 -1
     (nil))
(jump_insn 3625 3624 3626 297 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3623)
            (pc))) verify.c:160 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 3623)
;;  succ:       287 [91.0%]  (DFS_BACK)
;;              298 [9.0%]  (FALLTHRU)

;; basic block 298, loop depth 1, count 0, freq 67, maybe hot
;;  prev block 297, next block 299, flags: (NEW, REACHABLE, RTL)
;;  pred:       297 [9.0%]  (FALLTHRU)
;;              282 [55.0%] 
;;              283 [9.0%] 
(code_label 3626 3625 3627 298 171 ("done") [2 uses])
(note 3627 3626 3628 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3628 3627 3629 298 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3629 3628 3630 298 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3630 3629 3631 298 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3631 3630 3632 298 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))
(call_insn 3632 3631 3633 298 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3633 3632 3634 298 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 3634 3633 3635 298 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:175 -1
     (nil))
(jump_insn 3635 3634 3820 298 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3667)
            (pc))) verify.c:175 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3667)
;;  succ:       299 (FALLTHRU)
;;              301 [100.0%] 

;; basic block 299, loop depth 1, count 0, freq 54, maybe hot
;;  prev block 298, next block 300, flags: (NEW, REACHABLE, RTL)
;;  pred:       298 (FALLTHRU)
;;              318 [100.0%] 
(code_label 3820 3635 3636 299 183 "" [1 uses])
(note 3636 3820 3637 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3637 3636 3638 299 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3638 3637 3639 299 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3639 3638 3640 299 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 3640 3639 3641 299 (set (reg:DI 712 [ D.3798 ])
        (sign_extend:DI (reg/v:SI 715 [ err ]))) verify.c:175 -1
     (nil))
(debug_insn 3641 3640 3642 299 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3642 3641 3643 299 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3643 3642 3644 299 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3644 3643 3645 299 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3645 3644 3646 299 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3646 3645 3647 299 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3647 3646 3648 299 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3648 3647 3649 299 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3649 3648 3650 299 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3650 3649 3651 299 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3651 3650 3652 299 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3652 3651 3653 299 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3653 3652 3654 299 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3654 3653 3655 299 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3655 3654 3656 299 (set (reg:DI 1809)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))
(insn 3656 3655 3657 299 (set (reg:DI 1808)
        (lo_sum:DI (reg:DI 1809)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3657 3656 3658 299 (set (reg/f:DI 1807)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1808))) graph500.c:204 -1
     (nil))
(insn 3658 3657 3659 299 (set (mem:DI (reg/f:DI 1807) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 712 [ D.3798 ])) graph500.c:204 -1
     (nil))
(insn 3659 3658 3660 299 (set (reg:DI 1811)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))
(insn 3660 3659 3661 299 (set (reg/f:DI 1810)
        (lo_sum:DI (reg:DI 1811)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3661 3660 3662 299 (set (reg:SI 1812)
        (mem/c:SI (reg/f:DI 1810) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))
(insn 3662 3661 3663 299 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1812)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))
(jump_insn 3663 3662 3666 299 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3696)
;;  succ:       302 [100.0%] 
;;              300 (FALLTHRU)

;; basic block 300, loop depth 0, count 0, freq 0
;;  prev block 299, next block 301, flags: (NEW, REACHABLE, RTL)
;;  pred:       299 (FALLTHRU)
(note 3666 3663 3664 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3664 3666 3665 300 (set (pc)
        (label_ref 3715)) graph500.c:205 -1
     (nil)
 -> 3715)
;;  succ:       303 [100.0%] 

(barrier 3665 3664 3667)
;; basic block 301, loop depth 1, count 0, freq 84, maybe hot
;;  prev block 300, next block 302, flags: (NEW, REACHABLE, RTL)
;;  pred:       298 [100.0%] 
;;              335 [100.0%] 
(code_label 3667 3665 3668 301 176 "" [2 uses])
(note 3668 3667 3669 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3669 3668 3670 301 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3670 3669 3671 301 (var_location:SI err (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3671 3670 3672 301 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(debug_insn 3672 3671 3673 301 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3673 3672 3674 301 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3674 3673 3675 301 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3675 3674 3676 301 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3676 3675 3677 301 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3677 3676 3678 301 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3678 3677 3679 301 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3679 3678 3680 301 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3680 3679 3681 301 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3681 3680 3682 301 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3682 3681 3683 301 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3683 3682 3684 301 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3684 3683 3685 301 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3685 3684 3686 301 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3686 3685 3687 301 (set (reg:DI 1815)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))
(insn 3687 3686 3688 301 (set (reg:DI 1814)
        (lo_sum:DI (reg:DI 1815)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3688 3687 3689 301 (set (reg/f:DI 1813)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1814))) graph500.c:204 -1
     (nil))
(insn 3689 3688 3690 301 (set (reg:DI 1816)
        (sign_extend:DI (reg/v:SI 610 [ nedge_traversed ]))) graph500.c:204 -1
     (nil))
(insn 3690 3689 3691 301 (set (mem:DI (reg/f:DI 1813) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1816)) graph500.c:204 -1
     (nil))
(insn 3691 3690 3692 301 (set (reg:DI 1818)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))
(insn 3692 3691 3693 301 (set (reg/f:DI 1817)
        (lo_sum:DI (reg:DI 1818)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3693 3692 3694 301 (set (reg:SI 1819)
        (mem/c:SI (reg/f:DI 1817) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))
(insn 3694 3693 3695 301 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1819)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))
(jump_insn 3695 3694 3696 301 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3739)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3739)
;;  succ:       302 (FALLTHRU)
;;              304 [100.0%] 

;; basic block 302, loop depth 1, count 0, freq 100, maybe hot
;;  prev block 301, next block 303, flags: (NEW, REACHABLE, RTL)
;;  pred:       301 (FALLTHRU)
;;              338 [99.8%] 
;;              299 [100.0%] 
(code_label 3696 3695 3697 302 177 "" [2 uses])
(note 3697 3696 3698 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3698 3697 3699 302 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:205 -1
     (nil))
(debug_insn 3699 3698 3700 302 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:205 -1
     (nil))
(insn 3700 3699 3701 302 (set (reg:DI 1821)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3701 3700 3702 302 (set (reg/f:DI 1820)
        (lo_sum:DI (reg:DI 1821)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
        (nil)))
(insn 3702 3701 3703 302 (set (reg:DI 1823)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 -1
     (nil))
(insn 3703 3702 3704 302 (set (reg/f:DI 1822)
        (lo_sum:DI (reg:DI 1823)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 3704 3703 3705 302 (set (reg:DI 1824)
        (mem/f/c:DI (reg/f:DI 1822) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3705 3704 3706 302 (set (reg:DI 2 x2)
        (reg/f:DI 1820)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3706 3705 3707 302 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3707 3706 3708 302 (set (reg:DI 0 x0)
        (reg:DI 1824)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 3708 3707 3709 302 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 3709 3708 3710 302 (set (reg:DI 1827)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) -1
     (nil))
(insn 3710 3709 3711 302 (set (reg:DI 1826)
        (lo_sum:DI (reg:DI 1827)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3711 3710 3712 302 (set (reg/f:DI 1825)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1826))) -1
     (nil))
(insn 3712 3711 3713 302 (set (reg:DI 712 [ D.3798 ])
        (mem:DI (reg/f:DI 1825) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])) -1
     (nil))
(insn 3713 3712 3714 302 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 712 [ D.3798 ])
            (const_int 0 [0]))) graph500.c:206 -1
     (nil))
(jump_insn 3714 3713 3715 302 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3739)
            (pc))) graph500.c:206 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3739)
;;  succ:       303 (FALLTHRU)
;;              304 [100.0%] 

;; basic block 303, loop depth 0, count 0, freq 0
;;  prev block 302, next block 304, flags: (NEW, REACHABLE, RTL)
;;  pred:       302 (FALLTHRU)
;;              300 [100.0%] 
;;              339 [100.0%] 
(code_label 3715 3714 3716 303 178 "" [2 uses])
(note 3716 3715 3717 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3717 3716 3718 303 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:207 -1
     (nil))
(debug_insn 3718 3717 3719 303 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)) graph500.c:207 -1
     (nil))
(insn 3719 3718 3720 303 (set (reg:DI 1829)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:207 -1
     (nil))
(insn 3720 3719 3721 303 (set (reg/f:DI 1828)
        (lo_sum:DI (reg:DI 1829)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:207 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3721 3720 3722 303 (set (reg:DI 1830)
        (reg/f:DI 1828)) graph500.c:207 -1
     (nil))
(insn 3722 3721 3723 303 (set (reg/f:DI 1831)
        (plus:DI (reg/f:DI 1828)
            (const_int 112 [0x70]))) graph500.c:207 -1
     (nil))
(insn 3723 3722 3724 303 (set (reg:DI 1832)
        (sign_extend:DI (reg/v:SI 752 [ m ]))) graph500.c:207 -1
     (nil))
(insn 3724 3723 3725 303 (set (reg:DI 1834)
        (high:DI (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3725 3724 3726 303 (set (reg/f:DI 1833)
        (lo_sum:DI (reg:DI 1834)
            (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)
        (nil)))
(insn 3726 3725 3727 303 (set (reg:DI 1836)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:207 -1
     (nil))
(insn 3727 3726 3728 303 (set (reg/f:DI 1835)
        (lo_sum:DI (reg:DI 1836)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:207 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 3728 3727 3729 303 (set (reg:DI 5 x5)
        (reg:DI 712 [ D.3798 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3729 3728 3730 303 (set (reg:DI 4 x4)
        (mem:DI (plus:DI (mult:DI (reg:DI 1832)
                    (const_int 8 [0x8]))
                (reg/f:DI 1831)) [4 bfs_root S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3730 3729 3731 303 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3731 3730 3732 303 (set (reg:DI 2 x2)
        (reg/f:DI 1833)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3732 3731 3733 303 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 3733 3732 3734 303 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1835) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(call_insn 3734 3733 3735 303 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:DI (use (reg:DI 4 x4))
                                (expr_list:DI (use (reg:DI 5 x5))
                                    (nil))))))))))
(debug_insn 3735 3734 3736 303 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:207 -1
     (nil))
(debug_insn 3736 3735 3737 303 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:207 -1
     (nil))
(call_insn 3737 3736 3738 303 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      

(barrier 3738 3737 3739)
;; basic block 304, loop depth 1, count 0, freq 184, maybe hot
;;  prev block 303, next block 305, flags: (NEW, REACHABLE, RTL)
;;  pred:       302 [100.0%] 
;;              301 [100.0%] 
(code_label 3739 3738 3740 304 179 "" [2 uses])
(note 3740 3739 3741 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3741 3740 3742 304 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) -1
     (nil))
(insn 3742 3741 3743 304 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) xalloc.c:132 -1
     (nil))
(call_insn 3743 3742 3744 304 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3744 3743 3745 304 (var_location:DI p (clobber (const_int 0 [0]))) graph500.c:212 -1
     (nil))
(insn 3745 3744 3746 304 (set (reg:SI 732 [ D.3797 ])
        (plus:SI (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)
            (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 3746 3745 3747 304 (var_location:SI m (reg:SI 732 [ D.3797 ])) graph500.c:187 -1
     (nil))
(debug_insn 3747 3746 3748 304 (var_location:SI m (reg:SI 732 [ D.3797 ])) -1
     (nil))
(insn 3748 3747 3750 304 (set (reg:DI 777 [ ivtmp.94 ])
        (plus:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3750 3748 3751 304 (set (reg:DI 1838)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (nil))
(insn 3751 3750 3752 304 (set (reg/f:DI 1837)
        (lo_sum:DI (reg:DI 1838)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 3752 3751 3753 304 (set (reg:SI 1839)
        (mem/c:SI (plus:DI (reg/f:DI 1837)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 -1
     (nil))
(insn 3753 3752 3754 304 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1839)
            (reg:SI 732 [ D.3797 ]))) graph500.c:187 -1
     (nil))
(jump_insn 3754 3753 3758 304 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3749)
            (pc))) graph500.c:187 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 3749)
;;  succ:       198 [97.8%]  (DFS_BACK)
;;              305 [2.2%]  (FALLTHRU)

;; basic block 305, loop depth 0, count 0, freq 4
;;  prev block 304, next block 306, flags: (NEW, REACHABLE, RTL)
;;  pred:       304 [2.2%]  (FALLTHRU)
(note 3758 3754 3756 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3756 3758 3757 305 (set (pc)
        (label_ref 3755)) graph500.c:187 -1
     (nil)
 -> 3755)
;;  succ:       191 [100.0%] 

(barrier 3757 3756 3759)
;; basic block 306, loop depth 0, count 0, freq 19
;;  prev block 305, next block 308, flags: (NEW, REACHABLE, RTL)
;;  pred:       145 [100.0%] 
;;              147 [100.0%] 
;;              191 [100.0%] 
(code_label 3759 3757 3760 306 99 "" [3 uses])
(note 3760 3759 3761 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 3761 3760 3762 306 (set (reg:SI 836 [ <retval> ])
        (reg:SI 240 [ D.3797 ])) -1
     (nil))
(jump_insn 3762 3761 3763 306 (set (pc)
        (label_ref 3976)) -1
     (nil)
 -> 3976)
;;  succ:       342 [100.0%] 

(barrier 3763 3762 3766)
;; basic block 308, loop depth 0, count 0, freq 21
;;  prev block 306, next block 310, flags: (NEW, REACHABLE, RTL)
;;  pred:       85 [50.0%] 
;;              86
;;              84 [30.2%] 
(code_label 3766 3763 3767 308 62 "" [3 uses])
(note 3767 3766 3768 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3768 3767 194 308 (var_location:DI seed (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(insn 194 3768 3770 308 (set (reg/v:DI 416 [ seed ])
        (const_int 3737844653 [0xdecafbad])) prng.c:36 -1
     (nil))
(jump_insn 3770 194 3771 308 (set (pc)
        (label_ref 3769)) -1
     (nil)
 -> 3769)
;;  succ:       87 [100.0%] 

(barrier 3771 3770 4004)
;; basic block 310, loop depth 2, count 0, freq 225, maybe hot
;;  prev block 308, next block 311, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       240 [2.4%] 
(code_label 4004 3771 4003 310 202 "" [1 uses])
(note 4003 4004 268 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 268 4003 4005 310 (set (reg/v:SI 715 [ err ])
        (const_int -2 [0xfffffffffffffffe])) verify.c:44 -1
     (nil))
(jump_insn 4005 268 4006 310 (set (pc)
        (label_ref:DI 3402)) 2 {jump}
     (nil)
 -> 3402)
;;  succ:       258 [100.0%] 

(barrier 4006 4005 4008)
;; basic block 311, loop depth 2, count 0, freq 152, maybe hot
;;  prev block 310, next block 313, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       242 [31.5%] 
(code_label 4008 4006 4007 311 203 "" [1 uses])
(note 4007 4008 269 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 269 4007 3779 311 (set (reg/v:SI 715 [ err ])
        (const_int -1 [0xffffffffffffffff])) verify.c:46 -1
     (nil))
(debug_insn 3779 269 3780 311 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(jump_insn 3780 3779 3781 311 (set (pc)
        (label_ref 3402)) -1
     (nil)
 -> 3402)
;;  succ:       258 [100.0%] 

(barrier 3781 3780 3782)
;; basic block 313, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 311, next block 314, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       265 [50.0%] 
(code_label 3782 3781 3783 313 162 "" [1 uses])
(note 3783 3782 3784 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3784 3783 3785 313 (var_location:SI terr (const_int -10 [0xfffffffffffffff6])) verify.c:124 -1
     (nil))
(debug_insn 3785 3784 3786 313 (var_location:SI terr (const_int -10 [0xfffffffffffffff6])) -1
     (nil))
(insn 3786 3785 3787 313 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 -1
     (nil))
(insn 3787 3786 3788 313 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(insn 3788 3787 3789 313 (set:SI (reg:SI 1842)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(insn 3789 3788 3790 313 (set (reg:QI 1841 [ D.3813 ])
        (subreg:QI (reg:SI 1842) 0)) verify.c:125 -1
     (nil))
(insn 3790 3789 3791 313 (set (reg:SI 1843)
        (zero_extend:SI (reg:QI 1841 [ D.3813 ]))) verify.c:125 -1
     (nil))
(insn 3791 3790 3792 313 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843)
            (const_int 0 [0]))) verify.c:125 -1
     (nil))
(jump_insn 3792 3791 3793 313 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4041)
            (pc))) verify.c:125 7 {condjump}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 4041)
;;  succ:       329 [50.0%] 
;;              314 [50.0%]  (FALLTHRU)

;; basic block 314, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 313, next block 315, flags: (NEW, REACHABLE, RTL)
;;  pred:       313 [50.0%]  (FALLTHRU)
(note 3793 3792 278 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 278 3793 3794 314 (set (reg/v:SI 715 [ err ])
        (const_int -10 [0xfffffffffffffff6])) verify.c:124 -1
     (nil))
(jump_insn 3794 278 3795 314 (set (pc)
        (label_ref 3875)) verify.c:125 -1
     (nil)
 -> 3875)
;;  succ:       330 [100.0%] 

(barrier 3795 3794 4020)
;; basic block 315, loop depth 2, count 0, freq 34
;;  prev block 314, next block 316, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       269 [27.0%] 
(code_label 4020 3795 4019 315 207 "" [1 uses])
(note 4019 4020 270 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 270 4019 4042 315 (set (reg/v:SI 715 [ err ])
        (const_int -12 [0xfffffffffffffff4])) verify.c:131 -1
     (nil))
(jump_insn 4042 270 4043 315 (set (pc)
        (label_ref 3796)) -1
     (nil)
 -> 3796)
;;  succ:       317 [100.0%] 

(barrier 4043 4042 4045)
;; basic block 316, loop depth 2, count 0, freq 47, maybe hot
;;  prev block 315, next block 317, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       333 [100.0%] 
(code_label 4045 4043 4044 316 213 "" [1 uses])
(note 4044 4045 271 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 271 4044 3796 316 (set (reg/v:SI 715 [ err ])
        (const_int -13 [0xfffffffffffffff3])) verify.c:132 -1
     (nil))
;;  succ:       317 [100.0%]  (FALLTHRU)

;; basic block 317, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 316, next block 318, flags: (NEW, REACHABLE, RTL)
;;  pred:       316 [100.0%]  (FALLTHRU)
;;              315 [100.0%] 
(code_label 3796 271 3797 317 165 "" [1 uses])
(note 3797 3796 3798 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3798 3797 3799 317 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3799 3798 3800 317 (var_location:SI err (reg/v:SI 715 [ err ])) verify.c:133 -1
     (nil))
(debug_insn 3800 3799 254 317 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 254 3800 3801 317 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 -1
     (nil))
(jump_insn 3801 254 3802 317 (set (pc)
        (label_ref 3562)) verify.c:125 -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 3802 3801 3868)
;; basic block 318, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 317, next block 319, flags: (NEW, REACHABLE, RTL)
;;  pred:       326 [53.3%] 
(code_label 3868 3802 3803 318 188 "" [1 uses])
(note 3803 3868 3804 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3804 3803 3805 318 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3805 3804 3806 318 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3806 3805 3807 318 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3807 3806 3808 318 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3808 3807 3809 318 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3809 3808 3810 318 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3810 3809 3811 318 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3811 3810 3812 318 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3812 3811 3813 318 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3813 3812 3814 318 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3814 3813 3815 318 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3815 3814 3816 318 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3816 3815 3817 318 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3817 3816 3818 318 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))
(call_insn 3818 3817 3819 318 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3819 3818 3821 318 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(jump_insn 3821 3819 3822 318 (set (pc)
        (label_ref 3820)) xalloc.c:132 -1
     (nil)
 -> 3820)
;;  succ:       299 [100.0%] 

(barrier 3822 3821 3985)
;; basic block 319, loop depth 2, count 0, freq 135, maybe hot
;;  prev block 318, next block 320, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 [39.0%] 
(code_label 3985 3822 3984 319 197 "" [1 uses])
(note 3984 3985 276 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 276 3984 277 319 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:58 -1
     (nil))
(insn 277 276 3986 319 (set (reg:DI 828 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:58 -1
     (nil))
(jump_insn 3986 277 3987 319 (set (pc)
        (label_ref 3823)) -1
     (nil)
 -> 3823)
;;  succ:       321 [100.0%] 

(barrier 3987 3986 3989)
;; basic block 320, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 319, next block 321, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 [67.0%] 
(code_label 3989 3987 3988 320 198 "" [1 uses])
(note 3988 3989 272 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 272 3988 273 320 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:63 -1
     (nil))
(insn 273 272 3823 320 (set (reg:DI 828 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:63 -1
     (nil))
;;  succ:       321 [100.0%]  (FALLTHRU)

;; basic block 321, loop depth 2, count 0, freq 205, maybe hot
;;  prev block 320, next block 322, flags: (NEW, REACHABLE, RTL)
;;  pred:       320 [100.0%]  (FALLTHRU)
;;              124 [100.0%] 
;;              319 [100.0%] 
(code_label 3823 273 3824 321 85 "" [2 uses])
(note 3824 3823 3825 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3825 3824 3826 321 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3826 3825 3827 321 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3827 3826 3828 321 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3828 3827 3829 321 (var_location:SI src_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:138 -1
     (nil))
(debug_insn 3829 3828 3830 321 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:139 -1
     (nil))
(insn 3830 3829 3831 321 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 -1
     (nil))
(jump_insn 3831 3830 3832 321 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3841)
            (pc))) generator/graph_generator.c:140 -1
     (int_list:REG_BR_PROB 2374 (nil))
 -> 3841)
;;  succ:       322 [76.3%]  (FALLTHRU)
;;              323 [23.7%] 

;; basic block 322, loop depth 0, count 0, freq 156, maybe hot
;;  prev block 321, next block 323, flags: (NEW, REACHABLE, RTL)
;;  pred:       321 [76.3%]  (FALLTHRU)
(note 3832 3831 3833 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 3833 3832 3834 322 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) -1
     (nil))
(insn 3834 3833 3835 322 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) -1
     (nil))
(insn 3835 3834 3836 322 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) -1
     (nil))
(insn 3836 3835 3837 322 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) -1
     (nil))
(insn 3837 3836 3839 322 (set (mem/c:DI (plus:DI (reg/f:DI 68 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) -1
     (nil))
(jump_insn 3839 3837 3840 322 (set (pc)
        (label_ref 3838)) -1
     (nil)
 -> 3838)
;;  succ:       127 [100.0%] 

(barrier 3840 3839 3841)
;; basic block 323, loop depth 2, count 0, freq 49, maybe hot
;;  prev block 322, next block 324, flags: (NEW, REACHABLE, RTL)
;;  pred:       321 [23.7%] 
(code_label 3841 3840 3842 323 184 "" [1 uses])
(note 3842 3841 3843 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 3843 3842 3844 323 (set (reg:DI 830 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 3844 3843 281 323 (set (reg:DI 831 [ D.3798 ])
        (mult:DI (reg:DI 828 [ D.3798 ])
            (reg:DI 830 [ D.3798 ]))) -1
     (nil))
(insn 281 3844 3845 323 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 830 [ D.3798 ])) generator/graph_generator.c:140 -1
     (nil))
(jump_insn 3845 281 3846 323 (set (pc)
        (label_ref 3952)) -1
     (nil)
 -> 3952)
;;  succ:       340 [100.0%] 

(barrier 3846 3845 3847)
;; basic block 324, loop depth 1, count 0, freq 137, maybe hot
;;  prev block 323, next block 325, flags: (NEW, REACHABLE, RTL)
;;  pred:       204 [71.0%] 
(code_label 3847 3846 3848 324 130 "" [1 uses])
(note 3848 3847 3850 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 3850 3848 3851 324 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 -1
     (nil))
(jump_insn 3851 3850 3855 324 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3849)
            (pc))) graph500.c:198 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 3849)
;;  succ:       206 [0.0%] 
;;              325 [100.0%]  (FALLTHRU)

;; basic block 325, loop depth 1, count 0, freq 137, maybe hot
;;  prev block 324, next block 326, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       324 [100.0%]  (FALLTHRU)
(note 3855 3851 3853 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3853 3855 3854 325 (set (pc)
        (label_ref:DI 3018)) graph500.c:198 2 {jump}
     (nil)
 -> 3018)
;;  succ:       210 [100.0%] 

(barrier 3854 3853 3856)
;; basic block 326, loop depth 1, count 0, freq 135, maybe hot
;;  prev block 325, next block 327, flags: (NEW, REACHABLE, RTL)
;;  pred:       259 [100.0%] 
(code_label 3856 3854 3857 326 158 "" [1 uses])
(note 3857 3856 3858 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3858 3857 3859 326 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3859 3858 3860 326 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3860 3859 3861 326 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3861 3860 3862 326 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3862 3861 3863 326 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3863 3862 3864 326 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3864 3863 3865 326 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3865 3864 3866 326 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3866 3865 3867 326 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3867 3866 3869 326 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(insn 3869 3867 3870 326 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:106 -1
     (nil))
(jump_insn 3870 3869 3874 326 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) verify.c:106 -1
     (int_list:REG_BR_PROB 5334 (nil))
 -> 3868)
;;  succ:       318 [53.3%] 
;;              327 [46.7%]  (FALLTHRU)

;; basic block 327, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 326, next block 328, flags: (NEW, REACHABLE, RTL)
;;  pred:       326 [46.7%]  (FALLTHRU)
(note 3874 3870 3872 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3872 3874 3873 327 (set (pc)
        (label_ref 3871)) verify.c:106 -1
     (nil)
 -> 3871)
;;  succ:       262 [100.0%] 

(barrier 3873 3872 4014)
;; basic block 328, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 327, next block 329, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       266 [50.0%] 
(code_label 4014 3873 4013 328 205 "" [1 uses])
(note 4013 4014 280 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 280 4013 4038 328 (set (reg/v:SI 715 [ err ])
        (const_int -11 [0xfffffffffffffff5])) verify.c:125 -1
     (nil))
(jump_insn 4038 280 4039 328 (set (pc)
        (label_ref 3875)) -1
     (nil)
 -> 3875)
;;  succ:       330 [100.0%] 

(barrier 4039 4038 4041)
;; basic block 329, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 328, next block 330, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       313 [50.0%] 
(code_label 4041 4039 4040 329 212 "" [1 uses])
(note 4040 4041 279 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 279 4040 3875 329 (set (reg/v:SI 715 [ err ])
        (const_int -11 [0xfffffffffffffff5])) verify.c:125 -1
     (nil))
;;  succ:       330 [100.0%]  (FALLTHRU)

;; basic block 330, loop depth 2, count 0, freq 261, maybe hot
;;  prev block 329, next block 331, flags: (NEW, REACHABLE, RTL)
;;  pred:       314 [100.0%] 
;;              329 [100.0%]  (FALLTHRU)
;;              328 [100.0%] 
(code_label 3875 279 3876 330 163 "" [2 uses])
(note 3876 3875 3877 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3877 3876 255 330 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 255 3877 3878 330 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 -1
     (nil))
(jump_insn 3878 255 3879 330 (set (pc)
        (label_ref 3562)) verify.c:106 -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 3879 3878 3880)
;; basic block 331, loop depth 2, count 0, freq 93, maybe hot
;;  prev block 330, next block 332, flags: (NEW, REACHABLE, RTL)
;;  pred:       270 [100.0%] 
(code_label 3880 3879 3881 331 166 "" [1 uses])
(note 3881 3880 3882 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3882 3881 3883 331 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3883 3882 3884 331 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3884 3883 3885 331 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 3885 3884 3886 331 (set (reg/v:SI 610 [ nedge_traversed ])
        (plus:SI (reg/v:SI 610 [ nedge_traversed ])
            (const_int 1 [0x1]))) verify.c:142 -1
     (nil))
(debug_insn 3886 3885 3888 331 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) verify.c:142 -1
     (nil))
(insn 3888 3886 3889 331 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg/v:DI 675 [ j ]))) verify.c:144 -1
     (nil))
(jump_insn 3889 3888 3893 331 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3887)
            (pc))) verify.c:144 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3887)
;;  succ:       271 [72.0%] 
;;              332 [28.0%]  (FALLTHRU)

;; basic block 332, loop depth 2, count 0, freq 26
;;  prev block 331, next block 333, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       331 [28.0%]  (FALLTHRU)
(note 3893 3889 3891 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3891 3893 3892 332 (set (pc)
        (label_ref:DI 3552)) verify.c:144 2 {jump}
     (nil)
 -> 3552)
;;  succ:       276 [100.0%] 

(barrier 3892 3891 3894)
;; basic block 333, loop depth 2, count 0, freq 47, maybe hot
;;  prev block 332, next block 334, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       268 [27.0%] 
(code_label 3894 3892 3895 333 164 "" [1 uses])
(note 3895 3894 3896 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3896 3895 3897 333 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(insn 3897 3896 3898 333 (set (reg:DI 1844)
        (mem:DI (plus:DI (mult:DI (reg/v:DI 675 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_1073+0 S8 A64])) verify.c:132 -1
     (nil))
(insn 3898 3897 3899 333 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1844)
            (const_int 0 [0]))) verify.c:132 -1
     (nil))
(jump_insn 3899 3898 3902 333 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4045)
            (pc))) verify.c:132 7 {condjump}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 4045)
;;  succ:       316 [100.0%] 
;;              334 (FALLTHRU)

;; basic block 334, loop depth 2, count 0, freq 0
;;  prev block 333, next block 335, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       333 (FALLTHRU)
(note 3902 3899 248 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 248 3902 249 334 (set (reg/v:SI 716 [ err ])
        (const_int 0 [0])) verify.c:132 -1
     (nil))
(insn 249 248 3900 334 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:132 -1
     (nil))
(jump_insn 3900 249 3901 334 (set (pc)
        (label_ref 3562)) verify.c:132 -1
     (nil)
 -> 3562)
;;  succ:       281 [100.0%] 

(barrier 3901 3900 3919)
;; basic block 335, loop depth 1, count 0, freq 1
;;  prev block 334, next block 336, flags: (NEW, REACHABLE, RTL)
;;  pred:       337 [100.0%] 
(code_label 3919 3901 3903 335 193 "" [1 uses])
(note 3903 3919 3904 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3904 3903 3905 335 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3905 3904 3906 335 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(debug_insn 3906 3905 3907 335 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3907 3906 3908 335 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 -1
     (nil))
(call_insn 3908 3907 3909 335 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3909 3908 263 335 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 263 3909 3910 335 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) xalloc.c:132 -1
     (nil))
(jump_insn 3910 263 3911 335 (set (pc)
        (label_ref 3667)) xalloc.c:132 -1
     (nil)
 -> 3667)
;;  succ:       301 [100.0%] 

(barrier 3911 3910 3912)
;; basic block 336, loop depth 1, count 0, freq 6
;;  prev block 335, next block 337, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       261 [100.0%] 
(code_label 3912 3911 3913 336 160 "" [1 uses])
(note 3913 3912 3914 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3914 3913 3915 336 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3915 3914 3917 336 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 3917 3915 3918 336 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 660 [ nv ])
            (const_int 0 [0]))) verify.c:160 -1
     (nil))
(jump_insn 3918 3917 3922 336 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4050)
            (pc))) verify.c:160 7 {condjump}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 4050)
;;  succ:       285 [91.0%] 
;;              337 [9.0%]  (FALLTHRU)

;; basic block 337, loop depth 1, count 0, freq 1
;;  prev block 336, next block 338, flags: (NEW, REACHABLE, RTL)
;;  pred:       336 [9.0%]  (FALLTHRU)
(note 3922 3918 3920 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3920 3922 3921 337 (set (pc)
        (label_ref 3919)) verify.c:160 -1
     (nil)
 -> 3919)
;;  succ:       335 [100.0%] 

(barrier 3921 3920 3923)
;; basic block 338, loop depth 1, count 0, freq 46, maybe hot
;;  prev block 337, next block 339, flags: (NEW, REACHABLE, RTL)
;;  pred:       210 [4.0%] 
;;              211 [20.8%] 
(code_label 3923 3921 3924 338 134 "" [2 uses])
(note 3924 3923 3925 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3925 3924 3926 338 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3926 3925 3927 338 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3927 3926 3928 338 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3928 3927 3929 338 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3929 3928 3930 338 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3930 3929 3931 338 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3931 3930 3932 338 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3932 3931 3933 338 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3933 3932 3934 338 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3934 3933 3935 338 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3935 3934 3936 338 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3936 3935 3937 338 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3937 3936 3938 338 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3938 3937 3939 338 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3939 3938 3940 338 (set (reg:DI 1847)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (nil))
(insn 3940 3939 3941 338 (set (reg:DI 1846)
        (lo_sum:DI (reg:DI 1847)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3941 3940 3942 338 (set (reg/f:DI 1845)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg:DI 1846))) graph500.c:204 -1
     (nil))
(insn 3942 3941 3943 338 (set (reg:DI 1848)
        (const_int -999 [0xfffffffffffffc19])) graph500.c:204 -1
     (nil))
(insn 3943 3942 3944 338 (set (mem:DI (reg/f:DI 1845) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1848)) graph500.c:204 -1
     (nil))
(insn 3944 3943 3945 338 (set (reg:DI 1850)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (nil))
(insn 3945 3944 3946 338 (set (reg/f:DI 1849)
        (lo_sum:DI (reg:DI 1850)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 3946 3945 3947 338 (set (reg:SI 1851)
        (mem/c:SI (reg/f:DI 1849) [3 VERBOSE+0 S4 A32])) graph500.c:205 -1
     (nil))
(insn 3947 3946 3948 338 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1851)
            (const_int 0 [0]))) graph500.c:205 -1
     (nil))
(jump_insn 3948 3947 3951 338 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 -1
     (int_list:REG_BR_PROB 9984 (nil))
 -> 3696)
;;  succ:       302 [99.8%] 
;;              339 [0.2%]  (FALLTHRU)

;; basic block 339, loop depth 0, count 0, freq 0
;;  prev block 338, next block 340, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       338 [0.2%]  (FALLTHRU)
(note 3951 3948 264 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 264 3951 3949 339 (set (reg:DI 712 [ D.3798 ])
        (const_int -999 [0xfffffffffffffc19])) graph500.c:205 -1
     (nil))
(jump_insn 3949 264 3950 339 (set (pc)
        (label_ref 3715)) graph500.c:205 -1
     (nil)
 -> 3715)
;;  succ:       303 [100.0%] 

(barrier 3950 3949 3952)
;; basic block 340, loop depth 2, count 0, freq 97, maybe hot
;;  prev block 339, next block 341, flags: (NEW, REACHABLE, RTL)
;;  pred:       323 [100.0%] 
;;              130 [100.0%] 
;;              129 [100.0%] 
(code_label 3952 3950 3953 340 89 "" [3 uses])
(note 3953 3952 3954 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3954 3953 3955 340 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3955 3954 3956 340 (var_location:SI src_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3956 3955 3957 340 (var_location:DI D#31 (ashiftrt:DI (reg/v:DI 442 [ nverts ])
        (const_int 1 [0x1]))) generator/graph_generator.c:149 -1
     (nil))
(debug_insn 3957 3956 3958 340 (var_location:DI nverts (debug_expr:DI D#31)) generator/graph_generator.c:149 -1
     (nil))
(debug_insn 3958 3957 3959 340 (var_location:SI level (clobber (const_int 0 [0]))) generator/graph_generator.c:150 -1
     (nil))
(insn 3959 3958 3960 340 (set (reg/v:DI 747 [ base_src ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 831 [ D.3798 ]))) generator/graph_generator.c:151 -1
     (nil))
(debug_insn 3960 3959 3961 340 (var_location:DI base_src (reg/v:DI 747 [ base_src ])) generator/graph_generator.c:151 -1
     (nil))
(insn 3961 3960 3962 340 (set (reg:DI 1852 [ D.3798 ])
        (mult:DI (reg:DI 829 [ D.3798 ])
            (reg/v:DI 442 [ nverts ]))) generator/graph_generator.c:152 -1
     (nil))
(insn 3962 3961 3963 340 (set (reg/v:DI 443 [ base_tgt ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 1852 [ D.3798 ]))) generator/graph_generator.c:152 -1
     (nil))
(debug_insn 3963 3962 3964 340 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:152 -1
     (nil))
(debug_insn 3964 3963 3965 340 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
(debug_insn 3965 3964 3966 340 (var_location:DI base_src (reg/v:DI 747 [ base_src ])) -1
     (nil))
(debug_insn 3966 3965 3967 340 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3967 3966 3969 340 (var_location:DI nverts (debug_expr:DI D#31)) -1
     (nil))
(insn 3969 3967 3970 340 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 -1
     (nil))
(jump_insn 3970 3969 3974 340 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3968)
            (pc))) generator/graph_generator.c:136 -1
     (int_list:REG_BR_PROB 9551 (nil))
 -> 3968)
;;  succ:       109 [95.5%] 
;;              341 [4.5%]  (FALLTHRU)

;; basic block 341, loop depth 1, count 0, freq 4
;;  prev block 340, next block 342, flags: (NEW, REACHABLE, RTL)
;;  pred:       340 [4.5%]  (FALLTHRU)
(note 3974 3970 3972 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3972 3974 3973 341 (set (pc)
        (label_ref 3971)) generator/graph_generator.c:136 -1
     (nil)
 -> 3971)
;;  succ:       131 [100.0%] 

(barrier 3973 3972 3976)
;; basic block 342, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 341, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       306 [100.0%] 
(code_label 3976 3973 3979 342 10 "" [1 uses])
(note 3979 3976 3977 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 3977 3979 3978 342 (set (reg/i:SI 0 x0)
        (reg:SI 836 [ <retval> ])) graph500.c:115 -1
     (nil))
(insn 3978 3977 0 342 (use (reg/i:SI 0 x0)) graph500.c:115 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

