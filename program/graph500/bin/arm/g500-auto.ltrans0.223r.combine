
;; Function dcmp (dcmp.lto_priv.13, funcdef_no=8, decl_uid=2793, cgraph_uid=0, symbol_order=94)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 62: 0
insn_cost 2: 4
insn_cost 63: 0
insn_cost 3: 4
(mem:DF (reg/v/f:DI 78 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])

Hot cost: 20 (final)
insn_cost 10: 20
insn_cost 11: 0
(mem:DF (reg/v/f:DI 79 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])

Hot cost: 20 (final)
insn_cost 12: 20
insn_cost 13: 0
(compare:CCFPE (reg/v:DF 74 [ da ])
    (reg/v:DF 75 [ db ]))

Hot cost: 12 (partial)
insn_cost 14: 12
insn_cost 15: 0
insn_cost 18: 0
(const_int 0 [0])

Hot cost: 0 (final)
insn_cost 7: 4
(compare:CCFP (reg/v:DF 74 [ da ])
    (reg/v:DF 75 [ db ]))

Hot cost: 12 (partial)
insn_cost 20: 12
insn_cost 21: 0
insn_cost 23: 0
insn_cost 24: 0
insn_cost 25: 0
insn_cost 26: 0
insn_cost 27: 0
insn_cost 28: 0
insn_cost 29: 0
insn_cost 30: 0
(high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))

Cold cost: 4 (final)
insn_cost 31: 4
(lo_sum:DI (reg/f:DI 81)
    (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))

Cold cost: 4 (final)
insn_cost 32: 4
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
insn_cost 33: 4
insn_cost 35: 4
(const_int 1 [0x1])

Cold cost: 4 (final)
insn_cost 36: 4
(mem/f/c:DI (lo_sum:DI (reg/f:DI 83)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])

Cold cost: 4 (final)
insn_cost 37: 4
insn_cost 38: 0
insn_cost 39: 0
insn_cost 40: 0
insn_cost 41: 0
(const_int 1 [0x1])

Hot cost: 4 (final)
insn_cost 5: 4
(const_int -1 [0xffffffffffffffff])

Hot cost: 4 (final)
insn_cost 6: 4
insn_cost 49: 4
insn_cost 50: 0

Trying 2 -> 10:
Successfully matched this instruction:
(set (reg/v:DF 74 [ da ])
    (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
(mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])

Hot cost: 20 (final)
allowing combination of insns 2 and 10
original costs 4 + 20 = 24
replacement cost 20
deferring deletion of insn with uid = 2.
modifying insn i3    10: r74:DF=[x0:DI]
      REG_DEAD x0:DI
deferring rescan insn with uid = 10.

Trying 3 -> 12:
Successfully matched this instruction:
(set (reg/v:DF 75 [ db ])
    (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
(mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])

Hot cost: 20 (final)
allowing combination of insns 3 and 12
original costs 4 + 20 = 24
replacement cost 20
deferring deletion of insn with uid = 3.
modifying insn i3    12: r75:DF=[x1:DI]
      REG_DEAD x1:DI
deferring rescan insn with uid = 12.

Trying 10 -> 14:
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (reg/v:DF 75 [ db ])))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (reg/v:DF 75 [ db ])))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])

Trying 12 -> 14:
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
    ])

Trying 12, 10 -> 14:
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])

Trying 14 -> 15:
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (reg/v:DF 74 [ da ])
                    (reg/v:DF 75 [ db ]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (reg/v:DF 75 [ db ])))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (reg/v:DF 74 [ da ])
                    (reg/v:DF 75 [ db ]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (reg/v:DF 75 [ db ])))
    ])

Trying 10, 14 -> 15:
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                    (reg/v:DF 75 [ db ]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (reg/v:DF 75 [ db ])))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                    (reg/v:DF 75 [ db ]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])
                (reg/v:DF 75 [ db ])))
        (set (reg/v:DF 74 [ da ])
            (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64]))
    ])

Trying 12, 14 -> 15:
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (reg/v:DF 74 [ da ])
                    (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (gt (reg/v:DF 74 [ da ])
                    (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
                (label_ref:DI 53)
                (pc)))
        (set (reg:CCFPE 66 cc)
            (compare:CCFPE (reg/v:DF 74 [ da ])
                (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])))
        (set (reg/v:DF 75 [ db ])
            (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64]))
    ])

Trying 20 -> 21:
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))
        (label_ref:DI 43)
        (pc)))

Trying 31 -> 32:
Failed to match this instruction:
(set (reg/f:DI 80)
    (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))

Trying 32 -> 35:
Successfully matched this instruction:
(set (reg:DI 2 x2)
    (lo_sum:DI (reg/f:DI 81)
        (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)))
(lo_sum:DI (reg/f:DI 81)
    (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))

Cold cost: 4 (final)
allowing combination of insns 32 and 35
original costs 4 + 4 = 8
replacement cost 4
deferring deletion of insn with uid = 32.
modifying insn i3    35: x2:DI=r81:DI+low(`*.LC0')
      REG_DEAD r81:DI
      REG_EQUAL `*.LC0'
deferring rescan insn with uid = 35.

Trying 31 -> 35:
Failed to match this instruction:
(set (reg:DI 2 x2)
    (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))

Trying 33 -> 37:
Failed to match this instruction:
(set (reg:DI 0 x0)
    (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64]))

Trying 35 -> 38:

Trying 36 -> 38:

Trying 37 -> 38:

Trying 31, 35 -> 38:

Trying 33, 37 -> 38:

Trying 36, 35 -> 38:

Trying 37, 35 -> 38:

Trying 37, 36 -> 38:

Trying 31, 36, 35 -> 38:

Trying 31, 37, 35 -> 38:

Trying 33, 37, 35 -> 38:

Trying 33, 37, 36 -> 38:

Trying 35 -> 38:

Trying 49 -> 50:
Failed to match this instruction:
(parallel [
        (use (reg:SI 73 [ D.3115 ]))
        (set (reg/i:SI 0 x0)
            (reg:SI 73 [ D.3115 ]))
    ])
Failed to match this instruction:
(parallel [
        (use (reg:SI 73 [ D.3115 ]))
        (set (reg/i:SI 0 x0)
            (reg:SI 73 [ D.3115 ]))
    ])
starting the processing of deferred insns
rescanning insn with uid = 10.
rescanning insn with uid = 12.
rescanning insn with uid = 35.
ending the processing of deferred insns


dcmp

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 16[x16] 17[x17] 30[x30] 31[sp] 66[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={3d} r29={1d,8u} r30={3d} r31={1d,10u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,8u} r65={1d,7u} r66={4d,3u} r73={3d,1u} r74={1d,3u} r75={1d,3u} r81={1d,1u} r83={1d,1u} 
;;    total ref usage 184{130d,54u,0e} in 33{31 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(29){ }u1(31){ }u2(64){ }u3(65){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 74 75 78 79
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 66 [cc] 74 75 78 79
;; live  kill	
(note 8 0 62 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 8 2 2 (var_location:DI D#6 (reg:DI 0 x0 [ a ])) -1
     (nil))
(note 2 62 63 2 NOTE_INSN_DELETED)
(debug_insn 63 2 3 2 (var_location:DI D#7 (reg:DI 1 x1 [ b ])) -1
     (nil))
(note 3 63 4 2 NOTE_INSN_DELETED)
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/v:DF 74 [ da ])
        (mem:DF (reg:DI 0 x0 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0 [ a ])
        (nil)))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 74 [ da ])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 75 [ db ])
        (mem:DF (reg:DI 1 x1 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ b ])
        (nil)))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 75 [ db ])) graph500.c:240 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:241 395 {*cmpedf}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
;;  succ:       6 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(29){ }u16(31){ }u17(64){ }u18(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc]
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  gen 	
;; live  kill	
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 16 19 3 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 57)
;;  succ:       7 [4.0%] 
;;              4 [96.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75

;; basic block 4, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [96.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(29){ }u21(31){ }u22(64){ }u23(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  def 	 66 [cc] 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  gen 	 66 [cc] 73
;; live  kill	
(note 19 18 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 7 19 20 4 (set (reg:SI 73 [ D.3115 ])
        (const_int 0 [0])) graph500.c:243 47 {*movsi_aarch64}
     (nil))
(insn 20 7 21 4 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:243 393 {*cmpdf}
     (expr_list:REG_DEAD (reg/v:DF 75 [ db ])
        (expr_list:REG_DEAD (reg/v:DF 74 [ da ])
            (nil))))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) graph500.c:243 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFP 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 43)
;;  succ:       8 [100.0%] 
;;              5 [0.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 5, loop depth 0, count 0, freq 2
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(29){ }u28(31){ }u29(64){ }u30(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 80 81 83
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 80 81 83
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 5 (var_location:DI D#2 (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 24 23 25 5 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 25 24 26 5 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 5 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 5 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 5 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 81)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(note 32 31 33 5 NOTE_INSN_DELETED)
(insn 33 32 35 5 (set (reg/f:DI 83)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 48 {*movdi_aarch64}
     (nil))
(insn 35 33 36 5 (set (reg:DI 2 x2)
        (lo_sum:DI (reg/f:DI 81)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
            (nil))))
(insn 36 35 37 5 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 37 36 38 5 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 83)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 38 37 39 5 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 5 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 53 5 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 6, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       2 [39.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(29){ }u40(31){ }u41(64){ }u42(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 53 41 52 6 3 "" [1 uses])
(note 52 53 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 52 57 6 (set (reg:SI 73 [ D.3115 ])
        (const_int 1 [0x1])) graph500.c:241 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 7, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3 [4.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(29){ }u44(31){ }u45(64){ }u46(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 57 5 56 7 4 "" [1 uses])
(note 56 57 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 56 43 7 (set (reg:SI 73 [ D.3115 ])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 8, loop depth 0, count 0, freq 9998, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       4 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(29){ }u48(31){ }u49(64){ }u50(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  gen 	 0 [x0]
;; live  kill	
(code_label 43 6 44 8 2 "" [1 uses])
(note 44 43 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 44 50 8 (set (reg/i:SI 0 x0)
        (reg:SI 73 [ D.3115 ])) graph500.c:247 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 73 [ D.3115 ])
        (nil)))
(insn 50 49 0 8 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

