
;; Function dcmp (dcmp.lto_priv.13, funcdef_no=8, decl_uid=2793, cgraph_uid=0, symbol_order=94)

starting the processing of deferred insns
ending the processing of deferred insns


dcmp

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 16[x16] 17[x17] 30[x30] 31[sp] 66[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={3d} r29={1d,8u} r30={3d} r31={1d,10u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,8u} r65={1d,7u} r66={5d,3u} r73={3d,1u} r74={1d,4u} r75={1d,4u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r83={1d,1u} 
;;    total ref usage 193{134d,59u,0e} in 37{35 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(29){ }u1(31){ }u2(64){ }u3(65){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 74 75 78 79
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 66 [cc] 74 75 78 79
;; live  kill	
(note 8 0 62 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 8 2 2 (var_location:DI D#6 (reg:DI 0 x0 [ a ])) -1
     (nil))
(insn 2 62 63 2 (set (reg/v/f:DI 78 [ a ])
        (reg:DI 0 x0 [ a ])) graph500.c:238 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0 [ a ])
        (nil)))
(debug_insn 63 2 3 2 (var_location:DI D#7 (reg:DI 1 x1 [ b ])) -1
     (nil))
(insn 3 63 4 2 (set (reg/v/f:DI 79 [ b ])
        (reg:DI 1 x1 [ b ])) graph500.c:238 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ b ])
        (nil)))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/v:DF 74 [ da ])
        (mem:DF (reg/v/f:DI 78 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 78 [ a ])
        (nil)))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 74 [ da ])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 75 [ db ])
        (mem:DF (reg/v/f:DI 79 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 79 [ b ])
        (nil)))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 75 [ db ])) graph500.c:240 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:241 395 {*cmpedf}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 53)
;;  succ:       6 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(29){ }u16(31){ }u17(64){ }u18(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  gen 	 66 [cc]
;; live  kill	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:242 395 {*cmpedf}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 57)
;;  succ:       7 [4.0%] 
;;              4 [96.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75

;; basic block 4, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [96.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(29){ }u23(31){ }u24(64){ }u25(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  def 	 66 [cc] 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  gen 	 66 [cc] 73
;; live  kill	
(note 19 18 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 7 19 20 4 (set (reg:SI 73 [ D.3115 ])
        (const_int 0 [0])) graph500.c:243 47 {*movsi_aarch64}
     (nil))
(insn 20 7 21 4 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:243 393 {*cmpdf}
     (expr_list:REG_DEAD (reg/v:DF 75 [ db ])
        (expr_list:REG_DEAD (reg/v:DF 74 [ da ])
            (nil))))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) graph500.c:243 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFP 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 43)
;;  succ:       8 [100.0%] 
;;              5 [0.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 5, loop depth 0, count 0, freq 2
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(29){ }u30(31){ }u31(64){ }u32(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 80 81 83
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 80 81 83
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 5 (var_location:DI D#2 (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 24 23 25 5 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 25 24 26 5 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 5 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 5 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 5 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 81)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 80)
        (lo_sum:DI (reg/f:DI 81)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
            (nil))))
(insn 33 32 35 5 (set (reg/f:DI 83)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 48 {*movdi_aarch64}
     (nil))
(insn 35 33 36 5 (set (reg:DI 2 x2)
        (reg/f:DI 80)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
            (nil))))
(insn 36 35 37 5 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 37 36 38 5 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 83)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
        (expr_list:REG_DEAD (reg/f:DI 82)
            (nil))))
(call_insn 38 37 39 5 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 5 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 53 5 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 6, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(29){ }u43(31){ }u44(64){ }u45(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 53 41 52 6 3 "" [1 uses])
(note 52 53 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 52 57 6 (set (reg:SI 73 [ D.3115 ])
        (const_int 1 [0x1])) graph500.c:241 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 7, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(29){ }u47(31){ }u48(64){ }u49(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 57 5 56 7 4 "" [1 uses])
(note 56 57 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 56 43 7 (set (reg:SI 73 [ D.3115 ])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 8, loop depth 0, count 0, freq 9998, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(29){ }u55(31){ }u56(64){ }u57(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  gen 	 0 [x0]
;; live  kill	
(code_label 43 6 44 8 2 "" [1 uses])
(note 44 43 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 44 50 8 (set (reg/i:SI 0 x0)
        (reg:SI 73 [ D.3115 ])) graph500.c:247 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 73 [ D.3115 ])
        (nil)))
(insn 50 49 0 8 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]


;; Function main (main, funcdef_no=10, decl_uid=2796, cgraph_uid=2, symbol_order=92) (executed once)

*****starting processing of loop 12 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 255, 256, 257, 258, 259, 295
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 12 ( 0.04)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 11 (0.037)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 12 ( 0.04)


starting region dump


main

Dataflow summary:
def_info->table_size = 20, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,3u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d,1u} r1798={1d,1u} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d,1u} r1866={1d,1u} r1867={1d,1u} r1868={1d,1u} 
;;    total ref usage 11577{7851d,3655u,71e} in 2700{2565 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8
;;  reg->defs[] map:	66[0,8] 436[9,9] 710[10,10] 715[11,13] 1804[14,14] 1805[15,15] 1806[16,16] 1865[17,17] 1866[18,18] 1868[19,19] 
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u3640(29){ }u3641(31){ }u3642(64){ }u3643(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 715
;; lr  def 	 66 [cc] 1804 1805
;; live  in  	 436 715
;; live  gen 	 66 [cc] 1804 1805
;; live  kill	
;; rd  in  	(3) 436[9],715[12,13]
;; rd  gen 	(3) 66[2],1804[14],1805[15]
;; rd  kill	(11) 66[0,1,2,3,4,5,6,7,8],1804[14],1805[15]
;;  UD chains for artificial uses at top

(code_label 3623 258 3586 255 175 "" [0 uses])
(note 3586 3623 3587 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3587
;;      reg 436 { d9(bb 259 insn 3619) }
(debug_insn 3587 3586 3588 255 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3588
;;      reg 715 { d13(bb 258 insn 261) d12(bb 257 insn 4330) }
(debug_insn 3588 3587 3589 255 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3589
;;      reg 715 { d13(bb 258 insn 261) d12(bb 257 insn 4330) }
(debug_insn 3589 3588 3590 255 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:161 -1
     (nil))
;;   UD chains for insn luid 3 uid 3590
;;      reg 715 { d13(bb 258 insn 261) d12(bb 257 insn 4330) }
(insn 3590 3589 3591 255 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 4 uid 3591
;;      reg 66 { d0(bb 255 insn 3590) }
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 624 { }
(insn 3591 3590 3592 255 (set (reg:CC_DNE 66 cc)
        (compare (and:SI (ne (reg:CC_DEQ 66 cc)
                    (const_int 0 [0]))
                (ne (reg/v:DI 436 [ k ])
                    (reg:DI 624 [ D.3798 ])))
            (const_int 0 [0]))) verify.c:162 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 5 uid 3592
;;      reg 66 { d1(bb 255 insn 3591) }
(insn 3592 3591 3594 255 (set:SI (reg:SI 1804)
        (ne:SI (reg:CC_DNE 66 cc)
            (const_int 0 [0]))) verify.c:162 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DNE 66 cc)
        (nil)))
;;   UD chains for insn luid 6 uid 3594
;;      reg 1804 { d14(bb 255 insn 3592) }
(insn 3594 3592 3595 255 (set (reg:SI 1805 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1804) 0))) verify.c:162 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1804)
        (nil)))
;;   UD chains for insn luid 7 uid 3595
;;      reg 1805 { d15(bb 255 insn 3594) }
(insn 3595 3594 3596 255 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1805 [ D.3813 ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1805 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 8 uid 3596
;;      reg 66 { d2(bb 255 insn 3595) }
(jump_insn 3596 3595 3597 255 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3616)
            (pc))) verify.c:162 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3616)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; live  out 	 436 715
;; rd  out 	(3) 436[9],715[12,13]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u3656(29){ }u3657(31){ }u3658(64){ }u3659(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 647
;; lr  def 	 66 [cc] 710
;; live  in  	 436
;; live  gen 	 66 [cc] 710
;; live  kill	
;; rd  in  	(6) 66[2],436[9],715[12,13],1804[14],1805[15]
;; rd  gen 	(2) 66[3],710[10]
;; rd  kill	(10) 66[0,1,2,3,4,5,6,7,8],710[10]
;;  UD chains for artificial uses at top

(note 3597 3596 3599 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3599
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 647 { }
(insn 3599 3597 3600 256 (set (reg:DI 710 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3600
;;      reg 710 { d10(bb 256 insn 3599) }
(insn 3600 3599 3601 256 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 710 [ D.3798 ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3601
;;      reg 66 { d3(bb 256 insn 3600) }
(jump_insn 3601 3600 3602 256 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4029)
            (pc))) verify.c:163 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4029)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 710 746 1861
;; live  out 	 436 710
;; rd  out 	(2) 436[9],710[10]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u3665(29){ }u3666(31){ }u3667(64){ }u3668(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 710 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 710 746
;; lr  def 	 66 [cc] 715 1806 1865 1866 1868
;; live  in  	 436 710
;; live  gen 	 66 [cc] 715 1806 1865 1866 1868
;; live  kill	
;; rd  in  	(2) 436[9],710[10]
;; rd  gen 	(6) 66[7],715[12],1806[16],1865[17],1866[18],1868[19]
;; rd  kill	(16) 66[0,1,2,3,4,5,6,7,8],715[11,12,13],1806[16],1865[17],1866[18],1868[19]
;;  UD chains for artificial uses at top

(note 3602 3601 3603 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3603
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 746 { }
(insn 3603 3602 3604 257 (set (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 746 [ seen_edge ])) [4 MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3604
;;      reg 1806 { d16(bb 257 insn 3603) }
(insn 3604 3603 4321 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 2 uid 4321
(insn 4321 3604 4322 257 (set (reg:SI 1865)
        (const_int -15 [0xfffffffffffffff1])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 4322
(insn 4322 4321 4323 257 (set (reg:SI 1866)
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 4323
;;      reg 1806 { d16(bb 257 insn 3603) }
(insn 4323 4322 4324 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 4324
;;      reg 66 { d5(bb 257 insn 4323) }
;;      reg 1865 { d17(bb 257 insn 4321) }
;;      reg 1866 { d18(bb 257 insn 4322) }
(insn 4324 4323 3609 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:SI 1865)
            (reg:SI 1866))) verify.c:163 442 {*cmovsi_insn}
     (nil))
;;   UD chains for insn luid 6 uid 3609
;;      reg 715 { d11(bb 257 insn 4324) }
(debug_insn 3609 4324 3610 257 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3610
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 710 { d10(bb 256 insn 3599) }
(insn 3610 3609 4328 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:165 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 710 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 8 uid 4328
(insn 4328 3610 4329 257 (set (reg:SI 1868)
        (const_int -16 [0xfffffffffffffff0])) verify.c:166 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 4329
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 710 { d10(bb 256 insn 3599) }
(insn 4329 4328 4330 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:166 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 10 uid 4330
;;      reg 66 { d7(bb 257 insn 4329) }
;;      reg 715 { d11(bb 257 insn 4324) }
;;      reg 1868 { d19(bb 257 insn 4328) }
(insn 4330 4329 4029 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg/v:SI 715 [ err ])
            (reg:SI 1868))) verify.c:166 442 {*cmovsi_insn}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; live  out 	 436 715
;; rd  out 	(2) 436[9],715[12]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u3689(29){ }u3690(31){ }u3691(64){ }u3692(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 436
;; live  gen 	 715
;; live  kill	
;; rd  in  	(2) 436[9],710[10]
;; rd  gen 	(1) 715[13]
;; rd  kill	(3) 715[11,12,13]
;;  UD chains for artificial uses at top

(code_label 4029 4330 4028 258 209 "" [1 uses])
(note 4028 4029 261 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 261
(insn 261 4028 3615 258 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3615
(debug_insn 3615 261 3616 258 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; live  out 	 436 715
;; rd  out 	(2) 436[9],715[13]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u3698(29){ }u3699(31){ }u3700(64){ }u3701(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 1861
;; lr  def 	 66 [cc] 436
;; live  in  	 436 715
;; live  gen 	 66 [cc] 436
;; live  kill	
;; rd  in  	(6) 66[2],436[9],715[12,13],1804[14],1805[15]
;; rd  gen 	(2) 66[8],436[9]
;; rd  kill	(10) 66[0,1,2,3,4,5,6,7,8],436[9]
;;  UD chains for artificial uses at top

(code_label 3616 3615 3617 259 172 "" [1 uses])
(note 3617 3616 3618 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3618
;;      reg 715 { d13(bb 258 insn 261) d12(bb 257 insn 4330) }
(debug_insn 3618 3617 3619 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3619
;;      reg 436 { d9(bb 259 insn 3619) }
(insn 3619 3618 3621 259 (set (reg/v:DI 436 [ k ])
        (plus:DI (reg/v:DI 436 [ k ])
            (const_int 1 [0x1]))) verify.c:160 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3621
;;      reg 436 { d9(bb 259 insn 3619) }
(debug_insn 3621 3619 3622 259 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3622
;;      reg 715 { d13(bb 258 insn 261) d12(bb 257 insn 4330) }
(debug_insn 3622 3621 3624 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3624
;;      reg 436 { d9(bb 259 insn 3619) }
;;      reg 1861 { }
(insn 3624 3622 3625 259 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 1861 [ D.3798 ]))) verify.c:160 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3625
;;      reg 66 { d8(bb 259 insn 3624) }
(jump_insn 3625 3624 4338 259 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4338)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4338)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; live  out 	 436 715
;; rd  out 	(3) 436[9],715[12,13]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 436 715
;; live  gen 	
;; live  kill	
;; rd  in  	(3) 436[9],715[12,13]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4338 3625 4337 295 278 "" [1 uses])
(note 4337 4338 3626 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 647 715 746 1861
;; live  out 	 436 715
;; rd  out 	(3) 436[9],715[12,13]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 12 ******
(const_int -15 [0xfffffffffffffff1])

Hot cost: 4 (final)
(set (reg:SI 1865)
    (const_int -15 [0xfffffffffffffff1]))

Hot cost: 4 (final)
Set in insn 4321 is invariant (0), cost 4, depends on 
(set (reg:SI 1866)
    (const_int 0 [0]))

Hot cost: 4 (final)
Set in insn 4322 is invariant (1), cost 4, depends on 
(const_int -16 [0xfffffffffffffff0])

Hot cost: 4 (final)
(set (reg:SI 1868)
    (const_int -16 [0xfffffffffffffff0]))

Hot cost: 4 (final)
Set in insn 4328 is invariant (2), cost 4, depends on 
Decided to move invariant 0 -- gain 4
Decided to move invariant 1 -- gain 4
Decided to move invariant 2 -- gain 4
deferring rescan insn with uid = 4321.
deferring rescan insn with uid = 4324.
deferring rescan insn with uid = 4349.
changing bb of uid 4321
  from 257 to 254
deferring rescan insn with uid = 4322.
deferring rescan insn with uid = 4324.
deferring rescan insn with uid = 4350.
changing bb of uid 4322
  from 257 to 254
deferring rescan insn with uid = 4328.
deferring rescan insn with uid = 4330.
deferring rescan insn with uid = 4351.
changing bb of uid 4328
  from 257 to 254
*****starting processing of loop 13 ******
starting the processing of deferred insns
rescanning insn with uid = 4321.
rescanning insn with uid = 4322.
rescanning insn with uid = 4324.
rescanning insn with uid = 4328.
rescanning insn with uid = 4330.
rescanning insn with uid = 4349.
rescanning insn with uid = 4350.
rescanning insn with uid = 4351.
ending the processing of deferred insns
setting blocks to analyze 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 270, 271, 272, 281, 282, 283, 284, 285, 296
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 48 ( 0.16)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 48 ( 0.16)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 49 ( 0.16)


starting region dump


main

Dataflow summary:
def_info->table_size = 67, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,3u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d,1u} r1798={1d,1u} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} 
;;    total ref usage 11583{7854d,3658u,71e} in 2703{2568 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  reg->defs[] map:	66[0,22] 610[23,23] 674[24,24] 675[25,25] 679[26,26] 688[27,27] 690[28,28] 692[29,29] 694[30,30] 708[31,31] 715[32,38] 716[39,45] 1780[46,46] 1781[47,47] 1783[48,48] 1785[49,49] 1786[50,50] 1788[51,51] 1790[52,52] 1791[53,53] 1793[54,54] 1794[55,55] 1796[56,56] 1797[57,57] 1798[58,58] 1799[59,59] 1800[60,60] 1801[61,61] 1802[62,62] 1842[63,63] 1843[64,64] 1844[65,65] 1867[66,66] 
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u3457(29){ }u3458(31){ }u3459(64){ }u3460(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 715
;; lr  def 	 66 [cc] 674 675 716 1780 1781
;; live  in  	 610 708 715
;; live  gen 	 66 [cc] 674 675 716 1780 1781
;; live  kill	
;; rd  in  	(9) 610[23],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(6) 66[2],674[24],675[25],716[39],1780[46],1781[47]
;; rd  kill	(34) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],674[24],675[25],716[39,40,41,42,43,44,45],1780[46],1781[47]
;;  UD chains for artificial uses at top

(code_label 3573 245 3472 238 170 "" [0 uses])
(note 3472 3573 3473 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3473
(debug_insn 3473 3472 3474 238 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3474
(debug_insn 3474 3473 3475 238 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3475
;;      reg 610 { d23(bb 283 insn 3885) }
(debug_insn 3475 3474 3476 238 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3476
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(debug_insn 3476 3475 3478 238 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3478
;;      reg 708 { d31(bb 251 insn 3572) }
(insn 3478 3476 3479 238 (set (reg/v:DI 674 [ i ])
        (mem:DI (plus:DI (reg:DI 708 [ ivtmp.64 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _1398, offset: -8B]+0 S8 A64])) verify.c:118 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3479
;;      reg 674 { d24(bb 238 insn 3478) }
(debug_insn 3479 3478 3480 238 (var_location:DI i (reg/v:DI 674 [ i ])) verify.c:118 -1
     (nil))
;;   UD chains for insn luid 6 uid 3480
;;      reg 708 { d31(bb 251 insn 3572) }
(insn 3480 3479 3481 238 (set (reg/v:DI 675 [ j ])
        (mem:DI (reg:DI 708 [ ivtmp.64 ]) [4 MEM[base: _1398, offset: 0B]+0 S8 A64])) verify.c:119 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 3481
;;      reg 675 { d25(bb 238 insn 3480) }
(debug_insn 3481 3480 3482 238 (var_location:DI j (reg/v:DI 675 [ j ])) verify.c:119 -1
     (nil))
;;   UD chains for insn luid 8 uid 3482
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(debug_insn 3482 3481 3483 238 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:121 -1
     (nil))
;;   UD chains for insn luid 9 uid 3483
;;      reg 674 { d24(bb 238 insn 3478) }
(insn 3483 3482 3484 238 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (const_int 0 [0]))) verify.c:123 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 10 uid 3484
;;      reg 66 { d0(bb 238 insn 3483) }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3484 3483 3485 238 (set (reg:CC_DLT 66 cc)
        (compare (ior:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (lt (reg/v:DI 675 [ j ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:123 6 {ccmp_iordi}
     (nil))
;;   UD chains for insn luid 11 uid 3485
;;      reg 66 { d1(bb 238 insn 3484) }
(insn 3485 3484 3487 238 (set:SI (reg:SI 1780)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:123 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
;;   UD chains for insn luid 12 uid 3487
;;      reg 1780 { d46(bb 238 insn 3485) }
(insn 3487 3485 246 238 (set (reg:SI 1781 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1780) 0))) verify.c:123 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1780)
        (nil)))
;;   UD chains for insn luid 13 uid 246
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(insn 246 3487 3488 238 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:123 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 14 uid 3488
;;      reg 1781 { d47(bb 238 insn 3487) }
(insn 3488 246 3489 238 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1781 [ D.3813 ])
            (const_int 0 [0]))) verify.c:123 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1781 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 15 uid 3489
;;      reg 66 { d2(bb 238 insn 3488) }
(jump_insn 3489 3488 3490 238 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:123 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3562)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 708 715 720 746
;; live  out 	 610 674 675 708 715
;; rd  out 	(11) 610[23],674[24],675[25],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u3477(29){ }u3478(31){ }u3479(64){ }u3480(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 679 1783 1785 1786 1788
;; live  in  	 610 674 675 708 715
;; live  gen 	 66 [cc] 679 1783 1785 1786 1788
;; live  kill	
;; rd  in  	(15) 66[2],610[23],674[24],675[25],708[31],715[32,33,34,35,36,37,38],716[39],1780[46],1781[47]
;; rd  gen 	(6) 66[5],679[26],1783[48],1785[49],1786[50],1788[51]
;; rd  kill	(28) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],679[26],1783[48],1785[49],1786[50],1788[51]
;;  UD chains for artificial uses at top

(note 3490 3489 3491 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3491
;;      reg 623 { }
;;      reg 674 { d24(bb 238 insn 3478) }
(insn 3491 3490 3492 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 674 [ i ]))) verify.c:124 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3492
;;      reg 66 { d3(bb 239 insn 3491) }
(insn 3492 3491 3494 239 (set (reg:SI 1783)
        (lt:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 2 uid 3494
;;      reg 1783 { d48(bb 239 insn 3492) }
(insn 3494 3492 3495 239 (set (reg:SI 679 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1783) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1783)
        (nil)))
;;   UD chains for insn luid 3 uid 3495
;;      reg 623 { }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3495 3494 3496 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:124 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 4 uid 3496
;;      reg 66 { d4(bb 239 insn 3495) }
(insn 3496 3495 3498 239 (set (reg:SI 1785)
        (ge:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 5 uid 3498
;;      reg 679 { d26(bb 239 insn 3494) }
;;      reg 1785 { d49(bb 239 insn 3496) }
(insn 3498 3496 3500 239 (set (reg:SI 1786)
        (and:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1785))) verify.c:124 465 {andsi3}
     (expr_list:REG_DEAD (reg:SI 1785)
        (nil)))
;;   UD chains for insn luid 6 uid 3500
;;      reg 1786 { d50(bb 239 insn 3498) }
(insn 3500 3498 3501 239 (set (reg:SI 1788)
        (zero_extend:SI (subreg:QI (reg:SI 1786) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1786)
        (nil)))
;;   UD chains for insn luid 7 uid 3501
;;      reg 1788 { d51(bb 239 insn 3500) }
(insn 3501 3500 3502 239 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1788)
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1788)
        (nil)))
;;   UD chains for insn luid 8 uid 3502
;;      reg 66 { d5(bb 239 insn 3501) }
(jump_insn 3502 3501 3503 239 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3782)
            (pc))) verify.c:124 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3782)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 679 708 715 720 746
;; live  out 	 610 674 675 679 708 715
;; rd  out 	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u3496(29){ }u3497(31){ }u3498(64){ }u3499(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 679 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 1790 1791
;; live  in  	 610 674 675 679 708 715
;; live  gen 	 66 [cc] 1790 1791
;; live  kill	
;; rd  in  	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(3) 66[8],1790[52],1791[53]
;; rd  kill	(25) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],1790[52],1791[53]
;;  UD chains for artificial uses at top

(note 3503 3502 3504 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3504
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(debug_insn 3504 3503 3505 240 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3505
;;      reg 623 { }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3505 3504 3506 240 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3506
;;      reg 66 { d6(bb 240 insn 3505) }
;;      reg 623 { }
;;      reg 674 { d24(bb 238 insn 3478) }
(insn 3506 3505 3507 240 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 3 uid 3507
;;      reg 66 { d7(bb 240 insn 3506) }
(insn 3507 3506 3509 240 (set:SI (reg:SI 1790)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 4 uid 3509
;;      reg 1790 { d52(bb 240 insn 3507) }
(insn 3509 3507 3510 240 (set (reg:SI 1791 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1790) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1790)
        (nil)))
;;   UD chains for insn luid 5 uid 3510
;;      reg 1791 { d53(bb 240 insn 3509) }
(insn 3510 3509 3511 240 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1791 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1791 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3511
;;      reg 66 { d8(bb 240 insn 3510) }
(jump_insn 3511 3510 3512 240 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4014)
            (pc))) verify.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4014)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 679 708 715 720 746
;; live  out 	 610 674 675 679 708 715
;; rd  out 	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u3511(29){ }u3512(31){ }u3513(64){ }u3514(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 679 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 679 715
;; lr  def 	 66 [cc] 716 1793 1794 1796
;; live  in  	 610 674 675 679 708 715
;; live  gen 	 66 [cc] 716 1793 1794 1796
;; live  kill	
;; rd  in  	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(5) 66[10],716[40],1793[54],1794[55],1796[56]
;; rd  kill	(33) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],716[39,40,41,42,43,44,45],1793[54],1794[55],1796[56]
;;  UD chains for artificial uses at top

(note 3512 3511 3513 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3513
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(debug_insn 3513 3512 3514 241 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3514
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(insn 3514 3513 3515 241 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 2 uid 3515
;;      reg 66 { d9(bb 241 insn 3514) }
(insn 3515 3514 3517 241 (set (reg:SI 1793)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:127 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3517
;;      reg 679 { d26(bb 239 insn 3494) }
;;      reg 1793 { d54(bb 241 insn 3515) }
(insn 3517 3515 3519 241 (set (reg:SI 1794)
        (ior:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1793))) verify.c:127 466 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 1793)
        (expr_list:REG_DEAD (reg:SI 679 [ D.3813 ])
            (nil))))
;;   UD chains for insn luid 4 uid 3519
;;      reg 1794 { d55(bb 241 insn 3517) }
(insn 3519 3517 247 241 (set (reg:SI 1796)
        (zero_extend:SI (subreg:QI (reg:SI 1794) 0))) verify.c:127 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1794)
        (nil)))
;;   UD chains for insn luid 5 uid 247
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(insn 247 3519 3520 241 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:127 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3520
;;      reg 1796 { d56(bb 241 insn 3519) }
(insn 3520 247 3521 241 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1796)
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1796)
        (nil)))
;;   UD chains for insn luid 7 uid 3521
;;      reg 66 { d10(bb 241 insn 3520) }
(jump_insn 3521 3520 3522 241 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:127 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 3562)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 708 715 720 746
;; live  out 	 610 674 675 708 715
;; rd  out 	(11) 610[23],674[24],675[25],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u3525(29){ }u3526(31){ }u3527(64){ }u3528(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 674
;; lr  def 	 66 [cc] 688 690
;; live  in  	 610 674 675 708
;; live  gen 	 66 [cc] 688 690
;; live  kill	
;; rd  in  	(11) 610[23],674[24],675[25],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(3) 66[11],688[27],690[28]
;; rd  kill	(25) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],688[27],690[28]
;;  UD chains for artificial uses at top

(note 3522 3521 3523 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3523
;;      reg 674 { d24(bb 238 insn 3478) }
(insn 3523 3522 3524 242 (set (reg:DI 688 [ D.3802 ])
        (ashift:DI (reg/v:DI 674 [ i ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 3524
;;      reg 647 { }
;;      reg 688 { d27(bb 242 insn 3523) }
(insn 3524 3523 3525 242 (set (reg:DI 690 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 688 [ D.3802 ])) [4 *_674+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3525
;;      reg 690 { d28(bb 242 insn 3524) }
(insn 3525 3524 3526 242 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 690 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3526
;;      reg 66 { d11(bb 242 insn 3525) }
(jump_insn 3526 3525 3527 242 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3894)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 3894)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 708 720 746
;; live  out 	 610 674 675 688 690 708
;; rd  out 	(6) 610[23],674[24],675[25],688[27],690[28],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u3534(29){ }u3535(31){ }u3536(64){ }u3537(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 692 694
;; live  in  	 610 674 675 688 690 708
;; live  gen 	 66 [cc] 692 694
;; live  kill	
;; rd  in  	(6) 610[23],674[24],675[25],688[27],690[28],708[31]
;; rd  gen 	(3) 66[12],692[29],694[30]
;; rd  kill	(25) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],692[29],694[30]
;;  UD chains for artificial uses at top

(note 3527 3526 3528 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3528
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3528 3527 3529 243 (set (reg:DI 692 [ D.3802 ])
        (ashift:DI (reg/v:DI 675 [ j ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 3529
;;      reg 647 { }
;;      reg 692 { d29(bb 243 insn 3528) }
(insn 3529 3528 3530 243 (set (reg:DI 694 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 692 [ D.3802 ])) [4 *_678+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3530
;;      reg 694 { d30(bb 243 insn 3529) }
(insn 3530 3529 3531 243 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 694 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3531
;;      reg 66 { d12(bb 243 insn 3530) }
(jump_insn 3531 3530 3887 243 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4020)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4020)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 692 694 708 720 746
;; live  out 	 610 674 675 688 690 692 694 708
;; rd  out 	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u3543(29){ }u3544(31){ }u3545(64){ }u3546(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 692 694 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 675 690
;; lr  def 	 66 [cc]
;; live  in  	 610 674 675 688 690 692 694 708
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;; rd  gen 	(1) 66[13]
;; rd  kill	(23) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]
;;  UD chains for artificial uses at top

(code_label 3887 3531 3535 244 190 "" [1 uses])
(note 3535 3887 3536 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3536
;;      reg 675 { d25(bb 238 insn 3480) }
;;      reg 690 { d28(bb 242 insn 3524) }
(insn 3536 3535 3537 244 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 675 [ j ])
            (reg:DI 690 [ D.3798 ]))) verify.c:145 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 690 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
            (nil))))
;;   UD chains for insn luid 1 uid 3537
;;      reg 66 { d13(bb 244 insn 3536) }
(jump_insn 3537 3536 3538 244 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3541)
            (pc))) verify.c:145 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3541)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 688 692 694 708 720 746
;; live  out 	 610 674 688 692 694 708
;; rd  out 	(6) 610[23],674[24],688[27],692[29],694[30],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u3550(29){ }u3551(31){ }u3552(64){ }u3553(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 688 692 694 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 688 746
;; lr  def 	 1797
;; live  in  	 610 674 688 692 694 708
;; live  gen 	 1797
;; live  kill	
;; rd  in  	(6) 610[23],674[24],688[27],692[29],694[30],708[31]
;; rd  gen 	(1) 1797[57]
;; rd  kill	(1) 1797[57]
;;  UD chains for artificial uses at top

(note 3538 3537 3539 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3539
(insn 3539 3538 3540 245 (set (reg:DI 1797)
        (const_int 1 [0x1])) verify.c:146 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3540
;;      reg 688 { d27(bb 242 insn 3523) }
;;      reg 746 { }
;;      reg 1797 { d57(bb 245 insn 3539) }
(insn 3540 3539 3541 245 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 688 [ D.3802 ])) [4 *_687+0 S8 A64])
        (reg:DI 1797)) verify.c:146 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1797)
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 688 692 694 708 720 746
;; live  out 	 610 674 688 692 694 708
;; rd  out 	(6) 610[23],674[24],688[27],692[29],694[30],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u3557(29){ }u3558(31){ }u3559(64){ }u3560(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 688 692 694 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 674 694
;; lr  def 	 66 [cc]
;; live  in  	 610 674 688 692 694 708
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(6) 610[23],674[24],688[27],692[29],694[30],708[31]
;; rd  gen 	(1) 66[14]
;; rd  kill	(23) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]
;;  UD chains for artificial uses at top

(code_label 3541 3540 3542 246 167 "" [1 uses])
(note 3542 3541 3543 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3543
;;      reg 674 { d24(bb 238 insn 3478) }
;;      reg 694 { d30(bb 243 insn 3529) }
(insn 3543 3542 3544 246 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg:DI 694 [ D.3798 ]))) verify.c:147 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 694 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
            (nil))))
;;   UD chains for insn luid 1 uid 3544
;;      reg 66 { d14(bb 246 insn 3543) }
(jump_insn 3544 3543 3548 246 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3548)
            (pc))) verify.c:147 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 3548)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 688 692 708 720 746
;; live  out 	 610 688 692 708
;; rd  out 	(4) 610[23],688[27],692[29],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u3564(29){ }u3565(31){ }u3566(64){ }u3567(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 688 692 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 692 746
;; lr  def 	 1798
;; live  in  	 610 688 692 708
;; live  gen 	 1798
;; live  kill	
;; rd  in  	(4) 610[23],688[27],692[29],708[31]
;; rd  gen 	(1) 1798[58]
;; rd  kill	(1) 1798[58]
;;  UD chains for artificial uses at top

(code_label 3548 3544 3549 247 168 "" [1 uses])
(note 3549 3548 3550 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3550
(insn 3550 3549 3551 247 (set (reg:DI 1798)
        (const_int 1 [0x1])) verify.c:148 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3551
;;      reg 692 { d29(bb 243 insn 3528) }
;;      reg 746 { }
;;      reg 1798 { d58(bb 247 insn 3550) }
(insn 3551 3550 3552 247 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 692 [ D.3802 ])) [4 *_689+0 S8 A64])
        (reg:DI 1798)) verify.c:148 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1798)
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 688 692 708 720 746
;; live  out 	 610 688 692 708
;; rd  out 	(4) 610[23],688[27],692[29],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u3571(29){ }u3572(31){ }u3573(64){ }u3574(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 688 692 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 688 692
;; lr  def 	 66 [cc] 1799 1800 1801 1802
;; live  in  	 610 688 692 708
;; live  gen 	 66 [cc] 1799 1800 1801 1802
;; live  kill	
;; rd  in  	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;; rd  gen 	(5) 66[15],1799[59],1800[60],1801[61],1802[62]
;; rd  kill	(27) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],1799[59],1800[60],1801[61],1802[62]
;;  UD chains for artificial uses at top

(code_label 3552 3551 3553 248 169 "" [0 uses])
(note 3553 3552 3554 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3554
;;      reg 668 { }
;;      reg 668 { }
;;      reg 688 { d27(bb 242 insn 3523) }
;;      reg 692 { d29(bb 243 insn 3528) }
(debug_insn 3554 3553 3555 248 (var_location:DI lvldiff (minus:DI (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [0 *_690+0 S8 A64])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [0 *_692+0 S8 A64]))) verify.c:150 -1
     (nil))
;;   UD chains for insn luid 1 uid 3555
;;      reg 668 { }
;;      reg 688 { d27(bb 242 insn 3523) }
(insn 3555 3554 3556 248 (set (reg:DI 1800 [ *_690 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [4 *_690+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 688 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 3556
;;      reg 668 { }
;;      reg 692 { d29(bb 243 insn 3528) }
(insn 3556 3555 3557 248 (set (reg:DI 1801 [ *_692 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [4 *_692+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 692 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3557
;;      reg 1800 { d60(bb 248 insn 3555) }
;;      reg 1801 { d61(bb 248 insn 3556) }
(insn 3557 3556 3558 248 (set (reg:DI 1799 [ lvldiff ])
        (minus:DI (reg:DI 1800 [ *_690 ])
            (reg:DI 1801 [ *_692 ]))) verify.c:152 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1801 [ *_692 ])
        (expr_list:REG_DEAD (reg:DI 1800 [ *_690 ])
            (nil))))
;;   UD chains for insn luid 4 uid 3558
;;      reg 1799 { d59(bb 248 insn 3557) }
(insn 3558 3557 3559 248 (set (reg:DI 1802 [ D.3810 ])
        (plus:DI (reg:DI 1799 [ lvldiff ])
            (const_int 1 [0x1]))) verify.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1799 [ lvldiff ])
        (nil)))
;;   UD chains for insn luid 5 uid 3559
;;      reg 1802 { d62(bb 248 insn 3558) }
(insn 3559 3558 3560 248 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1802 [ D.3810 ])
            (const_int 2 [0x2]))) verify.c:152 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1802 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3560
;;      reg 66 { d15(bb 248 insn 3559) }
(jump_insn 3560 3559 3561 248 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4024)
            (pc))) verify.c:152 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4024)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; live  out 	 610 708
;; rd  out 	(2) 610[23],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u3588(29){ }u3589(31){ }u3590(64){ }u3591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715 716
;; live  in  	 610 708
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(2) 610[23],708[31]
;; rd  gen 	(2) 715[32],716[41]
;; rd  kill	(14) 715[32,33,34,35,36,37,38],716[39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top

(note 3561 3560 250 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 250
(insn 250 3561 251 249 (set (reg/v:SI 716 [ err ])
        (const_int 0 [0])) verify.c:152 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 251
(insn 251 250 4024 249 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:152 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[32]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u3602(29){ }u3603(31){ }u3604(64){ }u3605(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715 716
;; live  in  	 610 708
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(2) 610[23],708[31]
;; rd  gen 	(2) 715[33],716[42]
;; rd  kill	(14) 715[32,33,34,35,36,37,38],716[39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top

(code_label 4024 251 4023 250 208 "" [1 uses])
(note 4023 4024 252 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 252
(insn 252 4023 253 250 (set (reg/v:SI 716 [ err ])
        (const_int -14 [0xfffffffffffffff2])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 253
;;      reg 716 { d42(bb 250 insn 252) }
(insn 253 252 3562 250 (set (reg/v:SI 715 [ err ])
        (reg/v:SI 716 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int -14 [0xfffffffffffffff2])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[33]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u3607(29){ }u3608(31){ }u3609(64){ }u3610(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 720
;; lr  def 	 66 [cc] 708
;; live  in  	 610 708 715
;; live  gen 	 66 [cc] 708
;; live  kill	
;; rd  in  	(15) 66[2],610[23],674[24],675[25],708[31],715[32,33,34,35,36,37,38],716[39],1780[46],1781[47]
;; rd  gen 	(2) 66[16],708[31]
;; rd  kill	(24) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],708[31]
;;  UD chains for artificial uses at top

(code_label 3562 253 3563 251 161 "" [2 uses])
(note 3563 3562 3568 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3568
;;      reg 716 { d39(bb 238 insn 246) }
(debug_insn 3568 3563 3569 251 (var_location:SI terr (reg/v:SI 716 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3569
(debug_insn 3569 3568 3570 251 (var_location:DI k (debug_expr:DI D#42)) -1
     (nil))
;;   UD chains for insn luid 2 uid 3570
;;      reg 610 { d23(bb 283 insn 3885) }
(debug_insn 3570 3569 3571 251 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3571
;;      reg 715 { d38(bb 285 insn 249) d37(bb 284 insn 271) d36(bb 281 insn 280) d35(bb 271 insn 270) d34(bb 270 insn 4327) d33(bb 250 insn 253) d32(bb 249 insn 251) }
(debug_insn 3571 3570 3572 251 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3572
;;      reg 708 { d31(bb 251 insn 3572) }
(insn 3572 3571 3574 251 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg:DI 708 [ ivtmp.64 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3574
;;      reg 708 { d31(bb 251 insn 3572) }
;;      reg 720 { }
(insn 3574 3572 3575 251 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 708 [ ivtmp.64 ])
            (reg:DI 720 [ D.3810 ]))) verify.c:117 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3575
;;      reg 66 { d16(bb 251 insn 3574) }
(jump_insn 3575 3574 4340 251 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4340)
            (pc))) verify.c:117 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4340)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(9) 610[23],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u3826(29){ }u3827(31){ }u3828(64){ }u3829(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 715 1842 1843 1867
;; live  in  	 610 674 675 708
;; live  gen 	 66 [cc] 715 1842 1843 1867
;; live  kill	
;; rd  in  	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(5) 66[20],715[34],1842[63],1843[64],1867[66]
;; rd  kill	(33) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],715[32,33,34,35,36,37,38],1842[63],1843[64],1867[66]
;;  UD chains for artificial uses at top

(code_label 3782 3779 3783 270 162 "" [1 uses])
(note 3783 3782 3785 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3785
(debug_insn 3785 3783 3786 270 (var_location:SI terr (const_int -10 [0xfffffffffffffff6])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3786
;;      reg 623 { }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3786 3785 3787 270 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
;;   UD chains for insn luid 2 uid 3787
;;      reg 66 { d17(bb 270 insn 3786) }
;;      reg 623 { }
;;      reg 674 { d24(bb 238 insn 3478) }
(insn 3787 3786 3788 270 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
        (nil)))
;;   UD chains for insn luid 3 uid 3788
;;      reg 66 { d18(bb 270 insn 3787) }
(insn 3788 3787 3790 270 (set:SI (reg:SI 1842)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 4 uid 3790
;;      reg 1842 { d63(bb 270 insn 3788) }
(insn 3790 3788 3791 270 (set (reg:SI 1843 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1842) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1842)
        (nil)))
;;   UD chains for insn luid 5 uid 3791
;;      reg 1843 { d64(bb 270 insn 3790) }
(insn 3791 3790 4325 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1843 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 6 uid 4325
;;      reg 1843 { d64(bb 270 insn 3790) }
(insn 4325 3791 4326 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 7 uid 4326
;;      reg 66 { d20(bb 270 insn 4325) }
(insn 4326 4325 4327 270 (set (reg:SI 1867)
        (eq:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (nil))
;;   UD chains for insn luid 8 uid 4327
;;      reg 1867 { d66(bb 270 insn 4326) }
(insn 4327 4326 4020 270 (set (reg/v:SI 715 [ err ])
        (plus:SI (reg:SI 1867)
            (const_int -11 [0xfffffffffffffff5]))) verify.c:124 94 {*addsi3_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[34]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u3844(29){ }u3845(31){ }u3846(64){ }u3847(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 708
;; live  gen 	 715
;; live  kill	
;; rd  in  	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;; rd  gen 	(1) 715[35]
;; rd  kill	(7) 715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at top

(code_label 4020 4327 4019 271 207 "" [1 uses])
(note 4019 4020 270 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 270
(insn 270 4019 3796 271 (set (reg/v:SI 715 [ err ])
        (const_int -12 [0xfffffffffffffff4])) verify.c:131 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[35]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u3852(29){ }u3853(31){ }u3854(64){ }u3855(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 708 715
;; live  gen 	 716
;; live  kill	
;; rd  in  	(4) 610[23],708[31],715[35,37]
;; rd  gen 	(1) 716[43]
;; rd  kill	(7) 716[39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top

(code_label 3796 270 3797 272 165 "" [1 uses])
(note 3797 3796 3798 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3798
;;      reg 715 { d37(bb 284 insn 271) d35(bb 271 insn 270) }
(debug_insn 3798 3797 3800 272 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3800
;;      reg 715 { d37(bb 284 insn 271) d35(bb 271 insn 270) }
(debug_insn 3800 3798 254 272 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 254
;;      reg 715 { d37(bb 284 insn 271) d35(bb 271 insn 270) }
(insn 254 3800 3868 272 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(4) 610[23],708[31],715[35,37]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u3918(29){ }u3919(31){ }u3920(64){ }u3921(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 708
;; live  gen 	 715
;; live  kill	
;; rd  in  	(12) 610[23],674[24],675[25],679[26],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(1) 715[36]
;; rd  kill	(7) 715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at top

(code_label 4014 3870 4013 281 205 "" [1 uses])
(note 4013 4014 280 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 280
(insn 280 4013 3875 281 (set (reg/v:SI 715 [ err ])
        (const_int -11 [0xfffffffffffffff5])) verify.c:125 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[36]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u3926(29){ }u3927(31){ }u3928(64){ }u3929(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 708 715
;; live  gen 	 716
;; live  kill	
;; rd  in  	(4) 610[23],708[31],715[34,36]
;; rd  gen 	(1) 716[44]
;; rd  kill	(7) 716[39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top

(code_label 3875 280 3876 282 163 "" [0 uses])
(note 3876 3875 3877 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3877
;;      reg 715 { d36(bb 281 insn 280) d34(bb 270 insn 4327) }
(debug_insn 3877 3876 255 282 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 255
;;      reg 715 { d36(bb 281 insn 280) d34(bb 270 insn 4327) }
(insn 255 3877 3881 282 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(4) 610[23],708[31],715[34,36]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u3932(29){ }u3933(31){ }u3934(64){ }u3935(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 692 694 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 674 675
;; lr  def 	 66 [cc] 610
;; live  in  	 610 674 675 688 690 692 694 708
;; live  gen 	 66 [cc] 610
;; live  kill	
;; rd  in  	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;; rd  gen 	(2) 66[21],610[23]
;; rd  kill	(24) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],610[23]
;;  UD chains for artificial uses at top

(note 3881 255 3883 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3883
(debug_insn 3883 3881 3884 283 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3884
(debug_insn 3884 3883 3885 283 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3885
;;      reg 610 { d23(bb 283 insn 3885) }
(insn 3885 3884 3886 283 (set (reg/v:SI 610 [ nedge_traversed ])
        (plus:SI (reg/v:SI 610 [ nedge_traversed ])
            (const_int 1 [0x1]))) verify.c:142 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3886
;;      reg 610 { d23(bb 283 insn 3885) }
(debug_insn 3886 3885 3888 283 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) verify.c:142 -1
     (nil))
;;   UD chains for insn luid 4 uid 3888
;;      reg 674 { d24(bb 238 insn 3478) }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3888 3886 3889 283 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg/v:DI 675 [ j ]))) verify.c:144 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3889
;;      reg 66 { d21(bb 283 insn 3888) }
(jump_insn 3889 3888 3894 283 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3887)
            (pc))) verify.c:144 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3887)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 674 675 688 690 692 694 708 720 746
;; live  out 	 610 674 675 688 690 692 694 708
;; rd  out 	(8) 610[23],674[24],675[25],688[27],690[28],692[29],694[30],708[31]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u3941(29){ }u3942(31){ }u3943(64){ }u3944(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 675 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 715 1844
;; live  in  	 610 675 708
;; live  gen 	 66 [cc] 715 1844
;; live  kill	
;; rd  in  	(6) 610[23],674[24],675[25],688[27],690[28],708[31]
;; rd  gen 	(3) 66[22],715[37],1844[65]
;; rd  kill	(31) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],715[32,33,34,35,36,37,38],1844[65]
;;  UD chains for artificial uses at top

(code_label 3894 3889 3895 284 164 "" [1 uses])
(note 3895 3894 3896 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3896
(debug_insn 3896 3895 3897 284 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3897
;;      reg 647 { }
;;      reg 675 { d25(bb 238 insn 3480) }
(insn 3897 3896 271 284 (set (reg:DI 1844 [ *_1073 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 675 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_1073+0 S8 A64])) verify.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
;;   UD chains for insn luid 2 uid 271
(insn 271 3897 3898 284 (set (reg/v:SI 715 [ err ])
        (const_int -13 [0xfffffffffffffff3])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3898
;;      reg 1844 { d65(bb 284 insn 3897) }
(insn 3898 271 3899 284 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1844 [ *_1073 ])
            (const_int 0 [0]))) verify.c:132 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1844 [ *_1073 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3899
;;      reg 66 { d22(bb 284 insn 3898) }
(jump_insn 3899 3898 3902 284 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3796)
            (pc))) verify.c:132 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3796)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[37]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u3949(29){ }u3950(31){ }u3951(64){ }u3952(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715 716
;; live  in  	 610 708
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(3) 610[23],708[31],715[37]
;; rd  gen 	(2) 715[38],716[45]
;; rd  kill	(14) 715[32,33,34,35,36,37,38],716[39,40,41,42,43,44,45]
;;  UD chains for artificial uses at top

(note 3902 3899 248 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 248
(insn 248 3902 249 285 (set (reg/v:SI 716 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 249
(insn 249 248 3903 285 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(3) 610[23],708[31],715[38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 610 708 715
;; live  gen 	
;; live  kill	
;; rd  in  	(9) 610[23],708[31],715[32,33,34,35,36,37,38]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4340 3575 4339 296 279 "" [1 uses])
(note 4339 4340 3576 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 647 668 708 715 720 746
;; live  out 	 610 708 715
;; rd  out 	(9) 610[23],708[31],715[32,33,34,35,36,37,38]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 13 ******
(set (reg/v:SI 716 [ err ])
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 248 is invariant (0), cost 4, depends on 
(const_int -14 [0xfffffffffffffff2])

Cold cost: 4 (final)
(set (reg/v:SI 716 [ err ])
    (const_int -14 [0xfffffffffffffff2]))

Cold cost: 4 (final)
Set in insn 252 is invariant (1), cost 4, depends on 
(set (reg/v:SI 716 [ err ])
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 250 is invariant (2), cost 4, depends on 
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:DI 1798)
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 3550 is invariant (3), cost 4, depends on 
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:DI 1797)
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 3539 is invariant (4), cost 4, depends on 
Invariant 2 is equivalent to invariant 0.
Invariant 4 is equivalent to invariant 3.
Decided to move invariant 0 -- gain 4
Decided to move invariant 1 -- gain 4
Decided to move invariant 3 -- gain 4
deferring rescan insn with uid = 248.
deferring rescan insn with uid = 4352.
changing bb of uid 248
  from 285 to 237
deferring rescan insn with uid = 252.
deferring rescan insn with uid = 253.
deferring rescan insn with uid = 4353.
changing bb of uid 252
  from 250 to 237
deferring rescan insn with uid = 4354.
deferring deletion of insn with uid = 250.
deferring rescan insn with uid = 3550.
deferring rescan insn with uid = 3551.
deferring rescan insn with uid = 4355.
changing bb of uid 3550
  from 247 to 237
deferring rescan insn with uid = 3540.
deferring rescan insn with uid = 4356.
deferring deletion of insn with uid = 3539.
*****starting processing of loop 16 ******
starting the processing of deferred insns
rescanning insn with uid = 248.
rescanning insn with uid = 252.
rescanning insn with uid = 253.
rescanning insn with uid = 3540.
rescanning insn with uid = 3550.
rescanning insn with uid = 3551.
rescanning insn with uid = 4352.
rescanning insn with uid = 4353.
rescanning insn with uid = 4354.
rescanning insn with uid = 4355.
rescanning insn with uid = 4356.
ending the processing of deferred insns
setting blocks to analyze 230, 231, 233
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 5 (0.017)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 5 (0.017)


starting region dump


main

Dataflow summary:
def_info->table_size = 7, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1
;;  reg->defs[] map:	66[0,1] 738[2,2] 739[3,3] 741[4,4] 809[5,5] 1759[6,6] 
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u3369(29){ }u3370(31){ }u3371(64){ }u3372(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 738 739 741
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 738 739
;; lr  def 	 66 [cc] 1759
;; live  in  	 738 739 741
;; live  gen 	 66 [cc] 1759
;; live  kill	
;; rd  in  	(4) 66[1],738[2],739[3],741[4]
;; rd  gen 	(2) 66[0],1759[6]
;; rd  kill	(3) 66[0,1],1759[6]
;;  UD chains for artificial uses at top

(code_label 3396 3356 3359 230 156 "" [1 uses])
(note 3359 3396 3360 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3360
;;      reg 739 { d3(bb 233 insn 3395) }
(insn 3360 3359 3361 230 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3361
;;      reg 738 { d2(bb 231 insn 243) }
;;      reg 1759 { d6(bb 230 insn 3360) }
(insn 3361 3360 3362 230 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1759 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 738 [ lastlvl ])
            (nil))))
;;   UD chains for insn luid 2 uid 3362
;;      reg 66 { d0(bb 230 insn 3361) }
(jump_insn 3362 3361 3363 230 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3367)
            (pc))) verify.c:64 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3367)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 739 741
;; live  out 	 739 741
;; rd  out 	(2) 739[3],741[4]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u3377(29){ }u3378(31){ }u3379(64){ }u3380(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 739 741
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 739 741
;; lr  def 	 738 809
;; live  in  	 739 741
;; live  gen 	 738 809
;; live  kill	
;; rd  in  	(2) 739[3],741[4]
;; rd  gen 	(2) 738[2],809[5]
;; rd  kill	(2) 738[2],809[5]
;;  UD chains for artificial uses at top

(note 3363 3362 3364 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3364
;;      reg 647 { }
;;      reg 741 { d4(bb 233 insn 3394) }
(insn 3364 3363 243 231 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 741 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 243
;;      reg 739 { d3(bb 233 insn 3395) }
(insn 243 3364 3367 231 (set (reg/v:DI 738 [ lastlvl ])
        (reg/v:DI 739 [ lastlvl ])) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 739 [ lastlvl ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 738 809
;; live  out 	 738 809
;; rd  out 	(2) 738[2],809[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u3400(29){ }u3401(31){ }u3402(64){ }u3403(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 738 809
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 809
;; lr  def 	 66 [cc] 739 741
;; live  in  	 738 809
;; live  gen 	 66 [cc] 739 741
;; live  kill	
;; rd  in  	(2) 738[2],809[5]
;; rd  gen 	(3) 66[1],739[3],741[4]
;; rd  kill	(4) 66[0,1],739[3],741[4]
;;  UD chains for artificial uses at top

(code_label 3383 3381 3384 233 154 "" [0 uses])
(note 3384 3383 3388 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3388
(debug_insn 3388 3384 3391 233 (var_location:DI D#26 (mem:DI (debug_expr:DI D#38) [0 +0 S8 A64])) verify.c:66 -1
     (nil))
;;   UD chains for insn luid 1 uid 3391
;;      reg 738 { d2(bb 231 insn 243) }
(debug_insn 3391 3388 3392 233 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3392
(debug_insn 3392 3391 3393 233 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 3393
(debug_insn 3393 3392 3394 233 (var_location:DI parent (debug_expr:DI D#26)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3394
;;      reg 809 { d5(bb 231 insn 3364) }
(insn 3394 3393 3395 233 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 809 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3395
;;      reg 668 { }
;;      reg 741 { d4(bb 233 insn 3394) }
(insn 3395 3394 3397 233 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3397
;;      reg 739 { d3(bb 233 insn 3395) }
(insn 3397 3395 3398 233 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 7 uid 3398
;;      reg 66 { d1(bb 233 insn 3397) }
(jump_insn 3398 3397 3402 233 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3396)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 668 738 739 741
;; live  out 	 738 739 741
;; rd  out 	(3) 738[2],739[3],741[4]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 16 ******
*****starting processing of loop 17 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 223, 224, 225
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)


starting region dump


main

Dataflow summary:
def_info->table_size = 8, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1
;;  reg->defs[] map:	66[0,1] 461[2,2] 733[3,3] 734[4,4] 735[5,5] 737[6,6] 805[7,7] 
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u3302(29){ }u3303(31){ }u3304(64){ }u3305(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 734 735
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734
;; lr  def 	 66 [cc]
;; live  in  	 461 734 735
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(5) 66[1],461[2],734[4],735[5],737[6]
;; rd  gen 	(1) 66[0]
;; rd  kill	(2) 66[0,1]
;;  UD chains for artificial uses at top

(code_label 3323 3302 3304 223 152 "" [1 uses])
(note 3304 3323 3305 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3305
;;      reg 734 { d4(bb 225 insn 3313) }
(insn 3305 3304 3306 223 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3306
;;      reg 66 { d0(bb 223 insn 3305) }
(jump_insn 3306 3305 3307 223 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 734 735
;; live  out 	 461 734 735
;; rd  out 	(3) 461[2],734[4],735[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u3308(29){ }u3309(31){ }u3310(64){ }u3311(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 734 735
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 734 735
;; lr  def 	 733 805
;; live  in  	 461 734 735
;; live  gen 	 733 805
;; live  kill	
;; rd  in  	(3) 461[2],734[4],735[5]
;; rd  gen 	(2) 733[3],805[7]
;; rd  kill	(2) 733[3],805[7]
;;  UD chains for artificial uses at top

(note 3307 3306 3308 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3308
;;      reg 647 { }
;;      reg 735 { d5(bb 225 insn 3320) }
(insn 3308 3307 242 224 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 735 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 242
;;      reg 734 { d4(bb 225 insn 3313) }
(insn 242 3308 3309 224 (set (reg/v:DI 733 [ nhop ])
        (reg/v:DI 734 [ nhop ])) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 733 805
;; live  out 	 461 733 805
;; rd  out 	(3) 461[2],733[3],805[7]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u3315(29){ }u3316(31){ }u3317(64){ }u3318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 733 805
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 668 733 805
;; lr  def 	 66 [cc] 461 734 735 737
;; live  in  	 461 733 805
;; live  gen 	 66 [cc] 461 734 735 737
;; live  kill	
;; rd  in  	(3) 461[2],733[3],805[7]
;; rd  gen 	(5) 66[1],461[2],734[4],735[5],737[6]
;; rd  kill	(6) 66[0,1],461[2],734[4],735[5],737[6]
;;  UD chains for artificial uses at top

(code_label 3309 242 3310 225 151 "" [0 uses])
(note 3310 3309 3311 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3311
;;      reg 733 { d3(bb 224 insn 242) }
(debug_insn 3311 3310 3312 225 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3312
;;      reg 745 { }
(debug_insn 3312 3311 3313 225 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3313
;;      reg 733 { d3(bb 224 insn 242) }
(insn 3313 3312 3314 225 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3314
;;      reg 734 { d4(bb 225 insn 3313) }
(debug_insn 3314 3313 3315 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) verify.c:53 -1
     (nil))
;;   UD chains for insn luid 4 uid 3315
;;      reg 461 { d2(bb 225 insn 3321) }
;;      reg 733 { d3(bb 224 insn 242) }
(insn 3315 3314 3316 225 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 733 [ nhop ])
        (expr_list:REG_DEAD (reg/f:DI 461 [ D.3812 ])
            (nil))))
;;   UD chains for insn luid 5 uid 3316
(debug_insn 3316 3315 3318 225 (var_location:DI D#27 (mem:DI (debug_expr:DI D#39) [0 +0 S8 A64])) verify.c:54 -1
     (nil))
;;   UD chains for insn luid 6 uid 3318
;;      reg 734 { d4(bb 225 insn 3313) }
(debug_insn 3318 3316 3319 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3319
(debug_insn 3319 3318 3320 225 (var_location:DI parent (debug_expr:DI D#27)) -1
     (nil))
;;   UD chains for insn luid 8 uid 3320
;;      reg 805 { d7(bb 224 insn 3308) }
(insn 3320 3319 3321 225 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 805 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3321
;;      reg 668 { }
;;      reg 735 { d5(bb 225 insn 3320) }
(insn 3321 3320 3322 225 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 3322
;;      reg 461 { d2(bb 225 insn 3321) }
(insn 3322 3321 3324 225 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 3324
;;      reg 737 { d6(bb 225 insn 3322) }
(insn 3324 3322 3325 225 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 3325
;;      reg 66 { d1(bb 225 insn 3324) }
(jump_insn 3325 3324 3326 225 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3323)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 647 668 734 735
;; live  out 	 461 734 735
;; rd  out 	(3) 461[2],734[4],735[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 17 ******
*****starting processing of loop 18 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 214, 215, 217, 218
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 6 ( 0.02)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 7 (0.023)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 8 (0.027)


starting region dump


main

Dataflow summary:
def_info->table_size = 12, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4
;;  reg->defs[] map:	66[0,4] 456[5,5] 581[6,6] 609[7,7] 727[8,8] 731[9,9] 1741[10,10] 1742[11,11] 
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u3204(29){ }u3205(31){ }u3206(64){ }u3207(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 727 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 647 727
;; lr  def 	 456 581
;; live  in  	 581 609 727
;; live  gen 	 456 581
;; live  kill	
;; rd  in  	(3) 581[6],609[7],727[8]
;; rd  gen 	(2) 456[5],581[6]
;; rd  kill	(2) 456[5],581[6]
;;  UD chains for artificial uses at top

(code_label 3261 239 3220 214 149 "" [1 uses])
(note 3220 3261 3221 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3221
;;      reg 581 { d6(bb 214 insn 3222) }
(insn 3221 3220 3222 214 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 581 [ parent ])
        (nil)))
;;   UD chains for insn luid 1 uid 3222
;;      reg 647 { }
;;      reg 727 { d8(bb 218 insn 3259) }
(insn 3222 3221 3223 214 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 727 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 647 668 1861
;; live  out 	 456 581 609
;; rd  out 	(3) 456[5],581[6],609[7]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u3211(29){ }u3212(31){ }u3213(64){ }u3214(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 647 668 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581
;; lr  def 	 66 [cc]
;; live  in  	 456 581 609
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(3) 456[5],581[6],609[7]
;; rd  gen 	(1) 66[0]
;; rd  kill	(5) 66[0,1,2,3,4]
;;  UD chains for artificial uses at top

(code_label 3223 3222 3224 215 147 "" [0 uses])
(note 3224 3223 3225 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3225
;;      reg 609 { d7(bb 217 insn 3248) }
(debug_insn 3225 3224 3226 215 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3226
;;      reg 456 { d5(bb 214 insn 3221) }
(debug_insn 3226 3225 3227 215 (var_location:DI parent (reg/v:DI 456 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3227
(debug_insn 3227 3226 3228 215 (var_location:DI D#28 (mem:DI (debug_expr:DI D#40) [0 +0 S8 A64])) verify.c:39 -1
     (nil))
;;   UD chains for insn luid 3 uid 3228
;;      reg 456 { d5(bb 214 insn 3221) }
;;      reg 581 { d6(bb 214 insn 3222) }
(insn 3228 3227 3229 215 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 456 [ parent ])
        (nil)))
;;   UD chains for insn luid 4 uid 3229
;;      reg 66 { d0(bb 215 insn 3228) }
(jump_insn 3229 3228 3230 215 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) verify.c:39 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3245)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 1861
;; live  out 	 581 609
;; rd  out 	(2) 581[6],609[7]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u3236(29){ }u3237(31){ }u3238(64){ }u3239(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609
;; lr  def 	 66 [cc] 609
;; live  in  	 581 609
;; live  gen 	 66 [cc] 609
;; live  kill	
;; rd  in  	(3) 66[0],581[6],609[7]
;; rd  gen 	(2) 66[1],609[7]
;; rd  kill	(6) 66[0,1,2,3,4],609[7]
;;  UD chains for artificial uses at top

(code_label 3245 3243 3246 217 148 "" [1 uses])
(note 3246 3245 3247 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3247
(debug_insn 3247 3246 3248 217 (var_location:DI parent (debug_expr:DI D#28)) verify.c:40 -1
     (nil))
;;   UD chains for insn luid 1 uid 3248
;;      reg 609 { d7(bb 217 insn 3248) }
(insn 3248 3247 3250 217 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3250
;;      reg 609 { d7(bb 217 insn 3248) }
(debug_insn 3250 3248 3251 217 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3251
(debug_insn 3251 3250 3252 217 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3252
;;      reg 581 { d6(bb 214 insn 3222) }
(insn 3252 3251 3253 217 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3253
;;      reg 66 { d1(bb 217 insn 3252) }
(jump_insn 3253 3252 3254 217 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4004)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 241 (nil)))
 -> 4004)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 1861
;; live  out 	 581 609
;; rd  out 	(2) 581[6],609[7]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u3244(29){ }u3245(31){ }u3246(64){ }u3247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 668 1861
;; lr  def 	 66 [cc] 727 731 1741 1742
;; live  in  	 581 609
;; live  gen 	 66 [cc] 727 731 1741 1742
;; live  kill	
;; rd  in  	(2) 581[6],609[7]
;; rd  gen 	(5) 66[4],727[8],731[9],1741[10],1742[11]
;; rd  kill	(9) 66[0,1,2,3,4],727[8],731[9],1741[10],1742[11]
;;  UD chains for artificial uses at top

(note 3254 3253 3257 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3257
;;      reg 609 { d7(bb 217 insn 3248) }
(debug_insn 3257 3254 3258 218 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3258
(debug_insn 3258 3257 3259 218 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 2 uid 3259
;;      reg 581 { d6(bb 214 insn 3222) }
(insn 3259 3258 3260 218 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 3 uid 3260
;;      reg 668 { }
;;      reg 727 { d8(bb 218 insn 3259) }
(insn 3260 3259 3262 218 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 3262
;;      reg 609 { d7(bb 217 insn 3248) }
;;      reg 1861 { }
(insn 3262 3260 3263 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3263
;;      reg 66 { d2(bb 218 insn 3262) }
;;      reg 731 { d9(bb 218 insn 3260) }
(insn 3263 3262 3264 218 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 6 uid 3264
;;      reg 66 { d3(bb 218 insn 3263) }
(insn 3264 3263 3266 218 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
;;   UD chains for insn luid 7 uid 3266
;;      reg 1741 { d10(bb 218 insn 3264) }
(insn 3266 3264 3267 218 (set (reg:SI 1742 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1741) 0))) verify.c:38 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1741)
        (nil)))
;;   UD chains for insn luid 8 uid 3267
;;      reg 1742 { d11(bb 218 insn 3266) }
(insn 3267 3266 3268 218 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742 [ D.3809 ])
            (const_int 0 [0]))) verify.c:38 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1742 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3268
;;      reg 66 { d4(bb 218 insn 3267) }
(jump_insn 3268 3267 3269 218 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9752 (nil)))
 -> 3261)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 647 668 727 1861
;; live  out 	 581 609 727
;; rd  out 	(3) 581[6],609[7],727[8]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 18 ******
*****starting processing of loop 15 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 268, 269, 297
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 69 ( 0.23)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 61 (  0.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 65 ( 0.22)


starting region dump


main

Dataflow summary:
def_info->table_size = 52, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	66[0,18] 456[19,20] 461[21,22] 581[23,24] 609[25,26] 672[27,27] 715[28,29] 727[30,30] 731[31,31] 733[32,33] 734[34,34] 735[35,35] 737[36,36] 738[37,38] 739[39,39] 741[40,40] 745[41,41] 805[42,43] 809[44,45] 1728[46,46] 1730[47,47] 1731[48,48] 1741[49,49] 1742[50,50] 1759[51,51] 
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u3165(29){ }u3166(31){ }u3167(64){ }u3168(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 1728
;; live  in  	 672 715 745
;; live  gen 	 66 [cc] 1728
;; live  kill	
;; rd  in  	(4) 672[27],715[28,29],745[41]
;; rd  gen 	(2) 66[0],1728[46]
;; rd  kill	(20) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],1728[46]
;;  UD chains for artificial uses at top

(code_label 3410 235 3195 210 157 "" [0 uses])
(note 3195 3410 3196 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3196
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3196 3195 3197 210 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3197
;;      reg 715 { d29(bb 269 insn 269) d28(bb 268 insn 268) }
(debug_insn 3197 3196 3199 210 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3199
;;      reg 672 { d27(bb 234 insn 3409) }
(insn 3199 3197 3200 210 (set (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:32 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3200
;;      reg 1728 { d46(bb 210 insn 3199) }
(insn 3200 3199 3201 210 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
            (const_int 0 [0]))) verify.c:32 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 4 uid 3201
;;      reg 66 { d0(bb 210 insn 3200) }
(jump_insn 3201 3200 3202 210 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3402)
            (pc))) verify.c:32 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(4) 672[27],715[28,29],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u3175(29){ }u3176(31){ }u3177(64){ }u3178(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 66 [cc]
;; live  in  	 672 715 745
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(6) 66[0],672[27],715[28,29],745[41],1728[46]
;; rd  gen 	(1) 66[1]
;; rd  kill	(19) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
;;  UD chains for artificial uses at top

(note 3202 3201 3203 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3203
;;      reg 715 { d29(bb 269 insn 269) d28(bb 268 insn 268) }
(debug_insn 3203 3202 3204 211 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:33 -1
     (nil))
;;   UD chains for insn luid 1 uid 3204
;;      reg 715 { d29(bb 269 insn 269) d28(bb 268 insn 268) }
(insn 3204 3203 3205 211 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 2 uid 3205
;;      reg 66 { d1(bb 211 insn 3204) }
(jump_insn 3205 3204 3206 211 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(4) 672[27],715[28,29],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u3182(29){ }u3183(31){ }u3184(64){ }u3185(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 745
;; lr  def 	 66 [cc] 809 1730 1731
;; live  in  	 672 715 745
;; live  gen 	 66 [cc] 809 1730 1731
;; live  kill	
;; rd  in  	(4) 672[27],715[28,29],745[41]
;; rd  gen 	(4) 66[4],809[44],1730[47],1731[48]
;; rd  kill	(23) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],809[44,45],1730[47],1731[48]
;;  UD chains for artificial uses at top

(note 3206 3205 3208 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3208
(debug_insn 3208 3206 3209 212 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
;;   UD chains for insn luid 1 uid 3209
;;      reg 647 { }
;;      reg 745 { d41(bb 234 insn 3405) }
(insn 3209 3208 3210 212 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 745 [ parent ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B]+0 S8 A64])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3210
;;      reg 624 { }
;;      reg 745 { d41(bb 234 insn 3405) }
(insn 3210 3209 3211 212 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:34 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3211
;;      reg 66 { d2(bb 212 insn 3210) }
;;      reg 809 { d44(bb 212 insn 3209) }
(insn 3211 3210 3212 212 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DNE 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 809 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:34 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 4 uid 3212
;;      reg 66 { d3(bb 212 insn 3211) }
(insn 3212 3211 3214 212 (set:SI (reg:SI 1730)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:34 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 5 uid 3214
;;      reg 1730 { d47(bb 212 insn 3212) }
(insn 3214 3212 3215 212 (set (reg:SI 1731 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1730) 0))) verify.c:34 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1730)
        (nil)))
;;   UD chains for insn luid 6 uid 3215
;;      reg 1731 { d48(bb 212 insn 3214) }
(insn 3215 3214 3216 212 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1731 [ D.3809 ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1731 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 7 uid 3216
;;      reg 66 { d4(bb 212 insn 3215) }
(jump_insn 3216 3215 3217 212 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 809 1861
;; live  out 	 672 715 745 809
;; rd  out 	(5) 672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u3197(29){ }u3198(31){ }u3199(64){ }u3200(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 745 809
;; lr  def 	 456 581 609
;; live  in  	 672 715 745 809
;; live  gen 	 456 581 609
;; live  kill	
;; rd  in  	(5) 672[27],715[28,29],745[41],809[44]
;; rd  gen 	(3) 456[19],581[23],609[25]
;; rd  kill	(6) 456[19,20],581[23,24],609[25,26]
;;  UD chains for artificial uses at top

(note 3217 3216 237 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 237
;;      reg 745 { d41(bb 234 insn 3405) }
(insn 237 3217 238 213 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 745 [ parent ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 238
(insn 238 237 239 213 (set (reg/v:DI 609 [ nhop ])
        (const_int 0 [0])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 239
;;      reg 809 { d44(bb 212 insn 3209) }
(insn 239 238 3261 213 (set (reg/v:DI 581 [ parent ])
        (reg:DI 809 [ D.3798 ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 624 647 668 672 715 745 809 1861
;; live  out 	 456 581 609 672 715 745 809
;; rd  out 	(8) 456[19],581[23],609[25],672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u3204(29){ }u3205(31){ }u3206(64){ }u3207(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 727 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 647 727
;; lr  def 	 456 581
;; live  in  	 581 609 672 715 727 745 809
;; live  gen 	 456 581
;; live  kill	
;; rd  in  	(13) 66[9],581[23,24],609[26],672[27],715[28,29],727[30],731[31],745[41],809[44],1741[49],1742[50]
;; rd  gen 	(2) 456[20],581[24]
;; rd  kill	(4) 456[19,20],581[23,24]
;;  UD chains for artificial uses at top

(code_label 3261 239 3220 214 149 "" [1 uses])
(note 3220 3261 3221 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3221
;;      reg 581 { d24(bb 214 insn 3222) d23(bb 213 insn 239) }
(insn 3221 3220 3222 214 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 581 [ parent ])
        (nil)))
;;   UD chains for insn luid 1 uid 3222
;;      reg 647 { }
;;      reg 727 { d30(bb 218 insn 3259) }
(insn 3222 3221 3223 214 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 727 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 624 647 668 672 715 745 809 1861
;; live  out 	 456 581 609 672 715 745 809
;; rd  out 	(8) 456[20],581[24],609[26],672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u3211(29){ }u3212(31){ }u3213(64){ }u3214(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 624 647 668 672 715 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581
;; lr  def 	 66 [cc]
;; live  in  	 456 581 609 672 715 745 809
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(11) 456[19,20],581[23,24],609[25,26],672[27],715[28,29],745[41],809[44]
;; rd  gen 	(1) 66[5]
;; rd  kill	(19) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
;;  UD chains for artificial uses at top

(code_label 3223 3222 3224 215 147 "" [0 uses])
(note 3224 3223 3225 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3225
;;      reg 609 { d26(bb 217 insn 3248) d25(bb 213 insn 238) }
(debug_insn 3225 3224 3226 215 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3226
;;      reg 456 { d20(bb 214 insn 3221) d19(bb 213 insn 237) }
(debug_insn 3226 3225 3227 215 (var_location:DI parent (reg/v:DI 456 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3227
(debug_insn 3227 3226 3228 215 (var_location:DI D#28 (mem:DI (debug_expr:DI D#40) [0 +0 S8 A64])) verify.c:39 -1
     (nil))
;;   UD chains for insn luid 3 uid 3228
;;      reg 456 { d20(bb 214 insn 3221) d19(bb 213 insn 237) }
;;      reg 581 { d24(bb 214 insn 3222) d23(bb 213 insn 239) }
(insn 3228 3227 3229 215 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 456 [ parent ])
        (nil)))
;;   UD chains for insn luid 4 uid 3229
;;      reg 66 { d5(bb 215 insn 3228) }
(jump_insn 3229 3228 3230 215 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) verify.c:39 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3245)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 745 809 1861
;; live  out 	 581 609 672 715 745 809
;; rd  out 	(9) 581[23,24],609[25,26],672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u3236(29){ }u3237(31){ }u3238(64){ }u3239(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609
;; lr  def 	 66 [cc] 609
;; live  in  	 581 609 672 715 745 809
;; live  gen 	 66 [cc] 609
;; live  kill	
;; rd  in  	(9) 581[23,24],609[25,26],672[27],715[28,29],745[41],809[44]
;; rd  gen 	(2) 66[6],609[26]
;; rd  kill	(21) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],609[25,26]
;;  UD chains for artificial uses at top

(code_label 3245 3243 3246 217 148 "" [1 uses])
(note 3246 3245 3247 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3247
(debug_insn 3247 3246 3248 217 (var_location:DI parent (debug_expr:DI D#28)) verify.c:40 -1
     (nil))
;;   UD chains for insn luid 1 uid 3248
;;      reg 609 { d26(bb 217 insn 3248) d25(bb 213 insn 238) }
(insn 3248 3247 3250 217 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3250
;;      reg 609 { d26(bb 217 insn 3248) }
(debug_insn 3250 3248 3251 217 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3251
(debug_insn 3251 3250 3252 217 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3252
;;      reg 581 { d24(bb 214 insn 3222) d23(bb 213 insn 239) }
(insn 3252 3251 3253 217 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3253
;;      reg 66 { d6(bb 217 insn 3252) }
(jump_insn 3253 3252 3254 217 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4004)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 241 (nil)))
 -> 4004)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 745 809 1861
;; live  out 	 581 609 672 715 745 809
;; rd  out 	(8) 581[23,24],609[26],672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u3244(29){ }u3245(31){ }u3246(64){ }u3247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 668 1861
;; lr  def 	 66 [cc] 727 731 1741 1742
;; live  in  	 581 609 672 715 745 809
;; live  gen 	 66 [cc] 727 731 1741 1742
;; live  kill	
;; rd  in  	(8) 581[23,24],609[26],672[27],715[28,29],745[41],809[44]
;; rd  gen 	(5) 66[9],727[30],731[31],1741[49],1742[50]
;; rd  kill	(23) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],727[30],731[31],1741[49],1742[50]
;;  UD chains for artificial uses at top

(note 3254 3253 3257 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3257
;;      reg 609 { d26(bb 217 insn 3248) }
(debug_insn 3257 3254 3258 218 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3258
(debug_insn 3258 3257 3259 218 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 2 uid 3259
;;      reg 581 { d24(bb 214 insn 3222) d23(bb 213 insn 239) }
(insn 3259 3258 3260 218 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 3 uid 3260
;;      reg 668 { }
;;      reg 727 { d30(bb 218 insn 3259) }
(insn 3260 3259 3262 218 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 3262
;;      reg 609 { d26(bb 217 insn 3248) }
;;      reg 1861 { }
(insn 3262 3260 3263 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3263
;;      reg 66 { d7(bb 218 insn 3262) }
;;      reg 731 { d31(bb 218 insn 3260) }
(insn 3263 3262 3264 218 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 6 uid 3264
;;      reg 66 { d8(bb 218 insn 3263) }
(insn 3264 3263 3266 218 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
;;   UD chains for insn luid 7 uid 3266
;;      reg 1741 { d49(bb 218 insn 3264) }
(insn 3266 3264 3267 218 (set (reg:SI 1742 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1741) 0))) verify.c:38 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1741)
        (nil)))
;;   UD chains for insn luid 8 uid 3267
;;      reg 1742 { d50(bb 218 insn 3266) }
(insn 3267 3266 3268 218 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742 [ D.3809 ])
            (const_int 0 [0]))) verify.c:38 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1742 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3268
;;      reg 66 { d9(bb 218 insn 3267) }
(jump_insn 3268 3267 3269 218 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9752 (nil)))
 -> 3261)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 624 647 668 672 715 727 731 745 809 1861
;; live  out 	 581 609 672 715 727 731 745 809
;; rd  out 	(10) 581[23,24],609[26],672[27],715[28,29],727[30],731[31],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u3261(29){ }u3262(31){ }u3263(64){ }u3264(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 624 647 668 672 715 731 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 1861
;; lr  def 	 66 [cc]
;; live  in  	 609 672 715 731 745 809
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(10) 581[23,24],609[26],672[27],715[28,29],727[30],731[31],745[41],809[44]
;; rd  gen 	(1) 66[10]
;; rd  kill	(19) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
;;  UD chains for artificial uses at top

(note 3269 3268 3270 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3270
;;      reg 609 { d26(bb 217 insn 3248) }
;;      reg 1861 { }
(debug_insn 3270 3269 3271 219 (var_location:QI D#49 (le:QI (reg:DI 1861 [ D.3798 ])
        (reg/v:DI 609 [ nhop ]))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 1 uid 3271
(debug_insn 3271 3270 3272 219 (var_location:SI D#48 (zero_extend:SI (debug_expr:QI D#49))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 2 uid 3272
(debug_insn 3272 3271 3274 219 (var_location:SI D#47 (neg:SI (debug_expr:SI D#48))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 3 uid 3274
(debug_insn 3274 3272 3275 219 (var_location:SI terr (debug_expr:SI D#47)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3275
;;      reg 609 { d26(bb 217 insn 3248) }
;;      reg 1861 { }
(insn 3275 3274 3276 219 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:46 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3276
;;      reg 66 { d10(bb 219 insn 3275) }
(jump_insn 3276 3275 3277 219 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4008)
            (pc))) verify.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3154 (nil)))
 -> 4008)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 624 647 668 672 715 731 745 809 1861
;; live  out 	 609 672 715 731 745 809
;; rd  out 	(7) 609[26],672[27],715[28,29],731[31],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u3270(29){ }u3271(31){ }u3272(64){ }u3273(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 624 647 668 672 715 731 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 731
;; lr  def 	 66 [cc] 733
;; live  in  	 609 672 715 731 745 809
;; live  gen 	 66 [cc] 733
;; live  kill	
;; rd  in  	(7) 609[26],672[27],715[28,29],731[31],745[41],809[44]
;; rd  gen 	(2) 66[11],733[32]
;; rd  kill	(21) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],733[32,33]
;;  UD chains for artificial uses at top

(note 3277 3276 3278 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3278
;;      reg 609 { d26(bb 217 insn 3248) }
;;      reg 731 { d31(bb 218 insn 3260) }
(insn 3278 3277 3281 220 (set (reg/v:DI 733 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (reg:DI 731 [ D.3798 ]))) verify.c:49 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 731 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 609 [ nhop ])
            (nil))))
;;   UD chains for insn luid 1 uid 3281
;;      reg 733 { d32(bb 220 insn 3278) }
(debug_insn 3281 3278 3282 220 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3282
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3282 3281 3283 220 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3283
;;      reg 733 { d32(bb 220 insn 3278) }
(insn 3283 3282 3284 220 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 733 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 4 uid 3284
;;      reg 66 { d11(bb 220 insn 3283) }
(jump_insn 3284 3283 3285 220 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 733 745 809 1861
;; live  out 	 672 715 733 745 809
;; rd  out 	(6) 672[27],715[28,29],733[32],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u3280(29){ }u3281(31){ }u3282(64){ }u3283(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 733 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 809
;; lr  def 	 461 805
;; live  in  	 672 715 733 745 809
;; live  gen 	 461 805
;; live  kill	
;; rd  in  	(6) 672[27],715[28,29],733[32],745[41],809[44]
;; rd  gen 	(2) 461[21],805[42]
;; rd  kill	(4) 461[21,22],805[42,43]
;;  UD chains for artificial uses at top

(note 3285 3284 240 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 240
;;      reg 809 { d44(bb 212 insn 3209) }
(insn 240 3285 241 221 (set (reg:DI 805 [ D.3798 ])
        (reg:DI 809 [ D.3798 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 241
;;      reg 672 { d27(bb 234 insn 3409) }
(insn 241 240 3288 221 (set (reg/f:DI 461 [ D.3812 ])
        (reg:DI 672 [ ivtmp.84 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 733 745 805 809 1861
;; live  out 	 461 672 715 733 745 805 809
;; rd  out 	(8) 461[21],672[27],715[28,29],733[32],745[41],805[42],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u3302(29){ }u3303(31){ }u3304(64){ }u3305(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 734 735 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734
;; lr  def 	 66 [cc]
;; live  in  	 461 672 715 734 735 745 809
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(10) 66[13],461[22],672[27],715[28,29],734[34],735[35],737[36],745[41],809[44]
;; rd  gen 	(1) 66[12]
;; rd  kill	(19) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
;;  UD chains for artificial uses at top

(code_label 3323 3302 3304 223 152 "" [1 uses])
(note 3304 3323 3305 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3305
;;      reg 734 { d34(bb 225 insn 3313) }
(insn 3305 3304 3306 223 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3306
;;      reg 66 { d12(bb 223 insn 3305) }
(jump_insn 3306 3305 3307 223 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 734 735 745 809 1861
;; live  out 	 461 672 715 734 735 745 809
;; rd  out 	(8) 461[22],672[27],715[28,29],734[34],735[35],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u3308(29){ }u3309(31){ }u3310(64){ }u3311(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 734 735 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 734 735
;; lr  def 	 733 805
;; live  in  	 461 672 715 734 735 745 809
;; live  gen 	 733 805
;; live  kill	
;; rd  in  	(8) 461[22],672[27],715[28,29],734[34],735[35],745[41],809[44]
;; rd  gen 	(2) 733[33],805[43]
;; rd  kill	(4) 733[32,33],805[42,43]
;;  UD chains for artificial uses at top

(note 3307 3306 3308 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3308
;;      reg 647 { }
;;      reg 735 { d35(bb 225 insn 3320) }
(insn 3308 3307 242 224 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 735 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 242
;;      reg 734 { d34(bb 225 insn 3313) }
(insn 242 3308 3309 224 (set (reg/v:DI 733 [ nhop ])
        (reg/v:DI 734 [ nhop ])) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 733 745 805 809 1861
;; live  out 	 461 672 715 733 745 805 809
;; rd  out 	(8) 461[22],672[27],715[28,29],733[33],745[41],805[43],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u3315(29){ }u3316(31){ }u3317(64){ }u3318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 733 745 805 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 668 733 805
;; lr  def 	 66 [cc] 461 734 735 737
;; live  in  	 461 672 715 733 745 805 809
;; live  gen 	 66 [cc] 461 734 735 737
;; live  kill	
;; rd  in  	(11) 461[21,22],672[27],715[28,29],733[32,33],745[41],805[42,43],809[44]
;; rd  gen 	(5) 66[13],461[22],734[34],735[35],737[36]
;; rd  kill	(24) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],461[21,22],734[34],735[35],737[36]
;;  UD chains for artificial uses at top

(code_label 3309 242 3310 225 151 "" [0 uses])
(note 3310 3309 3311 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3311
;;      reg 733 { d33(bb 224 insn 242) d32(bb 220 insn 3278) }
(debug_insn 3311 3310 3312 225 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3312
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3312 3311 3313 225 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3313
;;      reg 733 { d33(bb 224 insn 242) d32(bb 220 insn 3278) }
(insn 3313 3312 3314 225 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3314
;;      reg 734 { d34(bb 225 insn 3313) }
(debug_insn 3314 3313 3315 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) verify.c:53 -1
     (nil))
;;   UD chains for insn luid 4 uid 3315
;;      reg 461 { d22(bb 225 insn 3321) d21(bb 221 insn 241) }
;;      reg 733 { d33(bb 224 insn 242) d32(bb 220 insn 3278) }
(insn 3315 3314 3316 225 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 733 [ nhop ])
        (expr_list:REG_DEAD (reg/f:DI 461 [ D.3812 ])
            (nil))))
;;   UD chains for insn luid 5 uid 3316
(debug_insn 3316 3315 3318 225 (var_location:DI D#27 (mem:DI (debug_expr:DI D#39) [0 +0 S8 A64])) verify.c:54 -1
     (nil))
;;   UD chains for insn luid 6 uid 3318
;;      reg 734 { d34(bb 225 insn 3313) }
(debug_insn 3318 3316 3319 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3319
(debug_insn 3319 3318 3320 225 (var_location:DI parent (debug_expr:DI D#27)) -1
     (nil))
;;   UD chains for insn luid 8 uid 3320
;;      reg 805 { d43(bb 224 insn 3308) d42(bb 221 insn 240) }
(insn 3320 3319 3321 225 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 805 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3321
;;      reg 668 { }
;;      reg 735 { d35(bb 225 insn 3320) }
(insn 3321 3320 3322 225 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 3322
;;      reg 461 { d22(bb 225 insn 3321) }
(insn 3322 3321 3324 225 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 3324
;;      reg 737 { d36(bb 225 insn 3322) }
(insn 3324 3322 3325 225 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 3325
;;      reg 66 { d13(bb 225 insn 3324) }
(jump_insn 3325 3324 3326 225 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3323)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 624 647 668 672 715 734 735 737 745 809 1861
;; live  out 	 461 672 715 734 735 737 745 809
;; rd  out 	(9) 461[22],672[27],715[28,29],734[34],735[35],737[36],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u3332(29){ }u3333(31){ }u3334(64){ }u3335(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 734 737 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734 737
;; lr  def 	 66 [cc]
;; live  in  	 672 715 734 737 745 809
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(9) 461[22],672[27],715[28,29],734[34],735[35],737[36],745[41],809[44]
;; rd  gen 	(1) 66[14]
;; rd  kill	(19) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]
;;  UD chains for artificial uses at top

(note 3326 3325 3327 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3327
;;      reg 734 { d34(bb 225 insn 3313) }
;;      reg 737 { d36(bb 225 insn 3322) }
(insn 3327 3326 3328 226 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (reg:DI 737 [ D.3798 ]))) verify.c:56 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 737 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
            (nil))))
;;   UD chains for insn luid 1 uid 3328
;;      reg 66 { d14(bb 226 insn 3327) }
(jump_insn 3328 3327 3329 226 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3344)
            (pc))) verify.c:56 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3344)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 809 1861
;; live  out 	 672 715 745 809
;; rd  out 	(5) 672[27],715[28,29],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u3355(29){ }u3356(31){ }u3357(64){ }u3358(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 738
;; live  in  	 672 715 745 809
;; live  gen 	 66 [cc] 738
;; live  kill	
;; rd  in  	(5) 672[27],715[28,29],745[41],809[44]
;; rd  gen 	(2) 66[15],738[37]
;; rd  kill	(21) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],738[37,38]
;;  UD chains for artificial uses at top

(code_label 3344 3342 3345 228 153 "" [1 uses])
(note 3345 3344 3346 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3346
(debug_insn 3346 3345 3347 228 (var_location:DI nhop (const_int 0 [0])) verify.c:60 -1
     (nil))
;;   UD chains for insn luid 1 uid 3347
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3347 3346 3348 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) verify.c:61 -1
     (nil))
;;   UD chains for insn luid 2 uid 3348
;;      reg 672 { d27(bb 234 insn 3409) }
(insn 3348 3347 3349 228 (set (reg/v:DI 738 [ lastlvl ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:62 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3349
;;      reg 738 { d37(bb 228 insn 3348) }
(debug_insn 3349 3348 3351 228 (var_location:DI D#23 (plus:DI (reg/v:DI 738 [ lastlvl ])
        (const_int 1 [0x1]))) verify.c:62 -1
     (nil))
;;   UD chains for insn luid 4 uid 3351
(debug_insn 3351 3349 3352 228 (var_location:DI lastlvl (debug_expr:DI D#23)) -1
     (nil))
;;   UD chains for insn luid 5 uid 3352
(debug_insn 3352 3351 3353 228 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 3353
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3353 3352 3354 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3354
;;      reg 738 { d37(bb 228 insn 3348) }
(insn 3354 3353 3355 228 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 738 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 8 uid 3355
;;      reg 66 { d15(bb 228 insn 3354) }
(jump_insn 3355 3354 3356 228 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 745 809 1861
;; live  out 	 672 715 738 745 809
;; rd  out 	(6) 672[27],715[28,29],738[37],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u3365(29){ }u3366(31){ }u3367(64){ }u3368(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 672 715 738 745 809
;; live  gen 	
;; live  kill	
;; rd  in  	(6) 672[27],715[28,29],738[37],745[41],809[44]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3356 3355 3396 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 745 809 1861
;; live  out 	 672 715 738 745 809
;; rd  out 	(6) 672[27],715[28,29],738[37],745[41],809[44]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u3369(29){ }u3370(31){ }u3371(64){ }u3372(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 739 741 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 738 739
;; lr  def 	 66 [cc] 1759
;; live  in  	 672 715 738 739 741 745
;; live  gen 	 66 [cc] 1759
;; live  kill	
;; rd  in  	(9) 66[17],672[27],715[28,29],738[37,38],739[39],741[40],745[41]
;; rd  gen 	(2) 66[16],1759[51]
;; rd  kill	(20) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],1759[51]
;;  UD chains for artificial uses at top

(code_label 3396 3356 3359 230 156 "" [1 uses])
(note 3359 3396 3360 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3360
;;      reg 739 { d39(bb 233 insn 3395) }
(insn 3360 3359 3361 230 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3361
;;      reg 738 { d38(bb 231 insn 243) d37(bb 228 insn 3348) }
;;      reg 1759 { d51(bb 230 insn 3360) }
(insn 3361 3360 3362 230 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1759 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 738 [ lastlvl ])
            (nil))))
;;   UD chains for insn luid 2 uid 3362
;;      reg 66 { d16(bb 230 insn 3361) }
(jump_insn 3362 3361 3363 230 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3367)
            (pc))) verify.c:64 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3367)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 739 741 745 1861
;; live  out 	 672 715 739 741 745
;; rd  out 	(6) 672[27],715[28,29],739[39],741[40],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u3377(29){ }u3378(31){ }u3379(64){ }u3380(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 739 741 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 739 741
;; lr  def 	 738 809
;; live  in  	 672 715 739 741 745
;; live  gen 	 738 809
;; live  kill	
;; rd  in  	(6) 672[27],715[28,29],739[39],741[40],745[41]
;; rd  gen 	(2) 738[38],809[45]
;; rd  kill	(4) 738[37,38],809[44,45]
;;  UD chains for artificial uses at top

(note 3363 3362 3364 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3364
;;      reg 647 { }
;;      reg 741 { d40(bb 233 insn 3394) }
(insn 3364 3363 243 231 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 741 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 243
;;      reg 739 { d39(bb 233 insn 3395) }
(insn 243 3364 3367 231 (set (reg/v:DI 738 [ lastlvl ])
        (reg/v:DI 739 [ lastlvl ])) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 739 [ lastlvl ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 745 809 1861
;; live  out 	 672 715 738 745 809
;; rd  out 	(6) 672[27],715[28,29],738[38],745[41],809[45]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u3400(29){ }u3401(31){ }u3402(64){ }u3403(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 745 809 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 809
;; lr  def 	 66 [cc] 739 741
;; live  in  	 672 715 738 745 809
;; live  gen 	 66 [cc] 739 741
;; live  kill	
;; rd  in  	(8) 672[27],715[28,29],738[37,38],745[41],809[44,45]
;; rd  gen 	(3) 66[17],739[39],741[40]
;; rd  kill	(21) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],739[39],741[40]
;;  UD chains for artificial uses at top

(code_label 3383 3381 3384 233 154 "" [0 uses])
(note 3384 3383 3388 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3388
(debug_insn 3388 3384 3391 233 (var_location:DI D#26 (mem:DI (debug_expr:DI D#38) [0 +0 S8 A64])) verify.c:66 -1
     (nil))
;;   UD chains for insn luid 1 uid 3391
;;      reg 738 { d38(bb 231 insn 243) d37(bb 228 insn 3348) }
(debug_insn 3391 3388 3392 233 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3392
(debug_insn 3392 3391 3393 233 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 3393
(debug_insn 3393 3392 3394 233 (var_location:DI parent (debug_expr:DI D#26)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3394
;;      reg 809 { d45(bb 231 insn 3364) d44(bb 212 insn 3209) }
(insn 3394 3393 3395 233 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 809 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3395
;;      reg 668 { }
;;      reg 741 { d40(bb 233 insn 3394) }
(insn 3395 3394 3397 233 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3397
;;      reg 739 { d39(bb 233 insn 3395) }
(insn 3397 3395 3398 233 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 7 uid 3398
;;      reg 66 { d17(bb 233 insn 3397) }
(jump_insn 3398 3397 3402 233 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3396)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 738 739 741 745 1861
;; live  out 	 672 715 738 739 741 745
;; rd  out 	(8) 672[27],715[28,29],738[37,38],739[39],741[40],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u3410(29){ }u3411(31){ }u3412(64){ }u3413(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 745 1861
;; lr  def 	 66 [cc] 672 745
;; live  in  	 672 715 745
;; live  gen 	 66 [cc] 672 745
;; live  kill	
;; rd  in  	(11) 66[0],672[27],715[28,29],738[37,38],739[39],741[40],745[41],809[44],1728[46]
;; rd  gen 	(3) 66[18],672[27],745[41]
;; rd  kill	(21) 66[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],672[27],745[41]
;;  UD chains for artificial uses at top

(code_label 3402 3398 3403 234 144 "" [4 uses])
(note 3403 3402 3404 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3404
;;      reg 715 { d29(bb 269 insn 269) d28(bb 268 insn 268) }
(debug_insn 3404 3403 3405 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3405
;;      reg 745 { d41(bb 234 insn 3405) }
(insn 3405 3404 3407 234 (set (reg/v:DI 745 [ parent ])
        (plus:DI (reg/v:DI 745 [ parent ])
            (const_int 1 [0x1]))) verify.c:31 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3407
;;      reg 745 { d41(bb 234 insn 3405) }
(debug_insn 3407 3405 3408 234 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3408
;;      reg 715 { d29(bb 269 insn 269) d28(bb 268 insn 268) }
(debug_insn 3408 3407 3409 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3409
;;      reg 672 { d27(bb 234 insn 3409) }
(insn 3409 3408 3411 234 (set (reg:DI 672 [ ivtmp.84 ])
        (plus:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 8 [0x8]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3411
;;      reg 745 { d41(bb 234 insn 3405) }
;;      reg 1861 { }
(insn 3411 3409 3412 234 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:31 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3412
;;      reg 66 { d18(bb 234 insn 3411) }
(jump_insn 3412 3411 4342 234 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4342)
            (pc))) verify.c:31 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 4342)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(4) 672[27],715[28,29],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u3817(29){ }u3818(31){ }u3819(64){ }u3820(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 672 745
;; live  gen 	 715
;; live  kill	
;; rd  in  	(8) 581[23,24],609[26],672[27],715[28,29],745[41],809[44]
;; rd  gen 	(1) 715[28]
;; rd  kill	(2) 715[28,29]
;;  UD chains for artificial uses at top

(code_label 4004 194 4003 268 202 "" [1 uses])
(note 4003 4004 268 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 268
(insn 268 4003 4008 268 (set (reg/v:SI 715 [ err ])
        (const_int -2 [0xfffffffffffffffe])) verify.c:44 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(3) 672[27],715[28],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u3821(29){ }u3822(31){ }u3823(64){ }u3824(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 672 745
;; live  gen 	 715
;; live  kill	
;; rd  in  	(7) 609[26],672[27],715[28,29],731[31],745[41],809[44]
;; rd  gen 	(1) 715[29]
;; rd  kill	(2) 715[28,29]
;;  UD chains for artificial uses at top

(code_label 4008 268 4007 269 203 "" [1 uses])
(note 4007 4008 269 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 269
(insn 269 4007 3779 269 (set (reg/v:SI 715 [ err ])
        (const_int -1 [0xffffffffffffffff])) verify.c:46 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3779
(debug_insn 3779 269 3782 269 (var_location:SI terr (const_int -1 [0xffffffffffffffff])) -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(3) 672[27],715[29],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 672 715 745
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 672[27],715[28,29],745[41]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4342 3412 4341 297 280 "" [1 uses])
(note 4341 4342 3416 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 668 672 715 745 1861
;; live  out 	 672 715 745
;; rd  out 	(4) 672[27],715[28,29],745[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 15 ******
*****starting processing of loop 19 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 206, 298
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 2 (0.0066)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 2 (0.0066)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 3 ( 0.01)


starting region dump


main

Dataflow summary:
def_info->table_size = 8, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0
;;  reg->defs[] map:	66[0,0] 770[1,1] 776[2,2] 795[3,3] 1719[4,4] 1720[5,5] 1722[6,6] 1724[7,7] 
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u3115(29){ }u3116(31){ }u3117(64){ }u3118(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; lr  def 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  in  	 770 776
;; live  gen 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  kill	
;; rd  in  	(2) 770[1],776[2]
;; rd  gen 	(8) 66[0],770[1],776[2],795[3],1719[4],1720[5],1722[6],1724[7]
;; rd  kill	(8) 66[0],770[1],776[2],795[3],1719[4],1720[5],1722[6],1724[7]
;;  UD chains for artificial uses at top

(code_label 3172 4202 3157 206 142 "" [0 uses])
(note 3157 3172 3159 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3159
;;      reg 770 { d1(bb 206 insn 3171) }
;;      reg 1857 { }
(insn 3159 3157 3160 206 (set (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (plus:V2DI (reg:V2DI 770 [ vect_vec_iv_.40 ])
            (reg:V2DI 1857))) 963 {addv2di3}
     (nil))
;;   UD chains for insn luid 1 uid 3160
(debug_insn 3160 3159 3161 206 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3161
;;      reg 776 { d2(bb 206 insn 3170) }
(insn 3161 3160 3163 206 (set (reg:DI 1719 [ D.3805 ])
        (ashift:DI (reg:DI 776 [ D.3810 ])
            (const_int 4 [0x4]))) verify.c:28 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 3 uid 3163
;;      reg 770 { d1(bb 206 insn 3171) }
;;      reg 800 { }
(insn 3163 3161 3165 206 (set (reg:V2DI 1722)
        (neg:V2DI (eq:V2DI (reg:V2DI 800 [ vect_cst_.42 ])
                (reg:V2DI 770 [ vect_vec_iv_.40 ])))) 2198 {aarch64_cmeqv2di}
     (expr_list:REG_DEAD (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3165
;;      reg 1722 { d6(bb 206 insn 3163) }
;;      reg 1858 { }
;;   eq_note reg 1722 { d6(bb 206 insn 3163) }
(insn 3165 3163 3166 206 (set (reg:V2DI 1720 [ vect_patt_839.41 ])
        (and:V2DI (not:V2DI (reg:V2DI 1722))
            (reg:V2DI 1858))) 956 {bicv2di3}
     (expr_list:REG_DEAD (reg:V2DI 1722)
        (expr_list:REG_EQUAL (and:V2DI (not:V2DI (reg:V2DI 1722))
                (const_vector:V2DI [
                        (const_int 1 [0x1])
                        (const_int 1 [0x1])
                    ]))
            (nil))))
;;   UD chains for insn luid 5 uid 3166
;;      reg 1720 { d5(bb 206 insn 3165) }
(insn 3166 3165 3167 206 (set (reg:V2DI 1724 [ vect__599.46 ])
        (neg:V2DI (reg:V2DI 1720 [ vect_patt_839.41 ]))) verify.c:28 1005 {negv2di2}
     (expr_list:REG_DEAD (reg:V2DI 1720 [ vect_patt_839.41 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3167
;;      reg 782 { }
;;      reg 1719 { d4(bb 206 insn 3161) }
;;      reg 1724 { d7(bb 206 insn 3166) }
(insn 3167 3166 3169 206 (set (mem:V2DI (plus:DI (reg/f:DI 782 [ vectp.48 ])
                (reg:DI 1719 [ D.3805 ])) [4 MEM[base: vectp.48_1271, index: _743, offset: 0B]+0 S16 A128])
        (reg:V2DI 1724 [ vect__599.46 ])) verify.c:28 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 1724 [ vect__599.46 ])
        (expr_list:REG_DEAD (reg:DI 1719 [ D.3805 ])
            (nil))))
;;   UD chains for insn luid 7 uid 3169
(debug_insn 3169 3167 3170 206 (var_location:DI k (debug_expr:DI D#41)) -1
     (nil))
;;   UD chains for insn luid 8 uid 3170
;;      reg 776 { d2(bb 206 insn 3170) }
(insn 3170 3169 3171 206 (set (reg:DI 776 [ D.3810 ])
        (plus:DI (reg:DI 776 [ D.3810 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 3171
;;      reg 795 { d3(bb 206 insn 3159) }
(insn 3171 3170 3173 206 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 795 [ vect_vec_iv_.40 ])) 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (nil)))
;;   UD chains for insn luid 10 uid 3173
;;      reg 753 { }
;;      reg 776 { d2(bb 206 insn 3170) }
(insn 3173 3171 3174 206 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 753 [ bnd.34 ])
            (reg:DI 776 [ D.3810 ]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 11 uid 3174
;;      reg 66 { d0(bb 206 insn 3173) }
(jump_insn 3174 3173 4344 206 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4344)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 4344)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; live  out 	 770 776
;; rd  out 	(2) 770[1],776[2]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 770 776
;; live  gen 	
;; live  kill	
;; rd  in  	(8) 66[0],770[1],776[2],795[3],1719[4],1720[5],1722[6],1724[7]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4344 3174 4343 298 281 "" [1 uses])
(note 4343 4344 3175 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; live  out 	 770 776
;; rd  out 	(2) 770[1],776[2]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 19 ******
*****starting processing of loop 8 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 294, 295, 296, 297, 298
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 258 ( 0.86)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 238 ( 0.79)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 292 ( 0.97)


starting region dump


main

Dataflow summary:
def_info->table_size = 1024, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,3u} r1622={1d,1u} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d,1u} r1635={1d,1u} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d,3u} r1644={1d,1u} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d,1u} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d,3u} r1687={1d,1u} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d,1u} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d,1u} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d,1u} r1851={1d,1u} r1852={1d,1u} r1853={1d,20u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} 
;;    total ref usage 11591{7857d,3663u,71e} in 2706{2571 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	66
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673
;;  reg->defs[] map:	0[0,27] 1[28,49] 2[50,69] 3[70,85] 4[86,99] 5[100,113] 6[114,127] 7[128,141] 8[142,155] 9[156,169] 10[170,183] 11[184,197] 12[198,211] 13[212,225] 14[226,239] 15[240,253] 16[254,281] 17[282,309] 18[310,323] 30[324,337] 32[338,351] 33[352,365] 34[366,379] 35[380,393] 36[394,407] 37[408,421] 38[422,435] 39[436,449] 48[450,463] 49[464,477] 50[478,491] 51[492,505] 52[506,519] 53[520,533] 54[534,547] 55[548,561] 56[562,575] 57[576,589] 58[590,603] 59[604,617] 60[618,631] 61[632,645] 62[646,659] 63[660,673] 66[674,775] 436[776,777] 456[778,779] 461[780,781] 581[782,783] 609[784,785] 610[786,789] 611[790,790] 613[791,791] 618[792,792] 623[793,793] 624[794,794] 625[795,795] 626[796,796] 647[797,797] 653[798,798] 659[799,799] 666[800,800] 668[801,801] 672[802,803] 674[804,804] 675[805,805] 679[806,806] 688[807,807] 690[808,808] 692[809,809] 694[810,810] 708[811,812] 710[813,813] 712[814,815] 715[816,830] 716[831,837] 720[838,838] 727[839,839] 731[840,840] 732[841,841] 733[842,843] 734[844,844] 735[845,845] 737[846,846] 738[847,848] 739[849,849] 741[850,850] 742[851,852] 745[853,854] 746[855,855] 752[856,856] 753[857,857] 754[858,858] 763[859,859] 770[860,861] 776[862,863] 777[864,864] 782[865,865] 795[866,866] 799[867,867] 800[868,868] 805[869,870] 806[871,875] 809[876,877] 811[878,878] 1616[879,879] 1622[880,880] 1623[881,881] 1633[882,882] 1634[883,883] 1635[884,884] 1636[885,885] 1638[886,886] 1639[887,887] 1641[888,888] 1644[889,889] 1645[890,890] 1646[891,891] 1647[892,892] 1648[893,893] 1649[894,894] 1652[895,895] 1653[896,896] 1654[897,897] 1655[898,898] 1656[899,899] 1657[900,900] 1660[901,901] 1661[902,902] 1662[903,903] 1663[904,904] 1664[905,905] 1665[906,906] 1668[907,907] 1669[908,908] 1670[909,909] 1671[910,910] 1673[911,911] 1678[912,912] 1679[913,913] 1680[914,914] 1683[915,915] 1684[916,916] 1687[917,917] 1688[918,918] 1694[919,919] 1695[920,920] 1696[921,921] 1697[922,922] 1698[923,923] 1699[924,924] 1700[925,925] 1701[926,926] 1702[927,927] 1703[928,928] 1704[929,929] 1705[930,930] 1706[931,931] 1707[932,932] 1708[933,933] 1709[934,934] 1710[935,936] 1711[937,937] 1716[938,938] 1717[939,939] 1719[940,940] 1720[941,941] 1722[942,942] 1724[943,943] 1725[944,944] 1726[945,945] 1727[946,946] 1728[947,947] 1730[948,948] 1731[949,949] 1741[950,950] 1742[951,951] 1759[952,952] 1768[953,953] 1770[954,954] 1771[955,955] 1775[956,956] 1776[957,957] 1777[958,958] 1778[959,959] 1780[960,960] 1781[961,961] 1783[962,962] 1785[963,963] 1786[964,964] 1788[965,965] 1790[966,966] 1791[967,967] 1793[968,968] 1794[969,969] 1796[970,970] 1797[971,971] 1798[972,972] 1799[973,973] 1800[974,974] 1801[975,975] 1802[976,976] 1804[977,977] 1805[978,978] 1806[979,979] 1807[980,980] 1808[981,981] 1810[982,982] 1812[983,983] 1813[984,984] 1814[985,985] 1816[986,986] 1817[987,987] 1819[988,988] 1820[989,989] 1821[990,990] 1822[991,991] 1824[992,992] 1825[993,993] 1826[994,994] 1837[995,995] 1839[996,996] 1842[997,997] 1843[998,998] 1844[999,999] 1845[1000,1000] 1846[1001,1001] 1848[1002,1002] 1849[1003,1003] 1851[1004,1004] 1856[1005,1007] 1857[1008,1008] 1858[1009,1009] 1860[1010,1012] 1861[1013,1013] 1865[1014,1014] 1866[1015,1015] 1867[1016,1016] 1868[1017,1017] 1869[1018,1018] 1870[1019,1019] 1871[1020,1020] 1872[1021,1021] 1873[1022,1022] 1874[1023,1023] 
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u2765(29){ }u2766(31){ }u2767(64){ }u2768(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 647 752 777 1616 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 777 1616
;; lr  def 	 66 [cc] 811 1622 1623
;; live  in  	 611 647 752 777 1616 1710
;; live  gen 	 66 [cc] 811 1622 1623
;; live  kill	
;; rd  in  	(9) 0[27],66[775],611[790],613[791],647[797],752[856],777[864],1616[879],1710[936]
;; rd  gen 	(4) 66[674],811[878],1622[880],1623[881]
;; rd  kill	(3) 811[878],1622[880],1623[881]
;;  UD chains for artificial uses at top

(code_label 2873 2871 2874 182 127 "" [1 uses])
(note 2874 2873 2875 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2875
(debug_insn 2875 2874 2876 182 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
;;   UD chains for insn luid 1 uid 2876
(debug_insn 2876 2875 2877 182 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
;;   UD chains for insn luid 2 uid 2877
(debug_insn 2877 2876 2878 182 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
;;   UD chains for insn luid 3 uid 2878
(debug_insn 2878 2877 2879 182 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
;;   UD chains for insn luid 4 uid 2879
;;      reg 777 { d864(bb 266 insn 3748) }
(insn 2879 2878 2883 182 (set (reg:DI 811 [ D.3805 ])
        (ashift:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 2883
;;      reg 1616 { d879(bb 292 insn 2857) }
(insn 2883 2879 2884 182 (set (reg/f:DI 1622)
        (plus:DI (reg/f:DI 1616)
            (const_int 112 [0x70]))) graph500.c:192 95 {*adddi3_aarch64}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                (const_int 112 [0x70])))
        (nil)))
;;   UD chains for insn luid 6 uid 2884
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1622 { d880(bb 182 insn 2883) }
(insn 2884 2883 2885 182 (set (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1622)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1622)
        (nil)))
;;   UD chains for insn luid 7 uid 2885
;;      reg 611 { d790(bb 292 insn 2858) }
;;      reg 1623 { d881(bb 182 insn 2884) }
(insn 2885 2884 2886 182 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 611 [ D.3798 ])
            (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ]))) graph500.c:192 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (expr_list:REG_DEAD (reg:DI 611 [ D.3798 ])
            (nil))))
;;   UD chains for insn luid 8 uid 2886
;;      reg 66 { d674(bb 182 insn 2885) }
(jump_insn 2886 2885 2887 182 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2901)
            (pc))) graph500.c:192 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2901)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1616 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1616 1710
;; rd  out 	(6) 647[797],752[856],777[864],811[878],1616[879],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u2794(29){ }u2795(31){ }u2796(64){ }u2797(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1616 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1616
;; lr  def 	 66 [cc] 1633
;; live  in  	 647 752 777 811 1616 1710
;; live  gen 	 66 [cc] 1633
;; live  kill	
;; rd  in  	(6) 647[797],752[856],777[864],811[878],1616[879],1710[936]
;; rd  gen 	(2) 66[675],1633[882]
;; rd  kill	(1) 1633[882]
;;  UD chains for artificial uses at top

(code_label 2901 2899 2902 184 128 "" [1 uses])
(note 2902 2901 2905 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2905
;;      reg 1616 { d879(bb 292 insn 2857) }
(insn 2905 2902 2906 184 (set (reg:SI 1633 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:194 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1616)
        (nil)))
;;   UD chains for insn luid 1 uid 2906
;;      reg 1633 { d882(bb 184 insn 2905) }
(insn 2906 2905 2907 184 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1633 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:194 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1633 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 2 uid 2907
;;      reg 66 { d675(bb 184 insn 2906) }
(jump_insn 2907 2906 2908 184 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2921)
            (pc))) graph500.c:194 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 2921)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1710
;; rd  out 	(5) 647[797],752[856],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u2803(29){ }u2804(31){ }u2805(64){ }u2806(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1634 1635 1636 1638 1856
;; live  in  	 647 752 777 811 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1634 1635 1636 1638 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(5) 647[797],752[856],777[864],811[878],1710[936]
;; rd  gen 	(6) 0[1],1634[883],1635[884],1636[885],1638[886],1856[1005]
;; rd  kill	(49) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],1634[883],1635[884],1636[885],1638[886],1856[1005,1006,1007]
;;  UD chains for artificial uses at top

(note 2908 2907 2909 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2909
(debug_insn 2909 2908 2910 185 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:194 -1
     (nil))
;;   UD chains for insn luid 1 uid 2910
(debug_insn 2910 2909 2911 185 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)) graph500.c:194 -1
     (nil))
;;   UD chains for insn luid 2 uid 2911
(insn 2911 2910 2912 185 (set (reg/f:DI 1635)
        (high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 2912
;;      reg 1635 { d884(bb 185 insn 2911) }
(insn 2912 2911 2913 185 (set (reg/f:DI 1634)
        (lo_sum:DI (reg/f:DI 1635)
            (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1635)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)
            (nil))))
;;   UD chains for insn luid 4 uid 2913
(insn 2913 2912 2914 185 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 2914
;;      reg 1856 { d1005(bb 185 insn 2913) }
(insn 2914 2913 2915 185 (set (reg/f:DI 1636)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 2915
;;      reg 1636 { d885(bb 185 insn 2914) }
(insn 2915 2914 2916 185 (set (reg/f:DI 1638 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1636) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1636)
        (nil)))
;;   UD chains for insn luid 7 uid 2916
;;      reg 777 { d864(bb 266 insn 3748) }
(insn 2916 2915 2917 185 (set (reg:SI 3 x3)
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 2917
;;      reg 1634 { d883(bb 185 insn 2912) }
(insn 2917 2916 2918 185 (set (reg:DI 2 x2)
        (reg/f:DI 1634)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1634)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)
            (nil))))
;;   UD chains for insn luid 9 uid 2918
(insn 2918 2917 2919 185 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 2919
;;      reg 1638 { d886(bb 185 insn 2915) }
(insn 2919 2918 2920 185 (set (reg:DI 0 x0)
        (reg/f:DI 1638 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1638 [ stderr ])
        (nil)))
;;   UD chains for insn luid 11 uid 2920
;;      reg 31 { }
;;      reg 0 { d0(bb 185 insn 2919) }
;;      reg 1 { d28(bb 185 insn 2918) }
;;      reg 2 { d50(bb 185 insn 2917) }
;;      reg 3 { d70(bb 185 insn 2916) }
(call_insn 2920 2919 2921 185 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1710
;; rd  out 	(5) 647[797],752[856],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u2818(29){ }u2819(31){ }u2820(64){ }u2821(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 811 1853 1859
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 618 653 659 1639 1641 1644 1645 1646 1647 1648 1649 1652 1653 1654 1655 1656 1657 1660 1661 1662 1663 1664 1665 1668
;; live  in  	 647 752 777 811 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 618 653 659 1639 1641 1644 1645 1646 1647 1648 1649 1652 1653 1654 1655 1656 1657 1660 1661 1662 1663 1664 1665 1668
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(5) 647[797],752[856],777[864],811[878],1710[936]
;; rd  gen 	(26) 0[7],66[680],618[792],653[798],659[799],1639[887],1641[888],1644[889],1645[890],1646[891],1647[892],1648[893],1649[894],1652[895],1653[896],1654[897],1655[898],1656[899],1657[900],1660[901],1661[902],1662[903],1663[904],1664[905],1665[906],1668[907]
;; rd  kill	(66) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],618[792],653[798],659[799],1639[887],1641[888],1644[889],1645[890],1646[891],1647[892],1648[893],1649[894],1652[895],1653[896],1654[897],1655[898],1656[899],1657[900],1660[901],1661[902],1662[903],1663[904],1664[905],1665[906],1668[907]
;;  UD chains for artificial uses at top

(code_label 2921 2920 2922 186 129 "" [1 uses])
(note 2922 2921 2924 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2924
;;      reg 1859 { }
(insn 2924 2922 2925 186 (set (reg/f:DI 1639)
        (lo_sum:DI (reg/f:DI 1859)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
;;   UD chains for insn luid 1 uid 2925
;;      reg 1639 { d887(bb 186 insn 2924) }
(insn 2925 2924 2926 186 (set (reg:DI 1 x1)
        (reg/f:DI 1639)) timer.c:43 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
;;   UD chains for insn luid 2 uid 2926
(insn 2926 2925 2927 186 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 2927
;;      reg 31 { }
;;      reg 0 { d2(bb 186 insn 2926) }
;;      reg 1 { d30(bb 186 insn 2925) }
(call_insn 2927 2926 2929 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 4 uid 2929
;;      reg 1853 { }
(insn 2929 2927 2931 186 (set (reg/f:DI 1641)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:195 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 5 uid 2931
;;      reg 1641 { d888(bb 186 insn 2929) }
(insn 2931 2929 2932 186 (set (reg/f:DI 1644)
        (plus:DI (reg/f:DI 1641)
            (const_int 112 [0x70]))) graph500.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                (const_int 112 [0x70])))
        (nil)))
;;   UD chains for insn luid 6 uid 2932
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1644 { d889(bb 186 insn 2931) }
(insn 2932 2931 2933 186 (set (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1644)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1644)
        (nil)))
;;   UD chains for insn luid 7 uid 2933
;;      reg 64 { }
(insn 2933 2932 2934 186 (set (reg/f:DI 1646)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -48 [0xffffffffffffffd0]))) graph500.c:195 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 2934
;;      reg 1645 { d890(bb 186 insn 2932) }
(insn 2934 2933 2935 186 (set (reg:DI 2 x2)
        (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 9 uid 2935
;;      reg 1646 { d891(bb 186 insn 2933) }
;;   eq_note reg 64 { }
(insn 2935 2934 2936 186 (set (reg:DI 1 x1)
        (reg/f:DI 1646)) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1646)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
;;   UD chains for insn luid 10 uid 2936
;;      reg 647 { d797(bb 292 insn 2864) }
(insn 2936 2935 2937 186 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:195 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 2937
;;      reg 31 { }
;;      reg 0 { d4(bb 186 insn 2936) }
;;      reg 1 { d32(bb 186 insn 2935) }
;;      reg 2 { d53(bb 186 insn 2934) }
(call_insn 2937 2936 2938 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>) [0 make_bfs_tree S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:195 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 12 uid 2938
;;      reg 0 { d5(bb 186 insn 2937) }
(insn 2938 2937 2939 186 (set (reg/v:SI 618 [ err ])
        (reg:SI 0 x0)) graph500.c:195 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (nil)))
;;   UD chains for insn luid 13 uid 2939
;;      reg 618 { d792(bb 186 insn 2938) }
(debug_insn 2939 2938 2940 186 (var_location:SI err (reg/v:SI 618 [ err ])) graph500.c:195 -1
     (nil))
;;   UD chains for insn luid 14 uid 2940
;;      reg 64 { }
(insn 2940 2939 2941 186 (set (reg/f:DI 1647)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))) timer.c:68 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 15 uid 2941
;;      reg 1647 { d892(bb 186 insn 2940) }
;;   eq_note reg 64 { }
(insn 2941 2940 2942 186 (set (reg:DI 1 x1)
        (reg/f:DI 1647)) timer.c:68 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1647)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8]))
            (nil))))
;;   UD chains for insn luid 16 uid 2942
(insn 2942 2941 2943 186 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:68 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 17 uid 2943
;;      reg 31 { }
;;      reg 0 { d6(bb 186 insn 2942) }
;;      reg 1 { d34(bb 186 insn 2941) }
(call_insn 2943 2942 2944 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:68 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 18 uid 2944
;;      reg 64 { }
(insn 2944 2943 2945 186 (set (reg:DI 1649 [ ts.tv_nsec ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 ts.tv_nsec+0 S8 A64])) timer.c:69 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 19 uid 2945
;;      reg 1649 { d894(bb 186 insn 2944) }
(insn 2945 2944 2948 186 (set (reg:DF 1648 [ D.3804 ])
        (float:DF (reg:DI 1649 [ ts.tv_nsec ]))) timer.c:69 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1649 [ ts.tv_nsec ])
        (nil)))
;;   UD chains for insn luid 20 uid 2948
;;      reg 1639 { d887(bb 186 insn 2924) }
(insn 2948 2945 2949 186 (set (reg:DI 1653 [ tic_ts.tv_nsec ])
        (mem/c:DI (plus:DI (reg/f:DI 1639)
                (const_int 8 [0x8])) [4 tic_ts.tv_nsec+0 S8 A64])) timer.c:69 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 21 uid 2949
;;      reg 1653 { d896(bb 186 insn 2948) }
(insn 2949 2948 2950 186 (set (reg:DF 1652 [ D.3804 ])
        (float:DF (reg:DI 1653 [ tic_ts.tv_nsec ]))) timer.c:69 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1653 [ tic_ts.tv_nsec ])
        (nil)))
;;   UD chains for insn luid 22 uid 2950
;;      reg 1648 { d893(bb 186 insn 2945) }
;;      reg 1652 { d895(bb 186 insn 2949) }
(insn 2950 2949 2951 186 (set (reg:DF 1654 [ D.3804 ])
        (minus:DF (reg:DF 1648 [ D.3804 ])
            (reg:DF 1652 [ D.3804 ]))) timer.c:69 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1652 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1648 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 23 uid 2951
(insn 2951 2950 2952 186 (set (reg:DF 1655)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])) timer.c:69 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
;;   UD chains for insn luid 24 uid 2952
;;      reg 1654 { d897(bb 186 insn 2950) }
;;      reg 1655 { d898(bb 186 insn 2951) }
(insn 2952 2951 2953 186 (set (reg/v:DF 653 [ out ])
        (mult:DF (reg:DF 1654 [ D.3804 ])
            (reg:DF 1655))) timer.c:69 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1655)
        (expr_list:REG_DEAD (reg:DF 1654 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 25 uid 2953
;;      reg 653 { d798(bb 186 insn 2952) }
(debug_insn 2953 2952 2954 186 (var_location:DF out (reg/v:DF 653 [ out ])) timer.c:69 -1
     (nil))
;;   UD chains for insn luid 26 uid 2954
;;      reg 64 { }
(insn 2954 2953 2955 186 (set (reg:DI 1657 [ ts.tv_sec ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 ts.tv_sec+0 S8 A64])) timer.c:70 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 27 uid 2955
;;      reg 1657 { d900(bb 186 insn 2954) }
(insn 2955 2954 2958 186 (set (reg:DF 1656 [ D.3804 ])
        (float:DF (reg:DI 1657 [ ts.tv_sec ]))) timer.c:70 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1657 [ ts.tv_sec ])
        (nil)))
;;   UD chains for insn luid 28 uid 2958
;;      reg 1639 { d887(bb 186 insn 2924) }
(insn 2958 2955 2959 186 (set (reg:DI 1661 [ tic_ts.tv_sec ])
        (mem/c:DI (reg/f:DI 1639) [4 tic_ts.tv_sec+0 S8 A64])) timer.c:70 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1639)
        (nil)))
;;   UD chains for insn luid 29 uid 2959
;;      reg 1661 { d902(bb 186 insn 2958) }
(insn 2959 2958 2960 186 (set (reg:DF 1660 [ D.3804 ])
        (float:DF (reg:DI 1661 [ tic_ts.tv_sec ]))) timer.c:70 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1661 [ tic_ts.tv_sec ])
        (nil)))
;;   UD chains for insn luid 30 uid 2960
;;      reg 1656 { d899(bb 186 insn 2955) }
;;      reg 1660 { d901(bb 186 insn 2959) }
(insn 2960 2959 2961 186 (set (reg:DF 1662 [ D.3804 ])
        (minus:DF (reg:DF 1656 [ D.3804 ])
            (reg:DF 1660 [ D.3804 ]))) timer.c:70 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1660 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1656 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 31 uid 2961
;;      reg 653 { d798(bb 186 insn 2952) }
;;      reg 1662 { d903(bb 186 insn 2960) }
(insn 2961 2960 2963 186 (set (reg/v:DF 659 [ out ])
        (plus:DF (reg:DF 1662 [ D.3804 ])
            (reg/v:DF 653 [ out ]))) timer.c:70 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1662 [ D.3804 ])
        (expr_list:REG_DEAD (reg/v:DF 653 [ out ])
            (nil))))
;;   UD chains for insn luid 32 uid 2963
(debug_insn 2963 2961 2964 186 (var_location:DF out (clobber (const_int 0 [0]))) graph500.c:195 -1
     (nil))
;;   UD chains for insn luid 33 uid 2964
(insn 2964 2963 2965 186 (set (reg/f:DI 1665)
        (high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 34 uid 2965
;;      reg 1665 { d906(bb 186 insn 2964) }
(insn 2965 2964 2966 186 (set (reg/f:DI 1664)
        (lo_sum:DI (reg/f:DI 1665)
            (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1665)
        (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)
            (nil))))
;;   UD chains for insn luid 35 uid 2966
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1664 { d905(bb 186 insn 2965) }
(insn 2966 2965 2967 186 (set (reg/f:DI 1663)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1664))) graph500.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1664)
        (nil)))
;;   UD chains for insn luid 36 uid 2967
;;      reg 659 { d799(bb 186 insn 2961) }
;;      reg 1663 { d904(bb 186 insn 2966) }
(insn 2967 2966 2970 186 (set (mem:DF (reg/f:DI 1663) [1 MEM[symbol: bfs_time, index: _1361, offset: 0B]+0 S8 A64])
        (reg/v:DF 659 [ out ])) graph500.c:195 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1663)
        (expr_list:REG_DEAD (reg/v:DF 659 [ out ])
            (nil))))
;;   UD chains for insn luid 37 uid 2970
;;      reg 1641 { d888(bb 186 insn 2929) }
(insn 2970 2967 2971 186 (set (reg:SI 1668 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1641) [3 VERBOSE+0 S4 A32])) graph500.c:196 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 38 uid 2971
;;      reg 1668 { d907(bb 186 insn 2970) }
(insn 2971 2970 2972 186 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1668 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:196 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1668 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 39 uid 2972
;;      reg 66 { d680(bb 186 insn 2971) }
(jump_insn 2972 2971 2973 186 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3847)
            (pc))) graph500.c:196 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 3847)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 752 777 811 1641 1710 1853 1854 1859
;; live  out 	 618 647 752 777 811 1641 1710
;; rd  out 	(7) 618[792],647[797],752[856],777[864],811[878],1641[888],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u2879(29){ }u2880(31){ }u2881(64){ }u2882(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 752 777 811 1641 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1669 1670 1671 1673 1856
;; live  in  	 618 647 752 777 811 1641 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 1669 1670 1671 1673 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(7) 618[792],647[797],752[856],777[864],811[878],1641[888],1710[936]
;; rd  gen 	(7) 0[9],66[682],1669[908],1670[909],1671[910],1673[911],1856[1006]
;; rd  kill	(49) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],1669[908],1670[909],1671[910],1673[911],1856[1005,1006,1007]
;;  UD chains for artificial uses at top

(note 2973 2972 2974 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2974
(debug_insn 2974 2973 2975 187 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:196 -1
     (nil))
;;   UD chains for insn luid 1 uid 2975
(debug_insn 2975 2974 2976 187 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:196 -1
     (nil))
;;   UD chains for insn luid 2 uid 2976
(insn 2976 2975 2977 187 (set (reg/f:DI 1670)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 2977
;;      reg 1670 { d909(bb 187 insn 2976) }
(insn 2977 2976 2978 187 (set (reg/f:DI 1669)
        (lo_sum:DI (reg/f:DI 1670)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1670)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
;;   UD chains for insn luid 4 uid 2978
(insn 2978 2977 2979 187 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 2979
;;      reg 1856 { d1006(bb 187 insn 2978) }
(insn 2979 2978 2980 187 (set (reg/f:DI 1671)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 2980
;;      reg 1671 { d910(bb 187 insn 2979) }
(insn 2980 2979 2981 187 (set (reg/f:DI 1673 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 2981
;;      reg 1669 { d908(bb 187 insn 2977) }
(insn 2981 2980 2982 187 (set (reg:DI 2 x2)
        (reg/f:DI 1669)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1669)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
;;   UD chains for insn luid 8 uid 2982
(insn 2982 2981 2983 187 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 2983
;;      reg 1673 { d911(bb 187 insn 2980) }
(insn 2983 2982 2984 187 (set (reg:DI 0 x0)
        (reg/f:DI 1673 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1673 [ stderr ])
        (nil)))
;;   UD chains for insn luid 10 uid 2984
;;      reg 31 { }
;;      reg 0 { d8(bb 187 insn 2983) }
;;      reg 1 { d36(bb 187 insn 2982) }
;;      reg 2 { d56(bb 187 insn 2981) }
(call_insn 2984 2983 2985 187 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 11 uid 2985
;;      reg 618 { d792(bb 186 insn 2938) }
(insn 2985 2984 2986 187 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 618 [ err ])
        (nil)))
;;   UD chains for insn luid 12 uid 2986
;;      reg 66 { d682(bb 187 insn 2985) }
(jump_insn 2986 2985 3849 187 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2994)
            (pc))) graph500.c:198 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2994)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1641 1671 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1641 1671 1710
;; rd  out 	(7) 647[797],752[856],777[864],811[878],1641[888],1671[910],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u2903(29){ }u2904(31){ }u2905(64){ }u2906(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1641 1671 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1641
;; lr  def 	 66 [cc] 1678
;; live  in  	 647 752 777 811 1641 1671 1710
;; live  gen 	 66 [cc] 1678
;; live  kill	
;; rd  in  	(7) 647[797],752[856],777[864],811[878],1641[888],1671[910],1710[936]
;; rd  gen 	(2) 66[683],1678[912]
;; rd  kill	(1) 1678[912]
;;  UD chains for artificial uses at top

(code_label 2994 2992 2995 189 131 "" [1 uses])
(note 2995 2994 2998 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2998
;;      reg 1641 { d888(bb 186 insn 2929) }
(insn 2998 2995 2999 189 (set (reg:SI 1678 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1641) [3 VERBOSE+0 S4 A32])) graph500.c:203 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1641)
        (nil)))
;;   UD chains for insn luid 1 uid 2999
;;      reg 1678 { d912(bb 189 insn 2998) }
(insn 2999 2998 3000 189 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1678 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:203 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1678 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 2 uid 3000
;;      reg 66 { d683(bb 189 insn 2999) }
(jump_insn 3000 2999 3004 189 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3004)
            (pc))) graph500.c:203 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9990 (nil)))
 -> 3004)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1671 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1671 1710
;; rd  out 	(6) 647[797],752[856],777[864],811[878],1671[910],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u2912(29){ }u2913(31){ }u2914(64){ }u2915(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1671 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 752 1671
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1679 1680 1683
;; live  in  	 647 752 777 811 1671 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1679 1680 1683
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(6) 647[797],752[856],777[864],811[878],1671[910],1710[936]
;; rd  gen 	(4) 0[11],1679[913],1680[914],1683[915]
;; rd  kill	(45) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],1679[913],1680[914],1683[915]
;;  UD chains for artificial uses at top

(code_label 3004 3000 3005 190 132 "" [1 uses])
(note 3005 3004 3006 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3006
(debug_insn 3006 3005 3007 190 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:203 -1
     (nil))
;;   UD chains for insn luid 1 uid 3007
(debug_insn 3007 3006 3008 190 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)) graph500.c:203 -1
     (nil))
;;   UD chains for insn luid 2 uid 3008
(insn 3008 3007 3009 190 (set (reg/f:DI 1680)
        (high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3009
;;      reg 1680 { d914(bb 190 insn 3008) }
(insn 3009 3008 3012 190 (set (reg/f:DI 1679)
        (lo_sum:DI (reg/f:DI 1680)
            (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1680)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
            (nil))))
;;   UD chains for insn luid 4 uid 3012
;;      reg 1671 { d910(bb 187 insn 2979) }
(insn 3012 3009 3013 190 (set (reg/f:DI 1683 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1671)
        (nil)))
;;   UD chains for insn luid 5 uid 3013
;;      reg 752 { d856(bb 292 insn 2854) }
(insn 3013 3012 3014 190 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3014
;;      reg 1679 { d913(bb 190 insn 3009) }
(insn 3014 3013 3015 190 (set (reg:DI 2 x2)
        (reg/f:DI 1679)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1679)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
            (nil))))
;;   UD chains for insn luid 7 uid 3015
(insn 3015 3014 3016 190 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 3016
;;      reg 1683 { d915(bb 190 insn 3012) }
(insn 3016 3015 3017 190 (set (reg:DI 0 x0)
        (reg/f:DI 1683 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1683 [ stderr ])
        (nil)))
;;   UD chains for insn luid 9 uid 3017
;;      reg 31 { }
;;      reg 0 { d10(bb 190 insn 3016) }
;;      reg 1 { d38(bb 190 insn 3015) }
;;      reg 2 { d58(bb 190 insn 3014) }
;;      reg 3 { d76(bb 190 insn 3013) }
(call_insn 3017 3016 3018 190 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; live  out 	 647 777 811 1710
;; rd  out 	(4) 647[797],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u2928(29){ }u2929(31){ }u2930(64){ }u2931(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1853
;; lr  def 	 66 [cc] 623 624 1684 1687 1861
;; live  in  	 647 777 811 1710
;; live  gen 	 66 [cc] 623 624 1684 1687 1861
;; live  kill	
;; rd  in  	(6) 647[797],752[856],777[864],811[878],1671[910],1710[936]
;; rd  gen 	(6) 66[685],623[793],624[794],1684[916],1687[917],1861[1013]
;; rd  kill	(5) 623[793],624[794],1684[916],1687[917],1861[1013]
;;  UD chains for artificial uses at top

(code_label 3018 3017 3019 191 133 "" [0 uses])
(note 3019 3018 3020 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3020
;;      reg 64 { }
(insn 3020 3019 3022 191 (set (reg:DI 623 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -48 [0xffffffffffffffd0])) [4 max_bfsvtx+0 S8 A128])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3022
;;      reg 1853 { }
(insn 3022 3020 3024 191 (set (reg/f:DI 1684)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 2 uid 3024
;;      reg 1684 { d916(bb 191 insn 3022) }
(insn 3024 3022 3025 191 (set (reg/f:DI 1687)
        (plus:DI (reg/f:DI 1684)
            (const_int 112 [0x70]))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                (const_int 112 [0x70])))
        (nil)))
;;   UD chains for insn luid 3 uid 3025
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1687 { d917(bb 191 insn 3024) }
(insn 3025 3024 3026 191 (set (reg:DI 624 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1687)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1687)
        (nil)))
;;   UD chains for insn luid 4 uid 3026
(debug_insn 3026 3025 3027 191 (var_location:DI D#35 (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 5 uid 3027
(debug_insn 3027 3026 3028 191 (var_location:DI D#34 (mem/c:DI (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>) [4 nedge+0 S8 A64])) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 6 uid 3028
;;      reg 647 { d797(bb 292 insn 2864) }
(debug_insn 3028 3027 3029 191 (var_location:DI bfs_tree_in (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 7 uid 3029
;;      reg 623 { d793(bb 191 insn 3020) }
(debug_insn 3029 3028 3030 191 (var_location:DI max_bfsvtx (reg:DI 623 [ D.3798 ])) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 8 uid 3030
;;      reg 624 { d794(bb 191 insn 3025) }
(debug_insn 3030 3029 3031 191 (var_location:DI root (reg:DI 624 [ D.3798 ])) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 9 uid 3031
(debug_insn 3031 3030 3032 191 (var_location:DI IJ_in (debug_expr:DI D#35)) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 10 uid 3032
(debug_insn 3032 3031 3033 191 (var_location:DI nedge (debug_expr:DI D#34)) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 11 uid 3033
;;      reg 647 { d797(bb 292 insn 2864) }
(debug_insn 3033 3032 3034 191 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:83 -1
     (nil))
;;   UD chains for insn luid 12 uid 3034
(debug_insn 3034 3033 3035 191 (var_location:DI IJ (debug_expr:DI D#35)) verify.c:84 -1
     (nil))
;;   UD chains for insn luid 13 uid 3035
;;      reg 623 { d793(bb 191 insn 3020) }
(insn 3035 3034 3036 191 (set (reg:DI 1861 [ D.3798 ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:89 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 14 uid 3036
;;      reg 1861 { d1013(bb 191 insn 3035) }
(debug_insn 3036 3035 3037 191 (var_location:DI nv (reg:DI 1861 [ D.3798 ])) verify.c:89 -1
     (nil))
;;   UD chains for insn luid 15 uid 3037
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3037 3036 3038 191 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 624 [ D.3798 ]))) verify.c:96 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 16 uid 3038
;;      reg 66 { d685(bb 191 insn 3037) }
(jump_insn 3038 3037 3039 191 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 3923)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; live  out 	 623 624 647 777 811 1684 1710 1861
;; rd  out 	(8) 623[793],624[794],647[797],777[864],811[878],1684[916],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u2946(29){ }u2947(31){ }u2948(64){ }u2949(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647
;; lr  def 	 66 [cc] 1688
;; live  in  	 623 624 647 777 811 1684 1710 1861
;; live  gen 	 66 [cc] 1688
;; live  kill	
;; rd  in  	(8) 623[793],624[794],647[797],777[864],811[878],1684[916],1710[936],1861[1013]
;; rd  gen 	(2) 66[686],1688[918]
;; rd  kill	(1) 1688[918]
;;  UD chains for artificial uses at top

(note 3039 3038 3040 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3040
;;      reg 624 { d794(bb 191 insn 3025) }
;;      reg 647 { d797(bb 292 insn 2864) }
(insn 3040 3039 3041 192 (set (reg:DI 1688 [ *_638 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 624 [ D.3798 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_638+0 S8 A64])) verify.c:96 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3041
;;      reg 624 { d794(bb 191 insn 3025) }
;;      reg 1688 { d918(bb 192 insn 3040) }
(insn 3041 3040 3042 192 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg:DI 1688 [ *_638 ]))) verify.c:96 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1688 [ *_638 ])
        (nil)))
;;   UD chains for insn luid 2 uid 3042
;;      reg 66 { d686(bb 192 insn 3041) }
(jump_insn 3042 3041 3043 192 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2078 (nil)))
 -> 3923)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; live  out 	 623 624 647 777 811 1684 1710 1861
;; rd  out 	(8) 623[793],624[794],647[797],777[864],811[878],1684[916],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u2955(29){ }u2956(31){ }u2957(64){ }u2958(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1684 1861
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 625 626 666 746
;; live  in  	 623 624 647 777 811 1684 1710 1861
;; live  gen 	 0 [x0] 66 [cc] 625 626 666 746
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 623[793],624[794],647[797],777[864],811[878],1684[916],1710[936],1861[1013]
;; rd  gen 	(6) 0[13],66[688],625[795],626[796],666[800],746[855]
;; rd  kill	(46) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],625[795],626[796],666[800],746[855]
;;  UD chains for artificial uses at top

(note 3043 3042 3046 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3046
;;      reg 1684 { d916(bb 191 insn 3022) }
(insn 3046 3043 3049 193 (set (reg/f:DI 625 [ D.3803 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1684)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3049
;;      reg 1684 { d916(bb 191 insn 3022) }
(insn 3049 3046 3050 193 (set (reg:DI 626 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1684)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1684)
        (nil)))
;;   UD chains for insn luid 2 uid 3050
(debug_insn 3050 3049 3051 193 (var_location:SI err (const_int 0 [0])) verify.c:99 -1
     (nil))
;;   UD chains for insn luid 3 uid 3051
(debug_insn 3051 3050 3053 193 (var_location:SI nedge_traversed (const_int 0 [0])) verify.c:100 -1
     (nil))
;;   UD chains for insn luid 4 uid 3053
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3053 3051 3054 193 (set (reg:DI 666 [ D.3802 ])
        (ashift:DI (reg:DI 1861 [ D.3798 ])
            (const_int 4 [0x4]))) verify.c:101 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 3054
;;      reg 666 { d800(bb 193 insn 3053) }
(debug_insn 3054 3053 3055 193 (var_location:DI sz (reg:DI 666 [ D.3802 ])) verify.c:101 -1
     (nil))
;;   UD chains for insn luid 6 uid 3055
;;      reg 666 { d800(bb 193 insn 3053) }
(debug_insn 3055 3054 3056 193 (var_location:DI n (reg:DI 666 [ D.3802 ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3056
;;      reg 666 { d800(bb 193 insn 3053) }
(insn 3056 3055 3057 193 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) generator/utils.c:32 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 3057
;;      reg 31 { }
;;      reg 0 { d12(bb 193 insn 3056) }
(call_insn 3057 3056 3058 193 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 9 uid 3058
;;      reg 0 { d13(bb 193 insn 3057) }
(insn 3058 3057 3060 193 (set (reg/v/f:DI 746 [ seen_edge ])
        (reg:DI 0 x0)) generator/utils.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 1693)
            (nil))))
;;   UD chains for insn luid 10 uid 3060
;;      reg 746 { d855(bb 193 insn 3058) }
(debug_insn 3060 3058 3061 193 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) generator/utils.c:32 -1
     (nil))
;;   UD chains for insn luid 11 uid 3061
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3061 3060 3062 193 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 746 [ seen_edge ])
            (const_int 0 [0]))) generator/utils.c:33 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 3062
;;      reg 66 { d688(bb 193 insn 3061) }
(jump_insn 3062 3061 3063 193 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3067)
            (pc))) generator/utils.c:33 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3067)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 746 777 811 1710 1861
;; rd  out 	(10) 623[793],624[794],625[795],626[796],647[797],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u2984(29){ }u2985(31){ }u2986(64){ }u2987(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746 1861
;; lr  def 	 66 [cc] 668 1694
;; live  in  	 623 624 625 626 647 746 777 811 1710 1861
;; live  gen 	 66 [cc] 668 1694
;; live  kill	
;; rd  in  	(10) 623[793],624[794],625[795],626[796],647[797],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(3) 66[689],668[801],1694[919]
;; rd  kill	(2) 668[801],1694[919]
;;  UD chains for artificial uses at top

(code_label 3067 3065 3068 195 135 "" [1 uses])
(note 3068 3067 3069 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3069
(debug_insn 3069 3068 3070 195 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
;;   UD chains for insn luid 1 uid 3070
(debug_insn 3070 3069 3071 195 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
;;   UD chains for insn luid 2 uid 3071
(debug_insn 3071 3070 3072 195 (var_location:DI sz (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
;;   UD chains for insn luid 3 uid 3072
(debug_insn 3072 3071 3073 195 (var_location:DI seen_edge (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
;;   UD chains for insn luid 4 uid 3073
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3073 3072 3074 195 (set (reg:DI 1694 [ D.3802 ])
        (ashift:DI (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:102 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 3074
;;      reg 746 { d855(bb 193 insn 3058) }
;;      reg 1694 { d919(bb 195 insn 3073) }
(insn 3074 3073 3075 195 (set (reg/v/f:DI 668 [ level ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1694 [ D.3802 ]))) verify.c:102 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1694 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3075
;;      reg 668 { d801(bb 195 insn 3074) }
(debug_insn 3075 3074 3076 195 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
;;   UD chains for insn luid 7 uid 3076
;;      reg 668 { d801(bb 195 insn 3074) }
(debug_insn 3076 3075 3077 195 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
;;   UD chains for insn luid 8 uid 3077
;;      reg 1861 { d1013(bb 191 insn 3035) }
(debug_insn 3077 3076 3078 195 (var_location:DI nv (reg:DI 1861 [ D.3798 ])) verify.c:102 -1
     (nil))
;;   UD chains for insn luid 9 uid 3078
;;      reg 647 { d797(bb 292 insn 2864) }
(debug_insn 3078 3077 3079 195 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:102 -1
     (nil))
;;   UD chains for insn luid 10 uid 3079
;;      reg 624 { d794(bb 191 insn 3025) }
(debug_insn 3079 3078 3080 195 (var_location:DI root (reg:DI 624 [ D.3798 ])) verify.c:102 -1
     (nil))
;;   UD chains for insn luid 11 uid 3080
(debug_insn 3080 3079 3081 195 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 12 uid 3081
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3081 3080 3082 195 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:27 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 13 uid 3082
;;      reg 66 { d689(bb 195 insn 3081) }
(jump_insn 3082 3081 3083 195 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3416)
            (pc))) verify.c:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 3416)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 746 777 811 1710 1861
;; rd  out 	(11) 623[793],624[794],625[795],626[796],647[797],668[801],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u2998(29){ }u2999(31){ }u3000(64){ }u3001(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 1861
;; lr  def 	 66 [cc] 672 742 1695 1696 1697 1698
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 66 [cc] 672 742 1695 1696 1697 1698
;; live  kill	
;; rd  in  	(11) 623[793],624[794],625[795],626[796],647[797],668[801],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(7) 66[693],672[802],742[852],1695[920],1696[921],1697[922],1698[923]
;; rd  kill	(8) 672[802,803],742[851,852],1695[920],1696[921],1697[922],1698[923]
;;  UD chains for artificial uses at top

(note 3083 3082 3086 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3086
;;      reg 668 { d801(bb 195 insn 3074) }
(insn 3086 3083 3087 196 (set (reg:DI 672 [ ivtmp.84 ])
        (reg/v/f:DI 668 [ level ])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3087
;;      reg 668 { d801(bb 195 insn 3074) }
(insn 3087 3086 3088 196 (set (reg:DI 1695 [ D.3810 ])
        (and:DI (reg/v/f:DI 668 [ level ])
            (const_int 15 [0xf]))) 468 {anddi3}
     (nil))
;;   UD chains for insn luid 2 uid 3088
;;      reg 1695 { d920(bb 196 insn 3087) }
(insn 3088 3087 3089 196 (set (reg:DI 1696 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1695 [ D.3810 ])
            (const_int 3 [0x3]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1695 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3089
;;      reg 1696 { d921(bb 196 insn 3088) }
(insn 3089 3088 3090 196 (set (reg:DI 1697 [ D.3810 ])
        (neg:DI (reg:DI 1696 [ D.3810 ]))) 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1696 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3090
;;      reg 1697 { d922(bb 196 insn 3089) }
(insn 3090 3089 3091 196 (set (reg:DI 1698 [ D.3810 ])
        (and:DI (reg:DI 1697 [ D.3810 ])
            (const_int 1 [0x1]))) 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1697 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3091
;;      reg 1698 { d923(bb 196 insn 3090) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3091 3090 3092 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1698 [ D.3810 ])
            (reg:DI 1861 [ D.3798 ]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3092
;;      reg 66 { d690(bb 196 insn 3091) }
;;      reg 1698 { d923(bb 196 insn 3090) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3092 3091 3093 196 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 1698 [ D.3810 ])
            (reg:DI 1861 [ D.3798 ]))) 443 {*cmovdi_insn}
     (expr_list:REG_DEAD (reg:DI 1698 [ D.3810 ])
        (expr_list:REG_DEAD (reg:CC 66 cc)
            (nil))))
;;   UD chains for insn luid 7 uid 3093
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3093 3092 4319 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 8 uid 4319
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 4319 3093 4320 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:27 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 9 uid 4320
;;      reg 66 { d692(bb 196 insn 4319) }
;;      reg 742 { d851(bb 196 insn 3092) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 4320 4319 3098 196 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (reg:DI 1861 [ D.3798 ]))) verify.c:27 443 {*cmovdi_insn}
     (nil))
;;   UD chains for insn luid 10 uid 3098
;;      reg 742 { d852(bb 196 insn 4320) }
(insn 3098 4320 3099 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 0 [0]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 11 uid 3099
;;      reg 66 { d693(bb 196 insn 3098) }
(jump_insn 3099 3098 3100 196 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3994)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3994)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; rd  out 	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u3027(29){ }u3028(31){ }u3029(64){ }u3030(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 742
;; lr  def 	 66 [cc] 1699 1700 1701
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1699 1700 1701
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 66[695],1699[924],1700[925],1701[926]
;; rd  kill	(3) 1699[924],1700[925],1701[926]
;;  UD chains for artificial uses at top

(note 3100 3099 3101 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3101
(debug_insn 3101 3100 3102 197 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3102
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3102 3101 3103 197 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 0 [0]))) verify.c:28 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3103
;;      reg 66 { d694(bb 197 insn 3102) }
(insn 3103 3102 3104 197 (set (reg:SI 1700)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3104
;;      reg 1700 { d925(bb 197 insn 3103) }
(insn 3104 3103 3105 197 (set (reg:DI 1699 [ D.3809 ])
        (zero_extend:DI (reg:SI 1700))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1700)
        (nil)))
;;   UD chains for insn luid 4 uid 3105
;;      reg 1699 { d924(bb 197 insn 3104) }
(insn 3105 3104 3106 197 (set (reg:DI 1701 [ D.3798 ])
        (neg:DI (reg:DI 1699 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1699 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3106
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 1701 { d926(bb 197 insn 3105) }
(insn 3106 3105 3108 197 (set (mem:DI (reg/v/f:DI 668 [ level ]) [4 *level_644+0 S8 A64])
        (reg:DI 1701 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1701 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3108
(debug_insn 3108 3106 3109 197 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3109
;;      reg 742 { d852(bb 196 insn 4320) }
(insn 3109 3108 3110 197 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 1 [0x1]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 8 uid 3110
;;      reg 66 { d695(bb 197 insn 3109) }
(jump_insn 3110 3109 3111 197 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3998)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3333 (nil)))
 -> 3998)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; rd  out 	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u3039(29){ }u3040(31){ }u3041(64){ }u3042(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 742
;; lr  def 	 66 [cc] 1702 1703 1704
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1702 1703 1704
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 66[697],1702[927],1703[928],1704[929]
;; rd  kill	(3) 1702[927],1703[928],1704[929]
;;  UD chains for artificial uses at top

(note 3111 3110 3112 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3112
(debug_insn 3112 3111 3113 198 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3113
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3113 3112 3114 198 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:28 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3114
;;      reg 66 { d696(bb 198 insn 3113) }
(insn 3114 3113 3115 198 (set (reg:SI 1703)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3115
;;      reg 1703 { d928(bb 198 insn 3114) }
(insn 3115 3114 3116 198 (set (reg:DI 1702 [ D.3809 ])
        (zero_extend:DI (reg:SI 1703))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1703)
        (nil)))
;;   UD chains for insn luid 4 uid 3116
;;      reg 1702 { d927(bb 198 insn 3115) }
(insn 3116 3115 3117 198 (set (reg:DI 1704 [ D.3798 ])
        (neg:DI (reg:DI 1702 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1702 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3117
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 1704 { d929(bb 198 insn 3116) }
(insn 3117 3116 3119 198 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 8 [0x8])) [4 MEM[(int64_t *)level_644 + 8B]+0 S8 A64])
        (reg:DI 1704 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1704 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3119
(debug_insn 3119 3117 3120 198 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3120
;;      reg 742 { d852(bb 196 insn 4320) }
(insn 3120 3119 3121 198 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 3 [0x3]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 8 uid 3121
;;      reg 66 { d697(bb 198 insn 3120) }
(jump_insn 3121 3120 3122 198 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4002)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3333 (nil)))
 -> 4002)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; rd  out 	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u3051(29){ }u3052(31){ }u3053(64){ }u3054(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668
;; lr  def 	 66 [cc] 806 1705 1706 1707
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 806 1705 1706 1707
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(5) 66[698],806[871],1705[930],1706[931],1707[932]
;; rd  kill	(8) 806[871,872,873,874,875],1705[930],1706[931],1707[932]
;;  UD chains for artificial uses at top

(note 3122 3121 3123 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3123
(debug_insn 3123 3122 3124 199 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3124
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3124 3123 3125 199 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 2 [0x2]))) verify.c:28 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3125
;;      reg 66 { d698(bb 199 insn 3124) }
(insn 3125 3124 3126 199 (set (reg:SI 1706)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3126
;;      reg 1706 { d931(bb 199 insn 3125) }
(insn 3126 3125 3127 199 (set (reg:DI 1705 [ D.3809 ])
        (zero_extend:DI (reg:SI 1706))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1706)
        (nil)))
;;   UD chains for insn luid 4 uid 3127
;;      reg 1705 { d930(bb 199 insn 3126) }
(insn 3127 3126 3128 199 (set (reg:DI 1707 [ D.3798 ])
        (neg:DI (reg:DI 1705 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1705 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3128
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 1707 { d932(bb 199 insn 3127) }
(insn 3128 3127 3130 199 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 16 [0x10])) [4 MEM[(int64_t *)level_644 + 16B]+0 S8 A64])
        (reg:DI 1707 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1707 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3130
(debug_insn 3130 3128 4071 199 (var_location:DI k (const_int 3 [0x3])) -1
     (nil))
;;   UD chains for insn luid 7 uid 4071
(debug_insn 4071 3130 229 199 (var_location:DI D#51 (const_int 3 [0x3])) -1
     (nil))
;;   UD chains for insn luid 8 uid 229
(insn 229 4071 3998 199 (set (reg/v:DI 806 [ k ])
        (const_int 3 [0x3])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[871],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u3062(29){ }u3063(31){ }u3064(64){ }u3065(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 806[872]
;; rd  kill	(5) 806[871,872,873,874,875]
;;  UD chains for artificial uses at top

(code_label 3998 229 3997 200 200 "" [1 uses])
(note 3997 3998 4070 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4070
(debug_insn 4070 3997 230 200 (var_location:DI D#51 (const_int 1 [0x1])) -1
     (nil))
;;   UD chains for insn luid 1 uid 230
(insn 230 4070 4002 200 (set (reg/v:DI 806 [ k ])
        (const_int 1 [0x1])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[872],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u3067(29){ }u3068(31){ }u3069(64){ }u3070(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 806[873]
;; rd  kill	(5) 806[871,872,873,874,875]
;;  UD chains for artificial uses at top

(code_label 4002 230 4001 201 201 "" [1 uses])
(note 4001 4002 4069 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4069
(debug_insn 4069 4001 231 201 (var_location:DI D#51 (const_int 2 [0x2])) -1
     (nil))
;;   UD chains for insn luid 1 uid 231
(insn 231 4069 3131 201 (set (reg/v:DI 806 [ k ])
        (const_int 2 [0x2])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[873],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u3071(29){ }u3072(31){ }u3073(64){ }u3074(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 742 1861
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[871,872,873],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[699]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3131 231 3132 202 139 "" [0 uses])
(note 3132 3131 3133 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3133
;;      reg 742 { d852(bb 196 insn 4320) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3133 3132 3134 202 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3134
;;      reg 66 { d699(bb 202 insn 3133) }
(jump_insn 3134 3133 3994 202 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3192)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3192)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; rd  out 	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[871,872,873],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u3078(29){ }u3079(31){ }u3080(64){ }u3081(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
;; rd  in  	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 806[874]
;; rd  kill	(5) 806[871,872,873,874,875]
;;  UD chains for artificial uses at top

(code_label 3994 3134 3993 203 199 "" [1 uses])
(note 3993 3994 4068 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4068
(debug_insn 4068 3993 232 203 (var_location:DI D#51 (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 232
(insn 232 4068 3135 203 (set (reg/v:DI 806 [ k ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[874],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u3082(29){ }u3083(31){ }u3084(64){ }u3085(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 742 1861
;; lr  def 	 66 [cc] 753 754 799 1708 1709
;; live  in  	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; live  gen 	 66 [cc] 753 754 799 1708 1709
;; live  kill	
;; rd  in  	(17) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[871,872,873,874],811[878],1710[936],1861[1013]
;; rd  gen 	(6) 66[700],753[857],754[858],799[867],1708[933],1709[934]
;; rd  kill	(5) 753[857],754[858],799[867],1708[933],1709[934]
;;  UD chains for artificial uses at top

(code_label 3135 232 3136 204 138 "" [0 uses])
(note 3136 3135 3137 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3137
;;      reg 742 { d852(bb 196 insn 4320) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3137 3136 3138 204 (set (reg:DI 754 [ niters.33 ])
        (minus:DI (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 264 {subdi3}
     (nil))
;;   UD chains for insn luid 1 uid 3138
;;      reg 754 { d858(bb 204 insn 3137) }
(insn 3138 3137 3139 204 (set (reg:DI 1708 [ D.3810 ])
        (plus:DI (reg:DI 754 [ niters.33 ])
            (const_int -2 [0xfffffffffffffffe]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3139
;;      reg 1708 { d933(bb 204 insn 3138) }
(insn 3139 3138 3140 204 (set (reg:DI 1709 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1708 [ D.3810 ])
            (const_int 1 [0x1]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1708 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3140
;;      reg 1709 { d934(bb 204 insn 3139) }
(insn 3140 3139 3141 204 (set (reg:DI 753 [ bnd.34 ])
        (plus:DI (reg:DI 1709 [ D.3810 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1709 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3141
;;      reg 753 { d857(bb 204 insn 3140) }
(insn 3141 3140 3142 204 (set (reg:DI 799 [ ratio_mult_vf.35 ])
        (ashift:DI (reg:DI 753 [ bnd.34 ])
            (const_int 1 [0x1]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 3142
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 742 { d852(bb 196 insn 4320) }
(insn 3142 3141 3143 204 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3143
;;      reg 66 { d700(bb 204 insn 3142) }
(jump_insn 3143 3142 3144 204 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3179)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3179)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],753[857],754[858],777[864],799[867],806[871,872,873,874],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u3095(29){ }u3096(31){ }u3097(64){ }u3098(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 742 746 806 1710 1861
;; lr  def 	 770 776 782 800 1710 1711 1716 1717 1857 1858
;; live  in  	 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1861
;; live  gen 	 770 776 782 800 1710 1711 1716 1717 1857 1858
;; live  kill	
;; rd  in  	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],753[857],754[858],777[864],799[867],806[871,872,873,874],811[878],1710[936],1861[1013]
;; rd  gen 	(10) 770[860],776[862],782[865],800[868],1710[936],1711[937],1716[938],1717[939],1857[1008],1858[1009]
;; rd  kill	(13) 770[860,861],776[862,863],782[865],800[868],1710[935,936],1711[937],1716[938],1717[939],1857[1008],1858[1009]
;;  UD chains for artificial uses at top

(note 3144 3143 3145 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3145
;;      reg 806 { d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
(insn 3145 3144 3147 205 (set (reg:DI 1711 [ stmp_var_.37 ])
        (plus:DI (reg/v:DI 806 [ k ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3147
;;      reg 806 { d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
;;      reg 1710 { d936(bb 205 insn 3149) }
(insn 3147 3145 3149 205 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg/v:DI 806 [ k ]))
            (reg:V2DI 1710)
            (const_int 1 [0x1]))) 1119 {aarch64_simd_vec_setv2di}
     (nil))
;;   UD chains for insn luid 2 uid 3149
;;      reg 1710 { d935(bb 205 insn 3147) }
;;      reg 1711 { d937(bb 205 insn 3145) }
(insn 3149 3147 3150 205 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1711 [ stmp_var_.37 ]))
            (reg:V2DI 1710)
            (const_int 2 [0x2]))) 1119 {aarch64_simd_vec_setv2di}
     (expr_list:REG_DEAD (reg:DI 1711 [ stmp_var_.37 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3150
;;      reg 1710 { d936(bb 205 insn 3149) }
(insn 3150 3149 3152 205 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 1710)) 915 {*aarch64_simd_movv2di}
     (nil))
;;   UD chains for insn luid 4 uid 3152
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3152 3150 3154 205 (set (reg:V2DI 800 [ vect_cst_.42 ])
        (vec_duplicate:V2DI (reg:DI 624 [ D.3798 ]))) 877 {aarch64_simd_dupv2di}
     (nil))
;;   UD chains for insn luid 5 uid 3154
;;      reg 742 { d852(bb 196 insn 4320) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3154 3152 3155 205 (set (reg:DI 1716 [ D.3802 ])
        (plus:DI (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3155
;;      reg 1716 { d938(bb 205 insn 3154) }
(insn 3155 3154 3156 205 (set (reg:DI 1717 [ D.3802 ])
        (ashift:DI (reg:DI 1716 [ D.3802 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1716 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 7 uid 3156
;;      reg 746 { d855(bb 193 insn 3058) }
;;      reg 1717 { d939(bb 205 insn 3155) }
(insn 3156 3155 233 205 (set (reg/f:DI 782 [ vectp.48 ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1717 [ D.3802 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1717 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 8 uid 233
(insn 233 3156 4201 205 (set (reg:DI 776 [ D.3810 ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 4201
(insn 4201 233 4202 205 (set (reg:V2DI 1857)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 2 [0x2])
                (const_int 2 [0x2])
            ])
        (nil)))
;;   UD chains for insn luid 10 uid 4202
(insn 4202 4201 3172 205 (set (reg:V2DI 1858)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 1 [0x1])
                (const_int 1 [0x1])
            ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; rd  out 	(25) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[860],776[862],777[864],782[865],799[867],800[868],806[871,872,873,874],811[878],1710[936],1857[1008],1858[1009],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u3115(29){ }u3116(31){ }u3117(64){ }u3118(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; lr  def 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  in  	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; live  gen 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  kill	
;; rd  in  	(27) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[860,861],776[862,863],777[864],782[865],799[867],800[868],806[871,872,873,874],811[878],1710[936],1857[1008],1858[1009],1861[1013]
;; rd  gen 	(8) 66[701],770[861],776[863],795[866],1719[940],1720[941],1722[942],1724[943]
;; rd  kill	(9) 770[860,861],776[862,863],795[866],1719[940],1720[941],1722[942],1724[943]
;;  UD chains for artificial uses at top

(code_label 3172 4202 3157 206 142 "" [0 uses])
(note 3157 3172 3159 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3159
;;      reg 770 { d861(bb 206 insn 3171) d860(bb 205 insn 3150) }
;;      reg 1857 { d1008(bb 205 insn 4201) }
(insn 3159 3157 3160 206 (set (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (plus:V2DI (reg:V2DI 770 [ vect_vec_iv_.40 ])
            (reg:V2DI 1857))) 963 {addv2di3}
     (nil))
;;   UD chains for insn luid 1 uid 3160
(debug_insn 3160 3159 3161 206 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3161
;;      reg 776 { d863(bb 206 insn 3170) d862(bb 205 insn 233) }
(insn 3161 3160 3163 206 (set (reg:DI 1719 [ D.3805 ])
        (ashift:DI (reg:DI 776 [ D.3810 ])
            (const_int 4 [0x4]))) verify.c:28 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 3 uid 3163
;;      reg 770 { d861(bb 206 insn 3171) d860(bb 205 insn 3150) }
;;      reg 800 { d868(bb 205 insn 3152) }
(insn 3163 3161 3165 206 (set (reg:V2DI 1722)
        (neg:V2DI (eq:V2DI (reg:V2DI 800 [ vect_cst_.42 ])
                (reg:V2DI 770 [ vect_vec_iv_.40 ])))) 2198 {aarch64_cmeqv2di}
     (expr_list:REG_DEAD (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3165
;;      reg 1722 { d942(bb 206 insn 3163) }
;;      reg 1858 { d1009(bb 205 insn 4202) }
;;   eq_note reg 1722 { d942(bb 206 insn 3163) }
(insn 3165 3163 3166 206 (set (reg:V2DI 1720 [ vect_patt_839.41 ])
        (and:V2DI (not:V2DI (reg:V2DI 1722))
            (reg:V2DI 1858))) 956 {bicv2di3}
     (expr_list:REG_DEAD (reg:V2DI 1722)
        (expr_list:REG_EQUAL (and:V2DI (not:V2DI (reg:V2DI 1722))
                (const_vector:V2DI [
                        (const_int 1 [0x1])
                        (const_int 1 [0x1])
                    ]))
            (nil))))
;;   UD chains for insn luid 5 uid 3166
;;      reg 1720 { d941(bb 206 insn 3165) }
(insn 3166 3165 3167 206 (set (reg:V2DI 1724 [ vect__599.46 ])
        (neg:V2DI (reg:V2DI 1720 [ vect_patt_839.41 ]))) verify.c:28 1005 {negv2di2}
     (expr_list:REG_DEAD (reg:V2DI 1720 [ vect_patt_839.41 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3167
;;      reg 782 { d865(bb 205 insn 3156) }
;;      reg 1719 { d940(bb 206 insn 3161) }
;;      reg 1724 { d943(bb 206 insn 3166) }
(insn 3167 3166 3169 206 (set (mem:V2DI (plus:DI (reg/f:DI 782 [ vectp.48 ])
                (reg:DI 1719 [ D.3805 ])) [4 MEM[base: vectp.48_1271, index: _743, offset: 0B]+0 S16 A128])
        (reg:V2DI 1724 [ vect__599.46 ])) verify.c:28 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 1724 [ vect__599.46 ])
        (expr_list:REG_DEAD (reg:DI 1719 [ D.3805 ])
            (nil))))
;;   UD chains for insn luid 7 uid 3169
(debug_insn 3169 3167 3170 206 (var_location:DI k (debug_expr:DI D#41)) -1
     (nil))
;;   UD chains for insn luid 8 uid 3170
;;      reg 776 { d863(bb 206 insn 3170) d862(bb 205 insn 233) }
(insn 3170 3169 3171 206 (set (reg:DI 776 [ D.3810 ])
        (plus:DI (reg:DI 776 [ D.3810 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 3171
;;      reg 795 { d866(bb 206 insn 3159) }
(insn 3171 3170 3173 206 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 795 [ vect_vec_iv_.40 ])) 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (nil)))
;;   UD chains for insn luid 10 uid 3173
;;      reg 753 { d857(bb 204 insn 3140) }
;;      reg 776 { d863(bb 206 insn 3170) }
(insn 3173 3171 3174 206 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 753 [ bnd.34 ])
            (reg:DI 776 [ D.3810 ]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 11 uid 3174
;;      reg 66 { d701(bb 206 insn 3173) }
(jump_insn 3174 3173 4344 206 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4344)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 4344)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; rd  out 	(25) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[861],776[863],777[864],782[865],799[867],800[868],806[871,872,873,874],811[878],1710[936],1857[1008],1858[1009],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u3137(29){ }u3138(31){ }u3139(64){ }u3140(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 754 777 799 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 754 799 806
;; lr  def 	 66 [cc] 806
;; live  in  	 623 624 625 626 647 668 672 746 754 777 799 806 811 1710 1861
;; live  gen 	 66 [cc] 806
;; live  kill	
;; rd  in  	(25) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[861],776[863],777[864],782[865],799[867],800[868],806[871,872,873,874],811[878],1710[936],1857[1008],1858[1009],1861[1013]
;; rd  gen 	(2) 66[702],806[875]
;; rd  kill	(5) 806[871,872,873,874,875]
;;  UD chains for artificial uses at top

(note 3175 4343 4067 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4067
;;      reg 799 { d867(bb 204 insn 3141) }
;;      reg 806 { d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
(debug_insn 4067 3175 3176 207 (var_location:DI D#51 (plus:DI (reg/v:DI 806 [ k ])
        (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 3176
;;      reg 799 { d867(bb 204 insn 3141) }
;;      reg 806 { d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
(insn 3176 4067 3177 207 (set (reg/v:DI 806 [ k ])
        (plus:DI (reg/v:DI 806 [ k ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3177
;;      reg 754 { d858(bb 204 insn 3137) }
;;      reg 799 { d867(bb 204 insn 3141) }
(insn 3177 3176 3178 207 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 754 [ niters.33 ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 799 [ ratio_mult_vf.35 ])
        (expr_list:REG_DEAD (reg:DI 754 [ niters.33 ])
            (nil))))
;;   UD chains for insn luid 3 uid 3178
;;      reg 66 { d702(bb 207 insn 3177) }
(jump_insn 3178 3177 3179 207 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3192)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3192)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 777 806 811 1710 1861
;; rd  out 	(13) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],777[864],806[875],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u3148(29){ }u3149(31){ }u3150(64){ }u3151(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 806
;; lr  def 	 66 [cc] 1725 1726 1727
;; live  in  	 623 624 625 626 647 668 672 746 777 806 811 1710 1861
;; live  gen 	 66 [cc] 1725 1726 1727
;; live  kill	
;; rd  in  	(21) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],753[857],754[858],777[864],799[867],806[871,872,873,874,875],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 66[703],1725[944],1726[945],1727[946]
;; rd  kill	(3) 1725[944],1726[945],1727[946]
;;  UD chains for artificial uses at top

(code_label 3179 3178 3180 208 141 "" [1 uses])
(note 3180 3179 3181 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3181
(debug_insn 3181 3180 3182 208 (var_location:DI k (debug_expr:DI D#51)) -1
     (nil))
;;   UD chains for insn luid 1 uid 3182
;;      reg 624 { d794(bb 191 insn 3025) }
;;      reg 806 { d875(bb 207 insn 3176) d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
(insn 3182 3181 3183 208 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 806 [ k ]))) verify.c:28 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3183
;;      reg 66 { d703(bb 208 insn 3182) }
(insn 3183 3182 3184 208 (set (reg:SI 1726)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3184
;;      reg 1726 { d945(bb 208 insn 3183) }
(insn 3184 3183 3185 208 (set (reg:DI 1725 [ D.3809 ])
        (zero_extend:DI (reg:SI 1726))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1726)
        (nil)))
;;   UD chains for insn luid 4 uid 3185
;;      reg 1725 { d944(bb 208 insn 3184) }
(insn 3185 3184 3186 208 (set (reg:DI 1727 [ D.3798 ])
        (neg:DI (reg:DI 1725 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1725 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3186
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 806 { d875(bb 207 insn 3176) d874(bb 203 insn 232) d873(bb 201 insn 231) d872(bb 200 insn 230) d871(bb 199 insn 229) }
;;      reg 1727 { d946(bb 208 insn 3185) }
(insn 3186 3185 3187 208 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 806 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 668 [ level ])) [4 *_1336+0 S8 A64])
        (reg:DI 1727 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1727 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 806 [ k ])
            (nil))))
;;   UD chains for insn luid 6 uid 3187
(debug_insn 3187 3186 3189 208 (var_location:DI D#44 (plus:DI (debug_expr:DI D#51)
        (const_int 1 [0x1]))) verify.c:27 -1
     (nil))
;;   UD chains for insn luid 7 uid 3189
(debug_insn 3189 3187 3192 208 (var_location:DI k (debug_expr:DI D#44)) -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 777 811 1710 1861
;; rd  out 	(12) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u3160(29){ }u3161(31){ }u3162(64){ }u3163(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715 745
;; live  in  	 623 624 625 626 647 668 672 746 777 811 1710 1861
;; live  gen 	 715 745
;; live  kill	
;; rd  in  	(17) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],742[852],746[855],777[864],806[871,872,873,875],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 715[816],745[853]
;; rd  kill	(17) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],745[853,854]
;;  UD chains for artificial uses at top

(code_label 3192 3189 3193 209 140 "" [2 uses])
(note 3193 3192 234 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 234
(insn 234 3193 235 209 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:27 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 235
(insn 235 234 3410 209 (set (reg/v:DI 745 [ parent ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],715[816],745[853],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u3165(29){ }u3166(31){ }u3167(64){ }u3168(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 1728
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1728
;; live  kill	
;; rd  in  	(18) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[704],1728[947]
;; rd  kill	(1) 1728[947]
;;  UD chains for artificial uses at top

(code_label 3410 235 3195 210 157 "" [0 uses])
(note 3195 3410 3196 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3196
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(debug_insn 3196 3195 3197 210 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3197
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(debug_insn 3197 3196 3199 210 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3199
;;      reg 672 { d803(bb 234 insn 3409) d802(bb 196 insn 3086) }
(insn 3199 3197 3200 210 (set (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:32 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3200
;;      reg 1728 { d947(bb 210 insn 3199) }
(insn 3200 3199 3201 210 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
            (const_int 0 [0]))) verify.c:32 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 4 uid 3201
;;      reg 66 { d704(bb 210 insn 3200) }
(jump_insn 3201 3200 3202 210 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3402)
            (pc))) verify.c:32 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(18) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u3175(29){ }u3176(31){ }u3177(64){ }u3178(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(18) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[705]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3202 3201 3203 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3203
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(debug_insn 3203 3202 3204 211 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:33 -1
     (nil))
;;   UD chains for insn luid 1 uid 3204
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(insn 3204 3203 3205 211 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 2 uid 3205
;;      reg 66 { d705(bb 211 insn 3204) }
(jump_insn 3205 3204 3206 211 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(18) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u3182(29){ }u3183(31){ }u3184(64){ }u3185(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 745
;; lr  def 	 66 [cc] 809 1730 1731
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 809 1730 1731
;; live  kill	
;; rd  in  	(18) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 66[708],809[876],1730[948],1731[949]
;; rd  kill	(4) 809[876,877],1730[948],1731[949]
;;  UD chains for artificial uses at top

(note 3206 3205 3208 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3208
(debug_insn 3208 3206 3209 212 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
;;   UD chains for insn luid 1 uid 3209
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(insn 3209 3208 3210 212 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 745 [ parent ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B]+0 S8 A64])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3210
;;      reg 624 { d794(bb 191 insn 3025) }
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(insn 3210 3209 3211 212 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:34 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3211
;;      reg 66 { d706(bb 212 insn 3210) }
;;      reg 809 { d876(bb 212 insn 3209) }
(insn 3211 3210 3212 212 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DNE 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 809 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:34 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 4 uid 3212
;;      reg 66 { d707(bb 212 insn 3211) }
(insn 3212 3211 3214 212 (set:SI (reg:SI 1730)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:34 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 5 uid 3214
;;      reg 1730 { d948(bb 212 insn 3212) }
(insn 3214 3212 3215 212 (set (reg:SI 1731 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1730) 0))) verify.c:34 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1730)
        (nil)))
;;   UD chains for insn luid 6 uid 3215
;;      reg 1731 { d949(bb 212 insn 3214) }
(insn 3215 3214 3216 212 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1731 [ D.3809 ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1731 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 7 uid 3216
;;      reg 66 { d708(bb 212 insn 3215) }
(jump_insn 3216 3215 3217 212 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(19) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u3197(29){ }u3198(31){ }u3199(64){ }u3200(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 745 809
;; lr  def 	 456 581 609
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 456 581 609
;; live  kill	
;; rd  in  	(19) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(3) 456[778],581[782],609[784]
;; rd  kill	(6) 456[778,779],581[782,783],609[784,785]
;;  UD chains for artificial uses at top

(note 3217 3216 237 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 237
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(insn 237 3217 238 213 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 745 [ parent ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 238
(insn 238 237 239 213 (set (reg/v:DI 609 [ nhop ])
        (const_int 0 [0])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 239
;;      reg 809 { d876(bb 212 insn 3209) }
(insn 239 238 3261 213 (set (reg/v:DI 581 [ parent ])
        (reg:DI 809 [ D.3798 ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(22) 456[778],581[782],609[784],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u3204(29){ }u3205(31){ }u3206(64){ }u3207(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 727 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 647 727
;; lr  def 	 456 581
;; live  in  	 581 609 623 624 625 626 647 668 672 715 727 745 746 777 809 811 1710 1861
;; live  gen 	 456 581
;; live  kill	
;; rd  in  	(27) 66[713],581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],727[839],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1741[950],1742[951],1861[1013]
;; rd  gen 	(2) 456[779],581[783]
;; rd  kill	(4) 456[778,779],581[782,783]
;;  UD chains for artificial uses at top

(code_label 3261 239 3220 214 149 "" [1 uses])
(note 3220 3261 3221 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3221
;;      reg 581 { d783(bb 214 insn 3222) d782(bb 213 insn 239) }
(insn 3221 3220 3222 214 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 581 [ parent ])
        (nil)))
;;   UD chains for insn luid 1 uid 3222
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 727 { d839(bb 218 insn 3259) }
(insn 3222 3221 3223 214 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 727 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(22) 456[779],581[783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u3211(29){ }u3212(31){ }u3213(64){ }u3214(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581
;; lr  def 	 66 [cc]
;; live  in  	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(25) 456[778,779],581[782,783],609[784,785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[709]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3223 3222 3224 215 147 "" [0 uses])
(note 3224 3223 3225 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3225
;;      reg 609 { d785(bb 217 insn 3248) d784(bb 213 insn 238) }
(debug_insn 3225 3224 3226 215 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3226
;;      reg 456 { d779(bb 214 insn 3221) d778(bb 213 insn 237) }
(debug_insn 3226 3225 3227 215 (var_location:DI parent (reg/v:DI 456 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3227
(debug_insn 3227 3226 3228 215 (var_location:DI D#28 (mem:DI (debug_expr:DI D#40) [0 +0 S8 A64])) verify.c:39 -1
     (nil))
;;   UD chains for insn luid 3 uid 3228
;;      reg 456 { d779(bb 214 insn 3221) d778(bb 213 insn 237) }
;;      reg 581 { d783(bb 214 insn 3222) d782(bb 213 insn 239) }
(insn 3228 3227 3229 215 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 456 [ parent ])
        (nil)))
;;   UD chains for insn luid 4 uid 3229
;;      reg 66 { d709(bb 215 insn 3228) }
(jump_insn 3229 3228 3230 215 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) verify.c:39 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3245)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(23) 581[782,783],609[784,785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u3236(29){ }u3237(31){ }u3238(64){ }u3239(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609
;; lr  def 	 66 [cc] 609
;; live  in  	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 609
;; live  kill	
;; rd  in  	(23) 581[782,783],609[784,785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[710],609[785]
;; rd  kill	(2) 609[784,785]
;;  UD chains for artificial uses at top

(code_label 3245 3243 3246 217 148 "" [1 uses])
(note 3246 3245 3247 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3247
(debug_insn 3247 3246 3248 217 (var_location:DI parent (debug_expr:DI D#28)) verify.c:40 -1
     (nil))
;;   UD chains for insn luid 1 uid 3248
;;      reg 609 { d785(bb 217 insn 3248) d784(bb 213 insn 238) }
(insn 3248 3247 3250 217 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3250
;;      reg 609 { d785(bb 217 insn 3248) }
(debug_insn 3250 3248 3251 217 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3251
(debug_insn 3251 3250 3252 217 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3252
;;      reg 581 { d783(bb 214 insn 3222) d782(bb 213 insn 239) }
(insn 3252 3251 3253 217 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3253
;;      reg 66 { d710(bb 217 insn 3252) }
(jump_insn 3253 3252 3254 217 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4004)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 241 (nil)))
 -> 4004)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(22) 581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u3244(29){ }u3245(31){ }u3246(64){ }u3247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 668 1861
;; lr  def 	 66 [cc] 727 731 1741 1742
;; live  in  	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 727 731 1741 1742
;; live  kill	
;; rd  in  	(22) 581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(5) 66[713],727[839],731[840],1741[950],1742[951]
;; rd  kill	(4) 727[839],731[840],1741[950],1742[951]
;;  UD chains for artificial uses at top

(note 3254 3253 3257 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3257
;;      reg 609 { d785(bb 217 insn 3248) }
(debug_insn 3257 3254 3258 218 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3258
(debug_insn 3258 3257 3259 218 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
;;   UD chains for insn luid 2 uid 3259
;;      reg 581 { d783(bb 214 insn 3222) d782(bb 213 insn 239) }
(insn 3259 3258 3260 218 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 3 uid 3260
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 727 { d839(bb 218 insn 3259) }
(insn 3260 3259 3262 218 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 3262
;;      reg 609 { d785(bb 217 insn 3248) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3262 3260 3263 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3263
;;      reg 66 { d711(bb 218 insn 3262) }
;;      reg 731 { d840(bb 218 insn 3260) }
(insn 3263 3262 3264 218 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 6 uid 3264
;;      reg 66 { d712(bb 218 insn 3263) }
(insn 3264 3263 3266 218 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
;;   UD chains for insn luid 7 uid 3266
;;      reg 1741 { d950(bb 218 insn 3264) }
(insn 3266 3264 3267 218 (set (reg:SI 1742 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1741) 0))) verify.c:38 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1741)
        (nil)))
;;   UD chains for insn luid 8 uid 3267
;;      reg 1742 { d951(bb 218 insn 3266) }
(insn 3267 3266 3268 218 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742 [ D.3809 ])
            (const_int 0 [0]))) verify.c:38 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1742 [ D.3809 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3268
;;      reg 66 { d713(bb 218 insn 3267) }
(jump_insn 3268 3267 3269 218 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9752 (nil)))
 -> 3261)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 727 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 727 731 745 746 777 809 811 1710 1861
;; rd  out 	(24) 581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],727[839],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u3261(29){ }u3262(31){ }u3263(64){ }u3264(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 1861
;; lr  def 	 66 [cc]
;; live  in  	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(24) 581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],727[839],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[714]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3269 3268 3270 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3270
;;      reg 609 { d785(bb 217 insn 3248) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(debug_insn 3270 3269 3271 219 (var_location:QI D#49 (le:QI (reg:DI 1861 [ D.3798 ])
        (reg/v:DI 609 [ nhop ]))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 1 uid 3271
(debug_insn 3271 3270 3272 219 (var_location:SI D#48 (zero_extend:SI (debug_expr:QI D#49))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 2 uid 3272
(debug_insn 3272 3271 3274 219 (var_location:SI D#47 (neg:SI (debug_expr:SI D#48))) verify.c:43 -1
     (nil))
;;   UD chains for insn luid 3 uid 3274
(debug_insn 3274 3272 3275 219 (var_location:SI terr (debug_expr:SI D#47)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3275
;;      reg 609 { d785(bb 217 insn 3248) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3275 3274 3276 219 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:46 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3276
;;      reg 66 { d714(bb 219 insn 3275) }
(jump_insn 3276 3275 3277 219 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4008)
            (pc))) verify.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3154 (nil)))
 -> 4008)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861
;; rd  out 	(21) 609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u3270(29){ }u3271(31){ }u3272(64){ }u3273(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 731
;; lr  def 	 66 [cc] 733
;; live  in  	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 733
;; live  kill	
;; rd  in  	(21) 609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[715],733[842]
;; rd  kill	(2) 733[842,843]
;;  UD chains for artificial uses at top

(note 3277 3276 3278 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3278
;;      reg 609 { d785(bb 217 insn 3248) }
;;      reg 731 { d840(bb 218 insn 3260) }
(insn 3278 3277 3281 220 (set (reg/v:DI 733 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (reg:DI 731 [ D.3798 ]))) verify.c:49 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 731 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 609 [ nhop ])
            (nil))))
;;   UD chains for insn luid 1 uid 3281
;;      reg 733 { d842(bb 220 insn 3278) }
(debug_insn 3281 3278 3282 220 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3282
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(debug_insn 3282 3281 3283 220 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3283
;;      reg 733 { d842(bb 220 insn 3278) }
(insn 3283 3282 3284 220 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 733 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 4 uid 3284
;;      reg 66 { d715(bb 220 insn 3283) }
(jump_insn 3284 3283 3285 220 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],733[842],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u3280(29){ }u3281(31){ }u3282(64){ }u3283(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 809
;; lr  def 	 461 805
;; live  in  	 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1861
;; live  gen 	 461 805
;; live  kill	
;; rd  in  	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],733[842],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 461[780],805[869]
;; rd  kill	(4) 461[780,781],805[869,870]
;;  UD chains for artificial uses at top

(note 3285 3284 240 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 240
;;      reg 809 { d876(bb 212 insn 3209) }
(insn 240 3285 241 221 (set (reg:DI 805 [ D.3798 ])
        (reg:DI 809 [ D.3798 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 241
;;      reg 672 { d803(bb 234 insn 3409) d802(bb 196 insn 3086) }
(insn 241 240 3288 221 (set (reg/f:DI 461 [ D.3812 ])
        (reg:DI 672 [ ivtmp.84 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861
;; rd  out 	(22) 461[780],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],733[842],745[853,854],746[855],777[864],805[869],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u3302(29){ }u3303(31){ }u3304(64){ }u3305(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734
;; lr  def 	 66 [cc]
;; live  in  	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(24) 66[717],461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],734[844],735[845],737[846],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[716]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3323 3302 3304 223 152 "" [1 uses])
(note 3304 3323 3305 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3305
;;      reg 734 { d844(bb 225 insn 3313) }
(insn 3305 3304 3306 223 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3306
;;      reg 66 { d716(bb 223 insn 3305) }
(jump_insn 3306 3305 3307 223 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861
;; rd  out 	(22) 461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],734[844],735[845],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u3308(29){ }u3309(31){ }u3310(64){ }u3311(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 734 735
;; lr  def 	 733 805
;; live  in  	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861
;; live  gen 	 733 805
;; live  kill	
;; rd  in  	(22) 461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],734[844],735[845],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 733[843],805[870]
;; rd  kill	(4) 733[842,843],805[869,870]
;;  UD chains for artificial uses at top

(note 3307 3306 3308 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3308
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 735 { d845(bb 225 insn 3320) }
(insn 3308 3307 242 224 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 735 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 242
;;      reg 734 { d844(bb 225 insn 3313) }
(insn 242 3308 3309 224 (set (reg/v:DI 733 [ nhop ])
        (reg/v:DI 734 [ nhop ])) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861
;; rd  out 	(22) 461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],733[843],745[853,854],746[855],777[864],805[870],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u3315(29){ }u3316(31){ }u3317(64){ }u3318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 668 733 805
;; lr  def 	 66 [cc] 461 734 735 737
;; live  in  	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861
;; live  gen 	 66 [cc] 461 734 735 737
;; live  kill	
;; rd  in  	(25) 461[780,781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],733[842,843],745[853,854],746[855],777[864],805[869,870],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(5) 66[717],461[781],734[844],735[845],737[846]
;; rd  kill	(5) 461[780,781],734[844],735[845],737[846]
;;  UD chains for artificial uses at top

(code_label 3309 242 3310 225 151 "" [0 uses])
(note 3310 3309 3311 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3311
;;      reg 733 { d843(bb 224 insn 242) d842(bb 220 insn 3278) }
(debug_insn 3311 3310 3312 225 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3312
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(debug_insn 3312 3311 3313 225 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3313
;;      reg 733 { d843(bb 224 insn 242) d842(bb 220 insn 3278) }
(insn 3313 3312 3314 225 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3314
;;      reg 734 { d844(bb 225 insn 3313) }
(debug_insn 3314 3313 3315 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) verify.c:53 -1
     (nil))
;;   UD chains for insn luid 4 uid 3315
;;      reg 461 { d781(bb 225 insn 3321) d780(bb 221 insn 241) }
;;      reg 733 { d843(bb 224 insn 242) d842(bb 220 insn 3278) }
(insn 3315 3314 3316 225 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 733 [ nhop ])
        (expr_list:REG_DEAD (reg/f:DI 461 [ D.3812 ])
            (nil))))
;;   UD chains for insn luid 5 uid 3316
(debug_insn 3316 3315 3318 225 (var_location:DI D#27 (mem:DI (debug_expr:DI D#39) [0 +0 S8 A64])) verify.c:54 -1
     (nil))
;;   UD chains for insn luid 6 uid 3318
;;      reg 734 { d844(bb 225 insn 3313) }
(debug_insn 3318 3316 3319 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3319
(debug_insn 3319 3318 3320 225 (var_location:DI parent (debug_expr:DI D#27)) -1
     (nil))
;;   UD chains for insn luid 8 uid 3320
;;      reg 805 { d870(bb 224 insn 3308) d869(bb 221 insn 240) }
(insn 3320 3319 3321 225 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 805 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3321
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 735 { d845(bb 225 insn 3320) }
(insn 3321 3320 3322 225 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 3322
;;      reg 461 { d781(bb 225 insn 3321) }
(insn 3322 3321 3324 225 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 3324
;;      reg 737 { d846(bb 225 insn 3322) }
(insn 3324 3322 3325 225 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 3325
;;      reg 66 { d717(bb 225 insn 3324) }
(jump_insn 3325 3324 3326 225 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3323)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 737 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 734 735 737 745 746 777 809 811 1710 1861
;; rd  out 	(23) 461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],734[844],735[845],737[846],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u3332(29){ }u3333(31){ }u3334(64){ }u3335(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 734 737 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734 737
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 715 734 737 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(23) 461[781],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],734[844],735[845],737[846],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[718]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3326 3325 3327 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3327
;;      reg 734 { d844(bb 225 insn 3313) }
;;      reg 737 { d846(bb 225 insn 3322) }
(insn 3327 3326 3328 226 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (reg:DI 737 [ D.3798 ]))) verify.c:56 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 737 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
            (nil))))
;;   UD chains for insn luid 1 uid 3328
;;      reg 66 { d718(bb 226 insn 3327) }
(jump_insn 3328 3327 3329 226 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3344)
            (pc))) verify.c:56 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3344)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; rd  out 	(19) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u3355(29){ }u3356(31){ }u3357(64){ }u3358(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 738
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 738
;; live  kill	
;; rd  in  	(19) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[719],738[847]
;; rd  kill	(2) 738[847,848]
;;  UD chains for artificial uses at top

(code_label 3344 3342 3345 228 153 "" [1 uses])
(note 3345 3344 3346 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3346
(debug_insn 3346 3345 3347 228 (var_location:DI nhop (const_int 0 [0])) verify.c:60 -1
     (nil))
;;   UD chains for insn luid 1 uid 3347
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(debug_insn 3347 3346 3348 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) verify.c:61 -1
     (nil))
;;   UD chains for insn luid 2 uid 3348
;;      reg 672 { d803(bb 234 insn 3409) d802(bb 196 insn 3086) }
(insn 3348 3347 3349 228 (set (reg/v:DI 738 [ lastlvl ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:62 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3349
;;      reg 738 { d847(bb 228 insn 3348) }
(debug_insn 3349 3348 3351 228 (var_location:DI D#23 (plus:DI (reg/v:DI 738 [ lastlvl ])
        (const_int 1 [0x1]))) verify.c:62 -1
     (nil))
;;   UD chains for insn luid 4 uid 3351
(debug_insn 3351 3349 3352 228 (var_location:DI lastlvl (debug_expr:DI D#23)) -1
     (nil))
;;   UD chains for insn luid 5 uid 3352
(debug_insn 3352 3351 3353 228 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 3353
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(debug_insn 3353 3352 3354 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3354
;;      reg 738 { d847(bb 228 insn 3348) }
(insn 3354 3353 3355 228 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 738 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 8 uid 3355
;;      reg 66 { d719(bb 228 insn 3354) }
(jump_insn 3355 3354 3356 228 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 3402)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u3365(29){ }u3366(31){ }u3367(64){ }u3368(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; live  gen 	
;; live  kill	
;; rd  in  	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3356 3355 3396 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u3369(29){ }u3370(31){ }u3371(64){ }u3372(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 738 739
;; lr  def 	 66 [cc] 1759
;; live  in  	 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1759
;; live  kill	
;; rd  in  	(23) 66[721],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847,848],739[849],741[850],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[720],1759[952]
;; rd  kill	(1) 1759[952]
;;  UD chains for artificial uses at top

(code_label 3396 3356 3359 230 156 "" [1 uses])
(note 3359 3396 3360 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3360
;;      reg 739 { d849(bb 233 insn 3395) }
(insn 3360 3359 3361 230 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3361
;;      reg 738 { d848(bb 231 insn 243) d847(bb 228 insn 3348) }
;;      reg 1759 { d952(bb 230 insn 3360) }
(insn 3361 3360 3362 230 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1759 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 738 [ lastlvl ])
            (nil))))
;;   UD chains for insn luid 2 uid 3362
;;      reg 66 { d720(bb 230 insn 3361) }
(jump_insn 3362 3361 3363 230 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3367)
            (pc))) verify.c:64 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3367)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],739[849],741[850],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u3377(29){ }u3378(31){ }u3379(64){ }u3380(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 739 741
;; lr  def 	 738 809
;; live  in  	 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1861
;; live  gen 	 738 809
;; live  kill	
;; rd  in  	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],739[849],741[850],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 738[848],809[877]
;; rd  kill	(4) 738[847,848],809[876,877]
;;  UD chains for artificial uses at top

(note 3363 3362 3364 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3364
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 741 { d850(bb 233 insn 3394) }
(insn 3364 3363 243 231 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 741 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 243
;;      reg 739 { d849(bb 233 insn 3395) }
(insn 243 3364 3367 231 (set (reg/v:DI 738 [ lastlvl ])
        (reg/v:DI 739 [ lastlvl ])) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 739 [ lastlvl ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; rd  out 	(20) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[848],745[853,854],746[855],777[864],809[877],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u3400(29){ }u3401(31){ }u3402(64){ }u3403(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 809
;; lr  def 	 66 [cc] 739 741
;; live  in  	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 739 741
;; live  kill	
;; rd  in  	(22) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847,848],745[853,854],746[855],777[864],809[876,877],811[878],1710[936],1861[1013]
;; rd  gen 	(3) 66[721],739[849],741[850]
;; rd  kill	(2) 739[849],741[850]
;;  UD chains for artificial uses at top

(code_label 3383 3381 3384 233 154 "" [0 uses])
(note 3384 3383 3388 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3388
(debug_insn 3388 3384 3391 233 (var_location:DI D#26 (mem:DI (debug_expr:DI D#38) [0 +0 S8 A64])) verify.c:66 -1
     (nil))
;;   UD chains for insn luid 1 uid 3391
;;      reg 738 { d848(bb 231 insn 243) d847(bb 228 insn 3348) }
(debug_insn 3391 3388 3392 233 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3392
(debug_insn 3392 3391 3393 233 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 3393
(debug_insn 3393 3392 3394 233 (var_location:DI parent (debug_expr:DI D#26)) -1
     (nil))
;;   UD chains for insn luid 4 uid 3394
;;      reg 809 { d877(bb 231 insn 3364) d876(bb 212 insn 3209) }
(insn 3394 3393 3395 233 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 809 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3395
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 741 { d850(bb 233 insn 3394) }
(insn 3395 3394 3397 233 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3397
;;      reg 739 { d849(bb 233 insn 3395) }
(insn 3397 3395 3398 233 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 7 uid 3398
;;      reg 66 { d721(bb 233 insn 3397) }
(jump_insn 3398 3397 3402 233 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3396)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1861
;; rd  out 	(22) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847,848],739[849],741[850],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u3410(29){ }u3411(31){ }u3412(64){ }u3413(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 745 1861
;; lr  def 	 66 [cc] 672 745
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 672 745
;; live  kill	
;; rd  in  	(23) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],738[847,848],739[849],741[850],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(3) 66[722],672[803],745[854]
;; rd  kill	(4) 672[802,803],745[853,854]
;;  UD chains for artificial uses at top

(code_label 3402 3398 3403 234 144 "" [4 uses])
(note 3403 3402 3404 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3404
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(debug_insn 3404 3403 3405 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3405
;;      reg 745 { d854(bb 234 insn 3405) d853(bb 209 insn 235) }
(insn 3405 3404 3407 234 (set (reg/v:DI 745 [ parent ])
        (plus:DI (reg/v:DI 745 [ parent ])
            (const_int 1 [0x1]))) verify.c:31 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3407
;;      reg 745 { d854(bb 234 insn 3405) }
(debug_insn 3407 3405 3408 234 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3408
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(debug_insn 3408 3407 3409 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3409
;;      reg 672 { d803(bb 234 insn 3409) d802(bb 196 insn 3086) }
(insn 3409 3408 3411 234 (set (reg:DI 672 [ ivtmp.84 ])
        (plus:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 8 [0x8]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3411
;;      reg 745 { d854(bb 234 insn 3405) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3411 3409 3412 234 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:31 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3412
;;      reg 66 { d722(bb 234 insn 3411) }
(jump_insn 3412 3411 4342 234 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4342)
            (pc))) verify.c:31 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 4342)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[803],715[816,823,824],745[854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u3422(29){ }u3423(31){ }u3424(64){ }u3425(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 626
;; lr  def 	 66 [cc] 763
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 66 [cc] 763
;; live  kill	
;; rd  in  	(11) 623[793],624[794],625[795],626[796],647[797],668[801],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(2) 66[723],763[859]
;; rd  kill	(1) 763[859]
;;  UD chains for artificial uses at top

(code_label 3416 4341 3417 235 136 "" [1 uses])
(note 3417 3416 3418 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3418
(debug_insn 3418 3417 3419 235 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3419
(debug_insn 3419 3418 3420 235 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3420
(debug_insn 3420 3419 3421 235 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3421
(debug_insn 3421 3420 3422 235 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3422
;;      reg 626 { d796(bb 193 insn 3049) }
(insn 3422 3421 3423 235 (set (reg:DI 763 [ D.3798 ])
        (ashift:DI (reg:DI 626 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:117 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 626 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3423
;;      reg 763 { d859(bb 235 insn 3422) }
(insn 3423 3422 3424 235 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 763 [ D.3798 ])
            (const_int 0 [0]))) verify.c:117 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3424
;;      reg 66 { d723(bb 235 insn 3423) }
(jump_insn 3424 3423 3428 235 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3464)
            (pc))) verify.c:117 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3464)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 647 668 746 763 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 647 668 746 763 777 811 1710 1861
;; rd  out 	(11) 623[793],624[794],625[795],647[797],668[801],746[855],763[859],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u3429(29){ }u3430(31){ }u3431(64){ }u3432(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1768 1770 1771
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 1768 1770 1771
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(14) 623[793],624[794],625[795],626[796],647[797],668[801],715[816,823,824],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 0[15],1768[953],1770[954],1771[955]
;; rd  kill	(45) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],1768[953],1770[954],1771[955]
;;  UD chains for artificial uses at top

(note 3428 3424 3439 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3439
(debug_insn 3439 3428 3440 236 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 1 uid 3440
(debug_insn 3440 3439 3441 236 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 2 uid 3441
(debug_insn 3441 3440 3442 236 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 3 uid 3442
(debug_insn 3442 3441 3443 236 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 4 uid 3443
(debug_insn 3443 3442 3444 236 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 5 uid 3444
(debug_insn 3444 3443 3445 236 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 6 uid 3445
(debug_insn 3445 3444 3446 236 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 7 uid 3446
(debug_insn 3446 3445 3447 236 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 8 uid 3447
(debug_insn 3447 3446 3448 236 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 9 uid 3448
(debug_insn 3448 3447 3449 236 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 10 uid 3449
(debug_insn 3449 3448 3451 236 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 11 uid 3451
;;      reg 623 { d793(bb 191 insn 3020) }
(insn 3451 3449 3452 236 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 3452
;;      reg 66 { d724(bb 236 insn 3451) }
;;      reg 623 { d793(bb 191 insn 3020) }
(insn 3452 3451 3453 236 (set (reg:DI 1768 [ D.3798 ])
        (if_then_else:DI (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) 443 {*cmovdi_insn}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 13 uid 3453
;;      reg 1768 { d953(bb 236 insn 3452) }
(insn 3453 3452 3454 236 (set (reg:DI 1770 [ D.3805 ])
        (plus:DI (reg:DI 1768 [ D.3798 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1768 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 14 uid 3454
;;      reg 1770 { d954(bb 236 insn 3453) }
(insn 3454 3453 3457 236 (set (reg:DI 1771 [ D.3805 ])
        (ashift:DI (reg:DI 1770 [ D.3805 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1770 [ D.3805 ])
        (nil)))
;;   UD chains for insn luid 15 uid 3457
;;      reg 1771 { d955(bb 236 insn 3454) }
(insn 3457 3454 3458 236 (set (reg:DI 2 x2)
        (reg:DI 1771 [ D.3805 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1771 [ D.3805 ])
        (nil)))
;;   UD chains for insn luid 16 uid 3458
(insn 3458 3457 3459 236 (set (reg:SI 1 x1)
        (const_int 0 [0])) 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 17 uid 3459
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3459 3458 3460 236 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 18 uid 3460
;;      reg 31 { }
;;      reg 0 { d14(bb 236 insn 3459) }
;;      reg 1 { d41(bb 236 insn 3458) }
;;      reg 2 { d61(bb 236 insn 3457) }
(call_insn 3460 3459 3464 236 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>) [0 memset S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 746 777 811 1710 1861
;; rd  out 	(11) 623[793],624[794],625[795],626[796],647[797],668[801],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u3446(29){ }u3447(31){ }u3448(64){ }u3449(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 647 668 746 763 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 625 763
;; lr  def 	 610 708 715 720 1775 1776 1777 1778 1872 1873 1874
;; live  in  	 623 624 625 647 668 746 763 777 811 1710 1861
;; live  gen 	 610 708 715 720 1775 1776 1777 1778 1872 1873 1874
;; live  kill	
;; rd  in  	(11) 623[793],624[794],625[795],647[797],668[801],746[855],763[859],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(11) 610[786],708[811],715[817],720[838],1775[956],1776[957],1777[958],1778[959],1872[1021],1873[1022],1874[1023]
;; rd  kill	(29) 610[786,787,788,789],708[811,812],715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],720[838],1775[956],1776[957],1777[958],1778[959],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at top

(code_label 3464 3460 3465 237 159 "" [1 uses])
(note 3465 3464 3466 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3466
;;      reg 625 { d795(bb 193 insn 3046) }
(insn 3466 3465 3467 237 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (const_int 8 [0x8]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3467
;;      reg 763 { d859(bb 235 insn 3422) }
(insn 3467 3466 3468 237 (set (reg:DI 1775 [ D.3810 ])
        (plus:DI (reg:DI 763 [ D.3798 ])
            (const_int -1 [0xffffffffffffffff]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 763 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 2 uid 3468
;;      reg 1775 { d956(bb 237 insn 3467) }
(insn 3468 3467 3469 237 (set (reg:DI 1776 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1775 [ D.3810 ])
            (const_int 1 [0x1]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1775 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3469
;;      reg 1776 { d957(bb 237 insn 3468) }
(insn 3469 3468 3470 237 (set (reg:DI 1777 [ D.3810 ])
        (ashift:DI (reg:DI 1776 [ D.3810 ])
            (const_int 4 [0x4]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1776 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3470
;;      reg 1777 { d958(bb 237 insn 3469) }
(insn 3470 3469 3471 237 (set (reg:DI 1778 [ D.3805 ])
        (plus:DI (reg:DI 1777 [ D.3810 ])
            (const_int 24 [0x18]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1777 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 5 uid 3471
;;      reg 625 { d795(bb 193 insn 3046) }
;;      reg 1778 { d959(bb 237 insn 3470) }
(insn 3471 3470 244 237 (set (reg:DI 720 [ D.3810 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (reg:DI 1778 [ D.3805 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1778 [ D.3805 ])
        (expr_list:REG_DEAD (reg/f:DI 625 [ D.3803 ])
            (nil))))
;;   UD chains for insn luid 6 uid 244
(insn 244 3471 245 237 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:117 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 245
(insn 245 244 248 237 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:117 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 248
(insn 248 245 252 237 (set (reg:SI 1872 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 252
(insn 252 248 3550 237 (set (reg:SI 1873 [ err ])
        (const_int -14 [0xfffffffffffffff2])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 3550
(insn 3550 252 3573 237 (set (reg:DI 1874)
        (const_int 1 [0x1])) verify.c:148 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(16) 610[786],623[793],624[794],647[797],668[801],708[811],715[817],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u3457(29){ }u3458(31){ }u3459(64){ }u3460(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 715
;; lr  def 	 66 [cc] 674 675 716 1780 1781
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 674 675 716 1780 1781
;; live  kill	
;; rd  in  	(25) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(6) 66[728],674[804],675[805],716[831],1780[960],1781[961]
;; rd  kill	(11) 674[804],675[805],716[831,832,833,834,835,836,837],1780[960],1781[961]
;;  UD chains for artificial uses at top

(code_label 3573 3550 3472 238 170 "" [0 uses])
(note 3472 3573 3473 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3473
(debug_insn 3473 3472 3474 238 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3474
(debug_insn 3474 3473 3475 238 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3475
;;      reg 610 { d787(bb 283 insn 3885) d786(bb 237 insn 245) }
(debug_insn 3475 3474 3476 238 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3476
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3476 3475 3478 238 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3478
;;      reg 708 { d812(bb 251 insn 3572) d811(bb 237 insn 3466) }
(insn 3478 3476 3479 238 (set (reg/v:DI 674 [ i ])
        (mem:DI (plus:DI (reg:DI 708 [ ivtmp.64 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _1398, offset: -8B]+0 S8 A64])) verify.c:118 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3479
;;      reg 674 { d804(bb 238 insn 3478) }
(debug_insn 3479 3478 3480 238 (var_location:DI i (reg/v:DI 674 [ i ])) verify.c:118 -1
     (nil))
;;   UD chains for insn luid 6 uid 3480
;;      reg 708 { d812(bb 251 insn 3572) d811(bb 237 insn 3466) }
(insn 3480 3479 3481 238 (set (reg/v:DI 675 [ j ])
        (mem:DI (reg:DI 708 [ ivtmp.64 ]) [4 MEM[base: _1398, offset: 0B]+0 S8 A64])) verify.c:119 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 3481
;;      reg 675 { d805(bb 238 insn 3480) }
(debug_insn 3481 3480 3482 238 (var_location:DI j (reg/v:DI 675 [ j ])) verify.c:119 -1
     (nil))
;;   UD chains for insn luid 8 uid 3482
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3482 3481 3483 238 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:121 -1
     (nil))
;;   UD chains for insn luid 9 uid 3483
;;      reg 674 { d804(bb 238 insn 3478) }
(insn 3483 3482 3484 238 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (const_int 0 [0]))) verify.c:123 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 10 uid 3484
;;      reg 66 { d726(bb 238 insn 3483) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3484 3483 3485 238 (set (reg:CC_DLT 66 cc)
        (compare (ior:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (lt (reg/v:DI 675 [ j ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:123 6 {ccmp_iordi}
     (nil))
;;   UD chains for insn luid 11 uid 3485
;;      reg 66 { d727(bb 238 insn 3484) }
(insn 3485 3484 3487 238 (set:SI (reg:SI 1780)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:123 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
;;   UD chains for insn luid 12 uid 3487
;;      reg 1780 { d960(bb 238 insn 3485) }
(insn 3487 3485 246 238 (set (reg:SI 1781 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1780) 0))) verify.c:123 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1780)
        (nil)))
;;   UD chains for insn luid 13 uid 246
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(insn 246 3487 3488 238 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:123 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 14 uid 3488
;;      reg 1781 { d961(bb 238 insn 3487) }
(insn 3488 246 3489 238 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1781 [ D.3813 ])
            (const_int 0 [0]))) verify.c:123 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1781 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 15 uid 3489
;;      reg 66 { d728(bb 238 insn 3488) }
(jump_insn 3489 3488 3490 238 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:123 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3562)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],708[811,812],715[817,818,819,825,826,827,828,829],716[831],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u3477(29){ }u3478(31){ }u3479(64){ }u3480(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 679 1783 1785 1786 1788
;; live  in  	 610 623 624 647 668 674 675 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 679 1783 1785 1786 1788
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],708[811,812],715[817,818,819,825,826,827,828,829],716[831],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(6) 66[731],679[806],1783[962],1785[963],1786[964],1788[965]
;; rd  kill	(5) 679[806],1783[962],1785[963],1786[964],1788[965]
;;  UD chains for artificial uses at top

(note 3490 3489 3491 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3491
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 674 { d804(bb 238 insn 3478) }
(insn 3491 3490 3492 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 674 [ i ]))) verify.c:124 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 3492
;;      reg 66 { d729(bb 239 insn 3491) }
(insn 3492 3491 3494 239 (set (reg:SI 1783)
        (lt:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 2 uid 3494
;;      reg 1783 { d962(bb 239 insn 3492) }
(insn 3494 3492 3495 239 (set (reg:SI 679 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1783) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1783)
        (nil)))
;;   UD chains for insn luid 3 uid 3495
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3495 3494 3496 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:124 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 4 uid 3496
;;      reg 66 { d730(bb 239 insn 3495) }
(insn 3496 3495 3498 239 (set (reg:SI 1785)
        (ge:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 5 uid 3498
;;      reg 679 { d806(bb 239 insn 3494) }
;;      reg 1785 { d963(bb 239 insn 3496) }
(insn 3498 3496 3500 239 (set (reg:SI 1786)
        (and:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1785))) verify.c:124 465 {andsi3}
     (expr_list:REG_DEAD (reg:SI 1785)
        (nil)))
;;   UD chains for insn luid 6 uid 3500
;;      reg 1786 { d964(bb 239 insn 3498) }
(insn 3500 3498 3501 239 (set (reg:SI 1788)
        (zero_extend:SI (subreg:QI (reg:SI 1786) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1786)
        (nil)))
;;   UD chains for insn luid 7 uid 3501
;;      reg 1788 { d965(bb 239 insn 3500) }
(insn 3501 3500 3502 239 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1788)
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1788)
        (nil)))
;;   UD chains for insn luid 8 uid 3502
;;      reg 66 { d731(bb 239 insn 3501) }
(jump_insn 3502 3501 3503 239 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3782)
            (pc))) verify.c:124 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3782)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u3496(29){ }u3497(31){ }u3498(64){ }u3499(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 1790 1791
;; live  in  	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 1790 1791
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(3) 66[734],1790[966],1791[967]
;; rd  kill	(2) 1790[966],1791[967]
;;  UD chains for artificial uses at top

(note 3503 3502 3504 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3504
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3504 3503 3505 240 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3505
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3505 3504 3506 240 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3506
;;      reg 66 { d732(bb 240 insn 3505) }
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 674 { d804(bb 238 insn 3478) }
(insn 3506 3505 3507 240 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 3 uid 3507
;;      reg 66 { d733(bb 240 insn 3506) }
(insn 3507 3506 3509 240 (set:SI (reg:SI 1790)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 4 uid 3509
;;      reg 1790 { d966(bb 240 insn 3507) }
(insn 3509 3507 3510 240 (set (reg:SI 1791 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1790) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1790)
        (nil)))
;;   UD chains for insn luid 5 uid 3510
;;      reg 1791 { d967(bb 240 insn 3509) }
(insn 3510 3509 3511 240 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1791 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1791 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3511
;;      reg 66 { d734(bb 240 insn 3510) }
(jump_insn 3511 3510 3512 240 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4014)
            (pc))) verify.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4014)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u3511(29){ }u3512(31){ }u3513(64){ }u3514(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 679 715
;; lr  def 	 66 [cc] 716 1793 1794 1796
;; live  in  	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 716 1793 1794 1796
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(5) 66[736],716[832],1793[968],1794[969],1796[970]
;; rd  kill	(10) 716[831,832,833,834,835,836,837],1793[968],1794[969],1796[970]
;;  UD chains for artificial uses at top

(note 3512 3511 3513 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3513
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3513 3512 3514 241 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3514
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(insn 3514 3513 3515 241 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 2 uid 3515
;;      reg 66 { d735(bb 241 insn 3514) }
(insn 3515 3514 3517 241 (set (reg:SI 1793)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:127 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
;;   UD chains for insn luid 3 uid 3517
;;      reg 679 { d806(bb 239 insn 3494) }
;;      reg 1793 { d968(bb 241 insn 3515) }
(insn 3517 3515 3519 241 (set (reg:SI 1794)
        (ior:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1793))) verify.c:127 466 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 1793)
        (expr_list:REG_DEAD (reg:SI 679 [ D.3813 ])
            (nil))))
;;   UD chains for insn luid 4 uid 3519
;;      reg 1794 { d969(bb 241 insn 3517) }
(insn 3519 3517 247 241 (set (reg:SI 1796)
        (zero_extend:SI (subreg:QI (reg:SI 1794) 0))) verify.c:127 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1794)
        (nil)))
;;   UD chains for insn luid 5 uid 247
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(insn 247 3519 3520 241 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:127 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 3520
;;      reg 1796 { d970(bb 241 insn 3519) }
(insn 3520 247 3521 241 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1796)
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1796)
        (nil)))
;;   UD chains for insn luid 7 uid 3521
;;      reg 66 { d736(bb 241 insn 3520) }
(jump_insn 3521 3520 3522 241 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:127 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 3562)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],708[811,812],715[817,818,819,825,826,827,828,829],716[832],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u3525(29){ }u3526(31){ }u3527(64){ }u3528(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 674
;; lr  def 	 66 [cc] 688 690
;; live  in  	 610 623 624 647 668 674 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 688 690
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],708[811,812],715[817,818,819,825,826,827,828,829],716[832],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(3) 66[737],688[807],690[808]
;; rd  kill	(2) 688[807],690[808]
;;  UD chains for artificial uses at top

(note 3522 3521 3523 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3523
;;      reg 674 { d804(bb 238 insn 3478) }
(insn 3523 3522 3524 242 (set (reg:DI 688 [ D.3802 ])
        (ashift:DI (reg/v:DI 674 [ i ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 3524
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 688 { d807(bb 242 insn 3523) }
(insn 3524 3523 3525 242 (set (reg:DI 690 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 688 [ D.3802 ])) [4 *_674+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3525
;;      reg 690 { d808(bb 242 insn 3524) }
(insn 3525 3524 3526 242 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 690 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3526
;;      reg 66 { d737(bb 242 insn 3525) }
(jump_insn 3526 3525 3527 242 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3894)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 3894)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(21) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u3534(29){ }u3535(31){ }u3536(64){ }u3537(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 692 694
;; live  in  	 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 692 694
;; live  kill	
;; rd  in  	(21) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(3) 66[738],692[809],694[810]
;; rd  kill	(2) 692[809],694[810]
;;  UD chains for artificial uses at top

(note 3527 3526 3528 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3528
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3528 3527 3529 243 (set (reg:DI 692 [ D.3802 ])
        (ashift:DI (reg/v:DI 675 [ j ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 3529
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 692 { d809(bb 243 insn 3528) }
(insn 3529 3528 3530 243 (set (reg:DI 694 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 692 [ D.3802 ])) [4 *_678+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3530
;;      reg 694 { d810(bb 243 insn 3529) }
(insn 3530 3529 3531 243 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 694 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3531
;;      reg 66 { d738(bb 243 insn 3530) }
(jump_insn 3531 3530 3887 243 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4020)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4020)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(23) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u3543(29){ }u3544(31){ }u3545(64){ }u3546(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 675 690
;; lr  def 	 66 [cc]
;; live  in  	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(22) 610[787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 66[739]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3887 3531 3535 244 190 "" [1 uses])
(note 3535 3887 3536 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3536
;;      reg 675 { d805(bb 238 insn 3480) }
;;      reg 690 { d808(bb 242 insn 3524) }
(insn 3536 3535 3537 244 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 675 [ j ])
            (reg:DI 690 [ D.3798 ]))) verify.c:145 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 690 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
            (nil))))
;;   UD chains for insn luid 1 uid 3537
;;      reg 66 { d739(bb 244 insn 3536) }
(jump_insn 3537 3536 3538 244 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3541)
            (pc))) verify.c:145 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3541)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(20) 610[787],623[793],624[794],647[797],668[801],674[804],688[807],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u3550(29){ }u3551(31){ }u3552(64){ }u3553(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 688 746 1874
;; lr  def 	 1797
;; live  in  	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 1797
;; live  kill	
;; rd  in  	(20) 610[787],623[793],624[794],647[797],668[801],674[804],688[807],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 1797[971]
;; rd  kill	(1) 1797[971]
;;  UD chains for artificial uses at top

(note 3538 3537 4356 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4356
;;      reg 1874 { d1023(bb 237 insn 3550) }
(insn 4356 3538 3540 245 (set (reg:DI 1797)
        (reg:DI 1874)) verify.c:146 -1
     (nil))
;;   UD chains for insn luid 1 uid 3540
;;      reg 688 { d807(bb 242 insn 3523) }
;;      reg 746 { d855(bb 193 insn 3058) }
;;      reg 1874 { d1023(bb 237 insn 3550) }
(insn 3540 4356 3541 245 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 688 [ D.3802 ])) [4 *_687+0 S8 A64])
        (reg:DI 1874)) verify.c:146 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1797)
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(20) 610[787],623[793],624[794],647[797],668[801],674[804],688[807],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u3557(29){ }u3558(31){ }u3559(64){ }u3560(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 674 694
;; lr  def 	 66 [cc]
;; live  in  	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(20) 610[787],623[793],624[794],647[797],668[801],674[804],688[807],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 66[740]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3541 3540 3542 246 167 "" [1 uses])
(note 3542 3541 3543 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3543
;;      reg 674 { d804(bb 238 insn 3478) }
;;      reg 694 { d810(bb 243 insn 3529) }
(insn 3543 3542 3544 246 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg:DI 694 [ D.3798 ]))) verify.c:147 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 694 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
            (nil))))
;;   UD chains for insn luid 1 uid 3544
;;      reg 66 { d740(bb 246 insn 3543) }
(jump_insn 3544 3543 3548 246 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3548)
            (pc))) verify.c:147 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 3548)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[787],623[793],624[794],647[797],668[801],688[807],692[809],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u3564(29){ }u3565(31){ }u3566(64){ }u3567(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 692 746 1874
;; lr  def 	 1798
;; live  in  	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 1798
;; live  kill	
;; rd  in  	(18) 610[787],623[793],624[794],647[797],668[801],688[807],692[809],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 1798[972]
;; rd  kill	(1) 1798[972]
;;  UD chains for artificial uses at top

(code_label 3548 3544 3549 247 168 "" [1 uses])
(note 3549 3548 4355 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4355
;;      reg 1874 { d1023(bb 237 insn 3550) }
(insn 4355 3549 3551 247 (set (reg:DI 1798)
        (reg:DI 1874)) verify.c:148 -1
     (nil))
;;   UD chains for insn luid 1 uid 3551
;;      reg 692 { d809(bb 243 insn 3528) }
;;      reg 746 { d855(bb 193 insn 3058) }
;;      reg 1874 { d1023(bb 237 insn 3550) }
(insn 3551 4355 3552 247 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 692 [ D.3802 ])) [4 *_689+0 S8 A64])
        (reg:DI 1874)) verify.c:148 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1798)
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[787],623[793],624[794],647[797],668[801],688[807],692[809],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u3571(29){ }u3572(31){ }u3573(64){ }u3574(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 688 692
;; lr  def 	 66 [cc] 1799 1800 1801 1802
;; live  in  	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 1799 1800 1801 1802
;; live  kill	
;; rd  in  	(22) 610[787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(5) 66[741],1799[973],1800[974],1801[975],1802[976]
;; rd  kill	(4) 1799[973],1800[974],1801[975],1802[976]
;;  UD chains for artificial uses at top

(code_label 3552 3551 3553 248 169 "" [0 uses])
(note 3553 3552 3554 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3554
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 688 { d807(bb 242 insn 3523) }
;;      reg 692 { d809(bb 243 insn 3528) }
(debug_insn 3554 3553 3555 248 (var_location:DI lvldiff (minus:DI (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [0 *_690+0 S8 A64])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [0 *_692+0 S8 A64]))) verify.c:150 -1
     (nil))
;;   UD chains for insn luid 1 uid 3555
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 688 { d807(bb 242 insn 3523) }
(insn 3555 3554 3556 248 (set (reg:DI 1800 [ *_690 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [4 *_690+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 688 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 3556
;;      reg 668 { d801(bb 195 insn 3074) }
;;      reg 692 { d809(bb 243 insn 3528) }
(insn 3556 3555 3557 248 (set (reg:DI 1801 [ *_692 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [4 *_692+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 692 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 3557
;;      reg 1800 { d974(bb 248 insn 3555) }
;;      reg 1801 { d975(bb 248 insn 3556) }
(insn 3557 3556 3558 248 (set (reg:DI 1799 [ lvldiff ])
        (minus:DI (reg:DI 1800 [ *_690 ])
            (reg:DI 1801 [ *_692 ]))) verify.c:152 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1801 [ *_692 ])
        (expr_list:REG_DEAD (reg:DI 1800 [ *_690 ])
            (nil))))
;;   UD chains for insn luid 4 uid 3558
;;      reg 1799 { d973(bb 248 insn 3557) }
(insn 3558 3557 3559 248 (set (reg:DI 1802 [ D.3810 ])
        (plus:DI (reg:DI 1799 [ lvldiff ])
            (const_int 1 [0x1]))) verify.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1799 [ lvldiff ])
        (nil)))
;;   UD chains for insn luid 5 uid 3559
;;      reg 1802 { d976(bb 248 insn 3558) }
(insn 3559 3558 3560 248 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1802 [ D.3810 ])
            (const_int 2 [0x2]))) verify.c:152 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1802 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 6 uid 3560
;;      reg 66 { d741(bb 248 insn 3559) }
(jump_insn 3560 3559 3561 248 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4024)
            (pc))) verify.c:152 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4024)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(16) 610[787],623[793],624[794],647[797],668[801],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u3588(29){ }u3589(31){ }u3590(64){ }u3591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1872
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(16) 610[787],623[793],624[794],647[797],668[801],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(2) 715[818],716[833]
;; rd  kill	(22) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],716[831,832,833,834,835,836,837]
;;  UD chains for artificial uses at top

(note 3561 3560 4354 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4354
;;      reg 1872 { d1021(bb 237 insn 248) }
(insn 4354 3561 251 249 (set (reg/v:SI 716 [ err ])
        (reg:SI 1872 [ err ])) verify.c:152 -1
     (nil))
;;   UD chains for insn luid 1 uid 251
(insn 251 4354 4024 249 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:152 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[787],623[793],624[794],647[797],668[801],708[811,812],715[818],716[833],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u3602(29){ }u3603(31){ }u3604(64){ }u3605(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1873
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(16) 610[787],623[793],624[794],647[797],668[801],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(2) 715[819],716[834]
;; rd  kill	(22) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],716[831,832,833,834,835,836,837]
;;  UD chains for artificial uses at top

(code_label 4024 251 4023 250 208 "" [1 uses])
(note 4023 4024 4353 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4353
;;      reg 1873 { d1022(bb 237 insn 252) }
(insn 4353 4023 253 250 (set (reg/v:SI 716 [ err ])
        (reg:SI 1873 [ err ])) verify.c:153 -1
     (nil))
;;   UD chains for insn luid 1 uid 253
;;      reg 1873 { d1022(bb 237 insn 252) }
(insn 253 4353 3562 250 (set (reg/v:SI 715 [ err ])
        (reg:SI 1873 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int -14 [0xfffffffffffffff2])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[787],623[793],624[794],647[797],668[801],708[811,812],715[819],716[834],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u3607(29){ }u3608(31){ }u3609(64){ }u3610(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 720
;; lr  def 	 66 [cc] 708
;; live  in  	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 708
;; live  kill	
;; rd  in  	(34) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],708[811,812],715[817,818,819,825,826,827,828,829],716[831,832,833,834,835,836,837],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(2) 66[742],708[812]
;; rd  kill	(2) 708[811,812]
;;  UD chains for artificial uses at top

(code_label 3562 253 3563 251 161 "" [2 uses])
(note 3563 3562 3568 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3568
;;      reg 716 { d837(bb 285 insn 4352) d836(bb 282 insn 255) d835(bb 272 insn 254) d834(bb 250 insn 4353) d833(bb 249 insn 4354) d832(bb 241 insn 247) d831(bb 238 insn 246) }
(debug_insn 3568 3563 3569 251 (var_location:SI terr (reg/v:SI 716 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3569
(debug_insn 3569 3568 3570 251 (var_location:DI k (debug_expr:DI D#42)) -1
     (nil))
;;   UD chains for insn luid 2 uid 3570
;;      reg 610 { d787(bb 283 insn 3885) d786(bb 237 insn 245) }
(debug_insn 3570 3569 3571 251 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3571
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3571 3570 3572 251 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3572
;;      reg 708 { d812(bb 251 insn 3572) d811(bb 237 insn 3466) }
(insn 3572 3571 3574 251 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg:DI 708 [ ivtmp.64 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3574
;;      reg 708 { d812(bb 251 insn 3572) }
;;      reg 720 { d838(bb 237 insn 3471) }
(insn 3574 3572 3575 251 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 708 [ ivtmp.64 ])
            (reg:DI 720 [ D.3810 ]))) verify.c:117 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3575
;;      reg 66 { d742(bb 251 insn 3574) }
(jump_insn 3575 3574 4340 251 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4340)
            (pc))) verify.c:117 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4340)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(31) 610[786,787],623[793],624[794],647[797],668[801],708[812],715[817,818,819,825,826,827,828,829],716[831,832,833,834,835,836,837],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u3618(29){ }u3619(31){ }u3620(64){ }u3621(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 716 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 716
;; lr  def 	 66 [cc]
;; live  in  	 610 624 647 715 716 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(31) 610[786,787],623[793],624[794],647[797],668[801],708[812],715[817,818,819,825,826,827,828,829],716[831,832,833,834,835,836,837],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 66[743]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3576 4339 3577 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3577
;;      reg 716 { d837(bb 285 insn 4352) d836(bb 282 insn 255) d835(bb 272 insn 254) d834(bb 250 insn 4353) d833(bb 249 insn 4354) d832(bb 241 insn 247) d831(bb 238 insn 246) }
(insn 3577 3576 3578 252 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 716 [ err ])
            (const_int 0 [0]))) verify.c:157 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 716 [ err ])
        (nil)))
;;   UD chains for insn luid 1 uid 3578
;;      reg 66 { d743(bb 252 insn 3577) }
(jump_insn 3578 3577 3579 252 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5495 (nil)))
 -> 3626)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861
;; rd  out 	(17) 610[786,787],624[794],647[797],715[817,818,819,825,826,827,828,829],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u3624(29){ }u3625(31){ }u3626(64){ }u3627(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1861
;; lr  def 	 66 [cc]
;; live  in  	 610 624 647 715 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(17) 610[786,787],624[794],647[797],715[817,818,819,825,826,827,828,829],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[744]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3579 3578 3580 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3580
(debug_insn 3580 3579 3581 253 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3581
;;      reg 715 { d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3581 3580 3582 253 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3582
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3582 3581 3583 253 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:160 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 3 uid 3583
;;      reg 66 { d744(bb 253 insn 3582) }
(jump_insn 3583 3582 3916 253 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 3626)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861
;; rd  out 	(17) 610[786,787],624[794],647[797],715[817,818,819,825,826,827,828,829],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u3635(29){ }u3636(31){ }u3637(64){ }u3638(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 436 1869 1870 1871
;; live  in  	 610 624 647 715 746 777 811 1710 1861
;; live  gen 	 436 1869 1870 1871
;; live  kill	
;; rd  in  	(19) 610[786,787,789],624[794],647[797],715[817,818,819,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(4) 436[776],1869[1018],1870[1019],1871[1020]
;; rd  kill	(5) 436[776,777],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at top

(code_label 3916 3583 3584 254 192 "" [1 uses])
(note 3584 3916 258 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 258
(insn 258 3584 4321 254 (set (reg/v:DI 436 [ k ])
        (const_int 0 [0])) verify.c:160 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 4321
(insn 4321 258 4322 254 (set (reg:SI 1869)
        (const_int -15 [0xfffffffffffffff1])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 4322
(insn 4322 4321 4328 254 (set (reg:SI 1870)
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 4328
(insn 4328 4322 3623 254 (set (reg:SI 1871)
        (const_int -16 [0xfffffffffffffff0])) verify.c:166 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(23) 436[776],610[786,787,789],624[794],647[797],715[817,818,819,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u3640(29){ }u3641(31){ }u3642(64){ }u3643(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 715
;; lr  def 	 66 [cc] 1804 1805
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 1804 1805
;; live  kill	
;; rd  in  	(26) 436[776,777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(3) 66[747],1804[977],1805[978]
;; rd  kill	(2) 1804[977],1805[978]
;;  UD chains for artificial uses at top

(code_label 3623 4328 3586 255 175 "" [0 uses])
(note 3586 3623 3587 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3587
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
(debug_insn 3587 3586 3588 255 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3588
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3588 3587 3589 255 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3589
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3589 3588 3590 255 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:161 -1
     (nil))
;;   UD chains for insn luid 3 uid 3590
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(insn 3590 3589 3591 255 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 4 uid 3591
;;      reg 66 { d745(bb 255 insn 3590) }
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
;;      reg 624 { d794(bb 191 insn 3025) }
(insn 3591 3590 3592 255 (set (reg:CC_DNE 66 cc)
        (compare (and:SI (ne (reg:CC_DEQ 66 cc)
                    (const_int 0 [0]))
                (ne (reg/v:DI 436 [ k ])
                    (reg:DI 624 [ D.3798 ])))
            (const_int 0 [0]))) verify.c:162 4 {ccmp_anddi}
     (nil))
;;   UD chains for insn luid 5 uid 3592
;;      reg 66 { d746(bb 255 insn 3591) }
(insn 3592 3591 3594 255 (set:SI (reg:SI 1804)
        (ne:SI (reg:CC_DNE 66 cc)
            (const_int 0 [0]))) verify.c:162 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DNE 66 cc)
        (nil)))
;;   UD chains for insn luid 6 uid 3594
;;      reg 1804 { d977(bb 255 insn 3592) }
(insn 3594 3592 3595 255 (set (reg:SI 1805 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1804) 0))) verify.c:162 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1804)
        (nil)))
;;   UD chains for insn luid 7 uid 3595
;;      reg 1805 { d978(bb 255 insn 3594) }
(insn 3595 3594 3596 255 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1805 [ D.3813 ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1805 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 8 uid 3596
;;      reg 66 { d747(bb 255 insn 3595) }
(jump_insn 3596 3595 3597 255 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3616)
            (pc))) verify.c:162 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3616)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(26) 436[776,777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u3656(29){ }u3657(31){ }u3658(64){ }u3659(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 647
;; lr  def 	 66 [cc] 710
;; live  in  	 436 610 624 647 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 710
;; live  kill	
;; rd  in  	(26) 436[776,777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(2) 66[748],710[813]
;; rd  kill	(1) 710[813]
;;  UD chains for artificial uses at top

(note 3597 3596 3599 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3599
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
;;      reg 647 { d797(bb 292 insn 2864) }
(insn 3599 3597 3600 256 (set (reg:DI 710 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3600
;;      reg 710 { d813(bb 256 insn 3599) }
(insn 3600 3599 3601 256 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 710 [ D.3798 ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 3601
;;      reg 66 { d748(bb 256 insn 3600) }
(jump_insn 3601 3600 3602 256 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4029)
            (pc))) verify.c:163 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4029)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 710 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 710 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(16) 436[776,777],610[786,787,789],624[794],647[797],710[813],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u3665(29){ }u3666(31){ }u3667(64){ }u3668(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 710 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 710 746 1869 1870 1871
;; lr  def 	 66 [cc] 715 1806 1865 1866 1868
;; live  in  	 436 610 624 647 710 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 715 1806 1865 1866 1868
;; live  kill	
;; rd  in  	(16) 436[776,777],610[786,787,789],624[794],647[797],710[813],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(6) 66[752],715[821],1806[979],1865[1014],1866[1015],1868[1017]
;; rd  kill	(19) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],1806[979],1865[1014],1866[1015],1868[1017]
;;  UD chains for artificial uses at top

(note 3602 3601 3603 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3603
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3603 3602 3604 257 (set (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 746 [ seen_edge ])) [4 MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3604
;;      reg 1806 { d979(bb 257 insn 3603) }
(insn 3604 3603 4349 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 2 uid 4349
;;      reg 1869 { d1018(bb 254 insn 4321) }
(insn 4349 3604 4350 257 (set (reg:SI 1865)
        (reg:SI 1869)) verify.c:163 -1
     (nil))
;;   UD chains for insn luid 3 uid 4350
;;      reg 1870 { d1019(bb 254 insn 4322) }
(insn 4350 4349 4323 257 (set (reg:SI 1866)
        (reg:SI 1870)) verify.c:163 -1
     (nil))
;;   UD chains for insn luid 4 uid 4323
;;      reg 1806 { d979(bb 257 insn 3603) }
(insn 4323 4350 4324 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 4324
;;      reg 66 { d750(bb 257 insn 4323) }
;;      reg 1869 { d1018(bb 254 insn 4321) }
;;      reg 1870 { d1019(bb 254 insn 4322) }
(insn 4324 4323 3609 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:SI 1869)
            (reg:SI 1870))) verify.c:163 442 {*cmovsi_insn}
     (nil))
;;   UD chains for insn luid 6 uid 3609
;;      reg 715 { d820(bb 257 insn 4324) }
(debug_insn 3609 4324 3610 257 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 3610
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
;;      reg 710 { d813(bb 256 insn 3599) }
(insn 3610 3609 4351 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:165 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 710 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 8 uid 4351
;;      reg 1871 { d1020(bb 254 insn 4328) }
(insn 4351 3610 4329 257 (set (reg:SI 1868)
        (reg:SI 1871)) verify.c:166 -1
     (nil))
;;   UD chains for insn luid 9 uid 4329
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
;;      reg 710 { d813(bb 256 insn 3599) }
(insn 4329 4351 4330 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:166 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 10 uid 4330
;;      reg 66 { d752(bb 257 insn 4329) }
;;      reg 715 { d820(bb 257 insn 4324) }
;;      reg 1871 { d1020(bb 254 insn 4328) }
(insn 4330 4329 4029 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg/v:SI 715 [ err ])
            (reg:SI 1871))) verify.c:166 442 {*cmovsi_insn}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(16) 436[776,777],610[786,787,789],624[794],647[797],715[821],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u3689(29){ }u3690(31){ }u3691(64){ }u3692(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 436 610 624 647 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 715
;; live  kill	
;; rd  in  	(16) 436[776,777],610[786,787,789],624[794],647[797],710[813],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(1) 715[822]
;; rd  kill	(15) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(code_label 4029 4330 4028 258 209 "" [1 uses])
(note 4028 4029 261 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 261
(insn 261 4028 3615 258 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3615
(debug_insn 3615 261 3616 258 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(16) 436[776,777],610[786,787,789],624[794],647[797],715[822],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u3698(29){ }u3699(31){ }u3700(64){ }u3701(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 1861
;; lr  def 	 66 [cc] 436
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 436
;; live  kill	
;; rd  in  	(26) 436[776,777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(2) 66[753],436[777]
;; rd  kill	(2) 436[776,777]
;;  UD chains for artificial uses at top

(code_label 3616 3615 3617 259 172 "" [1 uses])
(note 3617 3616 3618 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3618
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3618 3617 3619 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3619
;;      reg 436 { d777(bb 259 insn 3619) d776(bb 254 insn 258) }
(insn 3619 3618 3621 259 (set (reg/v:DI 436 [ k ])
        (plus:DI (reg/v:DI 436 [ k ])
            (const_int 1 [0x1]))) verify.c:160 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 3621
;;      reg 436 { d777(bb 259 insn 3619) }
(debug_insn 3621 3619 3622 259 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3622
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3622 3621 3624 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 3624
;;      reg 436 { d777(bb 259 insn 3619) }
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3624 3622 3625 259 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 1861 [ D.3798 ]))) verify.c:160 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3625
;;      reg 66 { d753(bb 259 insn 3624) }
(jump_insn 3625 3624 4338 259 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4338)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4338)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(25) 436[777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u3709(29){ }u3710(31){ }u3711(64){ }u3712(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 715 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 610 647 715 746 777 811 1710
;; live  gen 	 0 [x0] 66 [cc]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(25) 436[777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(1) 66[755]
;; rd  kill	(14) 30[324,325,326,327,328,329,330,331,332,333,334,335,336,337]
;;  UD chains for artificial uses at top

(code_label 3626 4337 3627 260 171 ("done") [2 uses])
(note 3627 3626 3628 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3628
;;      reg 610 { d789(bb 287 insn 256) d787(bb 283 insn 3885) d786(bb 237 insn 245) }
(debug_insn 3628 3627 3629 260 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3629
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(debug_insn 3629 3628 3630 260 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3630
;;      reg 746 { d855(bb 193 insn 3058) }
(debug_insn 3630 3629 3631 260 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3631
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3631 3630 3632 260 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
;;   UD chains for insn luid 4 uid 3632
;;      reg 31 { }
;;      reg 0 { d16(bb 260 insn 3631) }
(call_insn 3632 3631 3633 260 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 5 uid 3633
(debug_insn 3633 3632 3634 260 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;;   UD chains for insn luid 6 uid 3634
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) }
(insn 3634 3633 3635 260 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:175 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 7 uid 3635
;;      reg 66 { d755(bb 260 insn 3634) }
(jump_insn 3635 3634 3820 260 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3667)
            (pc))) verify.c:175 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3667)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 715 777 811 1710 1853 1854 1859
;; live  out 	 610 647 715 777 811 1710
;; rd  out 	(18) 610[786,787,789],647[797],715[817,818,819,821,822,825,826,827,828,829,830],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u3721(29){ }u3722(31){ }u3723(64){ }u3724(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715 811 1853
;; lr  def 	 66 [cc] 712 1807 1808 1810 1812 1860
;; live  in  	 647 715 777 811 1710
;; live  gen 	 66 [cc] 712 1807 1808 1810 1812 1860
;; live  kill	
;; rd  in  	(21) 610[786,787,789],647[797],715[816,817,818,819,821,822,823,824,825,826,827,828,829,830],777[864],811[878],1710[936]
;; rd  gen 	(7) 66[756],712[814],1807[980],1808[981],1810[982],1812[983],1860[1010]
;; rd  kill	(9) 712[814,815],1807[980],1808[981],1810[982],1812[983],1860[1010,1011,1012]
;;  UD chains for artificial uses at top

(code_label 3820 3635 3636 261 183 "" [0 uses])
(note 3636 3820 3637 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3637
(debug_insn 3637 3636 3638 261 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 3638
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d824(bb 269 insn 269) d823(bb 268 insn 268) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) d816(bb 209 insn 234) }
(debug_insn 3638 3637 3639 261 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3639
(debug_insn 3639 3638 3640 261 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;;   UD chains for insn luid 3 uid 3640
;;      reg 715 { d830(bb 287 insn 257) d829(bb 285 insn 249) d828(bb 284 insn 271) d827(bb 281 insn 280) d826(bb 271 insn 270) d825(bb 270 insn 4327) d824(bb 269 insn 269) d823(bb 268 insn 268) d822(bb 258 insn 261) d821(bb 257 insn 4330) d819(bb 250 insn 253) d818(bb 249 insn 251) d817(bb 237 insn 244) d816(bb 209 insn 234) }
(insn 3640 3639 3641 261 (set (reg:DI 712 [ D.3798 ])
        (sign_extend:DI (reg/v:SI 715 [ err ]))) verify.c:175 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 715 [ err ])
        (nil)))
;;   UD chains for insn luid 4 uid 3641
(debug_insn 3641 3640 3642 261 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 5 uid 3642
(debug_insn 3642 3641 3643 261 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 6 uid 3643
(debug_insn 3643 3642 3644 261 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 7 uid 3644
(debug_insn 3644 3643 3645 261 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 8 uid 3645
(debug_insn 3645 3644 3646 261 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 9 uid 3646
(debug_insn 3646 3645 3647 261 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 10 uid 3647
(debug_insn 3647 3646 3648 261 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 11 uid 3648
(debug_insn 3648 3647 3649 261 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 12 uid 3649
(debug_insn 3649 3648 3650 261 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 13 uid 3650
(debug_insn 3650 3649 3651 261 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 14 uid 3651
(debug_insn 3651 3650 3652 261 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 15 uid 3652
(debug_insn 3652 3651 3653 261 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 16 uid 3653
(debug_insn 3653 3652 3654 261 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 17 uid 3654
(debug_insn 3654 3653 3655 261 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 18 uid 3655
(insn 3655 3654 3656 261 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 19 uid 3656
;;      reg 1860 { d1010(bb 261 insn 3655) }
(insn 3656 3655 3657 261 (set (reg/f:DI 1808)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
;;   UD chains for insn luid 20 uid 3657
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1808 { d981(bb 261 insn 3656) }
(insn 3657 3656 3658 261 (set (reg/f:DI 1807)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1808))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1808)
        (nil)))
;;   UD chains for insn luid 21 uid 3658
;;      reg 712 { d814(bb 261 insn 3640) }
;;      reg 1807 { d980(bb 261 insn 3657) }
(insn 3658 3657 3660 261 (set (mem:DI (reg/f:DI 1807) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 712 [ D.3798 ])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1807)
        (nil)))
;;   UD chains for insn luid 22 uid 3660
;;      reg 1853 { }
(insn 3660 3658 3661 261 (set (reg/f:DI 1810)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 23 uid 3661
;;      reg 1810 { d982(bb 261 insn 3660) }
(insn 3661 3660 3662 261 (set (reg:SI 1812 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1810) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1810)
        (nil)))
;;   UD chains for insn luid 24 uid 3662
;;      reg 1812 { d983(bb 261 insn 3661) }
(insn 3662 3661 3663 261 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1812 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1812 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 25 uid 3663
;;      reg 66 { d756(bb 261 insn 3662) }
(jump_insn 3663 3662 4259 261 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3696)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860
;; rd  out 	(5) 647[797],777[864],811[878],1710[936],1860[1010]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u3736(29){ }u3737(31){ }u3738(64){ }u3739(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 811 1853
;; lr  def 	 66 [cc] 1813 1814 1816 1817 1819 1860
;; live  in  	 610 647 777 811 1710
;; live  gen 	 66 [cc] 1813 1814 1816 1817 1819 1860
;; live  kill	
;; rd  in  	(19) 610[786,787,788,789],647[797],715[817,818,819,821,822,825,826,827,828,829,830],777[864],811[878],1710[936]
;; rd  gen 	(7) 66[757],1813[984],1814[985],1816[986],1817[987],1819[988],1860[1011]
;; rd  kill	(8) 1813[984],1814[985],1816[986],1817[987],1819[988],1860[1010,1011,1012]
;;  UD chains for artificial uses at top

(code_label 3667 4203 3668 263 176 "" [1 uses])
(note 3668 3667 3671 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3671
(debug_insn 3671 3668 3672 263 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;;   UD chains for insn luid 1 uid 3672
(debug_insn 3672 3671 3673 263 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 2 uid 3673
(debug_insn 3673 3672 3674 263 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 3 uid 3674
(debug_insn 3674 3673 3675 263 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 4 uid 3675
(debug_insn 3675 3674 3676 263 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 5 uid 3676
(debug_insn 3676 3675 3677 263 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 6 uid 3677
(debug_insn 3677 3676 3678 263 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 7 uid 3678
(debug_insn 3678 3677 3679 263 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 8 uid 3679
(debug_insn 3679 3678 3680 263 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 9 uid 3680
(debug_insn 3680 3679 3681 263 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 10 uid 3681
(debug_insn 3681 3680 3682 263 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 11 uid 3682
(debug_insn 3682 3681 3683 263 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 12 uid 3683
(debug_insn 3683 3682 3684 263 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 13 uid 3684
(debug_insn 3684 3683 3685 263 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 14 uid 3685
(debug_insn 3685 3684 3686 263 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 15 uid 3686
(insn 3686 3685 3687 263 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 16 uid 3687
;;      reg 1860 { d1011(bb 263 insn 3686) }
(insn 3687 3686 3688 263 (set (reg/f:DI 1814)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
;;   UD chains for insn luid 17 uid 3688
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1814 { d985(bb 263 insn 3687) }
(insn 3688 3687 3689 263 (set (reg/f:DI 1813)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1814))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1814)
        (nil)))
;;   UD chains for insn luid 18 uid 3689
;;      reg 610 { d789(bb 287 insn 256) d788(bb 286 insn 263) d787(bb 283 insn 3885) d786(bb 237 insn 245) }
(insn 3689 3688 3690 263 (set (reg:DI 1816 [ nedge_traversed ])
        (sign_extend:DI (reg/v:SI 610 [ nedge_traversed ]))) graph500.c:204 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 610 [ nedge_traversed ])
        (nil)))
;;   UD chains for insn luid 19 uid 3690
;;      reg 1813 { d984(bb 263 insn 3688) }
;;      reg 1816 { d986(bb 263 insn 3689) }
(insn 3690 3689 3692 263 (set (mem:DI (reg/f:DI 1813) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1816 [ nedge_traversed ])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1816 [ nedge_traversed ])
        (expr_list:REG_DEAD (reg/f:DI 1813)
            (nil))))
;;   UD chains for insn luid 20 uid 3692
;;      reg 1853 { }
(insn 3692 3690 3693 263 (set (reg/f:DI 1817)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 21 uid 3693
;;      reg 1817 { d987(bb 263 insn 3692) }
(insn 3693 3692 3694 263 (set (reg:SI 1819 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1817) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1817)
        (nil)))
;;   UD chains for insn luid 22 uid 3694
;;      reg 1819 { d988(bb 263 insn 3693) }
(insn 3694 3693 3695 263 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1819 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1819 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 23 uid 3695
;;      reg 66 { d757(bb 263 insn 3694) }
(jump_insn 3695 3694 3696 263 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3739)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3739)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860
;; rd  out 	(5) 647[797],777[864],811[878],1710[936],1860[1011]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u3750(29){ }u3751(31){ }u3752(64){ }u3753(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1860
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 712 1820 1821 1822 1824 1825 1826 1856
;; live  in  	 647 777 811 1710 1860
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 712 1820 1821 1822 1824 1825 1826 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(7) 647[797],777[864],811[878],1710[936],1860[1010,1011,1012]
;; rd  gen 	(10) 0[19],66[759],712[815],1820[989],1821[990],1822[991],1824[992],1825[993],1826[994],1856[1007]
;; rd  kill	(53) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],712[814,815],1820[989],1821[990],1822[991],1824[992],1825[993],1826[994],1856[1005,1006,1007]
;;  UD chains for artificial uses at top

(code_label 3696 3695 3697 264 177 "" [2 uses])
(note 3697 3696 3698 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3698
(debug_insn 3698 3697 3699 264 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:205 -1
     (nil))
;;   UD chains for insn luid 1 uid 3699
(debug_insn 3699 3698 3700 264 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:205 -1
     (nil))
;;   UD chains for insn luid 2 uid 3700
(insn 3700 3699 3701 264 (set (reg/f:DI 1821)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3701
;;      reg 1821 { d990(bb 264 insn 3700) }
(insn 3701 3700 3702 264 (set (reg/f:DI 1820)
        (lo_sum:DI (reg/f:DI 1821)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1821)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
;;   UD chains for insn luid 4 uid 3702
(insn 3702 3701 3703 264 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3703
;;      reg 1856 { d1007(bb 264 insn 3702) }
(insn 3703 3702 3704 264 (set (reg/f:DI 1822)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
;;   UD chains for insn luid 6 uid 3704
;;      reg 1822 { d991(bb 264 insn 3703) }
(insn 3704 3703 3705 264 (set (reg/f:DI 1824 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1822) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1822)
        (nil)))
;;   UD chains for insn luid 7 uid 3705
;;      reg 1820 { d989(bb 264 insn 3701) }
(insn 3705 3704 3706 264 (set (reg:DI 2 x2)
        (reg/f:DI 1820)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1820)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
;;   UD chains for insn luid 8 uid 3706
(insn 3706 3705 3707 264 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 3707
;;      reg 1824 { d992(bb 264 insn 3704) }
(insn 3707 3706 3708 264 (set (reg:DI 0 x0)
        (reg/f:DI 1824 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1824 [ stderr ])
        (nil)))
;;   UD chains for insn luid 10 uid 3708
;;      reg 31 { }
;;      reg 0 { d18(bb 264 insn 3707) }
;;      reg 1 { d44(bb 264 insn 3706) }
;;      reg 2 { d64(bb 264 insn 3705) }
(call_insn 3708 3707 3710 264 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 11 uid 3710
;;      reg 1860 { d1012(bb 288 insn 3939) d1011(bb 263 insn 3686) d1010(bb 261 insn 3655) }
(insn 3710 3708 3711 264 (set (reg/f:DI 1826)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1860)
        (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
            (nil))))
;;   UD chains for insn luid 12 uid 3711
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1826 { d994(bb 264 insn 3710) }
(insn 3711 3710 3712 264 (set (reg/f:DI 1825)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1826))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1826)
        (expr_list:REG_DEAD (reg:DI 811 [ D.3805 ])
            (nil))))
;;   UD chains for insn luid 13 uid 3712
;;      reg 1825 { d993(bb 264 insn 3711) }
(insn 3712 3711 3713 264 (set (reg:DI 712 [ D.3798 ])
        (mem:DI (reg/f:DI 1825) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1825)
        (nil)))
;;   UD chains for insn luid 14 uid 3713
;;      reg 712 { d815(bb 264 insn 3712) }
(insn 3713 3712 3714 264 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 712 [ D.3798 ])
            (const_int 0 [0]))) graph500.c:206 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 15 uid 3714
;;      reg 66 { d759(bb 264 insn 3713) }
(jump_insn 3714 3713 3715 264 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3739)
            (pc))) graph500.c:206 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3739)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1710 1853 1854 1859
;; live  out 	 647 777 1710
;; rd  out 	(3) 647[797],777[864],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u3792(29){ }u3793(31){ }u3794(64){ }u3795(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 732 777 1837 1839
;; live  in  	 647 777 1710
;; live  gen 	 0 [x0] 66 [cc] 732 777 1837 1839
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(5) 647[797],777[864],811[878],1710[936],1860[1011]
;; rd  gen 	(5) 66[761],732[841],777[864],1837[995],1839[996]
;; rd  kill	(18) 30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],732[841],777[864],1837[995],1839[996]
;;  UD chains for artificial uses at top

(code_label 3739 3737 3740 266 179 "" [2 uses])
(note 3740 3739 3741 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3741
;;      reg 647 { d797(bb 292 insn 2864) }
(debug_insn 3741 3740 3742 266 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3742
;;      reg 647 { d797(bb 292 insn 2864) }
(insn 3742 3741 3743 266 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 647 [ bfs_tree ])
        (nil)))
;;   UD chains for insn luid 2 uid 3743
;;      reg 31 { }
;;      reg 0 { d20(bb 266 insn 3742) }
(call_insn 3743 3742 3744 266 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 3 uid 3744
(debug_insn 3744 3743 3745 266 (var_location:DI p (clobber (const_int 0 [0]))) graph500.c:212 -1
     (nil))
;;   UD chains for insn luid 4 uid 3745
;;      reg 777 { d864(bb 266 insn 3748) }
(insn 3745 3744 3747 266 (set (reg:SI 732 [ D.3797 ])
        (plus:SI (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)
            (const_int 1 [0x1]))) 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 3747
;;      reg 732 { d841(bb 266 insn 3745) }
(debug_insn 3747 3745 3748 266 (var_location:SI m (reg:SI 732 [ D.3797 ])) -1
     (nil))
;;   UD chains for insn luid 6 uid 3748
;;      reg 777 { d864(bb 266 insn 3748) }
(insn 3748 3747 3751 266 (set (reg:DI 777 [ ivtmp.94 ])
        (plus:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 3751
;;      reg 1854 { }
(insn 3751 3748 3752 266 (set (reg/f:DI 1837)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 8 uid 3752
;;      reg 1837 { d995(bb 266 insn 3751) }
(insn 3752 3751 3753 266 (set (reg:SI 1839 [ NBFS ])
        (mem/c:SI (plus:DI (reg/f:DI 1837)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1837)
        (nil)))
;;   UD chains for insn luid 9 uid 3753
;;      reg 732 { d841(bb 266 insn 3745) }
;;      reg 1839 { d996(bb 266 insn 3752) }
(insn 3753 3752 3754 266 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1839 [ NBFS ])
            (reg:SI 732 [ D.3797 ]))) graph500.c:187 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1839 [ NBFS ])
        (expr_list:REG_DEAD (reg:SI 732 [ D.3797 ])
            (nil))))
;;   UD chains for insn luid 10 uid 3754
;;      reg 66 { d761(bb 266 insn 3753) }
(jump_insn 3754 3753 4336 266 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4336)
            (pc))) graph500.c:187 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9775 (nil)))
 -> 4336)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  out 	 777 1710
;; rd  out 	(2) 777[864],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u3817(29){ }u3818(31){ }u3819(64){ }u3820(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 623 624 625 626 647 668 672 745 746 777 811 1710 1861
;; live  gen 	 715
;; live  kill	
;; rd  in  	(22) 581[782,783],609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 715[823]
;; rd  kill	(15) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(code_label 4004 194 4003 268 202 "" [1 uses])
(note 4003 4004 268 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 268
(insn 268 4003 4008 268 (set (reg/v:SI 715 [ err ])
        (const_int -2 [0xfffffffffffffffe])) verify.c:44 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[823],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u3821(29){ }u3822(31){ }u3823(64){ }u3824(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 623 624 625 626 647 668 672 745 746 777 811 1710 1861
;; live  gen 	 715
;; live  kill	
;; rd  in  	(21) 609[785],623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[816,823,824],731[840],745[853,854],746[855],777[864],809[876],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 715[824]
;; rd  kill	(15) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(code_label 4008 268 4007 269 203 "" [1 uses])
(note 4007 4008 269 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 269
(insn 269 4007 3779 269 (set (reg/v:SI 715 [ err ])
        (const_int -1 [0xffffffffffffffff])) verify.c:46 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 3779
(debug_insn 3779 269 3782 269 (var_location:SI terr (const_int -1 [0xffffffffffffffff])) -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[802,803],715[824],745[853,854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u3826(29){ }u3827(31){ }u3828(64){ }u3829(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 715 1842 1843 1867
;; live  in  	 610 623 624 647 668 674 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 715 1842 1843 1867
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(5) 66[765],715[825],1842[997],1843[998],1867[1016]
;; rd  kill	(18) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],1842[997],1843[998],1867[1016]
;;  UD chains for artificial uses at top

(code_label 3782 3779 3783 270 162 "" [1 uses])
(note 3783 3782 3785 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3785
(debug_insn 3785 3783 3786 270 (var_location:SI terr (const_int -10 [0xfffffffffffffff6])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3786
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3786 3785 3787 270 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
;;   UD chains for insn luid 2 uid 3787
;;      reg 66 { d762(bb 270 insn 3786) }
;;      reg 623 { d793(bb 191 insn 3020) }
;;      reg 674 { d804(bb 238 insn 3478) }
(insn 3787 3786 3788 270 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
        (nil)))
;;   UD chains for insn luid 3 uid 3788
;;      reg 66 { d763(bb 270 insn 3787) }
(insn 3788 3787 3790 270 (set:SI (reg:SI 1842)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
;;   UD chains for insn luid 4 uid 3790
;;      reg 1842 { d997(bb 270 insn 3788) }
(insn 3790 3788 3791 270 (set (reg:SI 1843 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1842) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1842)
        (nil)))
;;   UD chains for insn luid 5 uid 3791
;;      reg 1843 { d998(bb 270 insn 3790) }
(insn 3791 3790 4325 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1843 [ D.3813 ])
        (nil)))
;;   UD chains for insn luid 6 uid 4325
;;      reg 1843 { d998(bb 270 insn 3790) }
(insn 4325 3791 4326 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 7 uid 4326
;;      reg 66 { d765(bb 270 insn 4325) }
(insn 4326 4325 4327 270 (set (reg:SI 1867)
        (eq:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (nil))
;;   UD chains for insn luid 8 uid 4327
;;      reg 1867 { d1016(bb 270 insn 4326) }
(insn 4327 4326 4020 270 (set (reg/v:SI 715 [ err ])
        (plus:SI (reg:SI 1867)
            (const_int -11 [0xfffffffffffffff5]))) verify.c:124 94 {*addsi3_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[825],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u3844(29){ }u3845(31){ }u3846(64){ }u3847(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715
;; live  kill	
;; rd  in  	(23) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 715[826]
;; rd  kill	(15) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(code_label 4020 4327 4019 271 207 "" [1 uses])
(note 4019 4020 270 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 270
(insn 270 4019 3796 271 (set (reg/v:SI 715 [ err ])
        (const_int -12 [0xfffffffffffffff4])) verify.c:131 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[826],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u3852(29){ }u3853(31){ }u3854(64){ }u3855(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 716
;; live  kill	
;; rd  in  	(19) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[826,828],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 716[835]
;; rd  kill	(7) 716[831,832,833,834,835,836,837]
;;  UD chains for artificial uses at top

(code_label 3796 270 3797 272 165 "" [1 uses])
(note 3797 3796 3798 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3798
;;      reg 715 { d828(bb 284 insn 271) d826(bb 271 insn 270) }
(debug_insn 3798 3797 3800 272 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3800
;;      reg 715 { d828(bb 284 insn 271) d826(bb 271 insn 270) }
(debug_insn 3800 3798 254 272 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 254
;;      reg 715 { d828(bb 284 insn 271) d826(bb 271 insn 270) }
(insn 254 3800 3868 272 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(20) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[826,828],716[835],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u3859(29){ }u3860(31){ }u3861(64){ }u3862(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 647 715 746 777 811 1710
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(14) 623[793],624[794],625[795],626[796],647[797],668[801],715[816,823,824],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(0) 
;; rd  kill	(14) 30[324,325,326,327,328,329,330,331,332,333,334,335,336,337]
;;  UD chains for artificial uses at top

(code_label 3868 254 3803 273 188 "" [1 uses])
(note 3803 3868 3804 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3804
(debug_insn 3804 3803 3805 273 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 1 uid 3805
(debug_insn 3805 3804 3806 273 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 2 uid 3806
(debug_insn 3806 3805 3807 273 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 3 uid 3807
(debug_insn 3807 3806 3808 273 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 4 uid 3808
(debug_insn 3808 3807 3809 273 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 5 uid 3809
(debug_insn 3809 3808 3810 273 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 6 uid 3810
(debug_insn 3810 3809 3811 273 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 7 uid 3811
(debug_insn 3811 3810 3812 273 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 8 uid 3812
(debug_insn 3812 3811 3814 273 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 9 uid 3814
(debug_insn 3814 3812 3815 273 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 10 uid 3815
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(debug_insn 3815 3814 3816 273 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 11 uid 3816
;;      reg 746 { d855(bb 193 insn 3058) }
(debug_insn 3816 3815 3817 273 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
;;   UD chains for insn luid 12 uid 3817
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3817 3816 3818 273 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
;;   UD chains for insn luid 13 uid 3818
;;      reg 31 { }
;;      reg 0 { d22(bb 273 insn 3817) }
(call_insn 3818 3817 3819 273 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 14 uid 3819
(debug_insn 3819 3818 3985 273 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 777 811 1710 1853 1854 1859
;; live  out 	 647 715 777 811 1710
;; rd  out 	(7) 647[797],715[816,823,824],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u3906(29){ }u3907(31){ }u3908(64){ }u3909(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618
;; lr  def 	 66 [cc]
;; live  in  	 618 647 777 811 1710
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(7) 618[792],647[797],752[856],777[864],811[878],1641[888],1710[936]
;; rd  gen 	(1) 66[767]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 3847 281 3848 279 130 "" [1 uses])
(note 3848 3847 3850 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3850
;;      reg 618 { d792(bb 186 insn 2938) }
(insn 3850 3848 3851 279 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 618 [ err ])
        (nil)))
;;   UD chains for insn luid 1 uid 3851
;;      reg 66 { d767(bb 279 insn 3850) }
(jump_insn 3851 3850 3857 279 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3849)
            (pc))) graph500.c:198 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3849)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; live  out 	 647 777 811 1710
;; rd  out 	(4) 647[797],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u3912(29){ }u3913(31){ }u3914(64){ }u3915(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 715 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[803],715[816,823,824],745[854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 66[768]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 3857 3851 3858 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3858
(debug_insn 3858 3857 3859 280 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 1 uid 3859
(debug_insn 3859 3858 3860 280 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 2 uid 3860
(debug_insn 3860 3859 3861 280 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 3 uid 3861
(debug_insn 3861 3860 3862 280 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 4 uid 3862
(debug_insn 3862 3861 3863 280 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 5 uid 3863
(debug_insn 3863 3862 3864 280 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 6 uid 3864
(debug_insn 3864 3863 3865 280 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 7 uid 3865
(debug_insn 3865 3864 3866 280 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 8 uid 3866
(debug_insn 3866 3865 3867 280 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 9 uid 3867
(debug_insn 3867 3866 3869 280 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
;;   UD chains for insn luid 10 uid 3869
;;      reg 715 { d824(bb 269 insn 269) d823(bb 268 insn 268) d816(bb 209 insn 234) }
(insn 3869 3867 3870 280 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:106 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 11 uid 3870
;;      reg 66 { d768(bb 280 insn 3869) }
(jump_insn 3870 3869 4014 280 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) verify.c:106 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5334 (nil)))
 -> 3868)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 715 746 777 811 1710 1861
;; rd  out 	(14) 623[793],624[794],625[795],626[796],647[797],668[801],715[816,823,824],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u3918(29){ }u3919(31){ }u3920(64){ }u3921(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715
;; live  kill	
;; rd  in  	(28) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],679[806],708[811,812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 715[827]
;; rd  kill	(15) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(code_label 4014 3870 4013 281 205 "" [1 uses])
(note 4013 4014 280 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 280
(insn 280 4013 3875 281 (set (reg/v:SI 715 [ err ])
        (const_int -11 [0xfffffffffffffff5])) verify.c:125 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[827],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u3926(29){ }u3927(31){ }u3928(64){ }u3929(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 716
;; live  kill	
;; rd  in  	(19) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[825,827],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(1) 716[836]
;; rd  kill	(7) 716[831,832,833,834,835,836,837]
;;  UD chains for artificial uses at top

(code_label 3875 280 3876 282 163 "" [0 uses])
(note 3876 3875 3877 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3877
;;      reg 715 { d827(bb 281 insn 280) d825(bb 270 insn 4327) }
(debug_insn 3877 3876 255 282 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 255
;;      reg 715 { d827(bb 281 insn 280) d825(bb 270 insn 4327) }
(insn 255 3877 3881 282 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(20) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[825,827],716[836],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u3932(29){ }u3933(31){ }u3934(64){ }u3935(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 674 675
;; lr  def 	 66 [cc] 610
;; live  in  	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 610
;; live  kill	
;; rd  in  	(23) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(2) 66[769],610[787]
;; rd  kill	(4) 610[786,787,788,789]
;;  UD chains for artificial uses at top

(note 3881 255 3883 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3883
(debug_insn 3883 3881 3884 283 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3884
(debug_insn 3884 3883 3885 283 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3885
;;      reg 610 { d787(bb 283 insn 3885) d786(bb 237 insn 245) }
(insn 3885 3884 3886 283 (set (reg/v:SI 610 [ nedge_traversed ])
        (plus:SI (reg/v:SI 610 [ nedge_traversed ])
            (const_int 1 [0x1]))) verify.c:142 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3886
;;      reg 610 { d787(bb 283 insn 3885) }
(debug_insn 3886 3885 3888 283 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) verify.c:142 -1
     (nil))
;;   UD chains for insn luid 4 uid 3888
;;      reg 674 { d804(bb 238 insn 3478) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3888 3886 3889 283 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg/v:DI 675 [ j ]))) verify.c:144 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3889
;;      reg 66 { d769(bb 283 insn 3888) }
(jump_insn 3889 3888 3894 283 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3887)
            (pc))) verify.c:144 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3887)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(22) 610[787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],692[809],694[810],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u3941(29){ }u3942(31){ }u3943(64){ }u3944(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 715 1844
;; live  in  	 610 623 624 647 668 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 715 1844
;; live  kill	
;; rd  in  	(21) 610[786,787],623[793],624[794],647[797],668[801],674[804],675[805],688[807],690[808],708[811,812],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(3) 66[770],715[828],1844[999]
;; rd  kill	(16) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],1844[999]
;;  UD chains for artificial uses at top

(code_label 3894 3889 3895 284 164 "" [1 uses])
(note 3895 3894 3896 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3896
(debug_insn 3896 3895 3897 284 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3897
;;      reg 647 { d797(bb 292 insn 2864) }
;;      reg 675 { d805(bb 238 insn 3480) }
(insn 3897 3896 271 284 (set (reg:DI 1844 [ *_1073 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 675 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_1073+0 S8 A64])) verify.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
;;   UD chains for insn luid 2 uid 271
(insn 271 3897 3898 284 (set (reg/v:SI 715 [ err ])
        (const_int -13 [0xfffffffffffffff3])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 3898
;;      reg 1844 { d999(bb 284 insn 3897) }
(insn 3898 271 3899 284 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1844 [ *_1073 ])
            (const_int 0 [0]))) verify.c:132 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1844 [ *_1073 ])
        (nil)))
;;   UD chains for insn luid 4 uid 3899
;;      reg 66 { d770(bb 284 insn 3898) }
(jump_insn 3899 3898 3902 284 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3796)
            (pc))) verify.c:132 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3796)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(18) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[828],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u3949(29){ }u3950(31){ }u3951(64){ }u3952(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1872
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
;; rd  in  	(18) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[828],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(2) 715[829],716[837]
;; rd  kill	(22) 715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],716[831,832,833,834,835,836,837]
;;  UD chains for artificial uses at top

(note 3902 3899 4352 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4352
;;      reg 1872 { d1021(bb 237 insn 248) }
(insn 4352 3902 249 285 (set (reg/v:SI 716 [ err ])
        (reg:SI 1872 [ err ])) verify.c:132 -1
     (nil))
;;   UD chains for insn luid 1 uid 249
(insn 249 4352 3903 285 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(19) 610[786,787],623[793],624[794],647[797],668[801],708[811,812],715[829],716[837],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u3953(29){ }u3954(31){ }u3955(64){ }u3956(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 610
;; live  in  	 647 746 777 811 1710
;; live  gen 	 0 [x0] 610
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(9) 610[789],624[794],647[797],715[830],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(1) 610[788]
;; rd  kill	(18) 30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],610[786,787,788,789]
;;  UD chains for artificial uses at top

(note 3903 249 3904 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3904
(debug_insn 3904 3903 3905 286 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3905
(debug_insn 3905 3904 3906 286 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 3906
;;      reg 746 { d855(bb 193 insn 3058) }
(debug_insn 3906 3905 3907 286 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 3907
;;      reg 746 { d855(bb 193 insn 3058) }
(insn 3907 3906 3908 286 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
;;   UD chains for insn luid 4 uid 3908
;;      reg 31 { }
;;      reg 0 { d24(bb 286 insn 3907) }
(call_insn 3908 3907 3909 286 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 5 uid 3909
(debug_insn 3909 3908 263 286 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;;   UD chains for insn luid 6 uid 263
(insn 263 3909 3913 286 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) xalloc.c:132 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 777 811 1710 1853 1854 1859
;; live  out 	 610 647 777 811 1710
;; rd  out 	(5) 610[788],647[797],777[864],811[878],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u3961(29){ }u3962(31){ }u3963(64){ }u3964(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1861
;; lr  def 	 66 [cc] 610 715
;; live  in  	 624 647 746 777 811 1710 1861
;; live  gen 	 66 [cc] 610 715
;; live  kill	
;; rd  in  	(11) 623[793],624[794],625[795],647[797],668[801],746[855],763[859],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(3) 66[772],610[789],715[830]
;; rd  kill	(19) 610[786,787,788,789],715[816,817,818,819,820,821,822,823,824,825,826,827,828,829,830]
;;  UD chains for artificial uses at top

(note 3913 263 3914 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3914
(debug_insn 3914 3913 3915 287 (var_location:DI k (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 1 uid 3915
(debug_insn 3915 3914 256 287 (var_location:SI err (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 256
(insn 256 3915 257 287 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:160 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 257
(insn 257 256 3917 287 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:160 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 3917
;;      reg 1861 { d1013(bb 191 insn 3035) }
(insn 3917 257 3918 287 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:160 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 5 uid 3918
;;      reg 66 { d772(bb 287 insn 3917) }
(jump_insn 3918 3917 3923 287 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3916)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3916)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861
;; rd  out 	(9) 610[789],624[794],647[797],715[830],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u3967(29){ }u3968(31){ }u3969(64){ }u3970(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1853
;; lr  def 	 66 [cc] 1845 1846 1848 1849 1851 1860
;; live  in  	 647 777 811 1710
;; live  gen 	 66 [cc] 1845 1846 1848 1849 1851 1860
;; live  kill	
;; rd  in  	(8) 623[793],624[794],647[797],777[864],811[878],1684[916],1710[936],1861[1013]
;; rd  gen 	(7) 66[773],1845[1000],1846[1001],1848[1002],1849[1003],1851[1004],1860[1012]
;; rd  kill	(8) 1845[1000],1846[1001],1848[1002],1849[1003],1851[1004],1860[1010,1011,1012]
;;  UD chains for artificial uses at top

(code_label 3923 3918 3924 288 134 "" [2 uses])
(note 3924 3923 3925 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3925
(debug_insn 3925 3924 3926 288 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 1 uid 3926
(debug_insn 3926 3925 3927 288 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 2 uid 3927
(debug_insn 3927 3926 3928 288 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 3 uid 3928
(debug_insn 3928 3927 3929 288 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 4 uid 3929
(debug_insn 3929 3928 3930 288 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 5 uid 3930
(debug_insn 3930 3929 3931 288 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 6 uid 3931
(debug_insn 3931 3930 3932 288 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 7 uid 3932
(debug_insn 3932 3931 3933 288 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 8 uid 3933
(debug_insn 3933 3932 3934 288 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 9 uid 3934
(debug_insn 3934 3933 3935 288 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 10 uid 3935
(debug_insn 3935 3934 3936 288 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 11 uid 3936
(debug_insn 3936 3935 3937 288 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 12 uid 3937
(debug_insn 3937 3936 3938 288 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 13 uid 3938
(debug_insn 3938 3937 3939 288 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
;;   UD chains for insn luid 14 uid 3939
(insn 3939 3938 3940 288 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 15 uid 3940
;;      reg 1860 { d1012(bb 288 insn 3939) }
(insn 3940 3939 3941 288 (set (reg/f:DI 1846)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
;;   UD chains for insn luid 16 uid 3941
;;      reg 811 { d878(bb 182 insn 2879) }
;;      reg 1846 { d1001(bb 288 insn 3940) }
(insn 3941 3940 3942 288 (set (reg/f:DI 1845)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1846))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1846)
        (nil)))
;;   UD chains for insn luid 17 uid 3942
(insn 3942 3941 3943 288 (set (reg:DI 1848)
        (const_int -999 [0xfffffffffffffc19])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 18 uid 3943
;;      reg 1845 { d1000(bb 288 insn 3941) }
;;      reg 1848 { d1002(bb 288 insn 3942) }
(insn 3943 3942 3945 288 (set (mem:DI (reg/f:DI 1845) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1848)) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1848)
        (expr_list:REG_DEAD (reg/f:DI 1845)
            (nil))))
;;   UD chains for insn luid 19 uid 3945
;;      reg 1853 { }
(insn 3945 3943 3946 288 (set (reg/f:DI 1849)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:205 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 20 uid 3946
;;      reg 1849 { d1003(bb 288 insn 3945) }
(insn 3946 3945 3947 288 (set (reg:SI 1851 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1849) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1849)
        (nil)))
;;   UD chains for insn luid 21 uid 3947
;;      reg 1851 { d1004(bb 288 insn 3946) }
(insn 3947 3946 3948 288 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1851 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1851 [ VERBOSE ])
        (nil)))
;;   UD chains for insn luid 22 uid 3948
;;      reg 66 { d773(bb 288 insn 3947) }
(jump_insn 3948 3947 3951 288 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9984 (nil)))
 -> 3696)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860
;; rd  out 	(5) 647[797],777[864],811[878],1710[936],1860[1012]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1853
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 611 613 647 752 1616
;; live  in  	 777 1710
;; live  gen 	 0 [x0] 66 [cc] 611 613 647 752 1616
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(2) 777[864],1710[936]
;; rd  gen 	(7) 0[27],66[775],611[790],613[791],647[797],752[856],1616[879]
;; rd  kill	(47) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],30[324,325,326,327,328,329,330,331,332,333,334,335,336,337],611[790],613[791],647[797],752[856],1616[879]
;;  UD chains for artificial uses at top

(code_label 4332 2853 4331 292 275 "" [0 uses])
(note 4331 4332 2854 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2854
;;      reg 777 { d864(bb 266 insn 3748) }
(insn 2854 4331 2855 292 (set (reg/v:SI 752 [ m ])
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2855
;;      reg 777 { d864(bb 266 insn 3748) }
(debug_insn 2855 2854 2857 292 (var_location:SI m (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) -1
     (nil))
;;   UD chains for insn luid 2 uid 2857
;;      reg 1853 { }
(insn 2857 2855 2858 292 (set (reg/f:DI 1616)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 3 uid 2858
;;      reg 1616 { d879(bb 292 insn 2857) }
(insn 2858 2857 2859 292 (set (reg:DI 611 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:191 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 2859
;;      reg 611 { d790(bb 292 insn 2858) }
(insn 2859 2858 2860 292 (set (reg:DI 613 [ D.3802 ])
        (ashift:DI (reg:DI 611 [ D.3798 ])
            (const_int 3 [0x3]))) graph500.c:191 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 2860
;;      reg 613 { d791(bb 292 insn 2859) }
(debug_insn 2860 2859 2861 292 (var_location:DI sz (reg:DI 613 [ D.3802 ])) graph500.c:191 -1
     (nil))
;;   UD chains for insn luid 6 uid 2861
;;      reg 613 { d791(bb 292 insn 2859) }
(debug_insn 2861 2860 2862 292 (var_location:DI n (reg:DI 613 [ D.3802 ])) -1
     (nil))
;;   UD chains for insn luid 7 uid 2862
;;      reg 613 { d791(bb 292 insn 2859) }
(insn 2862 2861 2863 292 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) generator/utils.c:32 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 2863
;;      reg 31 { }
;;      reg 0 { d26(bb 292 insn 2862) }
(call_insn 2863 2862 2864 292 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 9 uid 2864
;;      reg 0 { d27(bb 292 insn 2863) }
(insn 2864 2863 2866 292 (set (reg/v/f:DI 647 [ bfs_tree ])
        (reg:DI 0 x0)) generator/utils.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 1618)
            (nil))))
;;   UD chains for insn luid 10 uid 2866
;;      reg 647 { d797(bb 292 insn 2864) }
(debug_insn 2866 2864 2867 292 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) generator/utils.c:32 -1
     (nil))
;;   UD chains for insn luid 11 uid 2867
;;      reg 647 { d797(bb 292 insn 2864) }
(insn 2867 2866 2868 292 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 647 [ bfs_tree ])
            (const_int 0 [0]))) generator/utils.c:33 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 12 uid 2868
;;      reg 66 { d775(bb 292 insn 2867) }
(jump_insn 2868 2867 2869 292 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2873)
            (pc))) generator/utils.c:33 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2873)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 647 752 777 1616 1710 1853 1854 1859
;; live  out 	 611 647 752 777 1616 1710
;; rd  out 	(6) 611[790],647[797],752[856],777[864],1616[879],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 777 1710
;; live  gen 	
;; live  kill	
;; rd  in  	(2) 777[864],1710[936]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4336 3754 4335 294 277 "" [1 uses])
(note 4335 4336 3766 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  out 	 777 1710
;; rd  out 	(2) 777[864],1710[936]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	
;; live  kill	
;; rd  in  	(26) 66[753],436[777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4338 3625 4337 295 278 "" [1 uses])
(note 4337 4338 3626 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; rd  out 	(25) 436[777],610[786,787,789],624[794],647[797],715[817,818,819,821,822,825,826,827,828,829,830],746[855],777[864],811[878],1710[936],1861[1013],1869[1018],1870[1019],1871[1020]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	
;; live  kill	
;; rd  in  	(32) 66[742],610[786,787],623[793],624[794],647[797],668[801],708[812],715[817,818,819,825,826,827,828,829],716[831,832,833,834,835,836,837],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4340 3575 4339 296 279 "" [1 uses])
(note 4339 4340 3576 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; rd  out 	(24) 610[786,787],623[793],624[794],647[797],668[801],708[812],715[817,818,819,825,826,827,828,829],720[838],746[855],777[864],811[878],1710[936],1861[1013],1872[1021],1873[1022],1874[1023]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	
;; live  kill	
;; rd  in  	(17) 66[722],623[793],624[794],625[795],626[796],647[797],668[801],672[803],715[816,823,824],745[854],746[855],777[864],811[878],1710[936],1861[1013]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4342 3412 4341 297 280 "" [1 uses])
(note 4341 4342 3416 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; rd  out 	(16) 623[793],624[794],625[795],626[796],647[797],668[801],672[803],715[816,823,824],745[854],746[855],777[864],811[878],1710[936],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; live  gen 	
;; live  kill	
;; rd  in  	(31) 66[701],623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[861],776[863],777[864],782[865],795[866],799[867],800[868],806[871,872,873,874],811[878],1710[936],1719[940],1720[941],1722[942],1724[943],1857[1008],1858[1009],1861[1013]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4344 3174 4343 298 281 "" [1 uses])
(note 4343 4344 3175 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; rd  out 	(25) 623[793],624[794],625[795],626[796],647[797],668[801],672[802],746[855],753[857],754[858],770[861],776[863],777[864],782[865],799[867],800[868],806[871,872,873,874],811[878],1710[936],1857[1008],1858[1009],1861[1013]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 8 ******
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1616)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 2857 is invariant (0), cost 4, depends on 
(plus:DI (reg/f:DI 1616)
    (const_int 112 [0x70]))

Hot cost: 4 (final)
(set (reg/f:DI 1622)
    (plus:DI (reg/f:DI 1616)
        (const_int 112 [0x70])))

Hot cost: 4 (final)
Set in insn 2883 is invariant (1), cost 4, depends on 0
(high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))

Hot cost: 4 (final)
(set (reg/f:DI 1635)
    (high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)))

Hot cost: 4 (final)
Set in insn 2911 is invariant (2), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1635)
    (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))

Hot cost: 4 (final)
(set (reg/f:DI 1634)
    (lo_sum:DI (reg/f:DI 1635)
        (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)))

Hot cost: 4 (final)
Set in insn 2912 is invariant (3), cost 4, depends on 2
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 2913 is invariant (4), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1636)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 2914 is invariant (5), cost 4, depends on 4
Set in insn 2917 is invariant (6), cost 0, depends on 3
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 2918 is invariant (7), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1859)
    (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))

Hot cost: 4 (final)
(set (reg/f:DI 1639)
    (lo_sum:DI (reg/f:DI 1859)
        (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)))

Hot cost: 4 (final)
Set in insn 2924 is invariant (8), cost 4, depends on 
Set in insn 2925 is invariant (9), cost 0, depends on 8
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 2926 is invariant (10), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1641)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 2929 is invariant (11), cost 4, depends on 
(plus:DI (reg/f:DI 1641)
    (const_int 112 [0x70]))

Hot cost: 4 (final)
(set (reg/f:DI 1644)
    (plus:DI (reg/f:DI 1641)
        (const_int 112 [0x70])))

Hot cost: 4 (final)
Set in insn 2931 is invariant (12), cost 4, depends on 11
(const_int -48 [0xffffffffffffffd0])

Hot cost: 4 (final)
(plus:DI (reg/f:DI 64 sfp)
    (const_int -48 [0xffffffffffffffd0]))

Hot cost: 8 (final)
(set (reg/f:DI 1646)
    (plus:DI (reg/f:DI 64 sfp)
        (const_int -48 [0xffffffffffffffd0])))

Hot cost: 8 (final)
Set in insn 2933 is invariant (13), cost 8, depends on 
Set in insn 2935 is invariant (14), cost 0, depends on 13
(const_int -40 [0xffffffffffffffd8])

Hot cost: 4 (final)
(plus:DI (reg/f:DI 64 sfp)
    (const_int -40 [0xffffffffffffffd8]))

Hot cost: 8 (final)
(set (reg/f:DI 1647)
    (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8])))

Hot cost: 8 (final)
Set in insn 2940 is invariant (15), cost 8, depends on 
Set in insn 2941 is invariant (16), cost 0, depends on 15
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 2942 is invariant (17), cost 4, depends on 
(mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])

Hot cost: 20 (final)
(set (reg:DF 1655)
    (mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64]))

Hot cost: 20 (final)
Set in insn 2951 is invariant (18), cost 20, depends on 
(high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))

Hot cost: 4 (final)
(set (reg/f:DI 1665)
    (high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)))

Hot cost: 4 (final)
Set in insn 2964 is invariant (19), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1665)
    (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))

Hot cost: 4 (final)
(set (reg/f:DI 1664)
    (lo_sum:DI (reg/f:DI 1665)
        (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)))

Hot cost: 4 (final)
Set in insn 2965 is invariant (20), cost 4, depends on 19
(high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))

Hot cost: 4 (final)
(set (reg/f:DI 1670)
    (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)))

Hot cost: 4 (final)
Set in insn 2976 is invariant (21), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1670)
    (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))

Hot cost: 4 (final)
(set (reg/f:DI 1669)
    (lo_sum:DI (reg/f:DI 1670)
        (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)))

Hot cost: 4 (final)
Set in insn 2977 is invariant (22), cost 4, depends on 21
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 2978 is invariant (23), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1671)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 2979 is invariant (24), cost 4, depends on 23
Set in insn 2981 is invariant (25), cost 0, depends on 22
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 2982 is invariant (26), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))

Hot cost: 4 (final)
(set (reg/f:DI 1680)
    (high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)))

Hot cost: 4 (final)
Set in insn 3008 is invariant (27), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1680)
    (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))

Hot cost: 4 (final)
(set (reg/f:DI 1679)
    (lo_sum:DI (reg/f:DI 1680)
        (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)))

Hot cost: 4 (final)
Set in insn 3009 is invariant (28), cost 4, depends on 27
Set in insn 3014 is invariant (29), cost 0, depends on 28
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 3015 is invariant (30), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1684)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 3022 is invariant (31), cost 4, depends on 
(plus:DI (reg/f:DI 1684)
    (const_int 112 [0x70]))

Hot cost: 4 (final)
(set (reg/f:DI 1687)
    (plus:DI (reg/f:DI 1684)
        (const_int 112 [0x70])))

Hot cost: 4 (final)
Set in insn 3024 is invariant (32), cost 4, depends on 31
(high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1860)
    (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3939 is invariant (33), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1860)
    (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1846)
    (lo_sum:DI (reg/f:DI 1860)
        (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3940 is invariant (34), cost 4, depends on 33
(const_int -999 [0xfffffffffffffc19])

Hot cost: 4 (final)
(set (reg:DI 1848)
    (const_int -999 [0xfffffffffffffc19]))

Hot cost: 4 (final)
Set in insn 3942 is invariant (35), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1849)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 3945 is invariant (36), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))

Hot cost: 4 (final)
(set (reg/f:DI 1821)
    (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)))

Hot cost: 4 (final)
Set in insn 3700 is invariant (37), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1821)
    (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))

Hot cost: 4 (final)
(set (reg/f:DI 1820)
    (lo_sum:DI (reg/f:DI 1821)
        (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)))

Hot cost: 4 (final)
Set in insn 3701 is invariant (38), cost 4, depends on 37
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 3702 is invariant (39), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Hot cost: 4 (final)
(set (reg/f:DI 1822)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Hot cost: 4 (final)
Set in insn 3703 is invariant (40), cost 4, depends on 39
Set in insn 3705 is invariant (41), cost 0, depends on 38
(const_int 1 [0x1])

Hot cost: 4 (final)
Set in insn 3706 is invariant (42), cost 4, depends on 
(high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1860)
    (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3655 is invariant (43), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1860)
    (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1808)
    (lo_sum:DI (reg/f:DI 1860)
        (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3656 is invariant (44), cost 4, depends on 43
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1810)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 3660 is invariant (45), cost 4, depends on 
(high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1860)
    (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3686 is invariant (46), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1860)
    (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))

Hot cost: 4 (final)
(set (reg/f:DI 1814)
    (lo_sum:DI (reg/f:DI 1860)
        (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)))

Hot cost: 4 (final)
Set in insn 3687 is invariant (47), cost 4, depends on 46
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1817)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 3692 is invariant (48), cost 4, depends on 
(const_int -15 [0xfffffffffffffff1])

Cold cost: 4 (final)
(set (reg:SI 1869)
    (const_int -15 [0xfffffffffffffff1]))

Cold cost: 4 (final)
Set in insn 4321 is invariant (49), cost 4, depends on 
(set (reg:SI 1870)
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 4322 is invariant (50), cost 4, depends on 
(const_int -16 [0xfffffffffffffff0])

Cold cost: 4 (final)
(set (reg:SI 1871)
    (const_int -16 [0xfffffffffffffff0]))

Cold cost: 4 (final)
Set in insn 4328 is invariant (51), cost 4, depends on 
(set (reg:SI 1865)
    (reg:SI 1869))

Hot cost: 4 (final)
Set in insn 4349 is invariant (52), cost 4, depends on 49
(set (reg:SI 1866)
    (reg:SI 1870))

Hot cost: 4 (final)
Set in insn 4350 is invariant (53), cost 4, depends on 50
(set (reg:SI 1868)
    (reg:SI 1871))

Hot cost: 4 (final)
Set in insn 4351 is invariant (54), cost 4, depends on 51
(set (reg:SI 1872 [ err ])
    (const_int 0 [0]))

Hot cost: 4 (final)
Set in insn 248 is invariant (55), cost 4, depends on 
(const_int -14 [0xfffffffffffffff2])

Hot cost: 4 (final)
(set (reg:SI 1873 [ err ])
    (const_int -14 [0xfffffffffffffff2]))

Hot cost: 4 (final)
Set in insn 252 is invariant (56), cost 4, depends on 
(const_int 1 [0x1])

Hot cost: 4 (final)
(set (reg:DI 1874)
    (const_int 1 [0x1]))

Hot cost: 4 (final)
Set in insn 3550 is invariant (57), cost 4, depends on 
(set (reg/v:SI 716 [ err ])
    (reg:SI 1872 [ err ]))

Cold cost: 4 (final)
Set in insn 4352 is invariant (58), cost 4, depends on 55
(set (reg/v:SI 716 [ err ])
    (reg:SI 1873 [ err ]))

Cold cost: 4 (final)
Set in insn 4353 is invariant (59), cost 4, depends on 56
(set (reg/v:SI 716 [ err ])
    (reg:SI 1872 [ err ]))

Cold cost: 4 (final)
Set in insn 4354 is invariant (60), cost 4, depends on 55
(set (reg:DI 1798)
    (reg:DI 1874))

Cold cost: 4 (final)
Set in insn 4355 is invariant (61), cost 4, depends on 57
(set (reg:DI 1797)
    (reg:DI 1874))

Cold cost: 4 (final)
Set in insn 4356 is invariant (62), cost 4, depends on 57
(const_int 0 [0])

Hot cost: 0 (final)
Set in insn 3458 is invariant (63), cost 0, depends on 
(mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128])

Hot cost: 8 (final)
(set (reg:V2DI 1857)
    (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128]))

Hot cost: 8 (final)
Set in insn 4201 is invariant (64), cost 8, depends on 
(mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128])

Hot cost: 8 (final)
(set (reg:V2DI 1858)
    (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128]))

Hot cost: 8 (final)
Set in insn 4202 is invariant (65), cost 8, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Hot cost: 4 (final)
(set (reg/f:DI 1837)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Hot cost: 4 (final)
Set in insn 3751 is invariant (66), cost 4, depends on 
Invariant 10 is equivalent to invariant 7.
Invariant 11 is equivalent to invariant 0.
Invariant 12 is equivalent to invariant 1.
Invariant 17 is equivalent to invariant 7.
Invariant 23 is equivalent to invariant 4.
Invariant 24 is equivalent to invariant 5.
Invariant 26 is equivalent to invariant 7.
Invariant 30 is equivalent to invariant 7.
Invariant 31 is equivalent to invariant 0.
Invariant 32 is equivalent to invariant 1.
Invariant 36 is equivalent to invariant 0.
Invariant 37 is equivalent to invariant 21.
Invariant 38 is equivalent to invariant 22.
Invariant 39 is equivalent to invariant 4.
Invariant 40 is equivalent to invariant 5.
Invariant 41 is equivalent to invariant 25.
Invariant 42 is equivalent to invariant 7.
Invariant 43 is equivalent to invariant 33.
Invariant 44 is equivalent to invariant 34.
Invariant 45 is equivalent to invariant 0.
Invariant 46 is equivalent to invariant 33.
Invariant 47 is equivalent to invariant 34.
Invariant 48 is equivalent to invariant 0.
Invariant 55 is equivalent to invariant 50.
Invariant 58 is equivalent to invariant 53.
Invariant 60 is equivalent to invariant 53.
Invariant 62 is equivalent to invariant 61.
Invariant 63 is equivalent to invariant 50.
Decided to move invariant 18 -- gain 20
Decided to move invariant 1 -- gain 8
Decided to move dependent invariant 0
Decided to move invariant 3 -- gain 8
Decided to move dependent invariant 2
Invariant 0 moved without introducing a new temporary register
changing bb of uid 2857
  from 292 to 180
deferring rescan insn with uid = 2883.
deferring rescan insn with uid = 2884.
deferring rescan insn with uid = 4357.
changing bb of uid 2883
  from 182 to 180
deferring rescan insn with uid = 2911.
deferring rescan insn with uid = 2912.
deferring rescan insn with uid = 4358.
changing bb of uid 2911
  from 185 to 180
deferring rescan insn with uid = 2912.
deferring rescan insn with uid = 2917.
deferring rescan insn with uid = 4359.
changing bb of uid 2912
  from 185 to 180
deferring rescan insn with uid = 2998.
deferring rescan insn with uid = 2970.
deferring rescan insn with uid = 2931.
deferring rescan insn with uid = 4360.
deferring deletion of insn with uid = 2929.
deferring rescan insn with uid = 2932.
deferring rescan insn with uid = 4361.
deferring deletion of insn with uid = 2931.
deferring rescan insn with uid = 2951.
deferring rescan insn with uid = 2952.
deferring rescan insn with uid = 4362.
changing bb of uid 2951
  from 186 to 180
deferring rescan insn with uid = 3049.
deferring rescan insn with uid = 3046.
deferring rescan insn with uid = 3024.
deferring rescan insn with uid = 4363.
deferring deletion of insn with uid = 3022.
deferring rescan insn with uid = 3025.
deferring rescan insn with uid = 4364.
deferring deletion of insn with uid = 3024.
deferring rescan insn with uid = 3946.
deferring rescan insn with uid = 4365.
deferring deletion of insn with uid = 3945.
deferring rescan insn with uid = 3661.
deferring rescan insn with uid = 4366.
deferring deletion of insn with uid = 3660.
deferring rescan insn with uid = 3693.
deferring rescan insn with uid = 4367.
deferring deletion of insn with uid = 3692.
*****starting processing of loop 9 ******
starting the processing of deferred insns
rescanning insn with uid = 2883.
rescanning insn with uid = 2884.
rescanning insn with uid = 2911.
rescanning insn with uid = 2912.
rescanning insn with uid = 2917.
rescanning insn with uid = 2932.
rescanning insn with uid = 2951.
rescanning insn with uid = 2952.
rescanning insn with uid = 2970.
rescanning insn with uid = 2998.
rescanning insn with uid = 3025.
rescanning insn with uid = 3046.
rescanning insn with uid = 3049.
rescanning insn with uid = 3661.
rescanning insn with uid = 3693.
rescanning insn with uid = 3946.
rescanning insn with uid = 4357.
rescanning insn with uid = 4358.
rescanning insn with uid = 4359.
rescanning insn with uid = 4360.
rescanning insn with uid = 4361.
rescanning insn with uid = 4362.
rescanning insn with uid = 4363.
rescanning insn with uid = 4364.
rescanning insn with uid = 4365.
rescanning insn with uid = 4366.
rescanning insn with uid = 4367.
ending the processing of deferred insns
setting blocks to analyze 151, 154, 157, 159, 160, 161, 162, 163, 164
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 13 (0.043)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 18 ( 0.06)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 19 (0.063)


starting region dump


main

Dataflow summary:
def_info->table_size = 54, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d,3u} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d,2u} r1480={1d,1u,1e} r1481={1d,8u} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d,2u} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d,1u} r1536={1d,1u} r1537={1d,1u} r1538={1d,1u} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d,1u} r1548={1d,1u} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} 
;;    total ref usage 11599{7861d,3667u,71e} in 2710{2575 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6
;;  reg->defs[] map:	66[0,6] 287[7,7] 596[8,8] 599[9,9] 638[10,10] 640[11,11] 643[12,12] 646[13,13] 775[14,14] 785[15,15] 788[16,16] 789[17,17] 790[18,18] 791[19,19] 1465[20,20] 1476[21,21] 1477[22,22] 1480[23,23] 1481[24,24] 1482[25,25] 1495[26,26] 1496[27,27] 1497[28,28] 1500[29,29] 1502[30,30] 1504[31,31] 1508[32,32] 1510[33,33] 1523[34,34] 1525[35,35] 1528[36,36] 1530[37,37] 1532[38,38] 1533[39,39] 1534[40,40] 1535[41,41] 1536[42,42] 1537[43,43] 1538[44,44] 1539[45,45] 1540[46,46] 1541[47,47] 1542[48,48] 1543[49,49] 1544[50,50] 1545[51,51] 1548[52,52] 1549[53,53] 
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u2277(29){ }u2278(31){ }u2279(64){ }u2280(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 775
;; lr  def 	 66 [cc] 1465
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc] 1465
;; live  kill	
;; rd  in  	(7) 287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;; rd  gen 	(2) 66[0],1465[20]
;; rd  kill	(8) 66[0,1,2,3,4,5,6],1465[20]
;;  UD chains for artificial uses at top

(code_label 2641 221 2445 151 118 "" [1 uses])
(note 2445 2641 2446 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2446
(debug_insn 2446 2445 2447 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) graph500.c:156 -1
     (nil))
;;   UD chains for insn luid 1 uid 2447
(debug_insn 2447 2446 2448 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
;;   UD chains for insn luid 2 uid 2448
(debug_insn 2448 2447 2449 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
;;   UD chains for insn luid 3 uid 2449
;;      reg 775 { d14(bb 162 insn 226) }
(debug_insn 2449 2448 2450 151 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 4 uid 2450
;;      reg 775 { d14(bb 162 insn 226) }
(debug_insn 2450 2449 2451 151 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
;;   UD chains for insn luid 5 uid 2451
(debug_insn 2451 2450 2452 151 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 6 uid 2452
(insn 2452 2451 2453 151 (set (reg:DI 1465)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 2453
;;      reg 775 { d14(bb 162 insn 226) }
;;      reg 1465 { d20(bb 151 insn 2452) }
;;   eq_note reg 775 { d14(bb 162 insn 226) }
(insn 2453 2452 2454 151 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1465))) generator/mod_arith_64bit.h:27 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
;;   UD chains for insn luid 8 uid 2454
;;      reg 66 { d0(bb 151 insn 2453) }
(jump_insn 2454 2453 2455 151 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2478)
            (pc))) generator/mod_arith_64bit.h:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2478)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1465 1853
;; live  out 	 287 596 775 785 788 789 790 1465
;; rd  out 	(8) 287[7],596[8],775[14],785[15],788[16],789[17],790[18],1465[20]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u2315(29){ }u2316(31){ }u2317(64){ }u2318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1465 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 775 790 1465
;; lr  def 	 66 [cc] 640 1476 1477 1480 1481 1482
;; live  in  	 287 596 775 785 788 789 790 1465
;; live  gen 	 66 [cc] 640 1476 1477 1480 1481 1482
;; live  kill	
;; rd  in  	(8) 287[7],596[8],775[14],785[15],788[16],789[17],790[18],1465[20]
;; rd  gen 	(7) 66[1],640[11],1476[21],1477[22],1480[23],1481[24],1482[25]
;; rd  kill	(13) 66[0,1,2,3,4,5,6],640[11],1476[21],1477[22],1480[23],1481[24],1482[25]
;;  UD chains for artificial uses at top

(code_label 2478 2473 2479 154 111 "" [1 uses])
(note 2479 2478 2480 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2480
(insn 2480 2479 2481 154 (set (reg:DI 1477)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2481
;;      reg 775 { d14(bb 162 insn 226) }
;;      reg 1477 { d22(bb 154 insn 2480) }
;;   eq_note reg 775 { d14(bb 162 insn 226) }
(insn 2481 2480 2482 154 (set (reg:DI 1476 [ D.3802 ])
        (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1477))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (const_int 107374182 [0x6666666]))
        (nil)))
;;   UD chains for insn luid 2 uid 2482
(insn 2482 2481 2483 154 (set (reg:DI 1481)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 2483
;;      reg 1476 { d21(bb 154 insn 2481) }
;;      reg 1481 { d24(bb 154 insn 2482) }
;;   eq_note reg 1476 { d21(bb 154 insn 2481) }
(insn 2483 2482 2485 154 (set (reg:DI 1480)
        (udiv:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1476 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
;;   UD chains for insn luid 4 uid 2485
;;      reg 1480 { d23(bb 154 insn 2483) }
;;      reg 1481 { d24(bb 154 insn 2482) }
;;   eq_note reg 1480 { d23(bb 154 insn 2483) }
(insn 2485 2483 2486 154 (set (reg:DI 1482)
        (mult:DI (reg:DI 1480)
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1480)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1480)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 5 uid 2486
;;      reg 1476 { d21(bb 154 insn 2481) }
;;      reg 1482 { d25(bb 154 insn 2485) }
(insn 2486 2485 2487 154 (set (reg:DI 640 [ D.3802 ])
        (minus:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1482))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1482)
        (expr_list:REG_DEAD (reg:DI 1476 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 6 uid 2487
(debug_insn 2487 2486 2488 154 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 7 uid 2488
(debug_insn 2488 2487 2489 154 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 8 uid 2489
(debug_insn 2489 2488 2490 154 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 9 uid 2490
(debug_insn 2490 2489 2491 154 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 10 uid 2491
;;      reg 790 { d18(bb 162 insn 224) }
(debug_insn 2491 2490 2492 154 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 11 uid 2492
;;      reg 640 { d11(bb 154 insn 2486) }
(debug_insn 2492 2491 2493 154 (var_location:DI sum (reg:DI 640 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 12 uid 2493
;;      reg 790 { d18(bb 162 insn 224) }
(debug_insn 2493 2492 2494 154 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 13 uid 2494
(debug_insn 2494 2493 2496 154 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 14 uid 2496
;;      reg 790 { d18(bb 162 insn 224) }
;;      reg 1465 { d20(bb 151 insn 2452) }
;;   eq_note reg 790 { d18(bb 162 insn 224) }
(insn 2496 2494 2497 154 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1465))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
;;   UD chains for insn luid 15 uid 2497
;;      reg 66 { d1(bb 154 insn 2496) }
(jump_insn 2497 2496 2498 154 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2521)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2521)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 640 775 785 788 789 790 1465 1477 1481 1853
;; live  out 	 287 596 640 775 785 788 789 790 1465 1477 1481
;; rd  out 	(11) 287[7],596[8],640[11],775[14],785[15],788[16],789[17],790[18],1465[20],1477[22],1481[24]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u2364(29){ }u2365(31){ }u2366(64){ }u2367(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 640 775 785 788 789 790 1465 1477 1481 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 640 789 790 1465 1477 1481
;; lr  def 	 66 [cc] 638 643 1495 1496 1497 1500 1502 1504 1508 1510
;; live  in  	 287 596 640 775 785 788 789 790 1465 1477 1481
;; live  gen 	 66 [cc] 638 643 1495 1496 1497 1500 1502 1504 1508 1510
;; live  kill	
;; rd  in  	(11) 287[7],596[8],640[11],775[14],785[15],788[16],789[17],790[18],1465[20],1477[22],1481[24]
;; rd  gen 	(11) 66[2],638[10],643[12],1495[26],1496[27],1497[28],1500[29],1502[30],1504[31],1508[32],1510[33]
;; rd  kill	(17) 66[0,1,2,3,4,5,6],638[10],643[12],1495[26],1496[27],1497[28],1500[29],1502[30],1504[31],1508[32],1510[33]
;;  UD chains for artificial uses at top

(code_label 2521 2516 2522 157 113 "" [1 uses])
(note 2522 2521 2523 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2523
(insn 2523 2522 2524 157 (set (reg:DI 1496)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2524
;;      reg 790 { d18(bb 162 insn 224) }
;;      reg 1496 { d27(bb 157 insn 2523) }
;;   eq_note reg 790 { d18(bb 162 insn 224) }
(insn 2524 2523 2525 157 (set (reg:DI 1495 [ D.3802 ])
        (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1496))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
                (const_int 104480 [0x19820]))
            (nil))))
;;   UD chains for insn luid 2 uid 2525
;;      reg 640 { d11(bb 154 insn 2486) }
;;      reg 1495 { d26(bb 157 insn 2524) }
(insn 2525 2524 2527 157 (set (reg:DI 1497 [ D.3802 ])
        (plus:DI (reg:DI 1495 [ D.3802 ])
            (reg:DI 640 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1495 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 640 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 3 uid 2527
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1497 { d28(bb 157 insn 2525) }
;;   eq_note reg 1497 { d28(bb 157 insn 2525) }
(insn 2527 2525 2529 157 (set (reg:DI 1500)
        (udiv:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:36 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1497 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
;;   UD chains for insn luid 4 uid 2529
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1500 { d29(bb 157 insn 2527) }
;;   eq_note reg 1500 { d29(bb 157 insn 2527) }
(insn 2529 2527 2530 157 (set (reg:DI 1502)
        (mult:DI (reg:DI 1500)
            (reg:DI 1481))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1500)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1500)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 5 uid 2530
;;      reg 1497 { d28(bb 157 insn 2525) }
;;      reg 1502 { d30(bb 157 insn 2529) }
(insn 2530 2529 2531 157 (set (reg:DI 643 [ D.3802 ])
        (minus:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1502))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1502)
        (expr_list:REG_DEAD (reg:DI 1497 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 6 uid 2531
(debug_insn 2531 2530 2532 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 7 uid 2532
(debug_insn 2532 2531 2533 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 8 uid 2533
(debug_insn 2533 2532 2534 157 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 9 uid 2534
(debug_insn 2534 2533 2535 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 10 uid 2535
(debug_insn 2535 2534 2536 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 11 uid 2536
(debug_insn 2536 2535 2537 157 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 12 uid 2537
(debug_insn 2537 2536 2538 157 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 13 uid 2538
(debug_insn 2538 2537 2539 157 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:274 -1
     (nil))
;;   UD chains for insn luid 14 uid 2539
(debug_insn 2539 2538 2540 157 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
;;   UD chains for insn luid 15 uid 2540
(debug_insn 2540 2539 2541 157 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
;;   UD chains for insn luid 16 uid 2541
;;      reg 643 { d12(bb 157 insn 2530) }
(debug_insn 2541 2540 2542 157 (var_location:DI a (reg:DI 643 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 2542
;;      reg 643 { d12(bb 157 insn 2530) }
(debug_insn 2542 2541 2543 157 (var_location:DI a (reg:DI 643 [ D.3802 ])) -1
     (nil))
;;   UD chains for insn luid 18 uid 2543
(debug_insn 2543 2542 2545 157 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 19 uid 2545
;;      reg 643 { d12(bb 157 insn 2530) }
;;      reg 1477 { d22(bb 154 insn 2480) }
;;   eq_note reg 643 { d12(bb 157 insn 2530) }
(insn 2545 2543 2547 157 (set (reg:DI 1504 [ D.3802 ])
        (mult:DI (reg:DI 643 [ D.3802 ])
            (reg:DI 1477))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1477)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 643 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 20 uid 2547
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1504 { d31(bb 157 insn 2545) }
;;   eq_note reg 1504 { d31(bb 157 insn 2545) }
(insn 2547 2545 2549 157 (set (reg:DI 1508)
        (udiv:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1504 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
;;   UD chains for insn luid 21 uid 2549
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1508 { d32(bb 157 insn 2547) }
;;   eq_note reg 1508 { d32(bb 157 insn 2547) }
(insn 2549 2547 2550 157 (set (reg:DI 1510)
        (mult:DI (reg:DI 1508)
            (reg:DI 1481))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1508)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1508)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 22 uid 2550
;;      reg 1504 { d31(bb 157 insn 2545) }
;;      reg 1510 { d33(bb 157 insn 2549) }
(insn 2550 2549 2551 157 (set (reg:DI 638 [ D.3802 ])
        (minus:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1510))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1510)
        (expr_list:REG_DEAD (reg:DI 1504 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 23 uid 2551
(debug_insn 2551 2550 2552 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 24 uid 2552
(debug_insn 2552 2551 2553 157 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 25 uid 2553
(debug_insn 2553 2552 2554 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 26 uid 2554
(debug_insn 2554 2553 2555 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 27 uid 2555
;;      reg 789 { d17(bb 162 insn 222) }
(debug_insn 2555 2554 2556 157 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 28 uid 2556
;;      reg 638 { d10(bb 157 insn 2550) }
(debug_insn 2556 2555 2557 157 (var_location:DI sum (reg:DI 638 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 29 uid 2557
;;      reg 789 { d17(bb 162 insn 222) }
(debug_insn 2557 2556 2558 157 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 30 uid 2558
(debug_insn 2558 2557 2560 157 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 31 uid 2560
;;      reg 789 { d17(bb 162 insn 222) }
;;      reg 1465 { d20(bb 151 insn 2452) }
;;   eq_note reg 789 { d17(bb 162 insn 222) }
(insn 2560 2558 2561 157 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1465))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1465)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 32 uid 2561
;;      reg 66 { d2(bb 157 insn 2560) }
(jump_insn 2561 2560 2562 157 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2580)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2580)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 638 643 775 785 788 789 1481 1496 1853
;; live  out 	 287 596 638 643 775 785 788 789 1481 1496
;; rd  out 	(10) 287[7],596[8],638[10],643[12],775[14],785[15],788[16],789[17],1481[24],1496[27]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u2423(29){ }u2424(31){ }u2425(64){ }u2426(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 638 643 775 785 788 789 1481 1496 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 638 788 789 1481 1496
;; lr  def 	 66 [cc] 646 1523 1525 1528 1530 1532
;; live  in  	 287 596 638 643 775 785 788 789 1481 1496
;; live  gen 	 66 [cc] 646 1523 1525 1528 1530 1532
;; live  kill	
;; rd  in  	(10) 287[7],596[8],638[10],643[12],775[14],785[15],788[16],789[17],1481[24],1496[27]
;; rd  gen 	(7) 66[3],646[13],1523[34],1525[35],1528[36],1530[37],1532[38]
;; rd  kill	(13) 66[0,1,2,3,4,5,6],646[13],1523[34],1525[35],1528[36],1530[37],1532[38]
;;  UD chains for artificial uses at top

(code_label 2580 2577 2581 159 115 "" [1 uses])
(note 2581 2580 2583 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2583
;;      reg 789 { d17(bb 162 insn 222) }
;;      reg 1496 { d27(bb 157 insn 2523) }
;;   eq_note reg 789 { d17(bb 162 insn 222) }
(insn 2583 2581 2584 159 (set (reg:DI 1523 [ D.3802 ])
        (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1496))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1496)
        (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 1 uid 2584
;;      reg 638 { d10(bb 157 insn 2550) }
;;      reg 1523 { d34(bb 159 insn 2583) }
(insn 2584 2583 2586 159 (set (reg:DI 1525 [ D.3802 ])
        (plus:DI (reg:DI 1523 [ D.3802 ])
            (reg:DI 638 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1523 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 638 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 2 uid 2586
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1525 { d35(bb 159 insn 2584) }
;;   eq_note reg 1525 { d35(bb 159 insn 2584) }
(insn 2586 2584 2588 159 (set (reg:DI 1528)
        (udiv:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1481))) generator/mod_arith_64bit.h:36 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1525 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
;;   UD chains for insn luid 3 uid 2588
;;      reg 1481 { d24(bb 154 insn 2482) }
;;      reg 1528 { d36(bb 159 insn 2586) }
;;   eq_note reg 1528 { d36(bb 159 insn 2586) }
(insn 2588 2586 2589 159 (set (reg:DI 1530)
        (mult:DI (reg:DI 1528)
            (reg:DI 1481))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1528)
        (expr_list:REG_DEAD (reg:DI 1481)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1528)
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 4 uid 2589
;;      reg 1525 { d35(bb 159 insn 2584) }
;;      reg 1530 { d37(bb 159 insn 2588) }
(insn 2589 2588 2590 159 (set (reg:DI 646 [ D.3802 ])
        (minus:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1530))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1530)
        (expr_list:REG_DEAD (reg:DI 1525 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 5 uid 2590
(debug_insn 2590 2589 2591 159 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 6 uid 2591
(debug_insn 2591 2590 2592 159 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 7 uid 2592
(debug_insn 2592 2591 2593 159 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 8 uid 2593
(debug_insn 2593 2592 2594 159 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 9 uid 2594
(debug_insn 2594 2593 2595 159 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 10 uid 2595
(debug_insn 2595 2594 2596 159 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 11 uid 2596
(debug_insn 2596 2595 2597 159 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 12 uid 2597
(debug_insn 2597 2596 2598 159 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:275 -1
     (nil))
;;   UD chains for insn luid 13 uid 2598
(debug_insn 2598 2597 2599 159 (var_location:DI state (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
;;   UD chains for insn luid 14 uid 2599
(debug_insn 2599 2598 2600 159 (var_location:DF R (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
;;   UD chains for insn luid 15 uid 2600
;;      reg 291 { }
;;      reg 788 { d16(bb 162 insn 2631) }
(insn 2600 2599 2601 159 (set (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 788 [ ivtmp.101 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B]+0 S4 A32])) graph500.c:157 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 16 uid 2601
;;      reg 1532 { d38(bb 159 insn 2600) }
(insn 2601 2600 2602 159 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
            (const_int 0 [0]))) graph500.c:157 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
        (nil)))
;;   UD chains for insn luid 17 uid 2602
;;      reg 66 { d3(bb 159 insn 2601) }
(jump_insn 2602 2601 2603 159 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2629)
            (pc))) graph500.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2629)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788
;; rd  out 	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u2444(29){ }u2445(31){ }u2446(64){ }u2447(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 596 600 643 646 788
;; lr  def 	 66 [cc] 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 66 [cc] 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544
;; live  kill	
;; rd  in  	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;; rd  gen 	(13) 66[4],1533[39],1534[40],1535[41],1536[42],1537[43],1538[44],1539[45],1540[46],1541[47],1542[48],1543[49],1544[50]
;; rd  kill	(19) 66[0,1,2,3,4,5,6],1533[39],1534[40],1535[41],1536[42],1537[43],1538[44],1539[45],1540[46],1541[47],1542[48],1543[49],1544[50]
;;  UD chains for artificial uses at top

(note 2603 2602 2604 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2604
;;      reg 643 { d12(bb 157 insn 2530) }
(insn 2604 2603 2605 160 (set (reg:DF 1533 [ D.3804 ])
        (float:DF (reg:DI 643 [ D.3802 ]))) graph500.c:157 798 {floatdidf2}
     (nil))
;;   UD chains for insn luid 1 uid 2605
(insn 2605 2604 2606 160 (set (reg:DF 1535)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])) graph500.c:157 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 4.6566128752457969230960088680149056017398834228515625e-10 [0x0.80000001p-30])
        (nil)))
;;   UD chains for insn luid 2 uid 2606
;;      reg 1533 { d39(bb 160 insn 2604) }
;;      reg 1535 { d41(bb 160 insn 2605) }
(insn 2606 2605 2607 160 (set (reg:DF 1534 [ D.3804 ])
        (mult:DF (reg:DF 1533 [ D.3804 ])
            (reg:DF 1535))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1535)
        (expr_list:REG_DEAD (reg:DF 1533 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 3 uid 2607
;;      reg 646 { d13(bb 159 insn 2589) }
(insn 2607 2606 2608 160 (set (reg:DF 1536 [ D.3804 ])
        (float:DF (reg:DI 646 [ D.3802 ]))) graph500.c:157 798 {floatdidf2}
     (nil))
;;   UD chains for insn luid 4 uid 2608
(insn 2608 2607 2609 160 (set (reg:DF 1538)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])) graph500.c:157 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 2.168404346990492785380695823593908549975495247963408e-19 [0x0.80000002p-61])
        (nil)))
;;   UD chains for insn luid 5 uid 2609
;;      reg 1536 { d42(bb 160 insn 2607) }
;;      reg 1538 { d44(bb 160 insn 2608) }
(insn 2609 2608 2610 160 (set (reg:DF 1537 [ D.3804 ])
        (mult:DF (reg:DF 1536 [ D.3804 ])
            (reg:DF 1538))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1538)
        (expr_list:REG_DEAD (reg:DF 1536 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 6 uid 2610
;;      reg 1534 { d40(bb 160 insn 2606) }
;;      reg 1537 { d43(bb 160 insn 2609) }
(insn 2610 2609 2611 160 (set (reg:DF 1539 [ D.3804 ])
        (plus:DF (reg:DF 1534 [ D.3804 ])
            (reg:DF 1537 [ D.3804 ]))) graph500.c:157 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1537 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1534 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 7 uid 2611
;;      reg 572 { }
;;      reg 788 { d16(bb 162 insn 2631) }
(insn 2611 2610 2612 160 (set (reg:DI 1540 [ D.3810 ])
        (minus:DI (reg:DI 572 [ D.3798 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:157 264 {subdi3}
     (nil))
;;   UD chains for insn luid 8 uid 2612
;;      reg 1540 { d46(bb 160 insn 2611) }
(insn 2612 2611 2613 160 (set (reg:DF 1541 [ D.3804 ])
        (float:DF (reg:DI 1540 [ D.3810 ]))) graph500.c:157 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1540 [ D.3810 ])
        (nil)))
;;   UD chains for insn luid 9 uid 2613
;;      reg 1539 { d45(bb 160 insn 2610) }
;;      reg 1541 { d47(bb 160 insn 2612) }
(insn 2613 2612 2614 160 (set (reg:DF 1542 [ D.3804 ])
        (mult:DF (reg:DF 1539 [ D.3804 ])
            (reg:DF 1541 [ D.3804 ]))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1541 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1539 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 10 uid 2614
;;      reg 596 { d8(bb 161 insn 218) }
;;      reg 600 { }
(insn 2614 2613 2615 160 (set (reg:SI 1543 [ D.3797 ])
        (minus:SI (reg:SI 600 [ D.3797 ])
            (reg/v:SI 596 [ m ]))) graph500.c:157 262 {subsi3}
     (nil))
;;   UD chains for insn luid 11 uid 2615
;;      reg 1543 { d49(bb 160 insn 2614) }
(insn 2615 2614 2616 160 (set (reg:DF 1544 [ D.3804 ])
        (float:DF (reg:SI 1543 [ D.3797 ]))) graph500.c:157 802 {floatsidf2}
     (expr_list:REG_DEAD (reg:SI 1543 [ D.3797 ])
        (nil)))
;;   UD chains for insn luid 12 uid 2616
;;      reg 1542 { d48(bb 160 insn 2613) }
;;      reg 1544 { d50(bb 160 insn 2615) }
(insn 2616 2615 2617 160 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1542 [ D.3804 ])
            (reg:DF 1544 [ D.3804 ]))) graph500.c:157 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1544 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1542 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 13 uid 2617
;;      reg 66 { d4(bb 160 insn 2616) }
(jump_insn 2617 2616 2618 160 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 2629)
            (pc))) graph500.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2629)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788
;; rd  out 	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u2467(29){ }u2468(31){ }u2469(64){ }u2470(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596 788 1853
;; lr  def 	 596 599 1545 1548 1549
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 596 599 1545 1548 1549
;; live  kill	
;; rd  in  	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;; rd  gen 	(5) 596[8],599[9],1545[51],1548[52],1549[53]
;; rd  kill	(5) 596[8],599[9],1545[51],1548[52],1549[53]
;;  UD chains for artificial uses at top

(note 2618 2617 2619 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2619
;;      reg 596 { d8(bb 161 insn 218) }
(insn 2619 2618 2620 161 (set (reg/v:SI 599 [ m ])
        (plus:SI (reg/v:SI 596 [ m ])
            (const_int 1 [0x1]))) graph500.c:158 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2620
;;      reg 599 { d9(bb 161 insn 2619) }
(debug_insn 2620 2619 2621 161 (var_location:SI m (reg/v:SI 599 [ m ])) graph500.c:158 -1
     (nil))
;;   UD chains for insn luid 2 uid 2621
;;      reg 788 { d16(bb 162 insn 2631) }
(debug_insn 2621 2620 2622 161 (var_location:DI D#45 (plus:DI (reg:DI 788 [ ivtmp.101 ])
        (const_int 1 [0x1]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 2622
(debug_insn 2622 2621 2624 161 (var_location:DI t (debug_expr:DI D#45)) graph500.c:158 -1
     (nil))
;;   UD chains for insn luid 4 uid 2624
;;      reg 1853 { }
(insn 2624 2622 2626 161 (set (reg/f:DI 1545)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 5 uid 2626
;;      reg 1545 { d51(bb 161 insn 2624) }
(insn 2626 2624 2627 161 (set (reg/f:DI 1548)
        (plus:DI (reg/f:DI 1545)
            (const_int 112 [0x70]))) graph500.c:158 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1545)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70])))
            (nil))))
;;   UD chains for insn luid 6 uid 2627
;;      reg 596 { d8(bb 161 insn 218) }
(insn 2627 2626 2628 161 (set (reg:DI 1549 [ m ])
        (sign_extend:DI (reg/v:SI 596 [ m ]))) graph500.c:158 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 596 [ m ])
        (nil)))
;;   UD chains for insn luid 7 uid 2628
;;      reg 788 { d16(bb 162 insn 2631) }
;;      reg 1548 { d52(bb 161 insn 2626) }
;;      reg 1549 { d53(bb 161 insn 2627) }
(insn 2628 2627 218 161 (set (mem:DI (plus:DI (mult:DI (reg:DI 1549 [ m ])
                    (const_int 8 [0x8]))
                (reg/f:DI 1548)) [4 bfs_root S8 A64])
        (reg:DI 788 [ ivtmp.101 ])) graph500.c:158 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1549 [ m ])
        (expr_list:REG_DEAD (reg/f:DI 1548)
            (nil))))
;;   UD chains for insn luid 8 uid 218
;;      reg 599 { d9(bb 161 insn 2619) }
(insn 218 2628 2629 161 (set (reg/v:SI 596 [ m ])
        (reg/v:SI 599 [ m ])) graph500.c:158 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 599 [ m ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788
;; rd  out 	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u2481(29){ }u2482(31){ }u2483(64){ }u2484(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 643 646 775 785 788
;; lr  def 	 287 775 785 788 789 790 791
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 287 775 785 788 789 790 791
;; live  kill	
;; rd  in  	(7) 287[7],596[8],643[12],646[13],775[14],785[15],788[16]
;; rd  gen 	(7) 287[7],775[14],785[15],788[16],789[17],790[18],791[19]
;; rd  kill	(7) 287[7],775[14],785[15],788[16],789[17],790[18],791[19]
;;  UD chains for artificial uses at top

(code_label 2629 218 2630 162 116 "" [2 uses])
(note 2630 2629 2631 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2631
;;      reg 788 { d16(bb 162 insn 2631) }
(insn 2631 2630 2632 162 (set (reg:DI 788 [ ivtmp.101 ])
        (plus:DI (reg:DI 788 [ ivtmp.101 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2632
(insn 2632 2631 222 162 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (const_int 1 [0x1])) 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 222
;;      reg 785 { d15(bb 162 insn 223) }
(insn 222 2632 223 162 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (nil)))
;;   UD chains for insn luid 3 uid 223
;;      reg 643 { d12(bb 157 insn 2530) }
(insn 223 222 224 162 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 643 [ D.3802 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 643 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 224
;;      reg 287 { d7(bb 162 insn 225) }
(insn 224 223 225 162 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
;;   UD chains for insn luid 5 uid 225
;;      reg 775 { d14(bb 162 insn 226) }
(insn 225 224 226 162 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (nil)))
;;   UD chains for insn luid 6 uid 226
;;      reg 646 { d13(bb 159 insn 2589) }
(insn 226 225 2633 162 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (reg:DI 646 [ D.3802 ])) generator/splittable_mrg.c:177 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 646 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790
;; rd  out 	(7) 287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u2491(29){ }u2492(31){ }u2493(64){ }u2494(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596 600
;; lr  def 	 66 [cc]
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(7) 287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;; rd  gen 	(1) 66[5]
;; rd  kill	(7) 66[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top

(code_label 2633 226 2634 163 110 "" [0 uses])
(note 2634 2633 2636 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2636
;;      reg 788 { d16(bb 162 insn 2631) }
(debug_insn 2636 2634 2637 163 (var_location:DI t (reg:DI 788 [ ivtmp.101 ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 2637
;;      reg 596 { d8(bb 161 insn 218) }
(debug_insn 2637 2636 2638 163 (var_location:SI m (reg/v:SI 596 [ m ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 2638
;;      reg 596 { d8(bb 161 insn 218) }
;;      reg 600 { }
(insn 2638 2637 2639 163 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (reg:SI 600 [ D.3797 ]))) graph500.c:155 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 3 uid 2639
;;      reg 66 { d5(bb 163 insn 2638) }
(jump_insn 2639 2638 2640 163 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2704)
            (pc))) graph500.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 2704)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790
;; rd  out 	(7) 287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u2501(29){ }u2502(31){ }u2503(64){ }u2504(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 788
;; lr  def 	 66 [cc]
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(8) 66[5],287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;; rd  gen 	(1) 66[6]
;; rd  kill	(7) 66[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top

(note 2640 2639 2642 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2642
;;      reg 572 { }
;;      reg 788 { d16(bb 162 insn 2631) }
(insn 2642 2640 2643 164 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:155 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 2643
;;      reg 66 { d6(bb 164 insn 2642) }
(jump_insn 2643 2642 2644 164 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2641)
            (pc))) graph500.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 2641)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790
;; rd  out 	(7) 287[7],596[8],775[14],785[15],788[16],789[17],790[18]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 9 ******
(const_int 2147483646 [0x7ffffffe])

Cold cost: 4 (final)
(set (reg:DI 1465)
    (const_int 2147483646 [0x7ffffffe]))

Cold cost: 4 (final)
Set in insn 2452 is invariant (0), cost 4, depends on 
(const_int 107374182 [0x6666666])

Cold cost: 8 (final)
(set (reg:DI 1477)
    (const_int 107374182 [0x6666666]))

Cold cost: 8 (final)
Set in insn 2480 is invariant (1), cost 8, depends on 
(const_int 2147483647 [0x7fffffff])

Cold cost: 4 (final)
(set (reg:DI 1481)
    (const_int 2147483647 [0x7fffffff]))

Cold cost: 4 (final)
Set in insn 2482 is invariant (2), cost 4, depends on 
(const_int 104480 [0x19820])

Cold cost: 8 (final)
(set (reg:DI 1496)
    (const_int 104480 [0x19820]))

Cold cost: 8 (final)
Set in insn 2523 is invariant (3), cost 8, depends on 
(mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(set (reg:DF 1535)
    (mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64]))

Cold cost: 4 (final)
Set in insn 2605 is invariant (4), cost 4, depends on 
(mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])

Cold cost: 4 (final)
(set (reg:DF 1538)
    (mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64]))

Cold cost: 4 (final)
Set in insn 2608 is invariant (5), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1853)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1545)
    (lo_sum:DI (reg/f:DI 1853)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 2624 is invariant (6), cost 4, depends on 
(plus:DI (reg/f:DI 1545)
    (const_int 112 [0x70]))

Cold cost: 4 (final)
(set (reg/f:DI 1548)
    (plus:DI (reg/f:DI 1545)
        (const_int 112 [0x70])))

Cold cost: 4 (final)
Set in insn 2626 is invariant (7), cost 4, depends on 6
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 2632 is invariant (8), cost 4, depends on 
Decided to move invariant 1 -- gain 8
Decided to move invariant 3 -- gain 8
Decided to move invariant 7 -- gain 8
Decided to move dependent invariant 6
Decided to move invariant 0 -- gain 4
Decided to move invariant 2 -- gain 4
Decided to move invariant 4 -- gain 4
Decided to move invariant 5 -- gain 4
Decided to move invariant 8 -- gain 4
deferring rescan insn with uid = 2452.
deferring rescan insn with uid = 2560.
deferring rescan insn with uid = 2496.
deferring rescan insn with uid = 2453.
deferring rescan insn with uid = 4368.
changing bb of uid 2452
  from 151 to 150
deferring rescan insn with uid = 2480.
deferring rescan insn with uid = 2545.
deferring rescan insn with uid = 2481.
deferring rescan insn with uid = 4369.
changing bb of uid 2480
  from 154 to 150
deferring rescan insn with uid = 2482.
deferring rescan insn with uid = 2588.
deferring rescan insn with uid = 2586.
deferring rescan insn with uid = 2549.
deferring rescan insn with uid = 2547.
deferring rescan insn with uid = 2529.
deferring rescan insn with uid = 2527.
deferring rescan insn with uid = 2485.
deferring rescan insn with uid = 2483.
deferring rescan insn with uid = 4370.
changing bb of uid 2482
  from 154 to 150
deferring rescan insn with uid = 2523.
deferring rescan insn with uid = 2583.
deferring rescan insn with uid = 2524.
deferring rescan insn with uid = 4371.
changing bb of uid 2523
  from 157 to 150
deferring rescan insn with uid = 2605.
deferring rescan insn with uid = 2606.
deferring rescan insn with uid = 4372.
changing bb of uid 2605
  from 160 to 150
deferring rescan insn with uid = 2608.
deferring rescan insn with uid = 2609.
deferring rescan insn with uid = 4373.
changing bb of uid 2608
  from 160 to 150
deferring rescan insn with uid = 2624.
deferring rescan insn with uid = 2626.
deferring rescan insn with uid = 4374.
changing bb of uid 2624
  from 161 to 150
deferring rescan insn with uid = 2626.
deferring rescan insn with uid = 2628.
deferring rescan insn with uid = 4375.
changing bb of uid 2626
  from 161 to 150
deferring rescan insn with uid = 2632.
deferring rescan insn with uid = 4376.
changing bb of uid 2632
  from 162 to 150
*****starting processing of loop 10 ******
starting the processing of deferred insns
rescanning insn with uid = 2452.
rescanning insn with uid = 2453.
rescanning insn with uid = 2480.
rescanning insn with uid = 2481.
rescanning insn with uid = 2482.
rescanning insn with uid = 2483.
rescanning insn with uid = 2485.
rescanning insn with uid = 2496.
rescanning insn with uid = 2523.
rescanning insn with uid = 2524.
rescanning insn with uid = 2527.
rescanning insn with uid = 2529.
rescanning insn with uid = 2545.
rescanning insn with uid = 2547.
rescanning insn with uid = 2549.
rescanning insn with uid = 2560.
rescanning insn with uid = 2583.
rescanning insn with uid = 2586.
rescanning insn with uid = 2588.
rescanning insn with uid = 2605.
rescanning insn with uid = 2606.
rescanning insn with uid = 2608.
rescanning insn with uid = 2609.
rescanning insn with uid = 2624.
rescanning insn with uid = 2626.
rescanning insn with uid = 2628.
rescanning insn with uid = 2632.
rescanning insn with uid = 4368.
rescanning insn with uid = 4369.
rescanning insn with uid = 4370.
rescanning insn with uid = 4371.
rescanning insn with uid = 4372.
rescanning insn with uid = 4373.
rescanning insn with uid = 4374.
rescanning insn with uid = 4375.
rescanning insn with uid = 4376.
ending the processing of deferred insns
setting blocks to analyze 146, 147, 148, 149
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 7 (0.023)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 7 (0.023)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 8 (0.027)


starting region dump


main

Dataflow summary:
def_info->table_size = 7, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d,2u} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} 
;;    total ref usage 11617{7870d,3676u,71e} in 2719{2584 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1
;;  reg->defs[] map:	66[0,1] 578[2,2] 582[3,3] 583[4,4] 592[5,5] 1451[6,6] 
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u2220(29){ }u2221(31){ }u2222(64){ }u2223(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 592
;; lr  def 	 66 [cc] 582 583
;; live  in  	 578 592
;; live  gen 	 66 [cc] 582 583
;; live  kill	
;; rd  in  	(3) 66[1],578[2],592[5]
;; rd  gen 	(3) 66[0],582[3],583[4]
;; rd  kill	(4) 66[0,1],582[3],583[4]
;;  UD chains for artificial uses at top

(code_label 2421 217 2395 146 109 "" [1 uses])
(note 2395 2421 2396 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2396
;;      reg 592 { d5(bb 148 insn 2417) }
(debug_insn 2396 2395 2398 146 (var_location:DI D#43 (reg:DI 592 [ ivtmp.110 ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 2398
;;      reg 592 { d5(bb 148 insn 2417) }
(insn 2398 2396 2399 146 (set (reg:DI 582 [ D.3798 ])
        (mem:DI (reg:DI 592 [ ivtmp.110 ]) [4 MEM[base: _1250, offset: 0B]+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 2399
(debug_insn 2399 2398 2400 146 (var_location:DI D#16 (debug_expr:DI D#43)) graph500.c:145 -1
     (nil))
;;   UD chains for insn luid 3 uid 2400
(debug_insn 2400 2399 2401 146 (var_location:DI p (debug_expr:DI D#16)) -1
     (nil))
;;   UD chains for insn luid 4 uid 2401
(debug_insn 2401 2400 2402 146 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:145 -1
     (nil))
;;   UD chains for insn luid 5 uid 2402
;;      reg 592 { d5(bb 148 insn 2417) }
(insn 2402 2401 2403 146 (set (reg:DI 583 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 592 [ ivtmp.110 ])
                (const_int 8 [0x8])) [4 MEM[base: _1250, offset: 8B]+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 2403
(debug_insn 2403 2402 2404 146 (var_location:DI D#17 (debug_expr:DI D#43)) graph500.c:146 -1
     (nil))
;;   UD chains for insn luid 7 uid 2404
(debug_insn 2404 2403 2405 146 (var_location:DI p (debug_expr:DI D#17)) -1
     (nil))
;;   UD chains for insn luid 8 uid 2405
(debug_insn 2405 2404 2406 146 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:146 -1
     (nil))
;;   UD chains for insn luid 9 uid 2406
;;      reg 582 { d3(bb 146 insn 2398) }
;;      reg 583 { d4(bb 146 insn 2402) }
(insn 2406 2405 2407 146 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 582 [ D.3798 ])
            (reg:DI 583 [ D.3798 ]))) graph500.c:147 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 10 uid 2407
;;      reg 66 { d0(bb 146 insn 2406) }
(jump_insn 2407 2406 2408 146 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2413)
            (pc))) graph500.c:147 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 2413)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 582 583 590 592
;; live  out 	 578 582 583 592
;; rd  out 	(4) 578[2],582[3],583[4],592[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u2231(29){ }u2232(31){ }u2233(64){ }u2234(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 582 583 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 582 583
;; lr  def 	 1451
;; live  in  	 578 582 583 592
;; live  gen 	 1451
;; live  kill	
;; rd  in  	(4) 578[2],582[3],583[4],592[5]
;; rd  gen 	(1) 1451[6]
;; rd  kill	(1) 1451[6]
;;  UD chains for artificial uses at top

(note 2408 2407 2409 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2409
(insn 2409 2408 2410 147 (set (reg:SI 1451)
        (const_int 1 [0x1])) graph500.c:148 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2410
;;      reg 291 { }
;;      reg 583 { d4(bb 146 insn 2402) }
;;      reg 1451 { d6(bb 147 insn 2409) }
(insn 2410 2409 2412 147 (set (mem:SI (plus:DI (mult:DI (reg:DI 583 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_522+0 S4 A32])
        (reg:SI 1451)) graph500.c:148 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:DI 583 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 2 uid 2412
;;      reg 291 { }
;;      reg 582 { d3(bb 146 insn 2398) }
;;      reg 1451 { d6(bb 147 insn 2409) }
(insn 2412 2410 2413 147 (set (mem:SI (plus:DI (mult:DI (reg:DI 582 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_519+0 S4 A32])
        (reg:SI 1451)) graph500.c:148 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 1451)
        (expr_list:REG_DEAD (reg:DI 582 [ D.3798 ])
            (nil))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592
;; rd  out 	(2) 578[2],592[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u2242(29){ }u2243(31){ }u2244(64){ }u2245(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 578 592
;; lr  def 	 578 592
;; live  in  	 578 592
;; live  gen 	 578 592
;; live  kill	
;; rd  in  	(4) 578[2],582[3],583[4],592[5]
;; rd  gen 	(2) 578[2],592[5]
;; rd  kill	(2) 578[2],592[5]
;;  UD chains for artificial uses at top

(code_label 2413 2412 2414 148 108 "" [1 uses])
(note 2414 2413 2415 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2415
;;      reg 578 { d2(bb 148 insn 2415) }
(insn 2415 2414 2416 148 (set (reg/v:DI 578 [ k ])
        (plus:DI (reg/v:DI 578 [ k ])
            (const_int 1 [0x1]))) graph500.c:144 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2416
;;      reg 578 { d2(bb 148 insn 2415) }
(debug_insn 2416 2415 2417 148 (var_location:DI k (reg/v:DI 578 [ k ])) graph500.c:144 -1
     (nil))
;;   UD chains for insn luid 2 uid 2417
;;      reg 592 { d5(bb 148 insn 2417) }
(insn 2417 2416 2418 148 (set (reg:DI 592 [ ivtmp.110 ])
        (plus:DI (reg:DI 592 [ ivtmp.110 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592
;; rd  out 	(2) 578[2],592[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u2249(29){ }u2250(31){ }u2251(64){ }u2252(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 578 590
;; lr  def 	 66 [cc]
;; live  in  	 578 592
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(2) 578[2],592[5]
;; rd  gen 	(1) 66[1]
;; rd  kill	(2) 66[0,1]
;;  UD chains for artificial uses at top

(code_label 2418 2417 2419 149 107 "" [0 uses])
(note 2419 2418 2420 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2420
;;      reg 578 { d2(bb 148 insn 2415) }
(debug_insn 2420 2419 2422 149 (var_location:DI k (reg/v:DI 578 [ k ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 2422
;;      reg 578 { d2(bb 148 insn 2415) }
;;      reg 590 { }
(insn 2422 2420 2423 149 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 578 [ k ])
            (reg:DI 590 [ D.3798 ]))) graph500.c:144 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 2423
;;      reg 66 { d1(bb 149 insn 2422) }
(jump_insn 2423 2422 2424 149 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) graph500.c:144 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2421)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592
;; rd  out 	(2) 578[2],592[5]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 10 ******
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:SI 1451)
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 2409 is invariant (0), cost 4, depends on 
Decided to move invariant 0 -- gain 4
deferring rescan insn with uid = 2409.
deferring rescan insn with uid = 2412.
deferring rescan insn with uid = 2410.
deferring rescan insn with uid = 4377.
changing bb of uid 2409
  from 147 to 145
*****starting processing of loop 11 ******
starting the processing of deferred insns
rescanning insn with uid = 2409.
rescanning insn with uid = 2410.
rescanning insn with uid = 2412.
rescanning insn with uid = 4377.
ending the processing of deferred insns
setting blocks to analyze 143, 144
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 3 ( 0.01)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 3 ( 0.01)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)


starting region dump


main

Dataflow summary:
def_info->table_size = 2, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} 
;;    total ref usage 11619{7871d,3677u,71e} in 2720{2585 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0
;;  reg->defs[] map:	66[0,0] 575[1,1] 
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u2195(29){ }u2196(31){ }u2197(64){ }u2198(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 575
;; lr  def 	 575
;; live  in  	 575
;; live  gen 	 575
;; live  kill	
;; rd  in  	(2) 66[0],575[1]
;; rd  gen 	(1) 575[1]
;; rd  kill	(1) 575[1]
;;  UD chains for artificial uses at top

(code_label 2383 216 2376 143 106 "" [1 uses])
(note 2376 2383 2377 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2377
;;      reg 291 { }
;;      reg 575 { d1(bb 143 insn 2378) }
(insn 2377 2376 2378 143 (set (mem:SI (plus:DI (mult:DI (reg/v:DI 575 [ k ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: _512, step: 4, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) graph500.c:142 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2378
;;      reg 575 { d1(bb 143 insn 2378) }
(insn 2378 2377 2379 143 (set (reg/v:DI 575 [ k ])
        (plus:DI (reg/v:DI 575 [ k ])
            (const_int 1 [0x1]))) graph500.c:141 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 2379
;;      reg 575 { d1(bb 143 insn 2378) }
(debug_insn 2379 2378 2380 143 (var_location:DI k (reg/v:DI 575 [ k ])) graph500.c:141 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; live  out 	 575
;; rd  out 	(1) 575[1]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u2203(29){ }u2204(31){ }u2205(64){ }u2206(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 575
;; lr  def 	 66 [cc]
;; live  in  	 575
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(1) 575[1]
;; rd  gen 	(1) 66[0]
;; rd  kill	(1) 66[0]
;;  UD chains for artificial uses at top

(code_label 2380 2379 2381 144 105 "" [0 uses])
(note 2381 2380 2382 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2382
;;      reg 575 { d1(bb 143 insn 2378) }
(debug_insn 2382 2381 2384 144 (var_location:DI k (reg/v:DI 575 [ k ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 2384
;;      reg 572 { }
;;      reg 575 { d1(bb 143 insn 2378) }
(insn 2384 2382 2385 144 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 575 [ k ]))) graph500.c:141 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 2385
;;      reg 66 { d0(bb 144 insn 2384) }
(jump_insn 2385 2384 2386 144 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2383)
            (pc))) graph500.c:141 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2383)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; live  out 	 575
;; rd  out 	(1) 575[1]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 11 ******
*****starting processing of loop 7 ******
starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 103, 104, 105
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 4 (0.013)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 5 (0.017)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 6 ( 0.02)


starting region dump


main

Dataflow summary:
def_info->table_size = 31, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d,1u} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d,1u} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} 
;;    total ref usage 11619{7871d,3677u,71e} in 2720{2585 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1
;;  reg->defs[] map:	66[0,1] 469[2,2] 473[3,4] 476[5,6] 695[7,7] 714[8,8] 750[9,9] 826[10,10] 1314[11,11] 1315[12,12] 1316[13,13] 1317[14,14] 1318[15,15] 1319[16,16] 1320[17,17] 1322[18,18] 1323[19,19] 1324[20,20] 1325[21,21] 1326[22,22] 1327[23,23] 1328[24,24] 1330[25,25] 1331[26,26] 1332[27,27] 1334[28,28] 1335[29,29] 1336[30,30] 
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u1588(29){ }u1589(31){ }u1590(64){ }u1591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 714 750
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750
;; lr  def 	 469 695 750 826
;; live  in  	 469 476 695 714 750
;; live  gen 	 469 695 750 826
;; live  kill	
;; rd  in  	(5) 469[2],476[6],695[7],714[8],750[9]
;; rd  gen 	(4) 469[2],695[7],750[9],826[10]
;; rd  kill	(4) 469[2],695[7],750[9],826[10]
;;  UD chains for artificial uses at top

(code_label 3983 1802 3982 103 196 "" [1 uses])
(note 3982 3983 199 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 199
;;      reg 695 { d7(bb 103 insn 200) }
(insn 199 3982 200 103 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 200
;;      reg 750 { d9(bb 103 insn 201) }
(insn 200 199 201 103 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 201
;;      reg 469 { d2(bb 103 insn 202) }
(insn 201 200 202 103 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 202
;;      reg 476 { d6(bb 105 insn 1858) }
(insn 202 201 1869 103 (set (reg:DI 469 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; live  out 	 469 695 714 750 826
;; rd  out 	(5) 469[2],695[7],714[8],750[9],826[10]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u1596(29){ }u1597(31){ }u1598(64){ }u1599(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 714
;; lr  def 	 66 [cc] 473 1314 1315 1316 1317 1318 1319 1320 1322 1323 1324
;; live  in  	 469 695 714 750 826
;; live  gen 	 66 [cc] 473 1314 1315 1316 1317 1318 1319 1320 1322 1323 1324
;; live  kill	
;; rd  in  	(5) 469[2],695[7],714[8],750[9],826[10]
;; rd  gen 	(12) 66[0],473[4],1314[11],1315[12],1316[13],1317[14],1318[15],1319[16],1320[17],1322[18],1323[19],1324[20]
;; rd  kill	(14) 66[0,1],473[3,4],1314[11],1315[12],1316[13],1317[14],1318[15],1319[16],1320[17],1322[18],1323[19],1324[20]
;;  UD chains for artificial uses at top

(code_label 1869 202 1803 104 83 "" [0 uses])
(note 1803 1869 1804 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1804
;;      reg 64 { }
(debug_insn 1804 1803 1805 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 1805
;;      reg 64 { }
(debug_insn 1805 1804 1806 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 1806
;;      reg 64 { }
(debug_insn 1806 1805 1807 104 (var_location:DI D#33 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 3 uid 1807
(debug_insn 1807 1806 1808 104 (var_location:DI a (debug_expr:DI D#33)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 4 uid 1808
(debug_insn 1808 1807 1809 104 (var_location:DI a (debug_expr:DI D#33)) -1
     (nil))
;;   UD chains for insn luid 5 uid 1809
(debug_insn 1809 1808 1810 104 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 6 uid 1810
(insn 1810 1809 1811 104 (set (reg:DI 1315)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 1811
;;      reg 469 { d2(bb 103 insn 202) }
;;      reg 1315 { d12(bb 104 insn 1810) }
;;   eq_note reg 469 { d2(bb 103 insn 202) }
(insn 1811 1810 1812 104 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1315))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1315)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 8 uid 1812
(insn 1812 1811 1813 104 (set (reg:DI 1317)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 1813
;;      reg 1314 { d11(bb 104 insn 1811) }
;;      reg 1317 { d14(bb 104 insn 1812) }
;;   eq_note reg 1314 { d11(bb 104 insn 1811) }
(insn 1813 1812 1814 104 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (const_int 8589934597 [0x200000005]))
                (const_int 64 [0x40])))
        (nil)))
;;   UD chains for insn luid 10 uid 1814
;;      reg 1314 { d11(bb 104 insn 1811) }
;;      reg 1316 { d13(bb 104 insn 1813) }
(insn 1814 1813 1815 104 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 11 uid 1815
;;      reg 1318 { d15(bb 104 insn 1814) }
(insn 1815 1814 1816 104 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1318)
        (nil)))
;;   UD chains for insn luid 12 uid 1816
;;      reg 1316 { d13(bb 104 insn 1813) }
;;      reg 1319 { d16(bb 104 insn 1815) }
(insn 1816 1815 1817 104 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1319)
        (expr_list:REG_DEAD (reg:DI 1316)
            (nil))))
;;   UD chains for insn luid 13 uid 1817
;;      reg 1320 { d17(bb 104 insn 1816) }
;;   eq_note reg 1314 { d11(bb 104 insn 1811) }
(insn 1817 1816 1819 104 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1320)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 14 uid 1819
;;      reg 473 { d3(bb 104 insn 1817) }
(insn 1819 1817 1821 104 (set (reg:DI 1322)
        (ashift:DI (reg:DI 473 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 15 uid 1821
;;      reg 473 { d3(bb 104 insn 1817) }
;;      reg 1322 { d18(bb 104 insn 1819) }
;;   eq_note reg 473 { d3(bb 104 insn 1817) }
(insn 1821 1819 1822 104 (set (reg:DI 1323)
        (minus:DI (reg:DI 1322)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1322)
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 16 uid 1822
;;      reg 1314 { d11(bb 104 insn 1811) }
;;      reg 1323 { d19(bb 104 insn 1821) }
(insn 1822 1821 1826 104 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1323)
        (expr_list:REG_DEAD (reg:DI 1314 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 17 uid 1826
;;      reg 64 { }
(debug_insn 1826 1822 1832 104 (var_location:DI D#32 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 18 uid 1832
(debug_insn 1832 1826 1833 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 19 uid 1833
(debug_insn 1833 1832 1834 104 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 20 uid 1834
(debug_insn 1834 1833 1835 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 21 uid 1835
(debug_insn 1835 1834 1836 104 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 22 uid 1836
(debug_insn 1836 1835 1837 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 23 uid 1837
;;      reg 473 { d4(bb 104 insn 1822) }
(debug_insn 1837 1836 1838 104 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 24 uid 1838
(debug_insn 1838 1837 1839 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 25 uid 1839
(debug_insn 1839 1838 1841 104 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 26 uid 1841
(insn 1841 1839 1842 104 (set (reg:DI 1324)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 27 uid 1842
;;      reg 714 { d8(bb 105 insn 1868) }
;;      reg 1324 { d20(bb 104 insn 1841) }
;;   eq_note reg 714 { d8(bb 105 insn 1868) }
(insn 1842 1841 1843 104 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1324))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1324)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 714 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 28 uid 1843
;;      reg 66 { d0(bb 104 insn 1842) }
(jump_insn 1843 1842 1844 104 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1840)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 473 695 714 750 826 1317
;; live  out 	 469 473 695 714 750 826 1317
;; rd  out 	(7) 469[2],473[4],695[7],714[8],750[9],826[10],1317[14]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u1628(29){ }u1629(31){ }u1630(64){ }u1631(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 473 695 714 750 826 1317
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 473 714 826 1317
;; lr  def 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  in  	 469 473 695 714 750 826 1317
;; live  gen 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  kill	
;; rd  in  	(17) 66[0],469[2],473[4],695[7],714[8],750[9],826[10],1314[11],1315[12],1316[13],1317[14],1318[15],1319[16],1320[17],1322[18],1323[19],1324[20]
;; rd  gen 	(13) 66[1],476[6],714[8],1325[21],1326[22],1327[23],1328[24],1330[25],1331[26],1332[27],1334[28],1335[29],1336[30]
;; rd  kill	(15) 66[0,1],476[5,6],714[8],1325[21],1326[22],1327[23],1328[24],1330[25],1331[26],1332[27],1334[28],1335[29],1336[30]
;;  UD chains for artificial uses at top

(note 1844 1843 1845 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1845
(insn 1845 1844 1846 105 (set (reg:DI 1326)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1846
;;      reg 714 { d8(bb 105 insn 1868) }
;;      reg 1326 { d22(bb 105 insn 1845) }
;;   eq_note reg 714 { d8(bb 105 insn 1868) }
(insn 1846 1845 1847 105 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1326))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1326)
        (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 714 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 2 uid 1847
;;      reg 473 { d4(bb 104 insn 1822) }
;;      reg 1325 { d21(bb 105 insn 1846) }
(insn 1847 1846 1849 105 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1325 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 3 uid 1849
;;      reg 1317 { d14(bb 104 insn 1812) }
;;      reg 1327 { d23(bb 105 insn 1847) }
;;   eq_note reg 1327 { d23(bb 105 insn 1847) }
(insn 1849 1847 1850 105 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1317)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 4 uid 1850
;;      reg 1327 { d23(bb 105 insn 1847) }
;;      reg 1328 { d24(bb 105 insn 1849) }
(insn 1850 1849 1851 105 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
;;   UD chains for insn luid 5 uid 1851
;;      reg 1330 { d25(bb 105 insn 1850) }
(insn 1851 1850 1852 105 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1330)
        (nil)))
;;   UD chains for insn luid 6 uid 1852
;;      reg 1328 { d24(bb 105 insn 1849) }
;;      reg 1331 { d26(bb 105 insn 1851) }
(insn 1852 1851 1853 105 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1331)
        (expr_list:REG_DEAD (reg:DI 1328)
            (nil))))
;;   UD chains for insn luid 7 uid 1853
;;      reg 1332 { d27(bb 105 insn 1852) }
;;   eq_note reg 1327 { d23(bb 105 insn 1847) }
(insn 1853 1852 1855 105 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1332)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 8 uid 1855
;;      reg 476 { d5(bb 105 insn 1853) }
(insn 1855 1853 1857 105 (set (reg:DI 1334)
        (ashift:DI (reg:DI 476 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1857
;;      reg 476 { d5(bb 105 insn 1853) }
;;      reg 1334 { d28(bb 105 insn 1855) }
;;   eq_note reg 476 { d5(bb 105 insn 1853) }
(insn 1857 1855 1858 105 (set (reg:DI 1335)
        (minus:DI (reg:DI 1334)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1334)
        (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1858
;;      reg 1327 { d23(bb 105 insn 1847) }
;;      reg 1335 { d29(bb 105 insn 1857) }
(insn 1858 1857 1859 105 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1335)
        (expr_list:REG_DEAD (reg:DI 1327 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 11 uid 1859
(debug_insn 1859 1858 1860 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 12 uid 1860
(debug_insn 1860 1859 1861 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 13 uid 1861
(debug_insn 1861 1860 1862 105 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 14 uid 1862
(debug_insn 1862 1861 1863 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 15 uid 1863
(debug_insn 1863 1862 1864 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1864
(debug_insn 1864 1863 1865 105 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1865
(debug_insn 1865 1864 1866 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 18 uid 1866
(debug_insn 1866 1865 1867 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 19 uid 1867
;;      reg 476 { d6(bb 105 insn 1858) }
(debug_insn 1867 1866 1868 105 (var_location:SI val (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 20 uid 1868
;;      reg 826 { d10(bb 103 insn 199) }
(insn 1868 1867 1870 105 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 21 uid 1870
(insn 1870 1868 1871 105 (set (reg:DI 1336)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 22 uid 1871
;;      reg 476 { d6(bb 105 insn 1858) }
;;      reg 1336 { d30(bb 105 insn 1870) }
;;   eq_note reg 476 { d6(bb 105 insn 1858) }
(insn 1871 1870 1872 105 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1336))) generator/graph_generator.c:49 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1336)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 476 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
;;   UD chains for insn luid 23 uid 1872
;;      reg 66 { d1(bb 105 insn 1871) }
(jump_insn 1872 1871 1873 105 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3983)
            (pc))) generator/graph_generator.c:49 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3983)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 714 750
;; live  out 	 469 476 695 714 750
;; rd  out 	(5) 469[2],476[6],695[7],714[8],750[9]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 7 ******
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(set (reg:DI 1315)
    (const_int 107374182 [0x6666666]))

Hot cost: 8 (final)
Set in insn 1810 is invariant (0), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1317)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1812 is invariant (1), cost 4, depends on 
(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)
(set (reg:DI 1324)
    (const_int 2147483646 [0x7ffffffe]))

Hot cost: 4 (final)
Set in insn 1841 is invariant (2), cost 4, depends on 
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(set (reg:DI 1326)
    (const_int 104480 [0x19820]))

Hot cost: 8 (final)
Set in insn 1845 is invariant (3), cost 8, depends on 
(const_int 7294 [0x1c7e])

Hot cost: 4 (final)
(set (reg:DI 1336)
    (const_int 7294 [0x1c7e]))

Hot cost: 4 (final)
Set in insn 1870 is invariant (4), cost 4, depends on 
Decided to move invariant 0 -- gain 8
Decided to move invariant 3 -- gain 8
Decided to move invariant 1 -- gain 4
Decided to move invariant 2 -- gain 4
Decided to move invariant 4 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 1810
  from 104 to 102
Invariant 1 moved without introducing a new temporary register
changing bb of uid 1812
  from 104 to 102
Invariant 2 moved without introducing a new temporary register
changing bb of uid 1841
  from 104 to 102
deferring rescan insn with uid = 1845.
deferring rescan insn with uid = 1846.
deferring rescan insn with uid = 4378.
changing bb of uid 1845
  from 105 to 102
deferring rescan insn with uid = 1870.
deferring rescan insn with uid = 1871.
deferring rescan insn with uid = 4379.
changing bb of uid 1870
  from 105 to 102
*****starting processing of loop 3 ******
starting the processing of deferred insns
rescanning insn with uid = 1845.
rescanning insn with uid = 1846.
rescanning insn with uid = 1870.
rescanning insn with uid = 1871.
rescanning insn with uid = 4378.
rescanning insn with uid = 4379.
ending the processing of deferred insns
setting blocks to analyze 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 274, 275, 276, 278, 290, 299
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 41 ( 0.14)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 45 ( 0.15)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 46 ( 0.15)


starting region dump


main

Dataflow summary:
def_info->table_size = 107, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,2u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d,1u} r1287={1d,2u} r1288={1d,1u} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d,1u} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,1u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,1u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,1u} r1314={1d,3u,2e} r1315={1d,1u} r1316={1d,2u} r1317={1d,2u} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d,1u} r1325={1d,1u} r1326={1d} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d} r1337={1d,1u} r1338={1d,1u} r1339={1d,1u} r1340={1d,1u} r1341={1d,1u} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d,1u} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} r1889={1d,2u} r1890={1d,2u} 
;;    total ref usage 11623{7873d,3679u,71e} in 2722{2587 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;;  reg->defs[] map:	66[0,10] 442[11,13] 443[14,14] 463[15,16] 464[17,18] 468[19,20] 469[21,23] 473[24,25] 476[26,27] 695[28,30] 714[31,33] 747[34,34] 750[35,37] 751[38,39] 826[40,42] 828[43,45] 829[46,50] 830[51,51] 831[52,54] 1285[55,55] 1286[56,56] 1287[57,57] 1288[58,58] 1289[59,59] 1290[60,60] 1291[61,61] 1293[62,62] 1294[63,63] 1295[64,64] 1302[65,65] 1303[66,66] 1304[67,67] 1305[68,68] 1306[69,69] 1307[70,70] 1308[71,71] 1309[72,72] 1311[73,73] 1312[74,74] 1313[75,75] 1314[76,76] 1315[77,77] 1316[78,78] 1317[79,79] 1318[80,80] 1319[81,81] 1320[82,82] 1322[83,83] 1323[84,84] 1324[85,85] 1325[86,86] 1326[87,87] 1327[88,88] 1328[89,89] 1330[90,90] 1331[91,91] 1332[92,92] 1334[93,93] 1335[94,94] 1336[95,95] 1337[96,96] 1338[97,97] 1339[98,98] 1340[99,99] 1341[100,100] 1342[101,101] 1343[102,102] 1344[103,103] 1852[104,104] 1889[105,105] 1890[106,106] 
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u1462(29){ }u1463(31){ }u1464(64){ }u1465(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 750 751
;; lr  def 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(12) 66[0],468[20],1285[55],1286[56],1287[57],1288[58],1289[59],1290[60],1291[61],1293[62],1294[63],1295[64]
;; rd  kill	(23) 66[0,1,2,3,4,5,6,7,8,9,10],468[19,20],1285[55],1286[56],1287[57],1288[58],1289[59],1290[60],1291[61],1293[62],1294[63],1295[64]
;;  UD chains for artificial uses at top

(code_label 3968 1674 1676 96 194 "" [1 uses])
(note 1676 3968 1687 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1687
(debug_insn 1687 1676 1688 96 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 1688
;;      reg 64 { }
(debug_insn 1688 1687 1689 96 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 1689
(debug_insn 1689 1688 1690 96 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 3 uid 1690
(debug_insn 1690 1689 1691 96 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 4 uid 1691
;;      reg 64 { }
(debug_insn 1691 1690 1692 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 5 uid 1692
;;      reg 64 { }
(debug_insn 1692 1691 1693 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 1693
;;      reg 64 { }
(debug_insn 1693 1692 1694 96 (var_location:DI D#30 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 7 uid 1694
(debug_insn 1694 1693 1695 96 (var_location:DI a (debug_expr:DI D#30)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 8 uid 1695
(debug_insn 1695 1694 1696 96 (var_location:DI a (debug_expr:DI D#30)) -1
     (nil))
;;   UD chains for insn luid 9 uid 1696
(debug_insn 1696 1695 1697 96 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 10 uid 1697
(insn 1697 1696 1698 96 (set (reg:DI 1286)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 1698
;;      reg 750 { d37(bb 107 insn 207) d36(bb 106 insn 212) }
;;      reg 1286 { d56(bb 96 insn 1697) }
;;   eq_note reg 750 { d37(bb 107 insn 207) d36(bb 106 insn 212) }
(insn 1698 1697 1699 96 (set (reg:DI 1285 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1286))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1286)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 750 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 12 uid 1699
(insn 1699 1698 1700 96 (set (reg:DI 1288)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 13 uid 1700
;;      reg 1285 { d55(bb 96 insn 1698) }
;;      reg 1288 { d58(bb 96 insn 1699) }
;;   eq_note reg 1285 { d55(bb 96 insn 1698) }
(insn 1700 1699 1701 96 (set (reg:DI 1287)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1288)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1288)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 14 uid 1701
;;      reg 1285 { d55(bb 96 insn 1698) }
;;      reg 1287 { d57(bb 96 insn 1700) }
(insn 1701 1700 1702 96 (set (reg:DI 1289)
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1287))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 15 uid 1702
;;      reg 1289 { d59(bb 96 insn 1701) }
(insn 1702 1701 1703 96 (set (reg:DI 1290)
        (lshiftrt:DI (reg:DI 1289)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1289)
        (nil)))
;;   UD chains for insn luid 16 uid 1703
;;      reg 1287 { d57(bb 96 insn 1700) }
;;      reg 1290 { d60(bb 96 insn 1702) }
(insn 1703 1702 1704 96 (set (reg:DI 1291)
        (plus:DI (reg:DI 1287)
            (reg:DI 1290))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1290)
        (expr_list:REG_DEAD (reg:DI 1287)
            (nil))))
;;   UD chains for insn luid 17 uid 1704
;;      reg 1291 { d61(bb 96 insn 1703) }
;;   eq_note reg 1285 { d55(bb 96 insn 1698) }
(insn 1704 1703 1706 96 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1291)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1291)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1285 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 18 uid 1706
;;      reg 468 { d19(bb 96 insn 1704) }
(insn 1706 1704 1708 96 (set (reg:DI 1293)
        (ashift:DI (reg:DI 468 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 19 uid 1708
;;      reg 468 { d19(bb 96 insn 1704) }
;;      reg 1293 { d62(bb 96 insn 1706) }
;;   eq_note reg 468 { d19(bb 96 insn 1704) }
(insn 1708 1706 1709 96 (set (reg:DI 1294)
        (minus:DI (reg:DI 1293)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1293)
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 20 uid 1709
;;      reg 1285 { d55(bb 96 insn 1698) }
;;      reg 1294 { d63(bb 96 insn 1708) }
(insn 1709 1708 1710 96 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1294))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1294)
        (expr_list:REG_DEAD (reg:DI 1285 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 21 uid 1710
(debug_insn 1710 1709 1711 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 22 uid 1711
(debug_insn 1711 1710 1712 96 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 23 uid 1712
(debug_insn 1712 1711 1713 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 24 uid 1713
;;      reg 64 { }
(debug_insn 1713 1712 1714 96 (var_location:DI D#29 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 25 uid 1714
(debug_insn 1714 1713 1715 96 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 26 uid 1715
(debug_insn 1715 1714 1716 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 27 uid 1716
;;      reg 468 { d20(bb 96 insn 1709) }
(debug_insn 1716 1715 1717 96 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 28 uid 1717
(debug_insn 1717 1716 1718 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 29 uid 1718
(debug_insn 1718 1717 1719 96 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 30 uid 1719
(insn 1719 1718 1720 96 (set (reg:DI 1295)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 31 uid 1720
;;      reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
;;      reg 1295 { d64(bb 96 insn 1719) }
;;   eq_note reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
(insn 1720 1719 1721 96 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1295))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1295)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 751 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 32 uid 1721
;;      reg 66 { d0(bb 96 insn 1720) }
(jump_insn 1721 1720 4346 96 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4346)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 4346)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 468 695 714 747 750 751 826
;; live  out 	 442 443 468 695 714 747 750 751 826
;; rd  out 	(16) 442[11,12,13],443[14],468[20],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u1546(29){ }u1547(31){ }u1548(64){ }u1549(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 468 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 468 751
;; lr  def 	 66 [cc] 469 1302 1303 1304 1305 1306 1307 1308 1309 1311 1312 1313
;; live  in  	 442 443 468 695 714 747 750 751 826
;; live  gen 	 66 [cc] 469 1302 1303 1304 1305 1306 1307 1308 1309 1311 1312 1313
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],468[20],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(13) 66[1],469[22],1302[65],1303[66],1304[67],1305[68],1306[69],1307[70],1308[71],1309[72],1311[73],1312[74],1313[75]
;; rd  kill	(25) 66[0,1,2,3,4,5,6,7,8,9,10],469[21,22,23],1302[65],1303[66],1304[67],1305[68],1306[69],1307[70],1308[71],1309[72],1311[73],1312[74],1313[75]
;;  UD chains for artificial uses at top

(code_label 1756 198 1757 101 79 "" [0 uses])
(note 1757 1756 1758 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1758
;;      reg 443 { d14(bb 290 insn 3962) }
(debug_insn 1758 1757 1759 101 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1759
(debug_insn 1759 1758 1760 101 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
;;   UD chains for insn luid 2 uid 1760
(debug_insn 1760 1759 1761 101 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 1761
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(debug_insn 1761 1760 1762 101 (var_location:DI nverts (reg/v:DI 442 [ nverts ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 1762
(debug_insn 1762 1761 1763 101 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 5 uid 1763
;;      reg 64 { }
(debug_insn 1763 1762 1764 101 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 6 uid 1764
(debug_insn 1764 1763 1765 101 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 7 uid 1765
(debug_insn 1765 1764 1766 101 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 8 uid 1766
;;      reg 64 { }
(debug_insn 1766 1765 1767 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 9 uid 1767
;;      reg 64 { }
(debug_insn 1767 1766 1768 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 10 uid 1768
(debug_insn 1768 1767 1769 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 11 uid 1769
(debug_insn 1769 1768 1770 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 12 uid 1770
(debug_insn 1770 1769 1771 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 13 uid 1771
(debug_insn 1771 1770 1772 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 14 uid 1772
;;      reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
(debug_insn 1772 1771 1773 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 15 uid 1773
;;      reg 468 { d20(bb 96 insn 1709) }
(debug_insn 1773 1772 1774 101 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1774
;;      reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
(debug_insn 1774 1773 1775 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1775
(debug_insn 1775 1774 1776 101 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 18 uid 1776
(insn 1776 1775 1777 101 (set (reg:DI 1303)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 19 uid 1777
;;      reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
;;      reg 1303 { d66(bb 101 insn 1776) }
;;   eq_note reg 751 { d39(bb 107 insn 203) d38(bb 106 insn 210) }
(insn 1777 1776 1778 101 (set (reg:DI 1302 [ D.3802 ])
        (mult:DI (reg:DI 751 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1303)
        (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 751 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 20 uid 1778
;;      reg 468 { d20(bb 96 insn 1709) }
;;      reg 1302 { d65(bb 101 insn 1777) }
(insn 1778 1777 1779 101 (set (reg:DI 1304 [ D.3802 ])
        (plus:DI (reg:DI 1302 [ D.3802 ])
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1302 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 21 uid 1779
(insn 1779 1778 1780 101 (set (reg:DI 1306)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 22 uid 1780
;;      reg 1304 { d67(bb 101 insn 1778) }
;;      reg 1306 { d69(bb 101 insn 1779) }
;;   eq_note reg 1304 { d67(bb 101 insn 1778) }
(insn 1780 1779 1781 101 (set (reg:DI 1305)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1306)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 23 uid 1781
;;      reg 1304 { d67(bb 101 insn 1778) }
;;      reg 1305 { d68(bb 101 insn 1780) }
(insn 1781 1780 1782 101 (set (reg:DI 1307)
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1305))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
;;   UD chains for insn luid 24 uid 1782
;;      reg 1307 { d70(bb 101 insn 1781) }
(insn 1782 1781 1783 101 (set (reg:DI 1308)
        (lshiftrt:DI (reg:DI 1307)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1307)
        (nil)))
;;   UD chains for insn luid 25 uid 1783
;;      reg 1305 { d68(bb 101 insn 1780) }
;;      reg 1308 { d71(bb 101 insn 1782) }
(insn 1783 1782 1784 101 (set (reg:DI 1309)
        (plus:DI (reg:DI 1305)
            (reg:DI 1308))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1308)
        (expr_list:REG_DEAD (reg:DI 1305)
            (nil))))
;;   UD chains for insn luid 26 uid 1784
;;      reg 1309 { d72(bb 101 insn 1783) }
;;   eq_note reg 1304 { d67(bb 101 insn 1778) }
(insn 1784 1783 1786 101 (set (reg:DI 469 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1309)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1309)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1304 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 27 uid 1786
;;      reg 469 { d21(bb 101 insn 1784) }
(insn 1786 1784 1788 101 (set (reg:DI 1311)
        (ashift:DI (reg:DI 469 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 28 uid 1788
;;      reg 469 { d21(bb 101 insn 1784) }
;;      reg 1311 { d73(bb 101 insn 1786) }
;;   eq_note reg 469 { d21(bb 101 insn 1784) }
(insn 1788 1786 1789 101 (set (reg:DI 1312)
        (minus:DI (reg:DI 1311)
            (reg:DI 469 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1311)
        (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 29 uid 1789
;;      reg 1304 { d67(bb 101 insn 1778) }
;;      reg 1312 { d74(bb 101 insn 1788) }
(insn 1789 1788 1790 101 (set (reg:DI 469 [ D.3802 ])
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1312))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1312)
        (expr_list:REG_DEAD (reg:DI 1304 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 30 uid 1790
(debug_insn 1790 1789 1791 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 31 uid 1791
(debug_insn 1791 1790 1792 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 32 uid 1792
(debug_insn 1792 1791 1793 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 33 uid 1793
(debug_insn 1793 1792 1794 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 34 uid 1794
(debug_insn 1794 1793 1795 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 35 uid 1795
(debug_insn 1795 1794 1796 101 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 36 uid 1796
(debug_insn 1796 1795 1797 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 37 uid 1797
(debug_insn 1797 1796 1798 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:45 -1
     (nil))
;;   UD chains for insn luid 38 uid 1798
;;      reg 469 { d22(bb 101 insn 1789) }
(debug_insn 1798 1797 1799 101 (var_location:SI val (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))
;;   UD chains for insn luid 39 uid 1799
(insn 1799 1798 1800 101 (set (reg:DI 1313)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:46 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 40 uid 1800
;;      reg 469 { d22(bb 101 insn 1789) }
;;      reg 1313 { d75(bb 101 insn 1799) }
;;   eq_note reg 469 { d22(bb 101 insn 1789) }
(insn 1800 1799 1801 101 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 469 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:46 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1313)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 469 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
;;   UD chains for insn luid 41 uid 1801
;;      reg 66 { d1(bb 101 insn 1800) }
(jump_insn 1801 1800 1802 101 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) generator/graph_generator.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1877)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826
;; live  out 	 442 443 469 695 714 747 750 826
;; rd  out 	(14) 442[11,12,13],443[14],469[22],695[29,30],714[32,33],747[34],750[36,37],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u1584(29){ }u1585(31){ }u1586(64){ }u1587(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1315 1317 1324 1889 1890
;; live  in  	 442 443 469 695 714 747 750 826
;; live  gen 	 1315 1317 1324 1889 1890
;; live  kill	
;; rd  in  	(26) 66[1],442[11,12,13],443[14],469[22],695[29,30],714[32,33],747[34],750[36,37],826[41,42],1302[65],1303[66],1304[67],1305[68],1306[69],1307[70],1308[71],1309[72],1311[73],1312[74],1313[75]
;; rd  gen 	(5) 1315[77],1317[79],1324[85],1889[105],1890[106]
;; rd  kill	(5) 1315[77],1317[79],1324[85],1889[105],1890[106]
;;  UD chains for artificial uses at top

(note 1802 1801 1810 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1810
(insn 1810 1802 1812 102 (set (reg:DI 1315)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1812
(insn 1812 1810 1841 102 (set (reg:DI 1317)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 1841
(insn 1841 1812 1845 102 (set (reg:DI 1324)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1845
(insn 1845 1841 1870 102 (set (reg:DI 1889)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 1870
(insn 1870 1845 3983 102 (set (reg:DI 1890)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  out 	 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; rd  out 	(19) 442[11,12,13],443[14],469[22],695[29,30],714[32,33],747[34],750[36,37],826[41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u1588(29){ }u1589(31){ }u1590(64){ }u1591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 476 695 714 747 750 1315 1317 1324 1889 1890
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750
;; lr  def 	 469 695 750 826
;; live  in  	 442 443 469 476 695 714 747 750 1315 1317 1324 1889 1890
;; live  gen 	 469 695 750 826
;; live  kill	
;; rd  in  	(34) 66[3],442[11,12,13],443[14],469[22,23],476[27],695[28,29,30],714[31],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1325[86],1326[87],1327[88],1328[89],1330[90],1331[91],1332[92],1334[93],1335[94],1336[95],1889[105],1890[106]
;; rd  gen 	(4) 469[23],695[28],750[35],826[40]
;; rd  kill	(12) 469[21,22,23],695[28,29,30],750[35,36,37],826[40,41,42]
;;  UD chains for artificial uses at top

(code_label 3983 1870 3982 103 196 "" [1 uses])
(note 3982 3983 199 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 199
;;      reg 695 { d30(bb 107 insn 206) d29(bb 106 insn 209) d28(bb 103 insn 200) }
(insn 199 3982 200 103 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 200
;;      reg 750 { d37(bb 107 insn 207) d36(bb 106 insn 212) d35(bb 103 insn 201) }
(insn 200 199 201 103 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 201
;;      reg 469 { d23(bb 103 insn 202) d22(bb 101 insn 1789) }
(insn 201 200 202 103 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 202
;;      reg 476 { d27(bb 105 insn 1858) }
(insn 202 201 1869 103 (set (reg:DI 469 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  out 	 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; rd  out 	(15) 442[11,12,13],443[14],469[23],695[28],714[31],747[34],750[35],826[40],1315[77],1317[79],1324[85],1889[105],1890[106]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u1596(29){ }u1597(31){ }u1598(64){ }u1599(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 714 1315 1317 1324
;; lr  def 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  in  	 442 443 469 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  gen 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  kill	
;; rd  in  	(24) 442[11,12,13],443[14],469[22,23],695[28,29,30],714[31,32,33],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;; rd  gen 	(9) 66[2],473[25],1314[76],1316[78],1318[80],1319[81],1320[82],1322[83],1323[84]
;; rd  kill	(20) 66[0,1,2,3,4,5,6,7,8,9,10],473[24,25],1314[76],1316[78],1318[80],1319[81],1320[82],1322[83],1323[84]
;;  UD chains for artificial uses at top

(code_label 1869 202 1803 104 83 "" [0 uses])
(note 1803 1869 1804 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1804
;;      reg 64 { }
(debug_insn 1804 1803 1805 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 1805
;;      reg 64 { }
(debug_insn 1805 1804 1806 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 1806
;;      reg 64 { }
(debug_insn 1806 1805 1807 104 (var_location:DI D#33 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 3 uid 1807
(debug_insn 1807 1806 1808 104 (var_location:DI a (debug_expr:DI D#33)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 4 uid 1808
(debug_insn 1808 1807 1809 104 (var_location:DI a (debug_expr:DI D#33)) -1
     (nil))
;;   UD chains for insn luid 5 uid 1809
(debug_insn 1809 1808 1811 104 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 6 uid 1811
;;      reg 469 { d23(bb 103 insn 202) d22(bb 101 insn 1789) }
;;      reg 1315 { d77(bb 102 insn 1810) }
;;   eq_note reg 469 { d23(bb 103 insn 202) d22(bb 101 insn 1789) }
(insn 1811 1809 1813 104 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1315))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1315)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 7 uid 1813
;;      reg 1314 { d76(bb 104 insn 1811) }
;;      reg 1317 { d79(bb 102 insn 1812) }
;;   eq_note reg 1314 { d76(bb 104 insn 1811) }
(insn 1813 1811 1814 104 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (const_int 8589934597 [0x200000005]))
                (const_int 64 [0x40])))
        (nil)))
;;   UD chains for insn luid 8 uid 1814
;;      reg 1314 { d76(bb 104 insn 1811) }
;;      reg 1316 { d78(bb 104 insn 1813) }
(insn 1814 1813 1815 104 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 9 uid 1815
;;      reg 1318 { d80(bb 104 insn 1814) }
(insn 1815 1814 1816 104 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1318)
        (nil)))
;;   UD chains for insn luid 10 uid 1816
;;      reg 1316 { d78(bb 104 insn 1813) }
;;      reg 1319 { d81(bb 104 insn 1815) }
(insn 1816 1815 1817 104 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1319)
        (expr_list:REG_DEAD (reg:DI 1316)
            (nil))))
;;   UD chains for insn luid 11 uid 1817
;;      reg 1320 { d82(bb 104 insn 1816) }
;;   eq_note reg 1314 { d76(bb 104 insn 1811) }
(insn 1817 1816 1819 104 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1320)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 12 uid 1819
;;      reg 473 { d24(bb 104 insn 1817) }
(insn 1819 1817 1821 104 (set (reg:DI 1322)
        (ashift:DI (reg:DI 473 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 13 uid 1821
;;      reg 473 { d24(bb 104 insn 1817) }
;;      reg 1322 { d83(bb 104 insn 1819) }
;;   eq_note reg 473 { d24(bb 104 insn 1817) }
(insn 1821 1819 1822 104 (set (reg:DI 1323)
        (minus:DI (reg:DI 1322)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1322)
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 14 uid 1822
;;      reg 1314 { d76(bb 104 insn 1811) }
;;      reg 1323 { d84(bb 104 insn 1821) }
(insn 1822 1821 1826 104 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1323)
        (expr_list:REG_DEAD (reg:DI 1314 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 15 uid 1826
;;      reg 64 { }
(debug_insn 1826 1822 1832 104 (var_location:DI D#32 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1832
(debug_insn 1832 1826 1833 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 17 uid 1833
(debug_insn 1833 1832 1834 104 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 18 uid 1834
(debug_insn 1834 1833 1835 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 19 uid 1835
(debug_insn 1835 1834 1836 104 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 20 uid 1836
(debug_insn 1836 1835 1837 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 21 uid 1837
;;      reg 473 { d25(bb 104 insn 1822) }
(debug_insn 1837 1836 1838 104 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 22 uid 1838
(debug_insn 1838 1837 1839 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 23 uid 1839
(debug_insn 1839 1838 1842 104 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 24 uid 1842
;;      reg 714 { d33(bb 107 insn 204) d32(bb 106 insn 208) d31(bb 105 insn 1868) }
;;      reg 1324 { d85(bb 102 insn 1841) }
;;   eq_note reg 714 { d33(bb 107 insn 204) d32(bb 106 insn 208) d31(bb 105 insn 1868) }
(insn 1842 1839 1843 104 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1324))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1324)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 714 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 25 uid 1843
;;      reg 66 { d2(bb 104 insn 1842) }
(jump_insn 1843 1842 1844 104 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1840)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 473 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  out 	 442 443 469 473 695 714 747 750 826 1315 1317 1324 1889 1890
;; rd  out 	(25) 442[11,12,13],443[14],469[22,23],473[25],695[28,29,30],714[31,32,33],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u1628(29){ }u1629(31){ }u1630(64){ }u1631(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 473 695 714 747 750 826 1315 1317 1324 1889 1890
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 473 714 826 1317 1889 1890
;; lr  def 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  in  	 442 443 469 473 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  gen 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  kill	
;; rd  in  	(25) 442[11,12,13],443[14],469[22,23],473[25],695[28,29,30],714[31,32,33],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;; rd  gen 	(13) 66[3],476[27],714[31],1325[86],1326[87],1327[88],1328[89],1330[90],1331[91],1332[92],1334[93],1335[94],1336[95]
;; rd  kill	(26) 66[0,1,2,3,4,5,6,7,8,9,10],476[26,27],714[31,32,33],1325[86],1326[87],1327[88],1328[89],1330[90],1331[91],1332[92],1334[93],1335[94],1336[95]
;;  UD chains for artificial uses at top

(note 1844 1843 4378 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4378
;;      reg 1889 { d105(bb 102 insn 1845) }
(insn 4378 1844 1846 105 (set (reg:DI 1326)
        (reg:DI 1889)) generator/mod_arith_64bit.h:36 -1
     (nil))
;;   UD chains for insn luid 1 uid 1846
;;      reg 714 { d33(bb 107 insn 204) d32(bb 106 insn 208) d31(bb 105 insn 1868) }
;;      reg 1889 { d105(bb 102 insn 1845) }
;;   eq_note reg 714 { d33(bb 107 insn 204) d32(bb 106 insn 208) d31(bb 105 insn 1868) }
(insn 1846 4378 1847 105 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1889))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1326)
        (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 714 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 2 uid 1847
;;      reg 473 { d25(bb 104 insn 1822) }
;;      reg 1325 { d86(bb 105 insn 1846) }
(insn 1847 1846 1849 105 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1325 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 3 uid 1849
;;      reg 1317 { d79(bb 102 insn 1812) }
;;      reg 1327 { d88(bb 105 insn 1847) }
;;   eq_note reg 1327 { d88(bb 105 insn 1847) }
(insn 1849 1847 1850 105 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1317)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1317)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 4 uid 1850
;;      reg 1327 { d88(bb 105 insn 1847) }
;;      reg 1328 { d89(bb 105 insn 1849) }
(insn 1850 1849 1851 105 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
;;   UD chains for insn luid 5 uid 1851
;;      reg 1330 { d90(bb 105 insn 1850) }
(insn 1851 1850 1852 105 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1330)
        (nil)))
;;   UD chains for insn luid 6 uid 1852
;;      reg 1328 { d89(bb 105 insn 1849) }
;;      reg 1331 { d91(bb 105 insn 1851) }
(insn 1852 1851 1853 105 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1331)
        (expr_list:REG_DEAD (reg:DI 1328)
            (nil))))
;;   UD chains for insn luid 7 uid 1853
;;      reg 1332 { d92(bb 105 insn 1852) }
;;   eq_note reg 1327 { d88(bb 105 insn 1847) }
(insn 1853 1852 1855 105 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1332)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 8 uid 1855
;;      reg 476 { d26(bb 105 insn 1853) }
(insn 1855 1853 1857 105 (set (reg:DI 1334)
        (ashift:DI (reg:DI 476 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1857
;;      reg 476 { d26(bb 105 insn 1853) }
;;      reg 1334 { d93(bb 105 insn 1855) }
;;   eq_note reg 476 { d26(bb 105 insn 1853) }
(insn 1857 1855 1858 105 (set (reg:DI 1335)
        (minus:DI (reg:DI 1334)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1334)
        (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1858
;;      reg 1327 { d88(bb 105 insn 1847) }
;;      reg 1335 { d94(bb 105 insn 1857) }
(insn 1858 1857 1859 105 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1335)
        (expr_list:REG_DEAD (reg:DI 1327 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 11 uid 1859
(debug_insn 1859 1858 1860 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 12 uid 1860
(debug_insn 1860 1859 1861 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 13 uid 1861
(debug_insn 1861 1860 1862 105 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 14 uid 1862
(debug_insn 1862 1861 1863 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 15 uid 1863
(debug_insn 1863 1862 1864 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1864
(debug_insn 1864 1863 1865 105 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1865
(debug_insn 1865 1864 1866 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 18 uid 1866
(debug_insn 1866 1865 1867 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 19 uid 1867
;;      reg 476 { d27(bb 105 insn 1858) }
(debug_insn 1867 1866 1868 105 (var_location:SI val (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 20 uid 1868
;;      reg 826 { d42(bb 107 insn 205) d41(bb 106 insn 211) d40(bb 103 insn 199) }
(insn 1868 1867 4379 105 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 21 uid 4379
;;      reg 1890 { d106(bb 102 insn 1870) }
(insn 4379 1868 1871 105 (set (reg:DI 1336)
        (reg:DI 1890)) generator/graph_generator.c:49 -1
     (nil))
;;   UD chains for insn luid 22 uid 1871
;;      reg 476 { d27(bb 105 insn 1858) }
;;      reg 1890 { d106(bb 102 insn 1870) }
;;   eq_note reg 476 { d27(bb 105 insn 1858) }
(insn 1871 4379 1872 105 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1890))) generator/graph_generator.c:49 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1336)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 476 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
;;   UD chains for insn luid 23 uid 1872
;;      reg 66 { d3(bb 105 insn 1871) }
(jump_insn 1872 1871 1873 105 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3983)
            (pc))) generator/graph_generator.c:49 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3983)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 476 695 714 747 750 826 1315 1317 1324 1889 1890
;; live  out 	 442 443 469 476 695 714 747 750 826 1315 1317 1324 1889 1890
;; rd  out 	(23) 442[11,12,13],443[14],469[22,23],476[27],695[28,29,30],714[31],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u1660(29){ }u1661(31){ }u1662(64){ }u1663(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 476 695 747 750 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 442 443 469 476 695 747 750 826
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
;; rd  in  	(23) 442[11,12,13],443[14],469[22,23],476[27],695[28,29,30],714[31],747[34],750[35,36,37],826[40,41,42],1315[77],1317[79],1324[85],1889[105],1890[106]
;; rd  gen 	(6) 463[15],695[29],714[32],750[36],751[38],826[41]
;; rd  kill	(16) 463[15,16],695[28,29,30],714[31,32,33],750[35,36,37],751[38,39],826[40,41,42]
;;  UD chains for artificial uses at top

(note 1873 1872 1874 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1874
;;      reg 476 { d27(bb 105 insn 1858) }
(insn 1874 1873 208 106 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 208
;;      reg 695 { d30(bb 107 insn 206) d29(bb 106 insn 209) d28(bb 103 insn 200) }
(insn 208 1874 209 106 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 209
;;      reg 469 { d23(bb 103 insn 202) d22(bb 101 insn 1789) }
(insn 209 208 210 106 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 210
;;      reg 826 { d42(bb 107 insn 205) d41(bb 106 insn 211) d40(bb 103 insn 199) }
(insn 210 209 211 106 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 211
;;      reg 750 { d37(bb 107 insn 207) d36(bb 106 insn 212) d35(bb 103 insn 201) }
(insn 211 210 212 106 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 5 uid 212
;;      reg 476 { d27(bb 105 insn 1858) }
(insn 212 211 1877 106 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 463 695 714 747 750 751 826
;; live  out 	 442 443 463 695 714 747 750 751 826
;; rd  out 	(11) 442[11,12,13],443[14],463[15],695[29],714[32],747[34],750[36],751[38],826[41]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u1670(29){ }u1671(31){ }u1672(64){ }u1673(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 469 695 714 747 750 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 442 443 469 695 714 747 750 826
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
;; rd  in  	(26) 66[1],442[11,12,13],443[14],469[22],695[29,30],714[32,33],747[34],750[36,37],826[41,42],1302[65],1303[66],1304[67],1305[68],1306[69],1307[70],1308[71],1309[72],1311[73],1312[74],1313[75]
;; rd  gen 	(6) 463[16],695[30],714[33],750[37],751[39],826[42]
;; rd  kill	(16) 463[15,16],695[28,29,30],714[31,32,33],750[35,36,37],751[38,39],826[40,41,42]
;;  UD chains for artificial uses at top

(code_label 1877 212 1878 107 81 "" [1 uses])
(note 1878 1877 1879 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1879
;;      reg 469 { d22(bb 101 insn 1789) }
(insn 1879 1878 203 107 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 203
;;      reg 714 { d33(bb 107 insn 204) d32(bb 106 insn 208) }
(insn 203 1879 204 107 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 714 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 204
;;      reg 826 { d42(bb 107 insn 205) d41(bb 106 insn 211) }
(insn 204 203 205 107 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 205
;;      reg 695 { d30(bb 107 insn 206) d29(bb 106 insn 209) }
(insn 205 204 206 107 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 206
;;      reg 750 { d37(bb 107 insn 207) d36(bb 106 insn 212) }
(insn 206 205 207 107 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 5 uid 207
;;      reg 469 { d22(bb 101 insn 1789) }
(insn 207 206 1880 107 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 463 695 714 747 750 751 826
;; live  out 	 442 443 463 695 714 747 750 751 826
;; rd  out 	(11) 442[11,12,13],443[14],463[16],695[30],714[33],747[34],750[37],751[39],826[42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u1680(29){ }u1681(31){ }u1682(64){ }u1683(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 463 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 463
;; lr  def 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  in  	 442 443 463 695 714 747 750 751 826
;; live  gen 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  kill	
;; rd  in  	(17) 442[11,12,13],443[14],463[15,16],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(7) 66[4],464[18],1337[96],1338[97],1339[98],1340[99],1341[100]
;; rd  kill	(18) 66[0,1,2,3,4,5,6,7,8,9,10],464[17,18],1337[96],1338[97],1339[98],1340[99],1341[100]
;;  UD chains for artificial uses at top

(code_label 1880 207 1881 108 84 "" [0 uses])
(note 1881 1880 1882 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1882
;;      reg 463 { d16(bb 107 insn 1879) d15(bb 106 insn 1874) }
(debug_insn 1882 1881 1883 108 (var_location:SI val (reg/v:SI 463 [ val ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1883
(debug_insn 1883 1882 1884 108 (var_location:SI spk_noise_factor (const_int 0 [0])) generator/graph_generator.c:52 -1
     (nil))
;;   UD chains for insn luid 2 uid 1884
(debug_insn 1884 1883 1885 108 (var_location:SI adjusted_bc_numerator (const_int 1900 [0x76c])) generator/graph_generator.c:56 -1
     (nil))
;;   UD chains for insn luid 3 uid 1885
(insn 1885 1884 1886 108 (set (reg:SI 1338)
        (const_int -776530087 [0xffffffffd1b71759])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 1886
;;      reg 463 { d16(bb 107 insn 1879) d15(bb 106 insn 1874) }
;;      reg 1338 { d97(bb 108 insn 1885) }
;;   eq_note reg 463 { d16(bb 107 insn 1879) d15(bb 106 insn 1874) }
(insn 1886 1885 1887 108 (set (reg:DI 1337)
        (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
            (zero_extend:DI (reg:SI 1338)))) generator/graph_generator.c:57 375 {umulsidi3}
     (expr_list:REG_DEAD (reg:SI 1338)
        (expr_list:REG_EQUAL (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
                (const_int 3518437209 [0xd1b71759]))
            (nil))))
;;   UD chains for insn luid 5 uid 1887
;;      reg 1337 { d96(bb 108 insn 1886) }
(insn 1887 1886 1888 108 (set (reg:DI 1339)
        (lshiftrt:DI (reg:DI 1337)
            (const_int 32 [0x20]))) generator/graph_generator.c:57 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1337)
        (nil)))
;;   UD chains for insn luid 6 uid 1888
;;      reg 1339 { d98(bb 108 insn 1887) }
;;   eq_note reg 463 { d16(bb 107 insn 1879) d15(bb 106 insn 1874) }
(insn 1888 1887 1889 108 (set (reg/v:SI 464 [ val ])
        (lshiftrt:SI (subreg:SI (reg:DI 1339) 0)
            (const_int 13 [0xd]))) generator/graph_generator.c:57 636 {*aarch64_lshr_sisd_or_int_si3}
     (expr_list:REG_DEAD (reg:DI 1339)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 463 [ val ])
                (const_int 10000 [0x2710]))
            (nil))))
;;   UD chains for insn luid 7 uid 1889
(insn 1889 1888 1890 108 (set (reg:SI 1341)
        (const_int 10000 [0x2710])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 1890
;;      reg 464 { d17(bb 108 insn 1888) }
;;      reg 1341 { d100(bb 108 insn 1889) }
;;   eq_note reg 464 { d17(bb 108 insn 1888) }
(insn 1890 1889 1891 108 (set (reg:SI 1340)
        (mult:SI (reg/v:SI 464 [ val ])
            (reg:SI 1341))) generator/graph_generator.c:57 362 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 1341)
        (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 464 [ val ])
                    (const_int 10000 [0x2710]))
                (nil)))))
;;   UD chains for insn luid 9 uid 1891
;;      reg 463 { d16(bb 107 insn 1879) d15(bb 106 insn 1874) }
;;      reg 1340 { d99(bb 108 insn 1890) }
(insn 1891 1890 1892 108 (set (reg/v:SI 464 [ val ])
        (minus:SI (reg/v:SI 463 [ val ])
            (reg:SI 1340))) generator/graph_generator.c:57 262 {subsi3}
     (expr_list:REG_DEAD (reg:SI 1340)
        (expr_list:REG_DEAD (reg/v:SI 463 [ val ])
            (nil))))
;;   UD chains for insn luid 10 uid 1892
;;      reg 464 { d18(bb 108 insn 1891) }
(debug_insn 1892 1891 1893 108 (var_location:SI val (reg/v:SI 464 [ val ])) generator/graph_generator.c:57 -1
     (nil))
;;   UD chains for insn luid 11 uid 1893
;;      reg 464 { d18(bb 108 insn 1891) }
(insn 1893 1892 1894 108 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 464 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:58 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 12 uid 1894
;;      reg 66 { d4(bb 108 insn 1893) }
(jump_insn 1894 1893 1895 108 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3985)
            (pc))) generator/graph_generator.c:58 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 3985)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 464 695 714 747 750 751 826
;; live  out 	 442 443 464 695 714 747 750 751 826
;; rd  out 	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u1697(29){ }u1698(31){ }u1699(64){ }u1700(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 464 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464
;; lr  def 	 66 [cc] 1342
;; live  in  	 442 443 464 695 714 747 750 751 826
;; live  gen 	 66 [cc] 1342
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(2) 66[5],1342[101]
;; rd  kill	(12) 66[0,1,2,3,4,5,6,7,8,9,10],1342[101]
;;  UD chains for artificial uses at top

(note 1895 1894 1896 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1896
;;      reg 464 { d18(bb 108 insn 1891) }
(debug_insn 1896 1895 1897 109 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:59 -1
     (nil))
;;   UD chains for insn luid 1 uid 1897
;;      reg 464 { d18(bb 108 insn 1891) }
(insn 1897 1896 1898 109 (set (reg:SI 1342 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:60 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 1898
;;      reg 1342 { d101(bb 109 insn 1897) }
(insn 1898 1897 1899 109 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1342 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:60 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1342 [ val ])
        (nil)))
;;   UD chains for insn luid 3 uid 1899
;;      reg 66 { d5(bb 109 insn 1898) }
(jump_insn 1899 1898 1900 109 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1909)
            (pc))) generator/graph_generator.c:60 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 1909)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 464 695 714 747 750 751 826
;; live  out 	 442 443 464 695 714 747 750 751 826
;; rd  out 	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u1705(29){ }u1706(31){ }u1707(64){ }u1708(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 464 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464
;; lr  def 	 66 [cc] 1343 1344
;; live  in  	 442 443 464 695 714 747 750 751 826
;; live  gen 	 66 [cc] 1343 1344
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(3) 66[6],1343[102],1344[103]
;; rd  kill	(13) 66[0,1,2,3,4,5,6,7,8,9,10],1343[102],1344[103]
;;  UD chains for artificial uses at top

(note 1900 1899 1901 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1901
;;      reg 464 { d18(bb 108 insn 1891) }
(debug_insn 1901 1900 1902 110 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:61 -1
     (nil))
;;   UD chains for insn luid 1 uid 1902
;;      reg 464 { d18(bb 108 insn 1891) }
(insn 1902 1901 1903 110 (set (reg:SI 1343 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:63 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
        (nil)))
;;   UD chains for insn luid 2 uid 1903
(insn 1903 1902 1904 110 (set (reg:SI 1344)
        (const_int 5699 [0x1643])) generator/graph_generator.c:63 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1904
;;      reg 1343 { d102(bb 110 insn 1902) }
;;      reg 1344 { d103(bb 110 insn 1903) }
;;   eq_note reg 1343 { d102(bb 110 insn 1902) }
(insn 1904 1903 1905 110 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1343 [ val ])
            (reg:SI 1344))) generator/graph_generator.c:63 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1344)
        (expr_list:REG_DEAD (reg:SI 1343 [ val ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 1343 [ val ])
                    (const_int 5699 [0x1643]))
                (nil)))))
;;   UD chains for insn luid 4 uid 1905
;;      reg 66 { d6(bb 110 insn 1904) }
(jump_insn 1905 1904 1906 110 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3989)
            (pc))) generator/graph_generator.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 3989)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; live  out 	 442 443 695 714 747 750 751 826
;; rd  out 	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u1714(29){ }u1715(31){ }u1716(64){ }u1717(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 828 829
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(2) 828[43],829[46]
;; rd  kill	(8) 828[43,44,45],829[46,47,48,49,50]
;;  UD chains for artificial uses at top

(note 1906 1905 274 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 274
(insn 274 1906 275 111 (set (reg:DI 829 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 275
(insn 275 274 1909 111 (set (reg:DI 828 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; live  out 	 442 443 695 714 747 750 751 826 828 829
;; rd  out 	(17) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[43],829[46]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u1718(29){ }u1719(31){ }u1720(64){ }u1721(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(1) 66[7]
;; rd  kill	(11) 66[0,1,2,3,4,5,6,7,8,9,10]
;;  UD chains for artificial uses at top

(code_label 1909 275 1910 112 86 "" [1 uses])
(note 1910 1909 1911 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1911
(debug_insn 1911 1910 1912 112 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 1912
(debug_insn 1912 1911 1913 112 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 1913
(debug_insn 1913 1912 1914 112 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 3 uid 1914
(debug_insn 1914 1913 1915 112 (var_location:SI src_offset (const_int 1 [0x1])) generator/graph_generator.c:138 -1
     (nil))
;;   UD chains for insn luid 4 uid 1915
(debug_insn 1915 1914 1916 112 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
;;   UD chains for insn luid 5 uid 1916
;;      reg 443 { d14(bb 290 insn 3962) }
;;      reg 747 { d34(bb 290 insn 3959) }
(insn 1916 1915 1917 112 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 1917
;;      reg 66 { d7(bb 112 insn 1916) }
(jump_insn 1917 1916 1918 112 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1939)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1939)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; live  out 	 442 443 695 714 747 750 751 826
;; rd  out 	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u1755(29){ }u1756(31){ }u1757(64){ }u1758(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(1) 66[8]
;; rd  kill	(11) 66[0,1,2,3,4,5,6,7,8,9,10]
;;  UD chains for artificial uses at top

(code_label 1939 1937 1940 115 87 "" [1 uses])
(note 1940 1939 1941 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1941
;;      reg 443 { d14(bb 290 insn 3962) }
;;      reg 747 { d34(bb 290 insn 3959) }
(insn 1941 1940 1942 115 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:143 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 1942
;;      reg 66 { d8(bb 115 insn 1941) }
(jump_insn 1942 1941 1943 115 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1947)
            (pc))) generator/graph_generator.c:143 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 1947)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; live  out 	 442 443 695 714 747 750 751 826
;; rd  out 	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1762(29){ }u1763(31){ }u1764(64){ }u1765(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442
;; lr  def 	 442 829 831
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 442 829 831
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(3) 442[11],829[47],831[52]
;; rd  kill	(11) 442[11,12,13],829[46,47,48,49,50],831[52,53,54]
;;  UD chains for artificial uses at top

(note 1943 1942 1944 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1944
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(insn 1944 1943 285 116 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 285
(insn 285 1944 286 116 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 286
(insn 286 285 1947 116 (set (reg:DI 831 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 829 831
;; live  out 	 442 443 695 714 747 750 751 826 829 831
;; rd  out 	(15) 442[11],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],829[47],831[52]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1768(29){ }u1769(31){ }u1770(64){ }u1771(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442
;; lr  def 	 442 829 831
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 442 829 831
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(3) 442[12],829[48],831[53]
;; rd  kill	(11) 442[11,12,13],829[46,47,48,49,50],831[52,53,54]
;;  UD chains for artificial uses at top

(code_label 1947 286 1948 117 88 "" [1 uses])
(note 1948 1947 1949 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1949
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(insn 1949 1948 282 117 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 282
;;      reg 442 { d12(bb 117 insn 1949) }
(insn 282 1949 283 117 (set (reg:DI 831 [ D.3798 ])
        (reg/v:DI 442 [ nverts ])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 283
(insn 283 282 1952 117 (set (reg:DI 829 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 829 831
;; live  out 	 442 443 695 714 747 750 751 826 829 831
;; rd  out 	(15) 442[12],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],829[48],831[53]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u3868(29){ }u3869(31){ }u3870(64){ }u3871(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 828 829
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],464[18],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(2) 828[44],829[49]
;; rd  kill	(8) 828[43,44,45],829[46,47,48,49,50]
;;  UD chains for artificial uses at top

(code_label 3985 3819 3984 274 197 "" [1 uses])
(note 3984 3985 276 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 276
(insn 276 3984 277 274 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 277
(insn 277 276 3989 274 (set (reg:DI 828 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; live  out 	 442 443 695 714 747 750 751 826 828 829
;; rd  out 	(17) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[44],829[49]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u3872(29){ }u3873(31){ }u3874(64){ }u3875(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 828 829
;; live  in  	 442 443 695 714 747 750 751 826
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(2) 828[45],829[50]
;; rd  kill	(8) 828[43,44,45],829[46,47,48,49,50]
;;  UD chains for artificial uses at top

(code_label 3989 277 3988 275 198 "" [1 uses])
(note 3988 3989 272 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 272
(insn 272 3988 273 275 (set (reg:DI 829 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 273
;;      reg 829 { d50(bb 275 insn 272) }
(insn 273 272 3823 275 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 829 [ D.3798 ])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; live  out 	 442 443 695 714 747 750 751 826 828 829
;; rd  out 	(17) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[45],829[50]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u3877(29){ }u3878(31){ }u3879(64){ }u3880(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 442 443 695 714 747 750 751 826 828 829
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(21) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[43,44,45],829[46,49,50]
;; rd  gen 	(1) 66[9]
;; rd  kill	(11) 66[0,1,2,3,4,5,6,7,8,9,10]
;;  UD chains for artificial uses at top

(code_label 3823 273 3824 276 85 "" [0 uses])
(note 3824 3823 3825 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3825
(debug_insn 3825 3824 3826 276 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 3826
(debug_insn 3826 3825 3827 276 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 3827
(debug_insn 3827 3826 3828 276 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 3 uid 3828
(debug_insn 3828 3827 3829 276 (var_location:SI src_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:138 -1
     (nil))
;;   UD chains for insn luid 4 uid 3829
(debug_insn 3829 3828 3830 276 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:139 -1
     (nil))
;;   UD chains for insn luid 5 uid 3830
;;      reg 443 { d14(bb 290 insn 3962) }
;;      reg 747 { d34(bb 290 insn 3959) }
(insn 3830 3829 3831 276 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3831
;;      reg 66 { d9(bb 276 insn 3830) }
(jump_insn 3831 3830 3832 276 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3841)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2374 (nil)))
 -> 3841)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; live  out 	 442 443 695 714 747 750 751 826 828 829
;; rd  out 	(21) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[43,44,45],829[46,49,50]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u3898(29){ }u3899(31){ }u3900(64){ }u3901(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 828 829
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 828
;; lr  def 	 442 830 831
;; live  in  	 442 443 695 714 747 750 751 826 828 829
;; live  gen 	 442 830 831
;; live  kill	
;; rd  in  	(21) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],828[43,44,45],829[46,49,50]
;; rd  gen 	(3) 442[13],830[51],831[54]
;; rd  kill	(7) 442[11,12,13],830[51],831[52,53,54]
;;  UD chains for artificial uses at top

(code_label 3841 3837 3842 278 184 "" [1 uses])
(note 3842 3841 3843 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3843
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(insn 3843 3842 3844 278 (set (reg:DI 830 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg/v:DI 442 [ nverts ])
        (nil)))
;;   UD chains for insn luid 1 uid 3844
;;      reg 828 { d45(bb 275 insn 273) d44(bb 274 insn 277) d43(bb 111 insn 275) }
;;      reg 830 { d51(bb 278 insn 3843) }
(insn 3844 3843 281 278 (set (reg:DI 831 [ D.3798 ])
        (mult:DI (reg:DI 828 [ D.3798 ])
            (reg:DI 830 [ D.3798 ]))) 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 828 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 2 uid 281
;;      reg 830 { d51(bb 278 insn 3843) }
(insn 281 3844 3847 278 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 830 [ D.3798 ])) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 830 [ D.3798 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 829 831
;; live  out 	 442 443 695 714 747 750 751 826 829 831
;; rd  out 	(17) 442[13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],829[46,49,50],831[54]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u3985(29){ }u3986(31){ }u3987(64){ }u3988(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826 829 831
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 747 829 831
;; lr  def 	 66 [cc] 443 747 1852
;; live  in  	 442 443 695 714 747 750 751 826 829 831
;; live  gen 	 66 [cc] 443 747 1852
;; live  kill	
;; rd  in  	(23) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42],829[46,47,48,49,50],831[52,53,54]
;; rd  gen 	(4) 66[10],443[14],747[34],1852[104]
;; rd  kill	(14) 66[0,1,2,3,4,5,6,7,8,9,10],443[14],747[34],1852[104]
;;  UD chains for artificial uses at top

(code_label 3952 4204 3953 290 89 "" [0 uses])
(note 3953 3952 3954 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3954
(debug_insn 3954 3953 3955 290 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 3955
(debug_insn 3955 3954 3956 290 (var_location:SI src_offset (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3956
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(debug_insn 3956 3955 3957 290 (var_location:DI D#31 (ashiftrt:DI (reg/v:DI 442 [ nverts ])
        (const_int 1 [0x1]))) generator/graph_generator.c:149 -1
     (nil))
;;   UD chains for insn luid 3 uid 3957
(debug_insn 3957 3956 3958 290 (var_location:DI nverts (debug_expr:DI D#31)) generator/graph_generator.c:149 -1
     (nil))
;;   UD chains for insn luid 4 uid 3958
(debug_insn 3958 3957 4072 290 (var_location:SI level (clobber (const_int 0 [0]))) generator/graph_generator.c:150 -1
     (nil))
;;   UD chains for insn luid 5 uid 4072
;;      reg 747 { d34(bb 290 insn 3959) }
;;      reg 831 { d54(bb 278 insn 3844) d53(bb 117 insn 282) d52(bb 116 insn 286) }
(debug_insn 4072 3958 3959 290 (var_location:DI D#52 (plus:DI (reg/v:DI 747 [ base_src ])
        (reg:DI 831 [ D.3798 ]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 3959
;;      reg 747 { d34(bb 290 insn 3959) }
;;      reg 831 { d54(bb 278 insn 3844) d53(bb 117 insn 282) d52(bb 116 insn 286) }
(insn 3959 4072 3960 290 (set (reg/v:DI 747 [ base_src ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 831 [ D.3798 ]))) generator/graph_generator.c:151 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 831 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 7 uid 3960
(debug_insn 3960 3959 3961 290 (var_location:DI base_src (debug_expr:DI D#52)) generator/graph_generator.c:151 -1
     (nil))
;;   UD chains for insn luid 8 uid 3961
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
;;      reg 829 { d50(bb 275 insn 272) d49(bb 274 insn 276) d48(bb 117 insn 283) d47(bb 116 insn 285) d46(bb 111 insn 274) }
(insn 3961 3960 3962 290 (set (reg:DI 1852 [ D.3798 ])
        (mult:DI (reg:DI 829 [ D.3798 ])
            (reg/v:DI 442 [ nverts ]))) generator/graph_generator.c:152 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 829 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3962
;;      reg 443 { d14(bb 290 insn 3962) }
;;      reg 1852 { d104(bb 290 insn 3961) }
(insn 3962 3961 3964 290 (set (reg/v:DI 443 [ base_tgt ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 1852 [ D.3798 ]))) generator/graph_generator.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1852 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 10 uid 3964
;;      reg 443 { d14(bb 290 insn 3962) }
(debug_insn 3964 3962 3965 290 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
;;   UD chains for insn luid 11 uid 3965
(debug_insn 3965 3964 3966 290 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
;;   UD chains for insn luid 12 uid 3966
(debug_insn 3966 3965 3967 290 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 13 uid 3967
(debug_insn 3967 3966 3969 290 (var_location:DI nverts (debug_expr:DI D#31)) -1
     (nil))
;;   UD chains for insn luid 14 uid 3969
;;      reg 442 { d13(bb 278 insn 281) d12(bb 117 insn 1949) d11(bb 116 insn 1944) }
(insn 3969 3967 3970 290 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 15 uid 3970
;;      reg 66 { d10(bb 290 insn 3969) }
(jump_insn 3970 3969 3979 290 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3968)
            (pc))) generator/graph_generator.c:136 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9551 (nil)))
 -> 3968)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 695 714 747 750 751 826
;; live  out 	 442 443 695 714 747 750 751 826
;; rd  out 	(15) 442[11,12,13],443[14],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 468 695 714 747 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 442 443 468 695 714 747 750 751 826
;; live  gen 	
;; live  kill	
;; rd  in  	(16) 442[11,12,13],443[14],468[20],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4346 1721 4345 299 282 "" [1 uses])
(note 4345 4346 1722 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 468 695 714 747 750 751 826
;; live  out 	 442 443 468 695 714 747 750 751 826
;; rd  out 	(16) 442[11,12,13],443[14],468[20],695[29,30],714[32,33],747[34],750[36,37],751[38,39],826[41,42]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 3 ******
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(set (reg:DI 1303)
    (const_int 104480 [0x19820]))

Hot cost: 8 (final)
Set in insn 1776 is invariant (0), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1306)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1779 is invariant (1), cost 4, depends on 
(const_int 7294 [0x1c7e])

Hot cost: 4 (final)
(set (reg:DI 1313)
    (const_int 7294 [0x1c7e]))

Hot cost: 4 (final)
Set in insn 1799 is invariant (2), cost 4, depends on 
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(set (reg:DI 1315)
    (const_int 107374182 [0x6666666]))

Hot cost: 8 (final)
Set in insn 1810 is invariant (3), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1317)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1812 is invariant (4), cost 4, depends on 
(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)
(set (reg:DI 1324)
    (const_int 2147483646 [0x7ffffffe]))

Hot cost: 4 (final)
Set in insn 1841 is invariant (5), cost 4, depends on 
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(set (reg:DI 1889)
    (const_int 104480 [0x19820]))

Hot cost: 8 (final)
Set in insn 1845 is invariant (6), cost 8, depends on 
(const_int 7294 [0x1c7e])

Hot cost: 4 (final)
(set (reg:DI 1890)
    (const_int 7294 [0x1c7e]))

Hot cost: 4 (final)
Set in insn 1870 is invariant (7), cost 4, depends on 
(set (reg:DI 1326)
    (reg:DI 1889))

Hot cost: 4 (final)
Set in insn 4378 is invariant (8), cost 4, depends on 6
(set (reg:DI 1336)
    (reg:DI 1890))

Hot cost: 4 (final)
Set in insn 4379 is invariant (9), cost 4, depends on 7
(const_int -776530087 [0xffffffffd1b71759])

Hot cost: 8 (final)
(set (reg:SI 1338)
    (const_int -776530087 [0xffffffffd1b71759]))

Hot cost: 8 (final)
Set in insn 1885 is invariant (10), cost 8, depends on 
(const_int 10000 [0x2710])

Hot cost: 4 (final)
(set (reg:SI 1341)
    (const_int 10000 [0x2710]))

Hot cost: 4 (final)
Set in insn 1889 is invariant (11), cost 4, depends on 
(const_int 1 [0x1])

Hot cost: 4 (final)
(set (reg:DI 829 [ D.3798 ])
    (const_int 1 [0x1]))

Hot cost: 4 (final)
Set in insn 276 is invariant (12), cost 4, depends on 
(set (reg:DI 828 [ D.3798 ])
    (const_int 0 [0]))

Hot cost: 4 (final)
Set in insn 277 is invariant (13), cost 4, depends on 
(set (reg:DI 829 [ D.3798 ])
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 283 is invariant (14), cost 4, depends on 
(const_int 1 [0x1])

Hot cost: 4 (final)
(set (reg:DI 829 [ D.3798 ])
    (const_int 1 [0x1]))

Hot cost: 4 (final)
Set in insn 285 is invariant (15), cost 4, depends on 
(set (reg:DI 831 [ D.3798 ])
    (const_int 0 [0]))

Hot cost: 4 (final)
Set in insn 286 is invariant (16), cost 4, depends on 
(const_int 5699 [0x1643])

Hot cost: 4 (final)
(set (reg:SI 1344)
    (const_int 5699 [0x1643]))

Hot cost: 4 (final)
Set in insn 1903 is invariant (17), cost 4, depends on 
(const_int 1 [0x1])

Hot cost: 4 (final)
(set (reg:DI 829 [ D.3798 ])
    (const_int 1 [0x1]))

Hot cost: 4 (final)
Set in insn 272 is invariant (18), cost 4, depends on 
(set (reg:DI 828 [ D.3798 ])
    (reg:DI 829 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 273 is invariant (19), cost 4, depends on 18
(set (reg:DI 829 [ D.3798 ])
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 274 is invariant (20), cost 4, depends on 
(set (reg:DI 828 [ D.3798 ])
    (const_int 0 [0]))

Cold cost: 4 (final)
Set in insn 275 is invariant (21), cost 4, depends on 
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(set (reg:DI 1286)
    (const_int 107374182 [0x6666666]))

Hot cost: 8 (final)
Set in insn 1697 is invariant (22), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1288)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1699 is invariant (23), cost 4, depends on 
(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)
(set (reg:DI 1295)
    (const_int 2147483646 [0x7ffffffe]))

Hot cost: 4 (final)
Set in insn 1719 is invariant (24), cost 4, depends on 
Invariant 4 is equivalent to invariant 1.
Invariant 6 is equivalent to invariant 0.
Invariant 7 is equivalent to invariant 2.
Invariant 14 is equivalent to invariant 13.
Invariant 15 is equivalent to invariant 12.
Invariant 16 is equivalent to invariant 13.
Invariant 18 is equivalent to invariant 12.
Invariant 20 is equivalent to invariant 13.
Invariant 21 is equivalent to invariant 13.
Invariant 22 is equivalent to invariant 3.
Invariant 23 is equivalent to invariant 1.
Invariant 24 is equivalent to invariant 5.
Decided to move invariant 8 -- gain 12
Decided to move dependent invariant 6
Decided to move invariant 3 -- gain 8
Decided to move invariant 9 -- gain 8
Decided to move dependent invariant 7
Decided to move invariant 10 -- gain 8
Decided to move invariant 19 -- gain 8
Decided to move dependent invariant 18
Decided to move invariant 1 -- gain 4
Decided to move invariant 5 -- gain 4
Decided to move invariant 11 -- gain 4
Decided to move invariant 13 -- gain 4
Decided to move invariant 17 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 1776
  from 101 to 100
Invariant 1 moved without introducing a new temporary register
changing bb of uid 1779
  from 101 to 100
Invariant 2 moved without introducing a new temporary register
changing bb of uid 1799
  from 101 to 100
deferring rescan insn with uid = 1810.
deferring rescan insn with uid = 1811.
deferring rescan insn with uid = 4380.
changing bb of uid 1810
  from 102 to 100
deferring rescan insn with uid = 1849.
deferring rescan insn with uid = 1813.
deferring rescan insn with uid = 4381.
deferring deletion of insn with uid = 1812.
deferring rescan insn with uid = 1841.
deferring rescan insn with uid = 1842.
deferring rescan insn with uid = 4382.
changing bb of uid 1841
  from 102 to 100
deferring rescan insn with uid = 1846.
deferring rescan insn with uid = 4378.
deferring rescan insn with uid = 4383.
deferring deletion of insn with uid = 1845.
deferring rescan insn with uid = 1871.
deferring rescan insn with uid = 4379.
deferring rescan insn with uid = 4384.
deferring deletion of insn with uid = 1870.
deferring rescan insn with uid = 4378.
deferring rescan insn with uid = 4385.
changing bb of uid 4378
  from 105 to 100
deferring rescan insn with uid = 4379.
deferring rescan insn with uid = 4386.
changing bb of uid 4379
  from 105 to 100
deferring rescan insn with uid = 1885.
deferring rescan insn with uid = 1886.
deferring rescan insn with uid = 4387.
changing bb of uid 1885
  from 108 to 100
deferring rescan insn with uid = 1889.
deferring rescan insn with uid = 1890.
deferring rescan insn with uid = 4388.
changing bb of uid 1889
  from 108 to 100
deferring rescan insn with uid = 276.
deferring rescan insn with uid = 4389.
changing bb of uid 276
  from 274 to 100
deferring rescan insn with uid = 277.
deferring rescan insn with uid = 4390.
changing bb of uid 277
  from 274 to 100
deferring rescan insn with uid = 4391.
deferring deletion of insn with uid = 283.
deferring rescan insn with uid = 4392.
deferring deletion of insn with uid = 285.
deferring rescan insn with uid = 4393.
deferring deletion of insn with uid = 286.
deferring rescan insn with uid = 1903.
deferring rescan insn with uid = 1904.
deferring rescan insn with uid = 4394.
changing bb of uid 1903
  from 110 to 100
deferring rescan insn with uid = 273.
deferring rescan insn with uid = 4395.
deferring deletion of insn with uid = 272.
deferring rescan insn with uid = 273.
deferring rescan insn with uid = 4396.
changing bb of uid 273
  from 275 to 100
deferring rescan insn with uid = 4397.
deferring deletion of insn with uid = 274.
deferring rescan insn with uid = 4398.
deferring deletion of insn with uid = 275.
deferring rescan insn with uid = 1698.
deferring rescan insn with uid = 4399.
deferring deletion of insn with uid = 1697.
deferring rescan insn with uid = 1700.
deferring rescan insn with uid = 4400.
deferring deletion of insn with uid = 1699.
deferring rescan insn with uid = 1720.
deferring rescan insn with uid = 4401.
deferring deletion of insn with uid = 1719.
*****starting processing of loop 5 ******
starting the processing of deferred insns
rescanning insn with uid = 273.
rescanning insn with uid = 276.
rescanning insn with uid = 277.
rescanning insn with uid = 1698.
rescanning insn with uid = 1700.
rescanning insn with uid = 1720.
rescanning insn with uid = 1810.
rescanning insn with uid = 1811.
rescanning insn with uid = 1813.
rescanning insn with uid = 1841.
rescanning insn with uid = 1842.
rescanning insn with uid = 1846.
rescanning insn with uid = 1849.
rescanning insn with uid = 1871.
rescanning insn with uid = 1885.
rescanning insn with uid = 1886.
rescanning insn with uid = 1889.
rescanning insn with uid = 1890.
rescanning insn with uid = 1903.
rescanning insn with uid = 1904.
rescanning insn with uid = 4378.
rescanning insn with uid = 4379.
rescanning insn with uid = 4380.
rescanning insn with uid = 4381.
rescanning insn with uid = 4382.
rescanning insn with uid = 4383.
rescanning insn with uid = 4384.
rescanning insn with uid = 4385.
rescanning insn with uid = 4386.
rescanning insn with uid = 4387.
rescanning insn with uid = 4388.
rescanning insn with uid = 4389.
rescanning insn with uid = 4390.
rescanning insn with uid = 4391.
rescanning insn with uid = 4392.
rescanning insn with uid = 4393.
rescanning insn with uid = 4394.
rescanning insn with uid = 4395.
rescanning insn with uid = 4396.
rescanning insn with uid = 4397.
rescanning insn with uid = 4398.
rescanning insn with uid = 4399.
rescanning insn with uid = 4400.
rescanning insn with uid = 4401.
ending the processing of deferred insns
setting blocks to analyze 91, 92, 293, 300
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 8 (0.027)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 6 ( 0.02)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 7 (0.023)


starting region dump


main

Dataflow summary:
def_info->table_size = 67, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,1u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d,1u} r1272={1d,1u} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d} r1287={1d,2u} r1288={1d} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,4u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,6u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,4u} r1314={1d,3u,2e} r1315={1d} r1316={1d,2u} r1317={1d} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d} r1325={1d,1u} r1326={1d} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d} r1337={1d,1u} r1338={1d} r1339={1d,1u} r1340={1d,1u} r1341={1d} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} r1889={1d} r1890={1d} r1891={1d,4u} r1892={1d,4u} r1893={1d,1u} r1894={1d,1u} r1895={1d,2u} r1896={1d,2u} r1897={1d,4u} r1898={1d,5u} r1899={1d,2u} r1900={1d,1u} 
;;    total ref usage 11655{7883d,3701u,71e} in 2732{2597 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 3[6,6] 4[7,7] 5[8,8] 6[9,9] 7[10,10] 8[11,11] 9[12,12] 10[13,13] 11[14,14] 12[15,15] 13[16,16] 14[17,17] 15[18,18] 16[19,20] 17[21,22] 18[23,23] 30[24,24] 32[25,25] 33[26,26] 34[27,27] 35[28,28] 36[29,29] 37[30,30] 38[31,31] 39[32,32] 48[33,33] 49[34,34] 50[35,35] 51[36,36] 52[37,37] 53[38,38] 54[39,39] 55[40,40] 56[41,41] 57[42,42] 58[43,43] 59[44,44] 60[45,45] 61[46,46] 62[47,47] 63[48,48] 66[49,51] 266[52,52] 457[53,53] 460[54,54] 1259[55,55] 1261[56,56] 1262[57,57] 1263[58,58] 1264[59,59] 1266[60,60] 1267[61,61] 1268[62,62] 1269[63,63] 1270[64,64] 1271[65,65] 1272[66,66] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u1357(29){ }u1358(31){ }u1359(64){ }u1360(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 457 460 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 457 460 1863
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  in  	 266 457 460
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(4) 66[51],266[52],457[53],460[54]
;; rd  gen 	(12) 1259[55],1261[56],1262[57],1263[58],1264[59],1266[60],1267[61],1268[62],1269[63],1270[64],1271[65],1272[66]
;; rd  kill	(13) 30[24],1259[55],1261[56],1262[57],1263[58],1264[59],1266[60],1267[61],1268[62],1269[63],1270[64],1271[65],1272[66]
;;  UD chains for artificial uses at top

(note 1585 1584 3975 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3975
;;      reg 457 { d53(bb 293 insn 1581) }
(debug_insn 3975 1585 1586 91 (var_location:QI D#50 (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/graph_generator.c:136 -1
     (nil))
;;   UD chains for insn luid 1 uid 1586
;;      reg 460 { d54(bb 92 insn 1614) }
(debug_insn 1586 3975 1587 91 (var_location:DI mat (plus:DI (plus:DI (mult:DI (zero_extend:DI (debug_expr:QI D#50))
                (const_int 72 [0x48]))
            (mult:DI (sign_extend:DI (reg/v:SI 460 [ byte_index ]))
                (const_int 18432 [0x4800])))
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 2 uid 1587
;;      reg 64 { }
(debug_insn 1587 1586 1590 91 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 3 uid 1590
;;      reg 457 { d53(bb 293 insn 1581) }
(insn 1590 1587 1592 91 (set (reg:DI 1259 [ val ])
        (sign_extend:DI (reg/v:SI 457 [ val ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 457 [ val ])
        (nil)))
;;   UD chains for insn luid 4 uid 1592
;;      reg 1259 { d55(bb 91 insn 1590) }
(insn 1592 1590 1594 91 (set (reg:DI 1261)
        (ashift:DI (reg:DI 1259 [ val ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 1594
;;      reg 1259 { d55(bb 91 insn 1590) }
;;      reg 1261 { d56(bb 91 insn 1592) }
;;   eq_note reg 1259 { d55(bb 91 insn 1590) }
(insn 1594 1592 1595 91 (set (reg:DI 1262)
        (plus:DI (reg:DI 1261)
            (reg:DI 1259 [ val ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1261)
        (expr_list:REG_DEAD (reg:DI 1259 [ val ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1259 [ val ])
                    (const_int 9 [0x9]))
                (nil)))))
;;   UD chains for insn luid 6 uid 1595
;;      reg 1262 { d57(bb 91 insn 1594) }
(insn 1595 1594 1597 91 (set (reg:DI 1263)
        (ashift:DI (reg:DI 1262)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1262)
        (nil)))
;;   UD chains for insn luid 7 uid 1597
;;      reg 460 { d54(bb 92 insn 1614) }
(insn 1597 1595 1599 91 (set (reg:DI 1264 [ byte_index ])
        (sign_extend:DI (reg/v:SI 460 [ byte_index ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 1599
;;      reg 1264 { d59(bb 91 insn 1597) }
(insn 1599 1597 1601 91 (set (reg:DI 1266)
        (ashift:DI (reg:DI 1264 [ byte_index ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1601
;;      reg 1264 { d59(bb 91 insn 1597) }
;;      reg 1266 { d60(bb 91 insn 1599) }
;;   eq_note reg 1264 { d59(bb 91 insn 1597) }
(insn 1601 1599 1602 91 (set (reg:DI 1267)
        (plus:DI (reg:DI 1266)
            (reg:DI 1264 [ byte_index ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1266)
        (expr_list:REG_DEAD (reg:DI 1264 [ byte_index ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1264 [ byte_index ])
                    (const_int 9 [0x9]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1602
;;      reg 1267 { d61(bb 91 insn 1601) }
(insn 1602 1601 1604 91 (set (reg:DI 1268)
        (ashift:DI (reg:DI 1267)
            (const_int 11 [0xb]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1267)
        (nil)))
;;   UD chains for insn luid 11 uid 1604
;;      reg 1263 { d58(bb 91 insn 1595) }
;;      reg 1268 { d62(bb 91 insn 1602) }
(insn 1604 1602 1605 91 (set (reg:DI 1269)
        (plus:DI (reg:DI 1263)
            (reg:DI 1268))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1268)
        (expr_list:REG_DEAD (reg:DI 1263)
            (nil))))
;;   UD chains for insn luid 12 uid 1605
(insn 1605 1604 1606 91 (set (reg/f:DI 1272)
        (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 13 uid 1606
;;      reg 1272 { d66(bb 91 insn 1605) }
(insn 1606 1605 1607 91 (set (reg/f:DI 1271)
        (lo_sum:DI (reg/f:DI 1272)
            (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1272)
        (expr_list:REG_EQUAL (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)
            (nil))))
;;   UD chains for insn luid 14 uid 1607
;;      reg 1269 { d63(bb 91 insn 1604) }
;;      reg 1271 { d65(bb 91 insn 1606) }
(insn 1607 1606 1608 91 (set (reg:DI 1270 [ D.3811 ])
        (plus:DI (reg:DI 1269)
            (reg/f:DI 1271))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1271)
        (expr_list:REG_DEAD (reg:DI 1269)
            (nil))))
;;   UD chains for insn luid 15 uid 1608
;;      reg 1863 { }
;;   eq_note reg 64 { }
(insn 1608 1607 1609 91 (set (reg:DI 2 x2)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
;;   UD chains for insn luid 16 uid 1609
;;      reg 1863 { }
;;   eq_note reg 64 { }
(insn 1609 1608 1610 91 (set (reg:DI 1 x1)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
;;   UD chains for insn luid 17 uid 1610
;;      reg 1270 { d64(bb 91 insn 1607) }
(insn 1610 1609 1611 91 (set (reg:DI 0 x0)
        (reg:DI 1270 [ D.3811 ])) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1270 [ D.3811 ])
        (nil)))
;;   UD chains for insn luid 18 uid 1611
;;      reg 31 { }
;;      reg 0 { d0(bb 91 insn 1610) }
;;      reg 1 { d2(bb 91 insn 1609) }
;;      reg 2 { d4(bb 91 insn 1608) }
(call_insn 1611 1610 1612 91 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>) [0 mrg_apply_transition S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:165 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_DEAD (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; live  out 	 266 460
;; rd  out 	(2) 266[52],460[54]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u1401(29){ }u1402(31){ }u1403(64){ }u1404(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460
;; lr  def 	 66 [cc] 266 460
;; live  in  	 266 460
;; live  gen 	 66 [cc] 266 460
;; live  kill	
;; rd  in  	(4) 66[51],266[52],457[53],460[54]
;; rd  gen 	(3) 66[50],266[52],460[54]
;; rd  kill	(5) 66[49,50,51],266[52],460[54]
;;  UD chains for artificial uses at top

(code_label 1612 1611 1613 92 73 "" [1 uses])
(note 1613 1612 1614 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1614
;;      reg 460 { d54(bb 92 insn 1614) }
(insn 1614 1613 1615 92 (set (reg/v:SI 460 [ byte_index ])
        (plus:SI (reg/v:SI 460 [ byte_index ])
            (const_int 1 [0x1]))) generator/splittable_mrg.c:193 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1615
;;      reg 460 { d54(bb 92 insn 1614) }
(debug_insn 1615 1614 4078 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) generator/splittable_mrg.c:193 -1
     (nil))
;;   UD chains for insn luid 2 uid 4078
;;      reg 266 { d52(bb 92 insn 1616) }
(debug_insn 4078 1615 1616 92 (var_location:DI D#56 (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
        (const_int 8 [0x8]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 1616
;;      reg 266 { d52(bb 92 insn 1616) }
(insn 1616 4078 1618 92 (set (reg/v:DI 266 [ exponent_middle ])
        (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
            (const_int 8 [0x8]))) generator/splittable_mrg.c:193 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 4 uid 1618
;;      reg 460 { d54(bb 92 insn 1614) }
(debug_insn 1618 1616 1619 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
;;   UD chains for insn luid 5 uid 1619
(debug_insn 1619 1618 1621 92 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
;;   UD chains for insn luid 6 uid 1621
;;      reg 266 { d52(bb 92 insn 1616) }
(insn 1621 1619 1622 92 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 7 uid 1622
;;      reg 66 { d50(bb 92 insn 1621) }
(jump_insn 1622 1621 4348 92 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4348)
            (pc))) generator/splittable_mrg.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4348)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; live  out 	 266 460
;; rd  out 	(2) 266[52],460[54]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266
;; lr  def 	 66 [cc] 457
;; live  in  	 266 460
;; live  gen 	 66 [cc] 457
;; live  kill	
;; rd  in  	(2) 266[52],460[54]
;; rd  gen 	(2) 66[51],457[53]
;; rd  kill	(4) 66[49,50,51],457[53]
;;  UD chains for artificial uses at top

(code_label 4334 1578 4333 293 276 "" [0 uses])
(note 4333 4334 1579 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1579
;;      reg 460 { d54(bb 92 insn 1614) }
(debug_insn 1579 4333 1580 293 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1580
(debug_insn 1580 1579 1581 293 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
;;   UD chains for insn luid 2 uid 1581
;;      reg 266 { d52(bb 92 insn 1616) }
(insn 1581 1580 1582 293 (set (reg/v:SI 457 [ val ])
        (zero_extend:SI (subreg:QI (reg/v:DI 266 [ exponent_middle ]) 0))) generator/splittable_mrg.c:194 88 {*zero_extendqisi2_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1582
;;      reg 457 { d53(bb 293 insn 1581) }
(debug_insn 1582 1581 1583 293 (var_location:QI val (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/splittable_mrg.c:194 -1
     (nil))
;;   UD chains for insn luid 4 uid 1583
;;      reg 457 { d53(bb 293 insn 1581) }
(insn 1583 1582 1584 293 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 457 [ val ])
            (const_int 0 [0]))) generator/splittable_mrg.c:195 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 5 uid 1584
;;      reg 66 { d51(bb 293 insn 1583) }
(jump_insn 1584 1583 1585 293 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1612)
            (pc))) generator/splittable_mrg.c:195 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1612)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 457 460 1863
;; live  out 	 266 457 460
;; rd  out 	(3) 266[52],457[53],460[54]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 266 460
;; live  gen 	
;; live  kill	
;; rd  in  	(2) 266[52],460[54]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4348 1622 4347 300 283 "" [1 uses])
(note 4347 4348 1627 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460 1863
;; live  out 	 266 460
;; rd  out 	(2) 266[52],460[54]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 5 ******
(high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))

Hot cost: 4 (final)
(set (reg/f:DI 1272)
    (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)))

Hot cost: 4 (final)
Set in insn 1605 is invariant (0), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1272)
    (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))

Hot cost: 4 (final)
(set (reg/f:DI 1271)
    (lo_sum:DI (reg/f:DI 1272)
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)))

Hot cost: 4 (final)
Set in insn 1606 is invariant (1), cost 4, depends on 0
Set in insn 1608 is invariant (2), cost 0, depends on 
Set in insn 1609 is invariant (3), cost 0, depends on 
Invariant 3 is equivalent to invariant 2.
Decided to move invariant 1 -- gain 8
Decided to move dependent invariant 0
deferring rescan insn with uid = 1605.
deferring rescan insn with uid = 1606.
deferring rescan insn with uid = 4402.
changing bb of uid 1605
  from 91 to 90
deferring rescan insn with uid = 1606.
deferring rescan insn with uid = 1607.
deferring rescan insn with uid = 4403.
changing bb of uid 1606
  from 91 to 90
*****starting processing of loop 2 ******
starting the processing of deferred insns
rescanning insn with uid = 1605.
rescanning insn with uid = 1606.
rescanning insn with uid = 1607.
rescanning insn with uid = 4402.
rescanning insn with uid = 4403.
ending the processing of deferred insns
setting blocks to analyze 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 274, 275, 276, 278, 290, 293, 299, 300
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 110 ( 0.37)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 92 ( 0.31)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 113 ( 0.38)


starting region dump


main

Dataflow summary:
def_info->table_size = 306, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u,1e} r433={1d,3u} r434={1d,2u,1e} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,6u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,6u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,1u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d} r1272={1d} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d,1u} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d} r1287={1d,2u} r1288={1d} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,4u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,6u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,4u} r1314={1d,3u,2e} r1315={1d} r1316={1d,2u} r1317={1d} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d} r1325={1d,1u} r1326={1d} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d} r1337={1d,1u} r1338={1d} r1339={1d,1u} r1340={1d,1u} r1341={1d} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d,1u} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d,1u} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} r1889={1d} r1890={1d} r1891={1d,4u} r1892={1d,4u} r1893={1d,1u} r1894={1d,1u} r1895={1d,2u} r1896={1d,2u} r1897={1d,4u} r1898={1d,5u} r1899={1d,2u} r1900={1d,1u} r1901={1d,2u} r1902={1d,2u} 
;;    total ref usage 11659{7885d,3703u,71e} in 2734{2599 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 3[6,6] 4[7,7] 5[8,8] 6[9,9] 7[10,10] 8[11,11] 9[12,12] 10[13,13] 11[14,14] 12[15,15] 13[16,16] 14[17,17] 15[18,18] 16[19,20] 17[21,22] 18[23,23] 30[24,24] 32[25,25] 33[26,26] 34[27,27] 35[28,28] 36[29,29] 37[30,30] 38[31,31] 39[32,32] 48[33,33] 49[34,34] 50[35,35] 51[36,36] 52[37,37] 53[38,38] 54[39,39] 55[40,40] 56[41,41] 57[42,42] 58[43,43] 59[44,44] 60[45,45] 61[46,46] 62[47,47] 63[48,48] 66[49,71] 266[72,73] 435[74,74] 442[75,78] 443[79,81] 457[82,82] 460[83,84] 463[85,86] 464[87,88] 468[89,92] 469[93,95] 473[96,97] 476[98,99] 478[100,100] 480[101,101] 482[102,102] 484[103,103] 485[104,104] 487[105,105] 489[106,106] 490[107,107] 492[108,108] 494[109,109] 496[110,110] 499[111,111] 501[112,112] 503[113,113] 504[114,114] 506[115,115] 508[116,116] 509[117,117] 511[118,118] 513[119,119] 515[120,120] 519[121,121] 520[122,122] 521[123,123] 523[124,124] 525[125,125] 527[126,126] 528[127,127] 530[128,128] 532[129,129] 533[130,130] 535[131,131] 537[132,132] 539[133,133] 540[134,134] 542[135,135] 544[136,136] 546[137,137] 548[138,138] 549[139,139] 551[140,140] 553[141,141] 554[142,142] 556[143,143] 558[144,144] 560[145,145] 576[146,146] 695[147,150] 714[151,154] 747[155,157] 750[158,161] 751[162,164] 826[165,168] 828[169,171] 829[172,176] 830[177,177] 831[178,180] 1259[181,181] 1261[182,182] 1262[183,183] 1263[184,184] 1264[185,185] 1266[186,186] 1267[187,187] 1268[188,188] 1269[189,189] 1270[190,190] 1271[191,191] 1272[192,192] 1273[193,193] 1274[194,194] 1275[195,195] 1276[196,196] 1277[197,197] 1278[198,198] 1279[199,199] 1280[200,200] 1282[201,201] 1283[202,202] 1285[203,203] 1286[204,204] 1287[205,205] 1288[206,206] 1289[207,207] 1290[208,208] 1291[209,209] 1293[210,210] 1294[211,211] 1295[212,212] 1302[213,213] 1303[214,214] 1304[215,215] 1305[216,216] 1306[217,217] 1307[218,218] 1308[219,219] 1309[220,220] 1311[221,221] 1312[222,222] 1313[223,223] 1314[224,224] 1315[225,225] 1316[226,226] 1317[227,227] 1318[228,228] 1319[229,229] 1320[230,230] 1322[231,231] 1323[232,232] 1324[233,233] 1325[234,234] 1326[235,235] 1327[236,236] 1328[237,237] 1330[238,238] 1331[239,239] 1332[240,240] 1334[241,241] 1335[242,242] 1336[243,243] 1337[244,244] 1338[245,245] 1339[246,246] 1340[247,247] 1341[248,248] 1342[249,249] 1343[250,250] 1344[251,251] 1353[252,252] 1354[253,253] 1355[254,254] 1356[255,255] 1357[256,256] 1358[257,257] 1359[258,258] 1360[259,259] 1361[260,260] 1362[261,261] 1363[262,262] 1364[263,263] 1365[264,264] 1366[265,265] 1367[266,266] 1368[267,267] 1369[268,268] 1370[269,269] 1371[270,270] 1372[271,271] 1373[272,272] 1380[273,273] 1381[274,274] 1382[275,275] 1383[276,276] 1384[277,277] 1385[278,278] 1386[279,279] 1387[280,280] 1388[281,281] 1389[282,282] 1390[283,283] 1391[284,284] 1392[285,285] 1393[286,286] 1394[287,287] 1395[288,288] 1396[289,289] 1397[290,290] 1852[291,291] 1889[292,292] 1890[293,293] 1891[294,294] 1892[295,295] 1893[296,296] 1894[297,297] 1895[298,298] 1896[299,299] 1897[300,300] 1898[301,301] 1899[302,302] 1900[303,303] 1901[304,304] 1902[305,305] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u1313(29){ }u1314(31){ }u1315(64){ }u1316(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 435 438 441 447
;; lr  def 	 66 [cc] 266 460
;; live  in  	 435 576
;; live  gen 	 66 [cc] 266 460
;; live  kill	
;; rd  in  	(3) 66[68],435[74],576[146]
;; rd  gen 	(3) 66[49],266[72],460[83]
;; rd  kill	(27) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],266[72,73],460[83,84]
;;  UD chains for artificial uses at top

(code_label 2167 215 1530 87 94 "" [1 uses])
(note 1530 2167 1531 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1531
;;      reg 64 { }
;;      reg 438 { }
(insn 1531 1530 1532 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1532
;;      reg 64 { }
;;      reg 441 { }
(insn 1532 1531 1533 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 1533
;;      reg 64 { }
;;      reg 438 { }
(insn 1533 1532 1534 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1534
;;      reg 64 { }
;;      reg 441 { }
(insn 1534 1533 1535 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 1535
;;      reg 64 { }
;;      reg 447 { }
(insn 1535 1534 4079 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 4079
;;      reg 435 { d74(bb 125 insn 2161) }
(debug_insn 4079 1535 1536 87 (var_location:DI D#56 (reg/v:DI 435 [ start_edge ])) -1
     (nil))
;;   UD chains for insn luid 6 uid 1536
;;      reg 435 { d74(bb 125 insn 2161) }
(insn 1536 4079 1537 87 (set (reg/v:DI 266 [ exponent_middle ])
        (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:195 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 1537
;;      reg 64 { }
(debug_insn 1537 1536 1538 87 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 8 uid 1538
(debug_insn 1538 1537 1542 87 (var_location:DI exponent_high (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 9 uid 1542
(debug_insn 1542 1538 1543 87 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 10 uid 1543
(debug_insn 1543 1542 1544 87 (var_location:SI byte_index (const_int 8 [0x8])) -1
     (nil))
;;   UD chains for insn luid 11 uid 1544
(debug_insn 1544 1543 195 87 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
;;   UD chains for insn luid 12 uid 195
(insn 195 1544 1545 87 (set (reg/v:SI 460 [ byte_index ])
        (const_int 8 [0x8])) generator/splittable_mrg.c:193 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 13 uid 1545
;;      reg 435 { d74(bb 125 insn 2161) }
(insn 1545 195 1546 87 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 435 [ start_edge ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 14 uid 1546
;;      reg 66 { d49(bb 87 insn 1545) }
(jump_insn 1546 1545 1623 87 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1620)
            (pc))) generator/splittable_mrg.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 1620)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863
;; live  out 	 266 435 460 576
;; rd  out 	(4) 266[72],435[74],460[83],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u1332(29){ }u1333(31){ }u1334(64){ }u1335(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 290
;; lr  def 	 66 [cc]
;; live  in  	 435 576
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(8) 266[72,73],435[74],460[83,84],576[146],1901[304],1902[305]
;; rd  gen 	(1) 66[50]
;; rd  kill	(23) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]
;;  UD chains for artificial uses at top

(code_label 1623 1546 1547 88 75 "" [0 uses])
(note 1547 1623 1550 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1550
(debug_insn 1550 1547 1551 88 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 1 uid 1551
(debug_insn 1551 1550 1552 88 (var_location:DI exponent_high (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 2 uid 1552
(debug_insn 1552 1551 1553 88 (var_location:DI exponent_middle (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 3 uid 1553
(debug_insn 1553 1552 1554 88 (var_location:SI byte_index (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 4 uid 1554
(debug_insn 1554 1553 1555 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 5 uid 1555
(debug_insn 1555 1554 1556 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 6 uid 1556
(debug_insn 1556 1555 1557 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 7 uid 1557
(debug_insn 1557 1556 1558 88 (var_location:DI exponent_low (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
;;   UD chains for insn luid 8 uid 1558
(debug_insn 1558 1557 1559 88 (var_location:DI D#37 (ashift:DI (debug_expr:DI D#56)
        (const_int 4 [0x4]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 9 uid 1559
(debug_insn 1559 1558 1560 88 (var_location:DI D#36 (plus:DI (debug_expr:DI D#57)
        (debug_expr:DI D#37))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 10 uid 1560
(debug_insn 1560 1559 1562 88 (var_location:SI D#1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 11 uid 1562
(debug_insn 1562 1560 1563 88 (var_location:SI lgN (debug_expr:SI D#53)) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 12 uid 1563
;;      reg 64 { }
(debug_insn 1563 1562 1564 88 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 13 uid 1564
(debug_insn 1564 1563 1565 88 (var_location:DI result (debug_expr:DI D#36)) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 14 uid 1565
(debug_insn 1565 1564 1566 88 (var_location:DI val0 (debug_expr:DI D#54)) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 15 uid 1566
(debug_insn 1566 1565 1567 88 (var_location:DI val1 (debug_expr:DI D#55)) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 16 uid 1567
(debug_insn 1567 1566 1568 88 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 17 uid 1568
(debug_insn 1568 1567 1569 88 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 18 uid 1569
(debug_insn 1569 1568 1570 88 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 19 uid 1570
;;      reg 290 { }
(debug_insn 1570 1569 1571 88 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) -1
     (nil))
;;   UD chains for insn luid 20 uid 1571
;;      reg 290 { }
(insn 1571 1570 1572 88 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 290 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 21 uid 1572
;;      reg 66 { d50(bb 88 insn 1571) }
(jump_insn 1572 1571 1575 88 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1627)
            (pc))) generator/graph_generator.c:136 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 1627)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576
;; rd  out 	(2) 435[74],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u1340(29){ }u1341(31){ }u1342(64){ }u1343(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 443 747
;; live  in  	 435 576
;; live  gen 	 443 747
;; live  kill	
;; rd  in  	(2) 435[74],576[146]
;; rd  gen 	(2) 443[79],747[155]
;; rd  kill	(6) 443[79,80,81],747[155,156,157]
;;  UD chains for artificial uses at top

(note 1575 1572 213 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 213
(insn 213 1575 4074 89 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/graph_generator.c:135 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 4074
(debug_insn 4074 213 214 89 (var_location:DI D#52 (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 2 uid 214
(insn 214 4074 1620 89 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/graph_generator.c:135 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; live  out 	 435 443 576 747
;; rd  out 	(4) 435[74],443[79],576[146],747[155]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u1348(29){ }u1349(31){ }u1350(64){ }u1351(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1901 1902
;; live  in  	 266 435 460 576
;; live  gen 	 1901 1902
;; live  kill	
;; rd  in  	(4) 266[72],435[74],460[83],576[146]
;; rd  gen 	(2) 1901[304],1902[305]
;; rd  kill	(2) 1901[304],1902[305]
;;  UD chains for artificial uses at top

(code_label 1620 214 1578 90 74 "" [1 uses])
(note 1578 1620 1605 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1605
(insn 1605 1578 1606 90 (set (reg/f:DI 1901)
        (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1606
;;      reg 1901 { d304(bb 90 insn 1605) }
(insn 1606 1605 4334 90 (set (reg/f:DI 1902)
        (lo_sum:DI (reg/f:DI 1901)
            (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1272)
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902
;; rd  out 	(6) 266[72],435[74],460[83],576[146],1901[304],1902[305]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u1357(29){ }u1358(31){ }u1359(64){ }u1360(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 457 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 457 460 1863 1901 1902
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  in  	 266 435 457 460 576 1901 1902
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(9) 266[72,73],435[74],457[82],460[83,84],576[146],1901[304],1902[305]
;; rd  gen 	(12) 1259[181],1261[182],1262[183],1263[184],1264[185],1266[186],1267[187],1268[188],1269[189],1270[190],1271[191],1272[192]
;; rd  kill	(13) 30[24],1259[181],1261[182],1262[183],1263[184],1264[185],1266[186],1267[187],1268[188],1269[189],1270[190],1271[191],1272[192]
;;  UD chains for artificial uses at top

(note 1585 1584 3975 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3975
;;      reg 457 { d82(bb 293 insn 1581) }
(debug_insn 3975 1585 1586 91 (var_location:QI D#50 (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/graph_generator.c:136 -1
     (nil))
;;   UD chains for insn luid 1 uid 1586
;;      reg 460 { d84(bb 92 insn 1614) d83(bb 87 insn 195) }
(debug_insn 1586 3975 1587 91 (var_location:DI mat (plus:DI (plus:DI (mult:DI (zero_extend:DI (debug_expr:QI D#50))
                (const_int 72 [0x48]))
            (mult:DI (sign_extend:DI (reg/v:SI 460 [ byte_index ]))
                (const_int 18432 [0x4800])))
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 2 uid 1587
;;      reg 64 { }
(debug_insn 1587 1586 1590 91 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 3 uid 1590
;;      reg 457 { d82(bb 293 insn 1581) }
(insn 1590 1587 1592 91 (set (reg:DI 1259 [ val ])
        (sign_extend:DI (reg/v:SI 457 [ val ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 457 [ val ])
        (nil)))
;;   UD chains for insn luid 4 uid 1592
;;      reg 1259 { d181(bb 91 insn 1590) }
(insn 1592 1590 1594 91 (set (reg:DI 1261)
        (ashift:DI (reg:DI 1259 [ val ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 5 uid 1594
;;      reg 1259 { d181(bb 91 insn 1590) }
;;      reg 1261 { d182(bb 91 insn 1592) }
;;   eq_note reg 1259 { d181(bb 91 insn 1590) }
(insn 1594 1592 1595 91 (set (reg:DI 1262)
        (plus:DI (reg:DI 1261)
            (reg:DI 1259 [ val ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1261)
        (expr_list:REG_DEAD (reg:DI 1259 [ val ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1259 [ val ])
                    (const_int 9 [0x9]))
                (nil)))))
;;   UD chains for insn luid 6 uid 1595
;;      reg 1262 { d183(bb 91 insn 1594) }
(insn 1595 1594 1597 91 (set (reg:DI 1263)
        (ashift:DI (reg:DI 1262)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1262)
        (nil)))
;;   UD chains for insn luid 7 uid 1597
;;      reg 460 { d84(bb 92 insn 1614) d83(bb 87 insn 195) }
(insn 1597 1595 1599 91 (set (reg:DI 1264 [ byte_index ])
        (sign_extend:DI (reg/v:SI 460 [ byte_index ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 1599
;;      reg 1264 { d185(bb 91 insn 1597) }
(insn 1599 1597 1601 91 (set (reg:DI 1266)
        (ashift:DI (reg:DI 1264 [ byte_index ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1601
;;      reg 1264 { d185(bb 91 insn 1597) }
;;      reg 1266 { d186(bb 91 insn 1599) }
;;   eq_note reg 1264 { d185(bb 91 insn 1597) }
(insn 1601 1599 1602 91 (set (reg:DI 1267)
        (plus:DI (reg:DI 1266)
            (reg:DI 1264 [ byte_index ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1266)
        (expr_list:REG_DEAD (reg:DI 1264 [ byte_index ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1264 [ byte_index ])
                    (const_int 9 [0x9]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1602
;;      reg 1267 { d187(bb 91 insn 1601) }
(insn 1602 1601 1604 91 (set (reg:DI 1268)
        (ashift:DI (reg:DI 1267)
            (const_int 11 [0xb]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1267)
        (nil)))
;;   UD chains for insn luid 11 uid 1604
;;      reg 1263 { d184(bb 91 insn 1595) }
;;      reg 1268 { d188(bb 91 insn 1602) }
(insn 1604 1602 4402 91 (set (reg:DI 1269)
        (plus:DI (reg:DI 1263)
            (reg:DI 1268))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1268)
        (expr_list:REG_DEAD (reg:DI 1263)
            (nil))))
;;   UD chains for insn luid 12 uid 4402
;;      reg 1901 { d304(bb 90 insn 1605) }
(insn 4402 1604 4403 91 (set (reg/f:DI 1272)
        (reg/f:DI 1901)) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 13 uid 4403
;;      reg 1902 { d305(bb 90 insn 1606) }
(insn 4403 4402 1607 91 (set (reg/f:DI 1271)
        (reg/f:DI 1902)) generator/splittable_mrg.c:195 -1
     (nil))
;;   UD chains for insn luid 14 uid 1607
;;      reg 1269 { d189(bb 91 insn 1604) }
;;      reg 1902 { d305(bb 90 insn 1606) }
(insn 1607 4403 1608 91 (set (reg:DI 1270 [ D.3811 ])
        (plus:DI (reg:DI 1269)
            (reg/f:DI 1902))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1271)
        (expr_list:REG_DEAD (reg:DI 1269)
            (nil))))
;;   UD chains for insn luid 15 uid 1608
;;      reg 1863 { }
;;   eq_note reg 64 { }
(insn 1608 1607 1609 91 (set (reg:DI 2 x2)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
;;   UD chains for insn luid 16 uid 1609
;;      reg 1863 { }
;;   eq_note reg 64 { }
(insn 1609 1608 1610 91 (set (reg:DI 1 x1)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
;;   UD chains for insn luid 17 uid 1610
;;      reg 1270 { d190(bb 91 insn 1607) }
(insn 1610 1609 1611 91 (set (reg:DI 0 x0)
        (reg:DI 1270 [ D.3811 ])) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1270 [ D.3811 ])
        (nil)))
;;   UD chains for insn luid 18 uid 1611
;;      reg 31 { }
;;      reg 0 { d0(bb 91 insn 1610) }
;;      reg 1 { d2(bb 91 insn 1609) }
;;      reg 2 { d4(bb 91 insn 1608) }
(call_insn 1611 1610 1612 91 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>) [0 mrg_apply_transition S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:165 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_DEAD (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902
;; rd  out 	(8) 266[72,73],435[74],460[83,84],576[146],1901[304],1902[305]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u1401(29){ }u1402(31){ }u1403(64){ }u1404(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460
;; lr  def 	 66 [cc] 266 460
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	 66 [cc] 266 460
;; live  kill	
;; rd  in  	(9) 266[72,73],435[74],457[82],460[83,84],576[146],1901[304],1902[305]
;; rd  gen 	(3) 66[52],266[73],460[84]
;; rd  kill	(27) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],266[72,73],460[83,84]
;;  UD chains for artificial uses at top

(code_label 1612 1611 1613 92 73 "" [1 uses])
(note 1613 1612 1614 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1614
;;      reg 460 { d84(bb 92 insn 1614) d83(bb 87 insn 195) }
(insn 1614 1613 1615 92 (set (reg/v:SI 460 [ byte_index ])
        (plus:SI (reg/v:SI 460 [ byte_index ])
            (const_int 1 [0x1]))) generator/splittable_mrg.c:193 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1615
;;      reg 460 { d84(bb 92 insn 1614) }
(debug_insn 1615 1614 4078 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) generator/splittable_mrg.c:193 -1
     (nil))
;;   UD chains for insn luid 2 uid 4078
;;      reg 266 { d73(bb 92 insn 1616) d72(bb 87 insn 1536) }
(debug_insn 4078 1615 1616 92 (var_location:DI D#56 (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
        (const_int 8 [0x8]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 1616
;;      reg 266 { d73(bb 92 insn 1616) d72(bb 87 insn 1536) }
(insn 1616 4078 1618 92 (set (reg/v:DI 266 [ exponent_middle ])
        (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
            (const_int 8 [0x8]))) generator/splittable_mrg.c:193 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 4 uid 1618
;;      reg 460 { d84(bb 92 insn 1614) }
(debug_insn 1618 1616 1619 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
;;   UD chains for insn luid 5 uid 1619
(debug_insn 1619 1618 1621 92 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
;;   UD chains for insn luid 6 uid 1621
;;      reg 266 { d73(bb 92 insn 1616) }
(insn 1621 1619 1622 92 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 7 uid 1622
;;      reg 66 { d52(bb 92 insn 1621) }
(jump_insn 1622 1621 4348 92 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4348)
            (pc))) generator/splittable_mrg.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4348)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902
;; rd  out 	(6) 266[73],435[74],460[84],576[146],1901[304],1902[305]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u1412(29){ }u1413(31){ }u1414(64){ }u1415(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 750 1273
;; live  in  	 435 576
;; live  gen 	 66 [cc] 750 1273
;; live  kill	
;; rd  in  	(2) 435[74],576[146]
;; rd  gen 	(3) 66[53],750[158],1273[193]
;; rd  kill	(28) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],750[158,159,160,161],1273[193]
;;  UD chains for artificial uses at top

(code_label 1627 4347 1628 93 71 "" [1 uses])
(note 1628 1627 1629 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1629
(debug_insn 1629 1628 1630 93 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 1630
;;      reg 64 { }
(debug_insn 1630 1629 1631 93 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 1631
(debug_insn 1631 1630 1632 93 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 3 uid 1632
(debug_insn 1632 1631 1633 93 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 4 uid 1633
;;      reg 64 { }
(debug_insn 1633 1632 1634 93 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 5 uid 1634
;;      reg 64 { }
(debug_insn 1634 1633 1635 93 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 1635
;;      reg 64 { }
(insn 1635 1634 1636 93 (set (reg:DI 750 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 1636
;;      reg 750 { d158(bb 93 insn 1635) }
(debug_insn 1636 1635 1637 93 (var_location:DI a (reg:DI 750 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 8 uid 1637
;;      reg 750 { d158(bb 93 insn 1635) }
(debug_insn 1637 1636 1638 93 (var_location:DI a (reg:DI 750 [ D.3802 ])) -1
     (nil))
;;   UD chains for insn luid 9 uid 1638
(debug_insn 1638 1637 1639 93 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 10 uid 1639
(insn 1639 1638 1640 93 (set (reg:DI 1273)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 1640
;;      reg 750 { d158(bb 93 insn 1635) }
;;      reg 1273 { d193(bb 93 insn 1639) }
;;   eq_note reg 750 { d158(bb 93 insn 1635) }
(insn 1640 1639 1641 93 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 750 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:27 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 750 [ D.3802 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
;;   UD chains for insn luid 12 uid 1641
;;      reg 66 { d53(bb 93 insn 1640) }
(jump_insn 1641 1640 1642 93 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1671)
            (pc))) generator/mod_arith_64bit.h:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1671)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 750 1273 1863
;; live  out 	 435 576 750 1273
;; rd  out 	(4) 435[74],576[146],750[158],1273[193]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u1425(29){ }u1426(31){ }u1427(64){ }u1428(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 750 1273 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 750 1273
;; lr  def 	 66 [cc] 468 751 1274 1275 1276 1277 1278 1279 1280 1282 1283
;; live  in  	 435 576 750 1273
;; live  gen 	 66 [cc] 468 751 1274 1275 1276 1277 1278 1279 1280 1282 1283
;; live  kill	
;; rd  in  	(4) 435[74],576[146],750[158],1273[193]
;; rd  gen 	(12) 66[54],468[90],751[162],1274[194],1275[195],1276[196],1277[197],1278[198],1279[199],1280[200],1282[201],1283[202]
;; rd  kill	(39) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],468[89,90,91,92],751[162,163,164],1274[194],1275[195],1276[196],1277[197],1278[198],1279[199],1280[200],1282[201],1283[202]
;;  UD chains for artificial uses at top

(note 1642 1641 1643 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1643
(insn 1643 1642 1644 94 (set (reg:DI 1275)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1644
;;      reg 750 { d158(bb 93 insn 1635) }
;;      reg 1275 { d195(bb 94 insn 1643) }
;;   eq_note reg 750 { d158(bb 93 insn 1635) }
(insn 1644 1643 1645 94 (set (reg:DI 1274 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1275))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1275)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 750 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 2 uid 1645
(insn 1645 1644 1646 94 (set (reg:DI 1277)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1646
;;      reg 1274 { d194(bb 94 insn 1644) }
;;      reg 1277 { d197(bb 94 insn 1645) }
;;   eq_note reg 1274 { d194(bb 94 insn 1644) }
(insn 1646 1645 1647 94 (set (reg:DI 1276)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1277)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1277)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 4 uid 1647
;;      reg 1274 { d194(bb 94 insn 1644) }
;;      reg 1276 { d196(bb 94 insn 1646) }
(insn 1647 1646 1648 94 (set (reg:DI 1278)
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1276))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 5 uid 1648
;;      reg 1278 { d198(bb 94 insn 1647) }
(insn 1648 1647 1649 94 (set (reg:DI 1279)
        (lshiftrt:DI (reg:DI 1278)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1278)
        (nil)))
;;   UD chains for insn luid 6 uid 1649
;;      reg 1276 { d196(bb 94 insn 1646) }
;;      reg 1279 { d199(bb 94 insn 1648) }
(insn 1649 1648 1650 94 (set (reg:DI 1280)
        (plus:DI (reg:DI 1276)
            (reg:DI 1279))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1279)
        (expr_list:REG_DEAD (reg:DI 1276)
            (nil))))
;;   UD chains for insn luid 7 uid 1650
;;      reg 1280 { d200(bb 94 insn 1649) }
;;   eq_note reg 1274 { d194(bb 94 insn 1644) }
(insn 1650 1649 1652 94 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1280)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1280)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1274 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 8 uid 1652
;;      reg 468 { d89(bb 94 insn 1650) }
(insn 1652 1650 1654 94 (set (reg:DI 1282)
        (ashift:DI (reg:DI 468 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1654
;;      reg 468 { d89(bb 94 insn 1650) }
;;      reg 1282 { d201(bb 94 insn 1652) }
;;   eq_note reg 468 { d89(bb 94 insn 1650) }
(insn 1654 1652 1655 94 (set (reg:DI 1283)
        (minus:DI (reg:DI 1282)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1282)
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1655
;;      reg 1274 { d194(bb 94 insn 1644) }
;;      reg 1283 { d202(bb 94 insn 1654) }
(insn 1655 1654 1656 94 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1283))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1283)
        (expr_list:REG_DEAD (reg:DI 1274 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 11 uid 1656
(debug_insn 1656 1655 1657 94 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 12 uid 1657
(debug_insn 1657 1656 1658 94 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 13 uid 1658
(debug_insn 1658 1657 1659 94 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 14 uid 1659
;;      reg 64 { }
(insn 1659 1658 1660 94 (set (reg:DI 751 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 15 uid 1660
(debug_insn 1660 1659 1661 94 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1661
;;      reg 751 { d162(bb 94 insn 1659) }
(debug_insn 1661 1660 1662 94 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1662
;;      reg 468 { d90(bb 94 insn 1655) }
(debug_insn 1662 1661 1663 94 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 18 uid 1663
;;      reg 751 { d162(bb 94 insn 1659) }
(debug_insn 1663 1662 1664 94 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 19 uid 1664
(debug_insn 1664 1663 1666 94 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 20 uid 1666
;;      reg 751 { d162(bb 94 insn 1659) }
;;      reg 1273 { d193(bb 93 insn 1639) }
;;   eq_note reg 751 { d162(bb 94 insn 1659) }
(insn 1666 1664 1667 94 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1273)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 751 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 21 uid 1667
;;      reg 66 { d54(bb 94 insn 1666) }
(jump_insn 1667 1666 1671 94 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1751)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1751)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 468 576 750 751 1863
;; live  out 	 435 468 576 750 751
;; rd  out 	(5) 435[74],468[90],576[146],750[158],751[162]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u1462(29){ }u1463(31){ }u1464(64){ }u1465(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 750 751 1306 1891 1892
;; lr  def 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  kill	
;; rd  in  	(32) 66[70],435[74],442[76,77,78],443[81],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1852[291],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(12) 66[55],468[92],1285[203],1286[204],1287[205],1288[206],1289[207],1290[208],1291[209],1293[210],1294[211],1295[212]
;; rd  kill	(37) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],468[89,90,91,92],1285[203],1286[204],1287[205],1288[206],1289[207],1290[208],1291[209],1293[210],1294[211],1295[212]
;;  UD chains for artificial uses at top

(code_label 3968 1674 1676 96 194 "" [1 uses])
(note 1676 3968 1687 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1687
(debug_insn 1687 1676 1688 96 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 1688
;;      reg 64 { }
(debug_insn 1688 1687 1689 96 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 1689
(debug_insn 1689 1688 1690 96 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 3 uid 1690
(debug_insn 1690 1689 1691 96 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 4 uid 1691
;;      reg 64 { }
(debug_insn 1691 1690 1692 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 5 uid 1692
;;      reg 64 { }
(debug_insn 1692 1691 1693 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 1693
;;      reg 64 { }
(debug_insn 1693 1692 1694 96 (var_location:DI D#30 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 7 uid 1694
(debug_insn 1694 1693 1695 96 (var_location:DI a (debug_expr:DI D#30)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 8 uid 1695
(debug_insn 1695 1694 1696 96 (var_location:DI a (debug_expr:DI D#30)) -1
     (nil))
;;   UD chains for insn luid 9 uid 1696
(debug_insn 1696 1695 4399 96 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 10 uid 4399
;;      reg 1891 { d294(bb 100 insn 1810) }
(insn 4399 1696 1698 96 (set (reg:DI 1286)
        (reg:DI 1891)) generator/mod_arith_64bit.h:29 -1
     (nil))
;;   UD chains for insn luid 11 uid 1698
;;      reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) }
;;      reg 1891 { d294(bb 100 insn 1810) }
;;   eq_note reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) }
(insn 1698 4399 4400 96 (set (reg:DI 1285 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1891))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1286)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 750 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 12 uid 4400
;;      reg 1306 { d217(bb 100 insn 1779) }
(insn 4400 1698 1700 96 (set (reg:DI 1288)
        (reg:DI 1306)) generator/mod_arith_64bit.h:29 -1
     (nil))
;;   UD chains for insn luid 13 uid 1700
;;      reg 1285 { d203(bb 96 insn 1698) }
;;      reg 1306 { d217(bb 100 insn 1779) }
;;   eq_note reg 1285 { d203(bb 96 insn 1698) }
(insn 1700 4400 1701 96 (set (reg:DI 1287)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1288)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 14 uid 1701
;;      reg 1285 { d203(bb 96 insn 1698) }
;;      reg 1287 { d205(bb 96 insn 1700) }
(insn 1701 1700 1702 96 (set (reg:DI 1289)
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1287))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 15 uid 1702
;;      reg 1289 { d207(bb 96 insn 1701) }
(insn 1702 1701 1703 96 (set (reg:DI 1290)
        (lshiftrt:DI (reg:DI 1289)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1289)
        (nil)))
;;   UD chains for insn luid 16 uid 1703
;;      reg 1287 { d205(bb 96 insn 1700) }
;;      reg 1290 { d208(bb 96 insn 1702) }
(insn 1703 1702 1704 96 (set (reg:DI 1291)
        (plus:DI (reg:DI 1287)
            (reg:DI 1290))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1290)
        (expr_list:REG_DEAD (reg:DI 1287)
            (nil))))
;;   UD chains for insn luid 17 uid 1704
;;      reg 1291 { d209(bb 96 insn 1703) }
;;   eq_note reg 1285 { d203(bb 96 insn 1698) }
(insn 1704 1703 1706 96 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1291)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1291)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1285 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 18 uid 1706
;;      reg 468 { d91(bb 96 insn 1704) }
(insn 1706 1704 1708 96 (set (reg:DI 1293)
        (ashift:DI (reg:DI 468 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 19 uid 1708
;;      reg 468 { d91(bb 96 insn 1704) }
;;      reg 1293 { d210(bb 96 insn 1706) }
;;   eq_note reg 468 { d91(bb 96 insn 1704) }
(insn 1708 1706 1709 96 (set (reg:DI 1294)
        (minus:DI (reg:DI 1293)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1293)
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 20 uid 1709
;;      reg 1285 { d203(bb 96 insn 1698) }
;;      reg 1294 { d211(bb 96 insn 1708) }
(insn 1709 1708 1710 96 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1294))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1294)
        (expr_list:REG_DEAD (reg:DI 1285 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 21 uid 1710
(debug_insn 1710 1709 1711 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 22 uid 1711
(debug_insn 1711 1710 1712 96 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 23 uid 1712
(debug_insn 1712 1711 1713 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 24 uid 1713
;;      reg 64 { }
(debug_insn 1713 1712 1714 96 (var_location:DI D#29 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 25 uid 1714
(debug_insn 1714 1713 1715 96 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 26 uid 1715
(debug_insn 1715 1714 1716 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 27 uid 1716
;;      reg 468 { d92(bb 96 insn 1709) }
(debug_insn 1716 1715 1717 96 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 28 uid 1717
(debug_insn 1717 1716 1718 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 29 uid 1718
(debug_insn 1718 1717 4401 96 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 30 uid 4401
;;      reg 1892 { d295(bb 100 insn 1841) }
(insn 4401 1718 1720 96 (set (reg:DI 1295)
        (reg:DI 1892)) generator/mod_arith_64bit.h:34 -1
     (nil))
;;   UD chains for insn luid 31 uid 1720
;;      reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) }
;;      reg 1892 { d295(bb 100 insn 1841) }
;;   eq_note reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) }
(insn 1720 4401 1721 96 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1892))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1295)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 751 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 32 uid 1721
;;      reg 66 { d55(bb 96 insn 1720) }
(jump_insn 1721 1720 4346 96 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4346)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 4346)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(31) 435[74],442[76,77,78],443[81],468[92],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u1538(29){ }u1539(31){ }u1540(64){ }u1541(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 468 576 750 751 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 290
;; lr  def 	 442 443 695 714 747 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  in  	 435 468 576 750 751
;; live  gen 	 442 443 695 714 747 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  kill	
;; rd  in  	(5) 435[74],468[90],576[146],750[158],751[162]
;; rd  gen 	(19) 442[75],443[80],695[147],714[151],747[156],826[165],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  kill	(35) 442[75,76,77,78],443[79,80,81],695[147,148,149,150],714[151,152,153,154],747[155,156,157],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at top

(code_label 1751 1749 1752 100 77 "" [1 uses])
(note 1752 1751 1753 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1753
;;      reg 64 { }
(insn 1753 1752 1754 100 (set (reg:DI 714 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 1754
;;      reg 64 { }
(insn 1754 1753 1755 100 (set (reg:DI 826 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 1755
;;      reg 64 { }
(insn 1755 1754 196 100 (set (reg:DI 695 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 196
;;      reg 290 { }
(insn 196 1755 197 100 (set (reg/v:DI 442 [ nverts ])
        (reg/v:DI 290 [ nverts ])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 197
(insn 197 196 4073 100 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 4073
(debug_insn 4073 197 198 100 (var_location:DI D#52 (const_int 0 [0])) -1
     (nil))
;;   UD chains for insn luid 6 uid 198
(insn 198 4073 1776 100 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 1776
(insn 1776 198 1779 100 (set (reg:DI 1303)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 1779
(insn 1779 1776 1799 100 (set (reg:DI 1306)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 1799
(insn 1799 1779 1810 100 (set (reg:DI 1313)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:46 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 1810
(insn 1810 1799 1841 100 (set (reg:DI 1891)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 1841
(insn 1841 1810 4378 100 (set (reg:DI 1892)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 12 uid 4378
;;      reg 1303 { d214(bb 100 insn 1776) }
(insn 4378 1841 4379 100 (set (reg:DI 1893)
        (reg:DI 1303)) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 13 uid 4379
;;      reg 1313 { d223(bb 100 insn 1799) }
(insn 4379 4378 1885 100 (set (reg:DI 1894)
        (reg:DI 1313)) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 14 uid 1885
(insn 1885 4379 1889 100 (set (reg:SI 1895)
        (const_int -776530087 [0xffffffffd1b71759])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 15 uid 1889
(insn 1889 1885 276 100 (set (reg:SI 1896)
        (const_int 10000 [0x2710])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 16 uid 276
(insn 276 1889 277 100 (set (reg:DI 1897 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 17 uid 277
(insn 277 276 1903 100 (set (reg:DI 1898 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 18 uid 1903
(insn 1903 277 273 100 (set (reg:SI 1899)
        (const_int 5699 [0x1643])) generator/graph_generator.c:63 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 19 uid 273
;;      reg 1897 { d300(bb 100 insn 276) }
(insn 273 1903 1756 100 (set (reg:DI 1900 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(24) 435[74],442[75],443[80],468[90],576[146],695[147],714[151],747[156],750[158],751[162],826[165],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u1546(29){ }u1547(31){ }u1548(64){ }u1549(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 468 751 1303 1306 1313
;; lr  def 	 66 [cc] 469 1302 1304 1305 1307 1308 1309 1311 1312
;; live  in  	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 469 1302 1304 1305 1307 1308 1309 1311 1312
;; live  kill	
;; rd  in  	(40) 435[74],442[75,76,77,78],443[80,81],468[90,92],576[146],695[147,149,150],714[151,153,154],747[156,157],750[158,160,161],751[162,163,164],826[165,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(10) 66[56],469[94],1302[213],1304[215],1305[216],1307[218],1308[219],1309[220],1311[221],1312[222]
;; rd  kill	(34) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],469[93,94,95],1302[213],1304[215],1305[216],1307[218],1308[219],1309[220],1311[221],1312[222]
;;  UD chains for artificial uses at top

(code_label 1756 273 1757 101 79 "" [0 uses])
(note 1757 1756 1758 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1758
;;      reg 443 { d81(bb 290 insn 3962) d80(bb 100 insn 197) }
(debug_insn 1758 1757 1759 101 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1759
(debug_insn 1759 1758 1760 101 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
;;   UD chains for insn luid 2 uid 1760
(debug_insn 1760 1759 1761 101 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 3 uid 1761
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) d75(bb 100 insn 196) }
(debug_insn 1761 1760 1762 101 (var_location:DI nverts (reg/v:DI 442 [ nverts ])) -1
     (nil))
;;   UD chains for insn luid 4 uid 1762
(debug_insn 1762 1761 1763 101 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 5 uid 1763
;;      reg 64 { }
(debug_insn 1763 1762 1764 101 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 6 uid 1764
(debug_insn 1764 1763 1765 101 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 7 uid 1765
(debug_insn 1765 1764 1766 101 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
;;   UD chains for insn luid 8 uid 1766
;;      reg 64 { }
(debug_insn 1766 1765 1767 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 9 uid 1767
;;      reg 64 { }
(debug_insn 1767 1766 1768 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 10 uid 1768
(debug_insn 1768 1767 1769 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 11 uid 1769
(debug_insn 1769 1768 1770 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 12 uid 1770
(debug_insn 1770 1769 1771 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 13 uid 1771
(debug_insn 1771 1770 1772 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 14 uid 1772
;;      reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) d162(bb 94 insn 1659) }
(debug_insn 1772 1771 1773 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 15 uid 1773
;;      reg 468 { d92(bb 96 insn 1709) d90(bb 94 insn 1655) }
(debug_insn 1773 1772 1774 101 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1774
;;      reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) d162(bb 94 insn 1659) }
(debug_insn 1774 1773 1775 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1775
(debug_insn 1775 1774 1777 101 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 18 uid 1777
;;      reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) d162(bb 94 insn 1659) }
;;      reg 1303 { d214(bb 100 insn 1776) }
;;   eq_note reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) d162(bb 94 insn 1659) }
(insn 1777 1775 1778 101 (set (reg:DI 1302 [ D.3802 ])
        (mult:DI (reg:DI 751 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1303)
        (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 751 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 19 uid 1778
;;      reg 468 { d92(bb 96 insn 1709) d90(bb 94 insn 1655) }
;;      reg 1302 { d213(bb 101 insn 1777) }
(insn 1778 1777 1780 101 (set (reg:DI 1304 [ D.3802 ])
        (plus:DI (reg:DI 1302 [ D.3802 ])
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1302 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 20 uid 1780
;;      reg 1304 { d215(bb 101 insn 1778) }
;;      reg 1306 { d217(bb 100 insn 1779) }
;;   eq_note reg 1304 { d215(bb 101 insn 1778) }
(insn 1780 1778 1781 101 (set (reg:DI 1305)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1306)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 21 uid 1781
;;      reg 1304 { d215(bb 101 insn 1778) }
;;      reg 1305 { d216(bb 101 insn 1780) }
(insn 1781 1780 1782 101 (set (reg:DI 1307)
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1305))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
;;   UD chains for insn luid 22 uid 1782
;;      reg 1307 { d218(bb 101 insn 1781) }
(insn 1782 1781 1783 101 (set (reg:DI 1308)
        (lshiftrt:DI (reg:DI 1307)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1307)
        (nil)))
;;   UD chains for insn luid 23 uid 1783
;;      reg 1305 { d216(bb 101 insn 1780) }
;;      reg 1308 { d219(bb 101 insn 1782) }
(insn 1783 1782 1784 101 (set (reg:DI 1309)
        (plus:DI (reg:DI 1305)
            (reg:DI 1308))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1308)
        (expr_list:REG_DEAD (reg:DI 1305)
            (nil))))
;;   UD chains for insn luid 24 uid 1784
;;      reg 1309 { d220(bb 101 insn 1783) }
;;   eq_note reg 1304 { d215(bb 101 insn 1778) }
(insn 1784 1783 1786 101 (set (reg:DI 469 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1309)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1309)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1304 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 25 uid 1786
;;      reg 469 { d93(bb 101 insn 1784) }
(insn 1786 1784 1788 101 (set (reg:DI 1311)
        (ashift:DI (reg:DI 469 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 26 uid 1788
;;      reg 469 { d93(bb 101 insn 1784) }
;;      reg 1311 { d221(bb 101 insn 1786) }
;;   eq_note reg 469 { d93(bb 101 insn 1784) }
(insn 1788 1786 1789 101 (set (reg:DI 1312)
        (minus:DI (reg:DI 1311)
            (reg:DI 469 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1311)
        (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 27 uid 1789
;;      reg 1304 { d215(bb 101 insn 1778) }
;;      reg 1312 { d222(bb 101 insn 1788) }
(insn 1789 1788 1790 101 (set (reg:DI 469 [ D.3802 ])
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1312))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1312)
        (expr_list:REG_DEAD (reg:DI 1304 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 28 uid 1790
(debug_insn 1790 1789 1791 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 29 uid 1791
(debug_insn 1791 1790 1792 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 30 uid 1792
(debug_insn 1792 1791 1793 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 31 uid 1793
(debug_insn 1793 1792 1794 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 32 uid 1794
(debug_insn 1794 1793 1795 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 33 uid 1795
(debug_insn 1795 1794 1796 101 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 34 uid 1796
(debug_insn 1796 1795 1797 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 35 uid 1797
(debug_insn 1797 1796 1798 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:45 -1
     (nil))
;;   UD chains for insn luid 36 uid 1798
;;      reg 469 { d94(bb 101 insn 1789) }
(debug_insn 1798 1797 1800 101 (var_location:SI val (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))
;;   UD chains for insn luid 37 uid 1800
;;      reg 469 { d94(bb 101 insn 1789) }
;;      reg 1313 { d223(bb 100 insn 1799) }
;;   eq_note reg 469 { d94(bb 101 insn 1789) }
(insn 1800 1798 1801 101 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 469 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:46 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1313)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 469 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
;;   UD chains for insn luid 38 uid 1801
;;      reg 66 { d56(bb 101 insn 1800) }
(jump_insn 1801 1800 1802 101 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) generator/graph_generator.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1877)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(36) 435[74],442[75,76,77,78],443[80,81],469[94],576[146],695[147,149,150],714[151,153,154],747[156,157],750[158,160,161],826[165,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u1584(29){ }u1585(31){ }u1586(64){ }u1587(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1303 1306 1313 1891 1892
;; lr  def 	 1315 1317 1324 1889 1890
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 1315 1317 1324 1889 1890
;; live  kill	
;; rd  in  	(36) 435[74],442[75,76,77,78],443[80,81],469[94],576[146],695[147,149,150],714[151,153,154],747[156,157],750[158,160,161],826[165,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(5) 1315[225],1317[227],1324[233],1889[292],1890[293]
;; rd  kill	(5) 1315[225],1317[227],1324[233],1889[292],1890[293]
;;  UD chains for artificial uses at top

(note 1802 1801 4380 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4380
;;      reg 1891 { d294(bb 100 insn 1810) }
(insn 4380 1802 4381 102 (set (reg:DI 1315)
        (reg:DI 1891)) generator/mod_arith_64bit.h:29 -1
     (nil))
;;   UD chains for insn luid 1 uid 4381
;;      reg 1306 { d217(bb 100 insn 1779) }
(insn 4381 4380 4382 102 (set (reg:DI 1317)
        (reg:DI 1306)) generator/mod_arith_64bit.h:29 -1
     (nil))
;;   UD chains for insn luid 2 uid 4382
;;      reg 1892 { d295(bb 100 insn 1841) }
(insn 4382 4381 4383 102 (set (reg:DI 1324)
        (reg:DI 1892)) generator/mod_arith_64bit.h:34 -1
     (nil))
;;   UD chains for insn luid 3 uid 4383
;;      reg 1303 { d214(bb 100 insn 1776) }
(insn 4383 4382 4384 102 (set (reg:DI 1889)
        (reg:DI 1303)) generator/mod_arith_64bit.h:36 -1
     (nil))
;;   UD chains for insn luid 4 uid 4384
;;      reg 1313 { d223(bb 100 insn 1799) }
(insn 4384 4383 3983 102 (set (reg:DI 1890)
        (reg:DI 1313)) generator/graph_generator.c:49 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(36) 435[74],442[75,76,77,78],443[80,81],469[94],576[146],695[147,149,150],714[151,153,154],747[156,157],750[158,160,161],826[165,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u1588(29){ }u1589(31){ }u1590(64){ }u1591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 714 747 750 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750
;; lr  def 	 469 695 750 826
;; live  in  	 435 442 443 469 476 576 695 714 747 750 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 469 695 750 826
;; live  kill	
;; rd  in  	(50) 66[58],435[74],442[75,76,77,78],443[80,81],469[94,95],476[99],576[146],695[147,148,149,150],714[152],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1325[234],1326[235],1327[236],1328[237],1330[238],1331[239],1332[240],1334[241],1335[242],1336[243],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(4) 469[95],695[148],750[159],826[166]
;; rd  kill	(15) 469[93,94,95],695[147,148,149,150],750[158,159,160,161],826[165,166,167,168]
;;  UD chains for artificial uses at top

(code_label 3983 4384 3982 103 196 "" [1 uses])
(note 3982 3983 199 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 199
;;      reg 695 { d150(bb 107 insn 206) d149(bb 106 insn 209) d148(bb 103 insn 200) d147(bb 100 insn 1755) }
(insn 199 3982 200 103 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 200
;;      reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) d159(bb 103 insn 201) d158(bb 93 insn 1635) }
(insn 200 199 201 103 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 201
;;      reg 469 { d95(bb 103 insn 202) d94(bb 101 insn 1789) }
(insn 201 200 202 103 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 202
;;      reg 476 { d99(bb 105 insn 1858) }
(insn 202 201 1869 103 (set (reg:DI 469 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(28) 435[74],442[75,76,77,78],443[80,81],469[95],576[146],695[148],714[152],747[156,157],750[159],826[166],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u1596(29){ }u1597(31){ }u1598(64){ }u1599(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 714 1306 1891 1892
;; lr  def 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  kill	
;; rd  in  	(41) 435[74],442[75,76,77,78],443[80,81],469[94,95],576[146],695[147,148,149,150],714[151,152,153,154],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(9) 66[57],473[97],1314[224],1316[226],1318[228],1319[229],1320[230],1322[231],1323[232]
;; rd  kill	(32) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],473[96,97],1314[224],1316[226],1318[228],1319[229],1320[230],1322[231],1323[232]
;;  UD chains for artificial uses at top

(code_label 1869 202 1803 104 83 "" [0 uses])
(note 1803 1869 1804 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1804
;;      reg 64 { }
(debug_insn 1804 1803 1805 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 1805
;;      reg 64 { }
(debug_insn 1805 1804 1806 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 1806
;;      reg 64 { }
(debug_insn 1806 1805 1807 104 (var_location:DI D#33 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 3 uid 1807
(debug_insn 1807 1806 1808 104 (var_location:DI a (debug_expr:DI D#33)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 4 uid 1808
(debug_insn 1808 1807 1809 104 (var_location:DI a (debug_expr:DI D#33)) -1
     (nil))
;;   UD chains for insn luid 5 uid 1809
(debug_insn 1809 1808 1811 104 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
;;   UD chains for insn luid 6 uid 1811
;;      reg 469 { d95(bb 103 insn 202) d94(bb 101 insn 1789) }
;;      reg 1891 { d294(bb 100 insn 1810) }
;;   eq_note reg 469 { d95(bb 103 insn 202) d94(bb 101 insn 1789) }
(insn 1811 1809 1813 104 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1891))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1315)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
;;   UD chains for insn luid 7 uid 1813
;;      reg 1306 { d217(bb 100 insn 1779) }
;;      reg 1314 { d224(bb 104 insn 1811) }
;;   eq_note reg 1314 { d224(bb 104 insn 1811) }
(insn 1813 1811 1814 104 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (const_int 8589934597 [0x200000005]))
                (const_int 64 [0x40])))
        (nil)))
;;   UD chains for insn luid 8 uid 1814
;;      reg 1314 { d224(bb 104 insn 1811) }
;;      reg 1316 { d226(bb 104 insn 1813) }
(insn 1814 1813 1815 104 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
;;   UD chains for insn luid 9 uid 1815
;;      reg 1318 { d228(bb 104 insn 1814) }
(insn 1815 1814 1816 104 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1318)
        (nil)))
;;   UD chains for insn luid 10 uid 1816
;;      reg 1316 { d226(bb 104 insn 1813) }
;;      reg 1319 { d229(bb 104 insn 1815) }
(insn 1816 1815 1817 104 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1319)
        (expr_list:REG_DEAD (reg:DI 1316)
            (nil))))
;;   UD chains for insn luid 11 uid 1817
;;      reg 1320 { d230(bb 104 insn 1816) }
;;   eq_note reg 1314 { d224(bb 104 insn 1811) }
(insn 1817 1816 1819 104 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1320)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 12 uid 1819
;;      reg 473 { d96(bb 104 insn 1817) }
(insn 1819 1817 1821 104 (set (reg:DI 1322)
        (ashift:DI (reg:DI 473 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 13 uid 1821
;;      reg 473 { d96(bb 104 insn 1817) }
;;      reg 1322 { d231(bb 104 insn 1819) }
;;   eq_note reg 473 { d96(bb 104 insn 1817) }
(insn 1821 1819 1822 104 (set (reg:DI 1323)
        (minus:DI (reg:DI 1322)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1322)
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 14 uid 1822
;;      reg 1314 { d224(bb 104 insn 1811) }
;;      reg 1323 { d232(bb 104 insn 1821) }
(insn 1822 1821 1826 104 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1323)
        (expr_list:REG_DEAD (reg:DI 1314 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 15 uid 1826
;;      reg 64 { }
(debug_insn 1826 1822 1832 104 (var_location:DI D#32 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1832
(debug_insn 1832 1826 1833 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 17 uid 1833
(debug_insn 1833 1832 1834 104 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
;;   UD chains for insn luid 18 uid 1834
(debug_insn 1834 1833 1835 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 19 uid 1835
(debug_insn 1835 1834 1836 104 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 20 uid 1836
(debug_insn 1836 1835 1837 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 21 uid 1837
;;      reg 473 { d97(bb 104 insn 1822) }
(debug_insn 1837 1836 1838 104 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 22 uid 1838
(debug_insn 1838 1837 1839 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 23 uid 1839
(debug_insn 1839 1838 1842 104 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
;;   UD chains for insn luid 24 uid 1842
;;      reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) d152(bb 105 insn 1868) d151(bb 100 insn 1753) }
;;      reg 1892 { d295(bb 100 insn 1841) }
;;   eq_note reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) d152(bb 105 insn 1868) d151(bb 100 insn 1753) }
(insn 1842 1839 1843 104 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1892))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1324)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 714 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
;;   UD chains for insn luid 25 uid 1843
;;      reg 66 { d57(bb 104 insn 1842) }
(jump_insn 1843 1842 1844 104 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1840)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 473 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 473 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(42) 435[74],442[75,76,77,78],443[80,81],469[94,95],473[97],576[146],695[147,148,149,150],714[151,152,153,154],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u1628(29){ }u1629(31){ }u1630(64){ }u1631(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 473 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 473 714 826 1303 1306 1313 1893 1894
;; lr  def 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  in  	 435 442 443 469 473 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  kill	
;; rd  in  	(42) 435[74],442[75,76,77,78],443[80,81],469[94,95],473[97],576[146],695[147,148,149,150],714[151,152,153,154],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(13) 66[58],476[99],714[152],1325[234],1326[235],1327[236],1328[237],1330[238],1331[239],1332[240],1334[241],1335[242],1336[243]
;; rd  kill	(39) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],476[98,99],714[151,152,153,154],1325[234],1326[235],1327[236],1328[237],1330[238],1331[239],1332[240],1334[241],1335[242],1336[243]
;;  UD chains for artificial uses at top

(note 1844 1843 4385 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4385
;;      reg 1893 { d296(bb 100 insn 4378) }
(insn 4385 1844 1846 105 (set (reg:DI 1326)
        (reg:DI 1893)) generator/mod_arith_64bit.h:36 -1
     (nil))
;;   UD chains for insn luid 1 uid 1846
;;      reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) d152(bb 105 insn 1868) d151(bb 100 insn 1753) }
;;      reg 1303 { d214(bb 100 insn 1776) }
;;   eq_note reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) d152(bb 105 insn 1868) d151(bb 100 insn 1753) }
(insn 1846 4385 1847 105 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1326)
        (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 714 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
;;   UD chains for insn luid 2 uid 1847
;;      reg 473 { d97(bb 104 insn 1822) }
;;      reg 1325 { d234(bb 105 insn 1846) }
(insn 1847 1846 1849 105 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1325 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 3 uid 1849
;;      reg 1306 { d217(bb 100 insn 1779) }
;;      reg 1327 { d236(bb 105 insn 1847) }
;;   eq_note reg 1327 { d236(bb 105 insn 1847) }
(insn 1849 1847 1850 105 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1317)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
;;   UD chains for insn luid 4 uid 1850
;;      reg 1327 { d236(bb 105 insn 1847) }
;;      reg 1328 { d237(bb 105 insn 1849) }
(insn 1850 1849 1851 105 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
;;   UD chains for insn luid 5 uid 1851
;;      reg 1330 { d238(bb 105 insn 1850) }
(insn 1851 1850 1852 105 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1330)
        (nil)))
;;   UD chains for insn luid 6 uid 1852
;;      reg 1328 { d237(bb 105 insn 1849) }
;;      reg 1331 { d239(bb 105 insn 1851) }
(insn 1852 1851 1853 105 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1331)
        (expr_list:REG_DEAD (reg:DI 1328)
            (nil))))
;;   UD chains for insn luid 7 uid 1853
;;      reg 1332 { d240(bb 105 insn 1852) }
;;   eq_note reg 1327 { d236(bb 105 insn 1847) }
(insn 1853 1852 1855 105 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1332)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
;;   UD chains for insn luid 8 uid 1855
;;      reg 476 { d98(bb 105 insn 1853) }
(insn 1855 1853 1857 105 (set (reg:DI 1334)
        (ashift:DI (reg:DI 476 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 9 uid 1857
;;      reg 476 { d98(bb 105 insn 1853) }
;;      reg 1334 { d241(bb 105 insn 1855) }
;;   eq_note reg 476 { d98(bb 105 insn 1853) }
(insn 1857 1855 1858 105 (set (reg:DI 1335)
        (minus:DI (reg:DI 1334)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1334)
        (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
;;   UD chains for insn luid 10 uid 1858
;;      reg 1327 { d236(bb 105 insn 1847) }
;;      reg 1335 { d242(bb 105 insn 1857) }
(insn 1858 1857 1859 105 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1335)
        (expr_list:REG_DEAD (reg:DI 1327 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 11 uid 1859
(debug_insn 1859 1858 1860 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 12 uid 1860
(debug_insn 1860 1859 1861 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 13 uid 1861
(debug_insn 1861 1860 1862 105 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
;;   UD chains for insn luid 14 uid 1862
(debug_insn 1862 1861 1863 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 15 uid 1863
(debug_insn 1863 1862 1864 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 16 uid 1864
(debug_insn 1864 1863 1865 105 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
;;   UD chains for insn luid 17 uid 1865
(debug_insn 1865 1864 1866 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
;;   UD chains for insn luid 18 uid 1866
(debug_insn 1866 1865 1867 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 19 uid 1867
;;      reg 476 { d99(bb 105 insn 1858) }
(debug_insn 1867 1866 1868 105 (var_location:SI val (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
;;   UD chains for insn luid 20 uid 1868
;;      reg 826 { d168(bb 107 insn 205) d167(bb 106 insn 211) d166(bb 103 insn 199) d165(bb 100 insn 1754) }
(insn 1868 1867 4386 105 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 21 uid 4386
;;      reg 1894 { d297(bb 100 insn 4379) }
(insn 4386 1868 1871 105 (set (reg:DI 1336)
        (reg:DI 1894)) generator/graph_generator.c:49 -1
     (nil))
;;   UD chains for insn luid 22 uid 1871
;;      reg 476 { d99(bb 105 insn 1858) }
;;      reg 1313 { d223(bb 100 insn 1799) }
;;   eq_note reg 476 { d99(bb 105 insn 1858) }
(insn 1871 4386 1872 105 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:49 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1336)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 476 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
;;   UD chains for insn luid 23 uid 1872
;;      reg 66 { d58(bb 105 insn 1871) }
(jump_insn 1872 1871 1873 105 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3983)
            (pc))) generator/graph_generator.c:49 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3983)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 476 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(39) 435[74],442[75,76,77,78],443[80,81],469[94,95],476[99],576[146],695[147,148,149,150],714[152],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u1660(29){ }u1661(31){ }u1662(64){ }u1663(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 435 442 443 469 476 576 695 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
;; rd  in  	(39) 435[74],442[75,76,77,78],443[80,81],469[94,95],476[99],576[146],695[147,148,149,150],714[152],747[156,157],750[158,159,160,161],826[165,166,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(6) 463[85],695[149],714[153],750[160],751[163],826[167]
;; rd  kill	(21) 463[85,86],695[147,148,149,150],714[151,152,153,154],750[158,159,160,161],751[162,163,164],826[165,166,167,168]
;;  UD chains for artificial uses at top

(note 1873 1872 1874 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1874
;;      reg 476 { d99(bb 105 insn 1858) }
(insn 1874 1873 208 106 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 208
;;      reg 695 { d150(bb 107 insn 206) d149(bb 106 insn 209) d148(bb 103 insn 200) d147(bb 100 insn 1755) }
(insn 208 1874 209 106 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 209
;;      reg 469 { d95(bb 103 insn 202) d94(bb 101 insn 1789) }
(insn 209 208 210 106 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 210
;;      reg 826 { d168(bb 107 insn 205) d167(bb 106 insn 211) d166(bb 103 insn 199) d165(bb 100 insn 1754) }
(insn 210 209 211 106 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 211
;;      reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) d159(bb 103 insn 201) d158(bb 93 insn 1635) }
(insn 211 210 212 106 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 5 uid 212
;;      reg 476 { d99(bb 105 insn 1858) }
(insn 212 211 1877 106 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(29) 435[74],442[75,76,77,78],443[80,81],463[85],576[146],695[149],714[153],747[156,157],750[160],751[163],826[167],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u1670(29){ }u1671(31){ }u1672(64){ }u1673(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
;; rd  in  	(36) 435[74],442[75,76,77,78],443[80,81],469[94],576[146],695[147,149,150],714[151,153,154],747[156,157],750[158,160,161],826[165,167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(6) 463[86],695[150],714[154],750[161],751[164],826[168]
;; rd  kill	(21) 463[85,86],695[147,148,149,150],714[151,152,153,154],750[158,159,160,161],751[162,163,164],826[165,166,167,168]
;;  UD chains for artificial uses at top

(code_label 1877 212 1878 107 81 "" [1 uses])
(note 1878 1877 1879 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1879
;;      reg 469 { d94(bb 101 insn 1789) }
(insn 1879 1878 203 107 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 203
;;      reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) d151(bb 100 insn 1753) }
(insn 203 1879 204 107 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 714 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 204
;;      reg 826 { d168(bb 107 insn 205) d167(bb 106 insn 211) d165(bb 100 insn 1754) }
(insn 204 203 205 107 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 205
;;      reg 695 { d150(bb 107 insn 206) d149(bb 106 insn 209) d147(bb 100 insn 1755) }
(insn 205 204 206 107 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 206
;;      reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) d158(bb 93 insn 1635) }
(insn 206 205 207 107 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 5 uid 207
;;      reg 469 { d94(bb 101 insn 1789) }
(insn 207 206 1880 107 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(29) 435[74],442[75,76,77,78],443[80,81],463[86],576[146],695[150],714[154],747[156,157],750[161],751[164],826[168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u1680(29){ }u1681(31){ }u1682(64){ }u1683(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 463 1895 1896
;; lr  def 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  in  	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  kill	
;; rd  in  	(35) 435[74],442[75,76,77,78],443[80,81],463[85,86],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(7) 66[59],464[88],1337[244],1338[245],1339[246],1340[247],1341[248]
;; rd  kill	(30) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],464[87,88],1337[244],1338[245],1339[246],1340[247],1341[248]
;;  UD chains for artificial uses at top

(code_label 1880 207 1881 108 84 "" [0 uses])
(note 1881 1880 1882 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1882
;;      reg 463 { d86(bb 107 insn 1879) d85(bb 106 insn 1874) }
(debug_insn 1882 1881 1883 108 (var_location:SI val (reg/v:SI 463 [ val ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1883
(debug_insn 1883 1882 1884 108 (var_location:SI spk_noise_factor (const_int 0 [0])) generator/graph_generator.c:52 -1
     (nil))
;;   UD chains for insn luid 2 uid 1884
(debug_insn 1884 1883 4387 108 (var_location:SI adjusted_bc_numerator (const_int 1900 [0x76c])) generator/graph_generator.c:56 -1
     (nil))
;;   UD chains for insn luid 3 uid 4387
;;      reg 1895 { d298(bb 100 insn 1885) }
(insn 4387 1884 1886 108 (set (reg:SI 1338)
        (reg:SI 1895)) generator/graph_generator.c:57 -1
     (nil))
;;   UD chains for insn luid 4 uid 1886
;;      reg 463 { d86(bb 107 insn 1879) d85(bb 106 insn 1874) }
;;      reg 1895 { d298(bb 100 insn 1885) }
;;   eq_note reg 463 { d86(bb 107 insn 1879) d85(bb 106 insn 1874) }
(insn 1886 4387 1887 108 (set (reg:DI 1337)
        (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
            (zero_extend:DI (reg:SI 1895)))) generator/graph_generator.c:57 375 {umulsidi3}
     (expr_list:REG_DEAD (reg:SI 1338)
        (expr_list:REG_EQUAL (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
                (const_int 3518437209 [0xd1b71759]))
            (nil))))
;;   UD chains for insn luid 5 uid 1887
;;      reg 1337 { d244(bb 108 insn 1886) }
(insn 1887 1886 1888 108 (set (reg:DI 1339)
        (lshiftrt:DI (reg:DI 1337)
            (const_int 32 [0x20]))) generator/graph_generator.c:57 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1337)
        (nil)))
;;   UD chains for insn luid 6 uid 1888
;;      reg 1339 { d246(bb 108 insn 1887) }
;;   eq_note reg 463 { d86(bb 107 insn 1879) d85(bb 106 insn 1874) }
(insn 1888 1887 4388 108 (set (reg/v:SI 464 [ val ])
        (lshiftrt:SI (subreg:SI (reg:DI 1339) 0)
            (const_int 13 [0xd]))) generator/graph_generator.c:57 636 {*aarch64_lshr_sisd_or_int_si3}
     (expr_list:REG_DEAD (reg:DI 1339)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 463 [ val ])
                (const_int 10000 [0x2710]))
            (nil))))
;;   UD chains for insn luid 7 uid 4388
;;      reg 1896 { d299(bb 100 insn 1889) }
(insn 4388 1888 1890 108 (set (reg:SI 1341)
        (reg:SI 1896)) generator/graph_generator.c:57 -1
     (nil))
;;   UD chains for insn luid 8 uid 1890
;;      reg 464 { d87(bb 108 insn 1888) }
;;      reg 1896 { d299(bb 100 insn 1889) }
;;   eq_note reg 464 { d87(bb 108 insn 1888) }
(insn 1890 4388 1891 108 (set (reg:SI 1340)
        (mult:SI (reg/v:SI 464 [ val ])
            (reg:SI 1896))) generator/graph_generator.c:57 362 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 1341)
        (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 464 [ val ])
                    (const_int 10000 [0x2710]))
                (nil)))))
;;   UD chains for insn luid 9 uid 1891
;;      reg 463 { d86(bb 107 insn 1879) d85(bb 106 insn 1874) }
;;      reg 1340 { d247(bb 108 insn 1890) }
(insn 1891 1890 1892 108 (set (reg/v:SI 464 [ val ])
        (minus:SI (reg/v:SI 463 [ val ])
            (reg:SI 1340))) generator/graph_generator.c:57 262 {subsi3}
     (expr_list:REG_DEAD (reg:SI 1340)
        (expr_list:REG_DEAD (reg/v:SI 463 [ val ])
            (nil))))
;;   UD chains for insn luid 10 uid 1892
;;      reg 464 { d88(bb 108 insn 1891) }
(debug_insn 1892 1891 1893 108 (var_location:SI val (reg/v:SI 464 [ val ])) generator/graph_generator.c:57 -1
     (nil))
;;   UD chains for insn luid 11 uid 1893
;;      reg 464 { d88(bb 108 insn 1891) }
(insn 1893 1892 1894 108 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 464 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:58 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 12 uid 1894
;;      reg 66 { d59(bb 108 insn 1893) }
(jump_insn 1894 1893 1895 108 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3985)
            (pc))) generator/graph_generator.c:58 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 3985)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u1697(29){ }u1698(31){ }u1699(64){ }u1700(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464
;; lr  def 	 66 [cc] 1342
;; live  in  	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 1342
;; live  kill	
;; rd  in  	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(2) 66[60],1342[249]
;; rd  kill	(24) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],1342[249]
;;  UD chains for artificial uses at top

(note 1895 1894 1896 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1896
;;      reg 464 { d88(bb 108 insn 1891) }
(debug_insn 1896 1895 1897 109 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:59 -1
     (nil))
;;   UD chains for insn luid 1 uid 1897
;;      reg 464 { d88(bb 108 insn 1891) }
(insn 1897 1896 1898 109 (set (reg:SI 1342 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:60 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 1898
;;      reg 1342 { d249(bb 109 insn 1897) }
(insn 1898 1897 1899 109 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1342 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:60 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1342 [ val ])
        (nil)))
;;   UD chains for insn luid 3 uid 1899
;;      reg 66 { d60(bb 109 insn 1898) }
(jump_insn 1899 1898 1900 109 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1909)
            (pc))) generator/graph_generator.c:60 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 1909)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u1705(29){ }u1706(31){ }u1707(64){ }u1708(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464 1899
;; lr  def 	 66 [cc] 1343 1344
;; live  in  	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 1343 1344
;; live  kill	
;; rd  in  	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(3) 66[61],1343[250],1344[251]
;; rd  kill	(25) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],1343[250],1344[251]
;;  UD chains for artificial uses at top

(note 1900 1899 1901 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1901
;;      reg 464 { d88(bb 108 insn 1891) }
(debug_insn 1901 1900 1902 110 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:61 -1
     (nil))
;;   UD chains for insn luid 1 uid 1902
;;      reg 464 { d88(bb 108 insn 1891) }
(insn 1902 1901 4394 110 (set (reg:SI 1343 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:63 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
        (nil)))
;;   UD chains for insn luid 2 uid 4394
;;      reg 1899 { d302(bb 100 insn 1903) }
(insn 4394 1902 1904 110 (set (reg:SI 1344)
        (reg:SI 1899)) generator/graph_generator.c:63 -1
     (nil))
;;   UD chains for insn luid 3 uid 1904
;;      reg 1343 { d250(bb 110 insn 1902) }
;;      reg 1899 { d302(bb 100 insn 1903) }
;;   eq_note reg 1343 { d250(bb 110 insn 1902) }
(insn 1904 4394 1905 110 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1343 [ val ])
            (reg:SI 1899))) generator/graph_generator.c:63 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1344)
        (expr_list:REG_DEAD (reg:SI 1343 [ val ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 1343 [ val ])
                    (const_int 5699 [0x1643]))
                (nil)))))
;;   UD chains for insn luid 4 uid 1905
;;      reg 66 { d61(bb 110 insn 1904) }
(jump_insn 1905 1904 1906 110 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3989)
            (pc))) generator/graph_generator.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 3989)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u1714(29){ }u1715(31){ }u1716(64){ }u1717(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1898
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(2) 828[169],829[172]
;; rd  kill	(8) 828[169,170,171],829[172,173,174,175,176]
;;  UD chains for artificial uses at top

(note 1906 1905 4397 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4397
;;      reg 1898 { d301(bb 100 insn 277) }
(insn 4397 1906 4398 111 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;;   UD chains for insn luid 1 uid 4398
;;      reg 1898 { d301(bb 100 insn 277) }
(insn 4398 4397 1909 111 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(35) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[169],829[172],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u1718(29){ }u1719(31){ }u1720(64){ }u1721(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(1) 66[62]
;; rd  kill	(23) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]
;;  UD chains for artificial uses at top

(code_label 1909 4398 1910 112 86 "" [1 uses])
(note 1910 1909 1911 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1911
(debug_insn 1911 1910 1912 112 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 1912
(debug_insn 1912 1911 1913 112 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 1913
(debug_insn 1913 1912 1914 112 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 3 uid 1914
(debug_insn 1914 1913 1915 112 (var_location:SI src_offset (const_int 1 [0x1])) generator/graph_generator.c:138 -1
     (nil))
;;   UD chains for insn luid 4 uid 1915
(debug_insn 1915 1914 1916 112 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
;;   UD chains for insn luid 5 uid 1916
;;      reg 443 { d81(bb 290 insn 3962) d80(bb 100 insn 197) }
;;      reg 747 { d157(bb 290 insn 3959) d156(bb 100 insn 198) }
(insn 1916 1915 1917 112 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 1917
;;      reg 66 { d62(bb 112 insn 1916) }
(jump_insn 1917 1916 1918 112 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1939)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1939)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u1755(29){ }u1756(31){ }u1757(64){ }u1758(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(1) 66[63]
;; rd  kill	(23) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]
;;  UD chains for artificial uses at top

(code_label 1939 1937 1940 115 87 "" [1 uses])
(note 1940 1939 1941 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1941
;;      reg 443 { d81(bb 290 insn 3962) d80(bb 100 insn 197) }
;;      reg 747 { d157(bb 290 insn 3959) d156(bb 100 insn 198) }
(insn 1941 1940 1942 115 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:143 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 1 uid 1942
;;      reg 66 { d63(bb 115 insn 1941) }
(jump_insn 1942 1941 1943 115 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1947)
            (pc))) generator/graph_generator.c:143 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 1947)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1762(29){ }u1763(31){ }u1764(64){ }u1765(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 1897 1898
;; lr  def 	 442 829 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 829 831
;; live  kill	
;; rd  in  	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(3) 442[76],829[173],831[178]
;; rd  kill	(12) 442[75,76,77,78],829[172,173,174,175,176],831[178,179,180]
;;  UD chains for artificial uses at top

(note 1943 1942 1944 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1944
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) d75(bb 100 insn 196) }
(insn 1944 1943 4392 116 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 4392
;;      reg 1897 { d300(bb 100 insn 276) }
(insn 4392 1944 4393 116 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
;;   UD chains for insn luid 2 uid 4393
;;      reg 1898 { d301(bb 100 insn 277) }
(insn 4393 4392 1947 116 (set (reg:DI 831 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(32) 435[74],442[76],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],829[173],831[178],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1768(29){ }u1769(31){ }u1770(64){ }u1771(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 1898
;; lr  def 	 442 829 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 829 831
;; live  kill	
;; rd  in  	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(3) 442[77],829[174],831[179]
;; rd  kill	(12) 442[75,76,77,78],829[172,173,174,175,176],831[178,179,180]
;;  UD chains for artificial uses at top

(code_label 1947 4393 1948 117 88 "" [1 uses])
(note 1948 1947 1949 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1949
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) d75(bb 100 insn 196) }
(insn 1949 1948 282 117 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 1 uid 282
;;      reg 442 { d77(bb 117 insn 1949) }
(insn 282 1949 4391 117 (set (reg:DI 831 [ D.3798 ])
        (reg/v:DI 442 [ nverts ])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 2 uid 4391
;;      reg 1898 { d301(bb 100 insn 277) }
(insn 4391 282 1952 117 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(32) 435[74],442[77],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],829[174],831[179],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u1774(29){ }u1775(31){ }u1776(64){ }u1777(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 695 714 747 750 751 826 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  def 	
;; live  in  	 435 443 576 695 714 747 750 751 826
;; live  gen 	
;; live  kill	
;; rd  in  	(30) 435[74],442[76,77,78],443[81],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(note 1952 4391 1953 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1953
;;      reg 64 { }
;;      reg 751 { d164(bb 107 insn 203) d163(bb 106 insn 210) }
(insn 1953 1952 1954 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 1 uid 1954
;;      reg 64 { }
;;      reg 714 { d154(bb 107 insn 204) d153(bb 106 insn 208) }
(insn 1954 1953 1955 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 2 uid 1955
;;      reg 64 { }
;;      reg 826 { d168(bb 107 insn 205) d167(bb 106 insn 211) }
(insn 1955 1954 1956 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 3 uid 1956
;;      reg 64 { }
;;      reg 695 { d150(bb 107 insn 206) d149(bb 106 insn 209) }
(insn 1956 1955 1957 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 4 uid 1957
;;      reg 64 { }
;;      reg 750 { d161(bb 107 insn 207) d160(bb 106 insn 212) }
(insn 1957 1956 1958 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; live  out 	 435 443 576 747
;; rd  out 	(4) 435[74],443[81],576[146],747[157]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1788(29){ }u1789(31){ }u1790(64){ }u1791(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 432 434 747
;; lr  def 	 66 [cc] 519 520 521 523 525 527 528 530 532 533 535 537 539 540 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363
;; live  in  	 435 443 576 747
;; live  gen 	 66 [cc] 519 520 521 523 525 527 528 530 532 533 535 537 539 540 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363
;; live  kill	
;; rd  in  	(6) 435[74],443[79,81],576[146],747[155,157]
;; rd  gen 	(26) 66[64],519[121],520[122],521[123],523[124],525[125],527[126],528[127],530[128],532[129],533[130],535[131],537[132],539[133],540[134],1353[252],1354[253],1355[254],1356[255],1357[256],1358[257],1359[258],1360[259],1361[260],1362[261],1363[262]
;; rd  kill	(48) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],519[121],520[122],521[123],523[124],525[125],527[126],528[127],530[128],532[129],533[130],535[131],537[132],539[133],540[134],1353[252],1354[253],1355[254],1356[255],1357[256],1358[257],1359[258],1360[259],1361[260],1362[261],1363[262]
;;  UD chains for artificial uses at top

(code_label 1958 1957 1959 119 72 "" [0 uses])
(note 1959 1958 1960 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1960
(debug_insn 1960 1959 1961 119 (var_location:DI v0 (debug_expr:DI D#52)) -1
     (nil))
;;   UD chains for insn luid 1 uid 1961
(debug_insn 1961 1960 1962 119 (var_location:SI lgN (debug_expr:SI D#53)) -1
     (nil))
;;   UD chains for insn luid 2 uid 1962
(debug_insn 1962 1961 1963 119 (var_location:DI val0 (debug_expr:DI D#54)) -1
     (nil))
;;   UD chains for insn luid 3 uid 1963
(debug_insn 1963 1962 1965 119 (var_location:DI val1 (debug_expr:DI D#55)) -1
     (nil))
;;   UD chains for insn luid 4 uid 1965
;;      reg 747 { d157(bb 290 insn 3959) d155(bb 89 insn 214) }
(debug_insn 1965 1963 1966 119 (var_location:DI v (reg/v:DI 747 [ base_src ])) generator/graph_generator.c:121 -1
     (nil))
;;   UD chains for insn luid 5 uid 1966
;;      reg 432 { }
;;      reg 434 { }
(insn 1966 1965 1967 119 (set (reg:DI 519 [ D.3802 ])
        (plus:DI (reg/v:DI 432 [ val0 ])
            (reg/v:DI 434 [ val1 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 1967
;;      reg 519 { d121(bb 119 insn 1966) }
;;      reg 747 { d157(bb 290 insn 3959) d155(bb 89 insn 214) }
(insn 1967 1966 1968 119 (set (reg/v:DI 520 [ v ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 747 [ base_src ])
        (nil)))
;;   UD chains for insn luid 7 uid 1968
;;      reg 520 { d122(bb 119 insn 1967) }
(debug_insn 1968 1967 1969 119 (var_location:DI v (reg/v:DI 520 [ v ])) generator/graph_generator.c:122 -1
     (nil))
;;   UD chains for insn luid 8 uid 1969
(insn 1969 1968 1970 119 (set (reg:DI 1353)
        (const_int 4979156007449604625 [0x4519840211493211])) generator/graph_generator.c:123 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 1970
;;      reg 432 { }
;;      reg 1353 { d252(bb 119 insn 1969) }
;;   eq_note reg 432 { }
(insn 1970 1969 1971 119 (set (reg:DI 521 [ D.3802 ])
        (ior:DI (reg/v:DI 432 [ val0 ])
            (reg:DI 1353))) generator/graph_generator.c:123 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 1353)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 432 [ val0 ])
                (const_int 4979156007449604625 [0x4519840211493211]))
            (nil))))
;;   UD chains for insn luid 10 uid 1971
;;      reg 520 { d122(bb 119 insn 1967) }
;;      reg 521 { d123(bb 119 insn 1970) }
(debug_insn 1971 1970 1972 119 (var_location:DI v (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
;;   UD chains for insn luid 11 uid 1972
;;      reg 520 { d122(bb 119 insn 1967) }
;;      reg 521 { d123(bb 119 insn 1970) }
(debug_insn 1972 1971 1973 119 (var_location:DI x (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
;;   UD chains for insn luid 12 uid 1973
;;      reg 520 { d122(bb 119 insn 1967) }
;;      reg 521 { d123(bb 119 insn 1970) }
(insn 1973 1972 1974 119 (set (reg:DI 1354 [ v ])
        (mult:DI (reg/v:DI 520 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg/v:DI 520 [ v ])
        (nil)))
;;   UD chains for insn luid 13 uid 1974
;;      reg 1354 { d253(bb 119 insn 1973) }
(insn 1974 1973 1975 119 (set (reg/v:DI 523 [ x ])
        (bswap:DI (reg:DI 1354 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1354 [ v ])
        (nil)))
;;   UD chains for insn luid 14 uid 1975
;;      reg 523 { d124(bb 119 insn 1974) }
(debug_insn 1975 1974 1976 119 (var_location:DI x (reg/v:DI 523 [ x ])) generator/graph_generator.c:82 -1
     (nil))
;;   UD chains for insn luid 15 uid 1976
;;      reg 523 { d124(bb 119 insn 1974) }
(insn 1976 1975 1977 119 (set (reg:DI 1355 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 523 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 16 uid 1977
;;      reg 1355 { d254(bb 119 insn 1976) }
(insn 1977 1976 1978 119 (set (reg:DI 525 [ D.3802 ])
        (and:DI (reg:DI 1355 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1355 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 17 uid 1978
;;      reg 523 { d124(bb 119 insn 1974) }
(insn 1978 1977 1979 119 (set (reg:DI 1356 [ D.3802 ])
        (and:DI (reg/v:DI 523 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 523 [ x ])
        (nil)))
;;   UD chains for insn luid 18 uid 1979
;;      reg 1356 { d255(bb 119 insn 1978) }
(insn 1979 1978 1980 119 (set (reg:DI 527 [ D.3802 ])
        (ashift:DI (reg:DI 1356 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1356 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 19 uid 1980
;;      reg 525 { d125(bb 119 insn 1977) }
;;      reg 527 { d126(bb 119 insn 1979) }
(insn 1980 1979 1981 119 (set (reg/v:DI 528 [ x ])
        (ior:DI (reg:DI 525 [ D.3802 ])
            (reg:DI 527 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 527 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 525 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 20 uid 1981
;;      reg 528 { d127(bb 119 insn 1980) }
(debug_insn 1981 1980 1982 119 (var_location:DI x (reg/v:DI 528 [ x ])) generator/graph_generator.c:88 -1
     (nil))
;;   UD chains for insn luid 21 uid 1982
;;      reg 528 { d127(bb 119 insn 1980) }
(insn 1982 1981 1983 119 (set (reg:DI 1357 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 528 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 22 uid 1983
;;      reg 1357 { d256(bb 119 insn 1982) }
(insn 1983 1982 1984 119 (set (reg:DI 530 [ D.3802 ])
        (and:DI (reg:DI 1357 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1357 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 23 uid 1984
;;      reg 528 { d127(bb 119 insn 1980) }
(insn 1984 1983 1985 119 (set (reg:DI 1358 [ D.3802 ])
        (and:DI (reg/v:DI 528 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 528 [ x ])
        (nil)))
;;   UD chains for insn luid 24 uid 1985
;;      reg 1358 { d257(bb 119 insn 1984) }
(insn 1985 1984 1986 119 (set (reg:DI 532 [ D.3802 ])
        (ashift:DI (reg:DI 1358 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1358 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 25 uid 1986
;;      reg 530 { d128(bb 119 insn 1983) }
;;      reg 532 { d129(bb 119 insn 1985) }
(insn 1986 1985 1987 119 (set (reg/v:DI 533 [ x ])
        (ior:DI (reg:DI 530 [ D.3802 ])
            (reg:DI 532 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 532 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 530 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 26 uid 1987
;;      reg 533 { d130(bb 119 insn 1986) }
(debug_insn 1987 1986 1988 119 (var_location:DI x (reg/v:DI 533 [ x ])) generator/graph_generator.c:89 -1
     (nil))
;;   UD chains for insn luid 27 uid 1988
;;      reg 533 { d130(bb 119 insn 1986) }
(insn 1988 1987 1989 119 (set (reg:DI 1359 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 533 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 28 uid 1989
;;      reg 1359 { d258(bb 119 insn 1988) }
(insn 1989 1988 1990 119 (set (reg:DI 535 [ D.3802 ])
        (and:DI (reg:DI 1359 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1359 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 29 uid 1990
;;      reg 533 { d130(bb 119 insn 1986) }
(insn 1990 1989 1991 119 (set (reg:DI 1360 [ D.3802 ])
        (and:DI (reg/v:DI 533 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 533 [ x ])
        (nil)))
;;   UD chains for insn luid 30 uid 1991
;;      reg 1360 { d259(bb 119 insn 1990) }
(insn 1991 1990 1993 119 (set (reg:DI 537 [ D.3802 ])
        (ashift:DI (reg:DI 1360 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1360 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 31 uid 1993
(debug_insn 1993 1991 1994 119 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
;;   UD chains for insn luid 32 uid 1994
(insn 1994 1993 1995 119 (set (reg:SI 1361)
        (const_int 64 [0x40])) generator/graph_generator.c:124 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 33 uid 1995
;;      reg 261 { }
;;      reg 1361 { d260(bb 119 insn 1994) }
;;   eq_note reg 261 { }
(insn 1995 1994 1996 119 (set (reg:SI 539 [ D.3797 ])
        (minus:SI (reg:SI 1361)
            (reg:SI 261 [ D.3797 ]))) generator/graph_generator.c:124 262 {subsi3}
     (expr_list:REG_DEAD (reg:SI 1361)
        (expr_list:REG_EQUAL (minus:SI (const_int 64 [0x40])
                (reg:SI 261 [ D.3797 ]))
            (nil))))
;;   UD chains for insn luid 34 uid 1996
;;      reg 535 { d131(bb 119 insn 1989) }
;;      reg 537 { d132(bb 119 insn 1991) }
(insn 1996 1995 1997 119 (set (reg:DI 1362 [ x ])
        (ior:DI (reg:DI 535 [ D.3802 ])
            (reg:DI 537 [ D.3802 ]))) generator/graph_generator.c:124 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 537 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 535 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 35 uid 1997
;;      reg 539 { d133(bb 119 insn 1995) }
;;      reg 1362 { d261(bb 119 insn 1996) }
(insn 1997 1996 1998 119 (set (reg/v:DI 540 [ v ])
        (lshiftrt:DI (reg:DI 1362 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1362 [ x ])
        (nil)))
;;   UD chains for insn luid 36 uid 1998
;;      reg 540 { d134(bb 119 insn 1997) }
(debug_insn 1998 1997 1999 119 (var_location:DI v (reg/v:DI 540 [ v ])) generator/graph_generator.c:124 -1
     (nil))
;;   UD chains for insn luid 37 uid 1999
;;      reg 261 { }
;;      reg 540 { d134(bb 119 insn 1997) }
(insn 1999 1998 2000 119 (set (reg:DI 1363 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 540 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 38 uid 2000
;;      reg 1363 { d262(bb 119 insn 1999) }
(insn 2000 1999 2001 119 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1363 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1363 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 39 uid 2001
;;      reg 66 { d64(bb 119 insn 2000) }
(jump_insn 2001 2000 2099 119 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2009)
            (pc))) generator/graph_generator.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2009)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 540 576 1863
;; live  out 	 435 443 519 521 539 540 576
;; rd  out 	(8) 435[74],443[79,81],519[121],521[123],539[133],540[134],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1843(29){ }u1844(31){ }u1845(64){ }u1846(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 540 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 434 539 540
;; lr  def 	 66 [cc] 542 544 546 548 549 551 553 554 556 558 560 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373
;; live  in  	 435 443 519 521 539 540 576
;; live  gen 	 66 [cc] 542 544 546 548 549 551 553 554 556 558 560 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373
;; live  kill	
;; rd  in  	(8) 435[74],443[79,81],519[121],521[123],539[133],540[134],576[146]
;; rd  gen 	(22) 66[65],542[135],544[136],546[137],548[138],549[139],551[140],553[141],554[142],556[143],558[144],560[145],1364[263],1365[264],1366[265],1367[266],1368[267],1369[268],1370[269],1371[270],1372[271],1373[272]
;; rd  kill	(44) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],542[135],544[136],546[137],548[138],549[139],551[140],553[141],554[142],556[143],558[144],560[145],1364[263],1365[264],1366[265],1367[266],1368[267],1369[268],1370[269],1371[270],1372[271],1373[272]
;;  UD chains for artificial uses at top

(code_label 2009 2007 2010 121 90 "" [1 uses])
(note 2010 2009 2011 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2011
(insn 2011 2010 2012 121 (set (reg:DI 1364)
        (const_int 3481428888784487333 [0x3050852102c843a5])) generator/graph_generator.c:126 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 2012
;;      reg 434 { }
;;      reg 1364 { d263(bb 121 insn 2011) }
;;   eq_note reg 434 { }
(insn 2012 2011 2013 121 (set (reg:DI 542 [ D.3802 ])
        (ior:DI (reg/v:DI 434 [ val1 ])
            (reg:DI 1364))) generator/graph_generator.c:126 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 1364)
        (expr_list:REG_EQUAL (ior:DI (reg/v:DI 434 [ val1 ])
                (const_int 3481428888784487333 [0x3050852102c843a5]))
            (nil))))
;;   UD chains for insn luid 2 uid 2013
;;      reg 540 { d134(bb 119 insn 1997) }
;;      reg 542 { d135(bb 121 insn 2012) }
(debug_insn 2013 2012 2014 121 (var_location:DI v (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
;;   UD chains for insn luid 3 uid 2014
;;      reg 540 { d134(bb 119 insn 1997) }
;;      reg 542 { d135(bb 121 insn 2012) }
(debug_insn 2014 2013 2015 121 (var_location:DI x (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
;;   UD chains for insn luid 4 uid 2015
;;      reg 540 { d134(bb 119 insn 1997) }
;;      reg 542 { d135(bb 121 insn 2012) }
(insn 2015 2014 2016 121 (set (reg:DI 1365 [ v ])
        (mult:DI (reg/v:DI 540 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg/v:DI 540 [ v ])
        (nil)))
;;   UD chains for insn luid 5 uid 2016
;;      reg 1365 { d264(bb 121 insn 2015) }
(insn 2016 2015 2017 121 (set (reg/v:DI 544 [ x ])
        (bswap:DI (reg:DI 1365 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1365 [ v ])
        (nil)))
;;   UD chains for insn luid 6 uid 2017
;;      reg 544 { d136(bb 121 insn 2016) }
(debug_insn 2017 2016 2018 121 (var_location:DI x (reg/v:DI 544 [ x ])) generator/graph_generator.c:82 -1
     (nil))
;;   UD chains for insn luid 7 uid 2018
;;      reg 544 { d136(bb 121 insn 2016) }
(insn 2018 2017 2019 121 (set (reg:DI 1366 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 544 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 8 uid 2019
;;      reg 1366 { d265(bb 121 insn 2018) }
(insn 2019 2018 2020 121 (set (reg:DI 546 [ D.3802 ])
        (and:DI (reg:DI 1366 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1366 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 9 uid 2020
;;      reg 544 { d136(bb 121 insn 2016) }
(insn 2020 2019 2021 121 (set (reg:DI 1367 [ D.3802 ])
        (and:DI (reg/v:DI 544 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 544 [ x ])
        (nil)))
;;   UD chains for insn luid 10 uid 2021
;;      reg 1367 { d266(bb 121 insn 2020) }
(insn 2021 2020 2022 121 (set (reg:DI 548 [ D.3802 ])
        (ashift:DI (reg:DI 1367 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1367 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 11 uid 2022
;;      reg 546 { d137(bb 121 insn 2019) }
;;      reg 548 { d138(bb 121 insn 2021) }
(insn 2022 2021 2023 121 (set (reg/v:DI 549 [ x ])
        (ior:DI (reg:DI 546 [ D.3802 ])
            (reg:DI 548 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 548 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 546 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 12 uid 2023
;;      reg 549 { d139(bb 121 insn 2022) }
(debug_insn 2023 2022 2024 121 (var_location:DI x (reg/v:DI 549 [ x ])) generator/graph_generator.c:88 -1
     (nil))
;;   UD chains for insn luid 13 uid 2024
;;      reg 549 { d139(bb 121 insn 2022) }
(insn 2024 2023 2025 121 (set (reg:DI 1368 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 549 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 14 uid 2025
;;      reg 1368 { d267(bb 121 insn 2024) }
(insn 2025 2024 2026 121 (set (reg:DI 551 [ D.3802 ])
        (and:DI (reg:DI 1368 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1368 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 15 uid 2026
;;      reg 549 { d139(bb 121 insn 2022) }
(insn 2026 2025 2027 121 (set (reg:DI 1369 [ D.3802 ])
        (and:DI (reg/v:DI 549 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 549 [ x ])
        (nil)))
;;   UD chains for insn luid 16 uid 2027
;;      reg 1369 { d268(bb 121 insn 2026) }
(insn 2027 2026 2028 121 (set (reg:DI 553 [ D.3802 ])
        (ashift:DI (reg:DI 1369 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1369 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 17 uid 2028
;;      reg 551 { d140(bb 121 insn 2025) }
;;      reg 553 { d141(bb 121 insn 2027) }
(insn 2028 2027 2029 121 (set (reg/v:DI 554 [ x ])
        (ior:DI (reg:DI 551 [ D.3802 ])
            (reg:DI 553 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 553 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 551 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 18 uid 2029
;;      reg 554 { d142(bb 121 insn 2028) }
(debug_insn 2029 2028 2030 121 (var_location:DI x (reg/v:DI 554 [ x ])) generator/graph_generator.c:89 -1
     (nil))
;;   UD chains for insn luid 19 uid 2030
;;      reg 554 { d142(bb 121 insn 2028) }
(insn 2030 2029 2031 121 (set (reg:DI 1370 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 554 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 20 uid 2031
;;      reg 1370 { d269(bb 121 insn 2030) }
(insn 2031 2030 2032 121 (set (reg:DI 556 [ D.3802 ])
        (and:DI (reg:DI 1370 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1370 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 21 uid 2032
;;      reg 554 { d142(bb 121 insn 2028) }
(insn 2032 2031 2033 121 (set (reg:DI 1371 [ D.3802 ])
        (and:DI (reg/v:DI 554 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 554 [ x ])
        (nil)))
;;   UD chains for insn luid 22 uid 2033
;;      reg 1371 { d270(bb 121 insn 2032) }
(insn 2033 2032 2035 121 (set (reg:DI 558 [ D.3802 ])
        (ashift:DI (reg:DI 1371 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1371 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 23 uid 2035
(debug_insn 2035 2033 2036 121 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
;;   UD chains for insn luid 24 uid 2036
;;      reg 556 { d143(bb 121 insn 2031) }
;;      reg 558 { d144(bb 121 insn 2033) }
(insn 2036 2035 2037 121 (set (reg:DI 1372 [ x ])
        (ior:DI (reg:DI 556 [ D.3802 ])
            (reg:DI 558 [ D.3802 ]))) generator/graph_generator.c:127 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 558 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 556 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 25 uid 2037
;;      reg 539 { d133(bb 119 insn 1995) }
;;      reg 1372 { d271(bb 121 insn 2036) }
(insn 2037 2036 2038 121 (set (reg/v:DI 560 [ v ])
        (lshiftrt:DI (reg:DI 1372 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1372 [ x ])
        (nil)))
;;   UD chains for insn luid 26 uid 2038
;;      reg 560 { d145(bb 121 insn 2037) }
(debug_insn 2038 2037 2039 121 (var_location:DI v (reg/v:DI 560 [ v ])) generator/graph_generator.c:127 -1
     (nil))
;;   UD chains for insn luid 27 uid 2039
;;      reg 261 { }
;;      reg 560 { d145(bb 121 insn 2037) }
(insn 2039 2038 2040 121 (set (reg:DI 1373 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 560 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 28 uid 2040
;;      reg 1373 { d272(bb 121 insn 2039) }
(insn 2040 2039 2041 121 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1373 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1373 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 29 uid 2041
;;      reg 66 { d65(bb 121 insn 2040) }
(jump_insn 2041 2040 2130 121 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2055)
            (pc))) generator/graph_generator.c:128 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2055)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 542 560 576 1863
;; live  out 	 435 443 519 521 539 542 560 576
;; rd  out 	(9) 435[74],443[79,81],519[121],521[123],539[133],542[135],560[145],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1899(29){ }u1900(31){ }u1901(64){ }u1902(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 542 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 443 519 521 539
;; lr  def 	 66 [cc] 478 480 482 484 485 487 489 490 492 494 496 1380 1381 1382 1383 1384 1385 1386 1387 1388
;; live  in  	 435 443 519 521 539 542 560 576
;; live  gen 	 66 [cc] 478 480 482 484 485 487 489 490 492 494 496 1380 1381 1382 1383 1384 1385 1386 1387 1388
;; live  kill	
;; rd  in  	(9) 435[74],443[79,81],519[121],521[123],539[133],542[135],560[145],576[146]
;; rd  gen 	(21) 66[66],478[100],480[101],482[102],484[103],485[104],487[105],489[106],490[107],492[108],494[109],496[110],1380[273],1381[274],1382[275],1383[276],1384[277],1385[278],1386[279],1387[280],1388[281]
;; rd  kill	(43) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],478[100],480[101],482[102],484[103],485[104],487[105],489[106],490[107],492[108],494[109],496[110],1380[273],1381[274],1382[275],1383[276],1384[277],1385[278],1386[279],1387[280],1388[281]
;;  UD chains for artificial uses at top

(code_label 2055 2053 2056 123 91 "" [1 uses])
(note 2056 2055 2058 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2058
(debug_insn 2058 2056 2059 123 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 1 uid 2059
(debug_insn 2059 2058 2060 123 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 2 uid 2060
(debug_insn 2060 2059 2061 123 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 3 uid 2061
(debug_insn 2061 2060 2062 123 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 4 uid 2062
(debug_insn 2062 2061 2063 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 5 uid 2063
(debug_insn 2063 2062 2064 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 6 uid 2064
(debug_insn 2064 2063 2065 123 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 7 uid 2065
;;      reg 443 { d81(bb 290 insn 3962) d79(bb 89 insn 213) }
(debug_insn 2065 2064 2066 123 (var_location:DI v0 (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 8 uid 2066
(debug_insn 2066 2065 2067 123 (var_location:SI lgN (debug_expr:SI D#53)) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 9 uid 2067
(debug_insn 2067 2066 2068 123 (var_location:DI val0 (debug_expr:DI D#54)) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 10 uid 2068
(debug_insn 2068 2067 2070 123 (var_location:DI val1 (debug_expr:DI D#55)) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 11 uid 2070
;;      reg 443 { d81(bb 290 insn 3962) d79(bb 89 insn 213) }
(debug_insn 2070 2068 2071 123 (var_location:DI v (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:121 -1
     (nil))
;;   UD chains for insn luid 12 uid 2071
;;      reg 443 { d81(bb 290 insn 3962) d79(bb 89 insn 213) }
;;      reg 519 { d121(bb 119 insn 1966) }
(insn 2071 2070 2073 123 (set (reg/v:DI 478 [ v ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 519 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 443 [ base_tgt ])
            (nil))))
;;   UD chains for insn luid 13 uid 2073
;;      reg 478 { d100(bb 123 insn 2071) }
;;      reg 521 { d123(bb 119 insn 1970) }
(debug_insn 2073 2071 2074 123 (var_location:DI v (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
;;   UD chains for insn luid 14 uid 2074
;;      reg 478 { d100(bb 123 insn 2071) }
;;      reg 521 { d123(bb 119 insn 1970) }
(debug_insn 2074 2073 2075 123 (var_location:DI x (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
;;   UD chains for insn luid 15 uid 2075
;;      reg 478 { d100(bb 123 insn 2071) }
;;      reg 521 { d123(bb 119 insn 1970) }
(insn 2075 2074 2076 123 (set (reg:DI 1380 [ v ])
        (mult:DI (reg/v:DI 478 [ v ])
            (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 521 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 478 [ v ])
            (nil))))
;;   UD chains for insn luid 16 uid 2076
;;      reg 1380 { d273(bb 123 insn 2075) }
(insn 2076 2075 2077 123 (set (reg/v:DI 480 [ x ])
        (bswap:DI (reg:DI 1380 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1380 [ v ])
        (nil)))
;;   UD chains for insn luid 17 uid 2077
;;      reg 480 { d101(bb 123 insn 2076) }
(debug_insn 2077 2076 2078 123 (var_location:DI x (reg/v:DI 480 [ x ])) generator/graph_generator.c:82 -1
     (nil))
;;   UD chains for insn luid 18 uid 2078
;;      reg 480 { d101(bb 123 insn 2076) }
(insn 2078 2077 2079 123 (set (reg:DI 1381 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 480 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 19 uid 2079
;;      reg 1381 { d274(bb 123 insn 2078) }
(insn 2079 2078 2080 123 (set (reg:DI 482 [ D.3802 ])
        (and:DI (reg:DI 1381 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1381 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 20 uid 2080
;;      reg 480 { d101(bb 123 insn 2076) }
(insn 2080 2079 2081 123 (set (reg:DI 1382 [ D.3802 ])
        (and:DI (reg/v:DI 480 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 480 [ x ])
        (nil)))
;;   UD chains for insn luid 21 uid 2081
;;      reg 1382 { d275(bb 123 insn 2080) }
(insn 2081 2080 2082 123 (set (reg:DI 484 [ D.3802 ])
        (ashift:DI (reg:DI 1382 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1382 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 22 uid 2082
;;      reg 482 { d102(bb 123 insn 2079) }
;;      reg 484 { d103(bb 123 insn 2081) }
(insn 2082 2081 2083 123 (set (reg/v:DI 485 [ x ])
        (ior:DI (reg:DI 482 [ D.3802 ])
            (reg:DI 484 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 484 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 482 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 23 uid 2083
;;      reg 485 { d104(bb 123 insn 2082) }
(debug_insn 2083 2082 2084 123 (var_location:DI x (reg/v:DI 485 [ x ])) generator/graph_generator.c:88 -1
     (nil))
;;   UD chains for insn luid 24 uid 2084
;;      reg 485 { d104(bb 123 insn 2082) }
(insn 2084 2083 2085 123 (set (reg:DI 1383 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 485 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 25 uid 2085
;;      reg 1383 { d276(bb 123 insn 2084) }
(insn 2085 2084 2086 123 (set (reg:DI 487 [ D.3802 ])
        (and:DI (reg:DI 1383 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1383 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 26 uid 2086
;;      reg 485 { d104(bb 123 insn 2082) }
(insn 2086 2085 2087 123 (set (reg:DI 1384 [ D.3802 ])
        (and:DI (reg/v:DI 485 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 485 [ x ])
        (nil)))
;;   UD chains for insn luid 27 uid 2087
;;      reg 1384 { d277(bb 123 insn 2086) }
(insn 2087 2086 2088 123 (set (reg:DI 489 [ D.3802 ])
        (ashift:DI (reg:DI 1384 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1384 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 28 uid 2088
;;      reg 487 { d105(bb 123 insn 2085) }
;;      reg 489 { d106(bb 123 insn 2087) }
(insn 2088 2087 2089 123 (set (reg/v:DI 490 [ x ])
        (ior:DI (reg:DI 487 [ D.3802 ])
            (reg:DI 489 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 489 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 487 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 29 uid 2089
;;      reg 490 { d107(bb 123 insn 2088) }
(debug_insn 2089 2088 2090 123 (var_location:DI x (reg/v:DI 490 [ x ])) generator/graph_generator.c:89 -1
     (nil))
;;   UD chains for insn luid 30 uid 2090
;;      reg 490 { d107(bb 123 insn 2088) }
(insn 2090 2089 2091 123 (set (reg:DI 1385 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 490 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 31 uid 2091
;;      reg 1385 { d278(bb 123 insn 2090) }
(insn 2091 2090 2092 123 (set (reg:DI 492 [ D.3802 ])
        (and:DI (reg:DI 1385 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1385 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 32 uid 2092
;;      reg 490 { d107(bb 123 insn 2088) }
(insn 2092 2091 2093 123 (set (reg:DI 1386 [ D.3802 ])
        (and:DI (reg/v:DI 490 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 490 [ x ])
        (nil)))
;;   UD chains for insn luid 33 uid 2093
;;      reg 1386 { d279(bb 123 insn 2092) }
(insn 2093 2092 2095 123 (set (reg:DI 494 [ D.3802 ])
        (ashift:DI (reg:DI 1386 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1386 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 34 uid 2095
(debug_insn 2095 2093 2096 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
;;   UD chains for insn luid 35 uid 2096
;;      reg 492 { d108(bb 123 insn 2091) }
;;      reg 494 { d109(bb 123 insn 2093) }
(insn 2096 2095 2097 123 (set (reg:DI 1387 [ x ])
        (ior:DI (reg:DI 492 [ D.3802 ])
            (reg:DI 494 [ D.3802 ]))) generator/graph_generator.c:124 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 494 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 492 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 36 uid 2097
;;      reg 539 { d133(bb 119 insn 1995) }
;;      reg 1387 { d280(bb 123 insn 2096) }
(insn 2097 2096 2098 123 (set (reg/v:DI 496 [ v ])
        (lshiftrt:DI (reg:DI 1387 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1387 [ x ])
        (nil)))
;;   UD chains for insn luid 37 uid 2098
;;      reg 496 { d110(bb 123 insn 2097) }
(debug_insn 2098 2097 2100 123 (var_location:DI v (reg/v:DI 496 [ v ])) generator/graph_generator.c:124 -1
     (nil))
;;   UD chains for insn luid 38 uid 2100
;;      reg 261 { }
;;      reg 496 { d110(bb 123 insn 2097) }
(insn 2100 2098 2101 123 (set (reg:DI 1388 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 496 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 39 uid 2101
;;      reg 1388 { d281(bb 123 insn 2100) }
(insn 2101 2100 2102 123 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1388 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1388 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 40 uid 2102
;;      reg 66 { d66(bb 123 insn 2101) }
(jump_insn 2102 2101 2103 123 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2099)
            (pc))) generator/graph_generator.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2099)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 496 539 542 560 576 1863
;; live  out 	 435 496 539 542 560 576
;; rd  out 	(6) 435[74],496[110],539[133],542[135],560[145],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1944(29){ }u1945(31){ }u1946(64){ }u1947(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 496 539 542 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 496 539 542
;; lr  def 	 66 [cc] 499 501 503 504 506 508 509 511 513 515 1389 1390 1391 1392 1393 1394 1395 1396 1397
;; live  in  	 435 496 539 542 560 576
;; live  gen 	 66 [cc] 499 501 503 504 506 508 509 511 513 515 1389 1390 1391 1392 1393 1394 1395 1396 1397
;; live  kill	
;; rd  in  	(6) 435[74],496[110],539[133],542[135],560[145],576[146]
;; rd  gen 	(20) 66[67],499[111],501[112],503[113],504[114],506[115],508[116],509[117],511[118],513[119],515[120],1389[282],1390[283],1391[284],1392[285],1393[286],1394[287],1395[288],1396[289],1397[290]
;; rd  kill	(42) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],499[111],501[112],503[113],504[114],506[115],508[116],509[117],511[118],513[119],515[120],1389[282],1390[283],1391[284],1392[285],1393[286],1394[287],1395[288],1396[289],1397[290]
;;  UD chains for artificial uses at top

(note 2103 2102 2104 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2104
;;      reg 496 { d110(bb 123 insn 2097) }
;;      reg 542 { d135(bb 121 insn 2012) }
(debug_insn 2104 2103 2105 124 (var_location:DI v (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
;;   UD chains for insn luid 1 uid 2105
;;      reg 496 { d110(bb 123 insn 2097) }
;;      reg 542 { d135(bb 121 insn 2012) }
(debug_insn 2105 2104 2106 124 (var_location:DI x (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
;;   UD chains for insn luid 2 uid 2106
;;      reg 496 { d110(bb 123 insn 2097) }
;;      reg 542 { d135(bb 121 insn 2012) }
(insn 2106 2105 2107 124 (set (reg:DI 1389 [ v ])
        (mult:DI (reg/v:DI 496 [ v ])
            (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 542 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 496 [ v ])
            (nil))))
;;   UD chains for insn luid 3 uid 2107
;;      reg 1389 { d282(bb 124 insn 2106) }
(insn 2107 2106 2108 124 (set (reg/v:DI 499 [ x ])
        (bswap:DI (reg:DI 1389 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1389 [ v ])
        (nil)))
;;   UD chains for insn luid 4 uid 2108
;;      reg 499 { d111(bb 124 insn 2107) }
(debug_insn 2108 2107 2109 124 (var_location:DI x (reg/v:DI 499 [ x ])) generator/graph_generator.c:82 -1
     (nil))
;;   UD chains for insn luid 5 uid 2109
;;      reg 499 { d111(bb 124 insn 2107) }
(insn 2109 2108 2110 124 (set (reg:DI 1390 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 499 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 6 uid 2110
;;      reg 1390 { d283(bb 124 insn 2109) }
(insn 2110 2109 2111 124 (set (reg:DI 501 [ D.3802 ])
        (and:DI (reg:DI 1390 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1390 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 7 uid 2111
;;      reg 499 { d111(bb 124 insn 2107) }
(insn 2111 2110 2112 124 (set (reg:DI 1391 [ D.3802 ])
        (and:DI (reg/v:DI 499 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 499 [ x ])
        (nil)))
;;   UD chains for insn luid 8 uid 2112
;;      reg 1391 { d284(bb 124 insn 2111) }
(insn 2112 2111 2113 124 (set (reg:DI 503 [ D.3802 ])
        (ashift:DI (reg:DI 1391 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1391 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 9 uid 2113
;;      reg 501 { d112(bb 124 insn 2110) }
;;      reg 503 { d113(bb 124 insn 2112) }
(insn 2113 2112 2114 124 (set (reg/v:DI 504 [ x ])
        (ior:DI (reg:DI 501 [ D.3802 ])
            (reg:DI 503 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 503 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 501 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 10 uid 2114
;;      reg 504 { d114(bb 124 insn 2113) }
(debug_insn 2114 2113 2115 124 (var_location:DI x (reg/v:DI 504 [ x ])) generator/graph_generator.c:88 -1
     (nil))
;;   UD chains for insn luid 11 uid 2115
;;      reg 504 { d114(bb 124 insn 2113) }
(insn 2115 2114 2116 124 (set (reg:DI 1392 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 504 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 12 uid 2116
;;      reg 1392 { d285(bb 124 insn 2115) }
(insn 2116 2115 2117 124 (set (reg:DI 506 [ D.3802 ])
        (and:DI (reg:DI 1392 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1392 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 13 uid 2117
;;      reg 504 { d114(bb 124 insn 2113) }
(insn 2117 2116 2118 124 (set (reg:DI 1393 [ D.3802 ])
        (and:DI (reg/v:DI 504 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 504 [ x ])
        (nil)))
;;   UD chains for insn luid 14 uid 2118
;;      reg 1393 { d286(bb 124 insn 2117) }
(insn 2118 2117 2119 124 (set (reg:DI 508 [ D.3802 ])
        (ashift:DI (reg:DI 1393 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1393 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 15 uid 2119
;;      reg 506 { d115(bb 124 insn 2116) }
;;      reg 508 { d116(bb 124 insn 2118) }
(insn 2119 2118 2120 124 (set (reg/v:DI 509 [ x ])
        (ior:DI (reg:DI 506 [ D.3802 ])
            (reg:DI 508 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 508 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 506 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 16 uid 2120
;;      reg 509 { d117(bb 124 insn 2119) }
(debug_insn 2120 2119 2121 124 (var_location:DI x (reg/v:DI 509 [ x ])) generator/graph_generator.c:89 -1
     (nil))
;;   UD chains for insn luid 17 uid 2121
;;      reg 509 { d117(bb 124 insn 2119) }
(insn 2121 2120 2122 124 (set (reg:DI 1394 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 509 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 18 uid 2122
;;      reg 1394 { d287(bb 124 insn 2121) }
(insn 2122 2121 2123 124 (set (reg:DI 511 [ D.3802 ])
        (and:DI (reg:DI 1394 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1394 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 19 uid 2123
;;      reg 509 { d117(bb 124 insn 2119) }
(insn 2123 2122 2124 124 (set (reg:DI 1395 [ D.3802 ])
        (and:DI (reg/v:DI 509 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 509 [ x ])
        (nil)))
;;   UD chains for insn luid 20 uid 2124
;;      reg 1395 { d288(bb 124 insn 2123) }
(insn 2124 2123 2126 124 (set (reg:DI 513 [ D.3802 ])
        (ashift:DI (reg:DI 1395 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1395 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 21 uid 2126
(debug_insn 2126 2124 2127 124 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
;;   UD chains for insn luid 22 uid 2127
;;      reg 511 { d118(bb 124 insn 2122) }
;;      reg 513 { d119(bb 124 insn 2124) }
(insn 2127 2126 2128 124 (set (reg:DI 1396 [ x ])
        (ior:DI (reg:DI 511 [ D.3802 ])
            (reg:DI 513 [ D.3802 ]))) generator/graph_generator.c:127 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 513 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 511 [ D.3802 ])
            (nil))))
;;   UD chains for insn luid 23 uid 2128
;;      reg 539 { d133(bb 119 insn 1995) }
;;      reg 1396 { d289(bb 124 insn 2127) }
(insn 2128 2127 2129 124 (set (reg/v:DI 515 [ v ])
        (lshiftrt:DI (reg:DI 1396 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1396 [ x ])
        (expr_list:REG_DEAD (reg:SI 539 [ D.3797 ])
            (nil))))
;;   UD chains for insn luid 24 uid 2129
;;      reg 515 { d120(bb 124 insn 2128) }
(debug_insn 2129 2128 2131 124 (var_location:DI v (reg/v:DI 515 [ v ])) generator/graph_generator.c:127 -1
     (nil))
;;   UD chains for insn luid 25 uid 2131
;;      reg 261 { }
;;      reg 515 { d120(bb 124 insn 2128) }
(insn 2131 2129 2132 124 (set (reg:DI 1397 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 515 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
;;   UD chains for insn luid 26 uid 2132
;;      reg 1397 { d290(bb 124 insn 2131) }
(insn 2132 2131 2133 124 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1397 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1397 [ D.3802 ])
        (nil)))
;;   UD chains for insn luid 27 uid 2133
;;      reg 66 { d67(bb 124 insn 2132) }
(jump_insn 2133 2132 2134 124 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2130)
            (pc))) generator/graph_generator.c:128 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2130)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 515 560 576 1863
;; live  out 	 435 515 560 576
;; rd  out 	(4) 435[74],515[120],560[145],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1983(29){ }u1984(31){ }u1985(64){ }u1986(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 515 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 435 515 560 576
;; lr  def 	 435 576
;; live  in  	 435 515 560 576
;; live  gen 	 435 576
;; live  kill	
;; rd  in  	(4) 435[74],515[120],560[145],576[146]
;; rd  gen 	(2) 435[74],576[146]
;; rd  kill	(2) 435[74],576[146]
;;  UD chains for artificial uses at top

(note 2134 2133 2135 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2135
(debug_insn 2135 2134 2136 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 1 uid 2136
(debug_insn 2136 2135 2137 125 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 2 uid 2137
(debug_insn 2137 2136 2138 125 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 3 uid 2138
(debug_insn 2138 2137 2139 125 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 4 uid 2139
(debug_insn 2139 2138 2140 125 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 5 uid 2140
(debug_insn 2140 2139 2141 125 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 6 uid 2141
(debug_insn 2141 2140 2142 125 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 7 uid 2142
(debug_insn 2142 2141 2143 125 (var_location:DI p (debug_expr:DI D#36)) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 8 uid 2143
(debug_insn 2143 2142 2144 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 9 uid 2144
(debug_insn 2144 2143 2146 125 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 10 uid 2146
;;      reg 560 { d145(bb 121 insn 2037) }
;;      reg 576 { d146(bb 125 insn 2163) }
(insn 2146 2144 2147 125 (set (mem:DI (reg:DI 576 [ ivtmp.134 ]) [4 MEM[base: _513, offset: 0B]+0 S8 A64])
        (reg/v:DI 560 [ v ])) generator/graph_generator.h:65 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 560 [ v ])
        (nil)))
;;   UD chains for insn luid 11 uid 2147
;;      reg 515 { d120(bb 124 insn 2128) }
;;      reg 576 { d146(bb 125 insn 2163) }
(insn 2147 2146 2148 125 (set (mem:DI (plus:DI (reg:DI 576 [ ivtmp.134 ])
                (const_int 8 [0x8])) [4 MEM[base: _513, offset: 8B]+0 S8 A64])
        (reg/v:DI 515 [ v ])) generator/graph_generator.h:66 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 515 [ v ])
        (nil)))
;;   UD chains for insn luid 12 uid 2148
(debug_insn 2148 2147 2149 125 (var_location:DI p (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 13 uid 2149
(debug_insn 2149 2148 2150 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 14 uid 2150
(debug_insn 2150 2149 2151 125 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
;;   UD chains for insn luid 15 uid 2151
(debug_insn 2151 2150 2152 125 (var_location:DI nverts (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 16 uid 2152
(debug_insn 2152 2151 2153 125 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 17 uid 2153
(debug_insn 2153 2152 2154 125 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 18 uid 2154
(debug_insn 2154 2153 2155 125 (var_location:DI result (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 19 uid 2155
(debug_insn 2155 2154 2156 125 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 20 uid 2156
(debug_insn 2156 2155 2157 125 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 21 uid 2157
(debug_insn 2157 2156 2158 125 (var_location:DI base_src (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 22 uid 2158
(debug_insn 2158 2157 2159 125 (var_location:DI base_tgt (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 23 uid 2159
(debug_insn 2159 2158 2160 125 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 24 uid 2160
(debug_insn 2160 2159 2161 125 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
;;   UD chains for insn luid 25 uid 2161
;;      reg 435 { d74(bb 125 insn 2161) }
(insn 2161 2160 2162 125 (set (reg/v:DI 435 [ start_edge ])
        (plus:DI (reg/v:DI 435 [ start_edge ])
            (const_int 1 [0x1]))) generator/graph_generator.c:193 95 {*adddi3_aarch64}
     (nil))
;;   UD chains for insn luid 26 uid 2162
;;      reg 435 { d74(bb 125 insn 2161) }
(debug_insn 2162 2161 2163 125 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:193 -1
     (nil))
;;   UD chains for insn luid 27 uid 2163
;;      reg 576 { d146(bb 125 insn 2163) }
(insn 2163 2162 2164 125 (set (reg:DI 576 [ ivtmp.134 ])
        (plus:DI (reg:DI 576 [ ivtmp.134 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576
;; rd  out 	(2) 435[74],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1995(29){ }u1996(31){ }u1997(64){ }u1998(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 435
;; lr  def 	 66 [cc]
;; live  in  	 435 576
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(2) 435[74],576[146]
;; rd  gen 	(1) 66[68]
;; rd  kill	(23) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]
;;  UD chains for artificial uses at top

(code_label 2164 2163 2165 126 69 "" [0 uses])
(note 2165 2164 2166 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 2166
;;      reg 435 { d74(bb 125 insn 2161) }
(debug_insn 2166 2165 2168 126 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 2168
;;      reg 245 { }
;;      reg 435 { d74(bb 125 insn 2161) }
(insn 2168 2166 2169 126 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 245 [ desired_nedge ])
            (reg/v:DI 435 [ start_edge ]))) generator/graph_generator.c:193 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 2 uid 2169
;;      reg 66 { d68(bb 126 insn 2168) }
(jump_insn 2169 2168 2170 126 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2167)
            (pc))) generator/graph_generator.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2167)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576
;; rd  out 	(2) 435[74],576[146]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u3868(29){ }u3869(31){ }u3870(64){ }u3871(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1897 1898
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(34) 435[74],442[75,76,77,78],443[80,81],464[88],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(2) 828[170],829[175]
;; rd  kill	(8) 828[169,170,171],829[172,173,174,175,176]
;;  UD chains for artificial uses at top

(code_label 3985 3819 3984 274 197 "" [1 uses])
(note 3984 3985 4389 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4389
;;      reg 1897 { d300(bb 100 insn 276) }
(insn 4389 3984 4390 274 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:58 -1
     (nil))
;;   UD chains for insn luid 1 uid 4390
;;      reg 1898 { d301(bb 100 insn 277) }
(insn 4390 4389 3989 274 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:58 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(35) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[170],829[175],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u3872(29){ }u3873(31){ }u3874(64){ }u3875(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1897 1900
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
;; rd  in  	(33) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(2) 828[171],829[176]
;; rd  kill	(8) 828[169,170,171],829[172,173,174,175,176]
;;  UD chains for artificial uses at top

(code_label 3989 4390 3988 275 198 "" [1 uses])
(note 3988 3989 4395 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 4395
;;      reg 1897 { d300(bb 100 insn 276) }
(insn 4395 3988 4396 275 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;;   UD chains for insn luid 1 uid 4396
;;      reg 1900 { d303(bb 100 insn 273) }
(insn 4396 4395 3823 275 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1900 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(35) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[171],829[176],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u3877(29){ }u3878(31){ }u3879(64){ }u3880(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
;; rd  in  	(39) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[169,170,171],829[172,175,176],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(1) 66[69]
;; rd  kill	(23) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]
;;  UD chains for artificial uses at top

(code_label 3823 4396 3824 276 85 "" [0 uses])
(note 3824 3823 3825 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3825
(debug_insn 3825 3824 3826 276 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 1 uid 3826
(debug_insn 3826 3825 3827 276 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 2 uid 3827
(debug_insn 3827 3826 3828 276 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
;;   UD chains for insn luid 3 uid 3828
(debug_insn 3828 3827 3829 276 (var_location:SI src_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:138 -1
     (nil))
;;   UD chains for insn luid 4 uid 3829
(debug_insn 3829 3828 3830 276 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:139 -1
     (nil))
;;   UD chains for insn luid 5 uid 3830
;;      reg 443 { d81(bb 290 insn 3962) d80(bb 100 insn 197) }
;;      reg 747 { d157(bb 290 insn 3959) d156(bb 100 insn 198) }
(insn 3830 3829 3831 276 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 6 uid 3831
;;      reg 66 { d69(bb 276 insn 3830) }
(jump_insn 3831 3830 3832 276 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3841)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2374 (nil)))
 -> 3841)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(39) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[169,170,171],829[172,175,176],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u3898(29){ }u3899(31){ }u3900(64){ }u3901(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 828
;; lr  def 	 442 830 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 830 831
;; live  kill	
;; rd  in  	(39) 435[74],442[75,76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],828[169,170,171],829[172,175,176],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(3) 442[78],830[177],831[180]
;; rd  kill	(8) 442[75,76,77,78],830[177],831[178,179,180]
;;  UD chains for artificial uses at top

(code_label 3841 3837 3842 278 184 "" [1 uses])
(note 3842 3841 3843 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3843
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) d75(bb 100 insn 196) }
(insn 3843 3842 3844 278 (set (reg:DI 830 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg/v:DI 442 [ nverts ])
        (nil)))
;;   UD chains for insn luid 1 uid 3844
;;      reg 828 { d171(bb 275 insn 4396) d170(bb 274 insn 4390) d169(bb 111 insn 4398) }
;;      reg 830 { d177(bb 278 insn 3843) }
(insn 3844 3843 281 278 (set (reg:DI 831 [ D.3798 ])
        (mult:DI (reg:DI 828 [ D.3798 ])
            (reg:DI 830 [ D.3798 ]))) 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 828 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 2 uid 281
;;      reg 830 { d177(bb 278 insn 3843) }
(insn 281 3844 3847 278 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 830 [ D.3798 ])) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 830 [ D.3798 ])
        (nil)))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(34) 435[74],442[78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],829[172,175,176],831[180],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u3985(29){ }u3986(31){ }u3987(64){ }u3988(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 747 829 831
;; lr  def 	 66 [cc] 443 747 1852
;; live  in  	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 443 747 1852
;; live  kill	
;; rd  in  	(40) 435[74],442[76,77,78],443[80,81],576[146],695[149,150],714[153,154],747[156,157],750[160,161],751[163,164],826[167,168],829[172,173,174,175,176],831[178,179,180],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(4) 66[70],443[81],747[157],1852[291]
;; rd  kill	(30) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],443[79,80,81],747[155,156,157],1852[291]
;;  UD chains for artificial uses at top

(code_label 3952 4204 3953 290 89 "" [0 uses])
(note 3953 3952 3954 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3954
(debug_insn 3954 3953 3955 290 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 1 uid 3955
(debug_insn 3955 3954 3956 290 (var_location:SI src_offset (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 2 uid 3956
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) }
(debug_insn 3956 3955 3957 290 (var_location:DI D#31 (ashiftrt:DI (reg/v:DI 442 [ nverts ])
        (const_int 1 [0x1]))) generator/graph_generator.c:149 -1
     (nil))
;;   UD chains for insn luid 3 uid 3957
(debug_insn 3957 3956 3958 290 (var_location:DI nverts (debug_expr:DI D#31)) generator/graph_generator.c:149 -1
     (nil))
;;   UD chains for insn luid 4 uid 3958
(debug_insn 3958 3957 4072 290 (var_location:SI level (clobber (const_int 0 [0]))) generator/graph_generator.c:150 -1
     (nil))
;;   UD chains for insn luid 5 uid 4072
;;      reg 747 { d157(bb 290 insn 3959) d156(bb 100 insn 198) }
;;      reg 831 { d180(bb 278 insn 3844) d179(bb 117 insn 282) d178(bb 116 insn 4393) }
(debug_insn 4072 3958 3959 290 (var_location:DI D#52 (plus:DI (reg/v:DI 747 [ base_src ])
        (reg:DI 831 [ D.3798 ]))) -1
     (nil))
;;   UD chains for insn luid 6 uid 3959
;;      reg 747 { d157(bb 290 insn 3959) d156(bb 100 insn 198) }
;;      reg 831 { d180(bb 278 insn 3844) d179(bb 117 insn 282) d178(bb 116 insn 4393) }
(insn 3959 4072 3960 290 (set (reg/v:DI 747 [ base_src ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 831 [ D.3798 ]))) generator/graph_generator.c:151 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 831 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 7 uid 3960
(debug_insn 3960 3959 3961 290 (var_location:DI base_src (debug_expr:DI D#52)) generator/graph_generator.c:151 -1
     (nil))
;;   UD chains for insn luid 8 uid 3961
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) }
;;      reg 829 { d176(bb 275 insn 4395) d175(bb 274 insn 4389) d174(bb 117 insn 4391) d173(bb 116 insn 4392) d172(bb 111 insn 4397) }
(insn 3961 3960 3962 290 (set (reg:DI 1852 [ D.3798 ])
        (mult:DI (reg:DI 829 [ D.3798 ])
            (reg/v:DI 442 [ nverts ]))) generator/graph_generator.c:152 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 829 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 9 uid 3962
;;      reg 443 { d81(bb 290 insn 3962) d80(bb 100 insn 197) }
;;      reg 1852 { d291(bb 290 insn 3961) }
(insn 3962 3961 3964 290 (set (reg/v:DI 443 [ base_tgt ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 1852 [ D.3798 ]))) generator/graph_generator.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1852 [ D.3798 ])
        (nil)))
;;   UD chains for insn luid 10 uid 3964
;;      reg 443 { d81(bb 290 insn 3962) }
(debug_insn 3964 3962 3965 290 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
;;   UD chains for insn luid 11 uid 3965
(debug_insn 3965 3964 3966 290 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
;;   UD chains for insn luid 12 uid 3966
(debug_insn 3966 3965 3967 290 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
;;   UD chains for insn luid 13 uid 3967
(debug_insn 3967 3966 3969 290 (var_location:DI nverts (debug_expr:DI D#31)) -1
     (nil))
;;   UD chains for insn luid 14 uid 3969
;;      reg 442 { d78(bb 278 insn 281) d77(bb 117 insn 1949) d76(bb 116 insn 1944) }
(insn 3969 3967 3970 290 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 391 {*cmpdi}
     (nil))
;;   UD chains for insn luid 15 uid 3970
;;      reg 66 { d70(bb 290 insn 3969) }
(jump_insn 3970 3969 3979 290 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3968)
            (pc))) generator/graph_generator.c:136 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9551 (nil)))
 -> 3968)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(30) 435[74],442[76,77,78],443[81],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266
;; lr  def 	 66 [cc] 457
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	 66 [cc] 457
;; live  kill	
;; rd  in  	(8) 266[72,73],435[74],460[83,84],576[146],1901[304],1902[305]
;; rd  gen 	(2) 66[71],457[82]
;; rd  kill	(24) 66[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],457[82]
;;  UD chains for artificial uses at top

(code_label 4334 1606 4333 293 276 "" [0 uses])
(note 4333 4334 1579 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 1579
;;      reg 460 { d84(bb 92 insn 1614) d83(bb 87 insn 195) }
(debug_insn 1579 4333 1580 293 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 1580
(debug_insn 1580 1579 1581 293 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
;;   UD chains for insn luid 2 uid 1581
;;      reg 266 { d73(bb 92 insn 1616) d72(bb 87 insn 1536) }
(insn 1581 1580 1582 293 (set (reg/v:SI 457 [ val ])
        (zero_extend:SI (subreg:QI (reg/v:DI 266 [ exponent_middle ]) 0))) generator/splittable_mrg.c:194 88 {*zero_extendqisi2_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 1582
;;      reg 457 { d82(bb 293 insn 1581) }
(debug_insn 1582 1581 1583 293 (var_location:QI val (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/splittable_mrg.c:194 -1
     (nil))
;;   UD chains for insn luid 4 uid 1583
;;      reg 457 { d82(bb 293 insn 1581) }
(insn 1583 1582 1584 293 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 457 [ val ])
            (const_int 0 [0]))) generator/splittable_mrg.c:195 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 5 uid 1584
;;      reg 66 { d71(bb 293 insn 1583) }
(jump_insn 1584 1583 1585 293 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1612)
            (pc))) generator/splittable_mrg.c:195 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1612)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 457 460 576 1863 1901 1902
;; live  out 	 266 435 457 460 576 1901 1902
;; rd  out 	(9) 266[72,73],435[74],457[82],460[83,84],576[146],1901[304],1902[305]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	
;; live  kill	
;; rd  in  	(31) 435[74],442[76,77,78],443[81],468[92],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4346 1721 4345 299 282 "" [1 uses])
(note 4345 4346 1722 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; rd  out 	(31) 435[74],442[76,77,78],443[81],468[92],576[146],695[149,150],714[153,154],747[157],750[160,161],751[163,164],826[167,168],1303[214],1306[217],1313[223],1891[294],1892[295],1893[296],1894[297],1895[298],1896[299],1897[300],1898[301],1899[302],1900[303]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	
;; live  kill	
;; rd  in  	(7) 66[52],266[73],435[74],460[84],576[146],1901[304],1902[305]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 4348 1622 4347 300 283 "" [1 uses])
(note 4347 4348 1627 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902
;; rd  out 	(6) 266[73],435[74],460[84],576[146],1901[304],1902[305]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 2 ******
Set in insn 1531 is invariant (0), cost 0, depends on 
Set in insn 1532 is invariant (1), cost 0, depends on 
Set in insn 1533 is invariant (2), cost 0, depends on 
Set in insn 1534 is invariant (3), cost 0, depends on 
Set in insn 1535 is invariant (4), cost 0, depends on 
(high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))

Hot cost: 4 (final)
(set (reg/f:DI 1901)
    (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)))

Hot cost: 4 (final)
Set in insn 1605 is invariant (5), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1901)
    (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))

Hot cost: 4 (final)
(set (reg/f:DI 1902)
    (lo_sum:DI (reg/f:DI 1901)
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>)))

Hot cost: 4 (final)
Set in insn 1606 is invariant (6), cost 4, depends on 5
(set (reg/f:DI 1272)
    (reg/f:DI 1901))

Hot cost: 4 (final)
Set in insn 4402 is invariant (7), cost 4, depends on 5
(set (reg/f:DI 1271)
    (reg/f:DI 1902))

Hot cost: 4 (final)
Set in insn 4403 is invariant (8), cost 4, depends on 6
Set in insn 1608 is invariant (9), cost 0, depends on 
Set in insn 1609 is invariant (10), cost 0, depends on 
(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)
(set (reg:DI 1273)
    (const_int 2147483646 [0x7ffffffe]))

Hot cost: 4 (final)
Set in insn 1639 is invariant (11), cost 4, depends on 
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(set (reg:DI 1275)
    (const_int 107374182 [0x6666666]))

Hot cost: 8 (final)
Set in insn 1643 is invariant (12), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1277)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1645 is invariant (13), cost 4, depends on 
(const_int 104480 [0x19820])

Hot cost: 8 (final)
(set (reg:DI 1303)
    (const_int 104480 [0x19820]))

Hot cost: 8 (final)
Set in insn 1776 is invariant (14), cost 8, depends on 
(const_int 8589934597 [0x200000005])

Hot cost: 4 (final)
(set (reg:DI 1306)
    (const_int 8589934597 [0x200000005]))

Hot cost: 4 (final)
Set in insn 1779 is invariant (15), cost 4, depends on 
(const_int 7294 [0x1c7e])

Hot cost: 4 (final)
(set (reg:DI 1313)
    (const_int 7294 [0x1c7e]))

Hot cost: 4 (final)
Set in insn 1799 is invariant (16), cost 4, depends on 
(const_int 107374182 [0x6666666])

Hot cost: 8 (final)
(set (reg:DI 1891)
    (const_int 107374182 [0x6666666]))

Hot cost: 8 (final)
Set in insn 1810 is invariant (17), cost 8, depends on 
(const_int 2147483646 [0x7ffffffe])

Hot cost: 4 (final)
(set (reg:DI 1892)
    (const_int 2147483646 [0x7ffffffe]))

Hot cost: 4 (final)
Set in insn 1841 is invariant (18), cost 4, depends on 
(set (reg:DI 1893)
    (reg:DI 1303))

Hot cost: 4 (final)
Set in insn 4378 is invariant (19), cost 4, depends on 14
(set (reg:DI 1894)
    (reg:DI 1313))

Hot cost: 4 (final)
Set in insn 4379 is invariant (20), cost 4, depends on 16
(const_int -776530087 [0xffffffffd1b71759])

Hot cost: 8 (final)
(set (reg:SI 1895)
    (const_int -776530087 [0xffffffffd1b71759]))

Hot cost: 8 (final)
Set in insn 1885 is invariant (21), cost 8, depends on 
(const_int 10000 [0x2710])

Hot cost: 4 (final)
(set (reg:SI 1896)
    (const_int 10000 [0x2710]))

Hot cost: 4 (final)
Set in insn 1889 is invariant (22), cost 4, depends on 
(const_int 1 [0x1])

Hot cost: 4 (final)
(set (reg:DI 1897 [ D.3798 ])
    (const_int 1 [0x1]))

Hot cost: 4 (final)
Set in insn 276 is invariant (23), cost 4, depends on 
(set (reg:DI 1898 [ D.3798 ])
    (const_int 0 [0]))

Hot cost: 4 (final)
Set in insn 277 is invariant (24), cost 4, depends on 
(const_int 5699 [0x1643])

Hot cost: 4 (final)
(set (reg:SI 1899)
    (const_int 5699 [0x1643]))

Hot cost: 4 (final)
Set in insn 1903 is invariant (25), cost 4, depends on 
(set (reg:DI 1900 [ D.3798 ])
    (reg:DI 1897 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 273 is invariant (26), cost 4, depends on 23
(set (reg:SI 1338)
    (reg:SI 1895))

Hot cost: 4 (final)
Set in insn 4387 is invariant (27), cost 4, depends on 21
(set (reg:SI 1341)
    (reg:SI 1896))

Hot cost: 4 (final)
Set in insn 4388 is invariant (28), cost 4, depends on 22
(set (reg:DI 1286)
    (reg:DI 1891))

Hot cost: 4 (final)
Set in insn 4399 is invariant (29), cost 4, depends on 17
(set (reg:DI 1288)
    (reg:DI 1306))

Hot cost: 4 (final)
Set in insn 4400 is invariant (30), cost 4, depends on 15
(set (reg:DI 1295)
    (reg:DI 1892))

Hot cost: 4 (final)
Set in insn 4401 is invariant (31), cost 4, depends on 18
(set (reg:DI 829 [ D.3798 ])
    (reg:DI 1897 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4389 is invariant (32), cost 4, depends on 23
(set (reg:DI 828 [ D.3798 ])
    (reg:DI 1898 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4390 is invariant (33), cost 4, depends on 24
(set (reg:DI 829 [ D.3798 ])
    (reg:DI 1898 [ D.3798 ]))

Cold cost: 4 (final)
Set in insn 4391 is invariant (34), cost 4, depends on 24
(set (reg:DI 829 [ D.3798 ])
    (reg:DI 1897 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4392 is invariant (35), cost 4, depends on 23
(set (reg:DI 831 [ D.3798 ])
    (reg:DI 1898 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4393 is invariant (36), cost 4, depends on 24
(set (reg:SI 1344)
    (reg:SI 1899))

Hot cost: 4 (final)
Set in insn 4394 is invariant (37), cost 4, depends on 25
(set (reg:DI 829 [ D.3798 ])
    (reg:DI 1897 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4395 is invariant (38), cost 4, depends on 23
(set (reg:DI 828 [ D.3798 ])
    (reg:DI 1900 [ D.3798 ]))

Hot cost: 4 (final)
Set in insn 4396 is invariant (39), cost 4, depends on 26
(set (reg:DI 829 [ D.3798 ])
    (reg:DI 1898 [ D.3798 ]))

Cold cost: 4 (final)
Set in insn 4397 is invariant (40), cost 4, depends on 24
(set (reg:DI 828 [ D.3798 ])
    (reg:DI 1898 [ D.3798 ]))

Cold cost: 4 (final)
Set in insn 4398 is invariant (41), cost 4, depends on 24
(set (reg:DI 1315)
    (reg:DI 1891))

Hot cost: 4 (final)
Set in insn 4380 is invariant (42), cost 4, depends on 17
(set (reg:DI 1317)
    (reg:DI 1306))

Hot cost: 4 (final)
Set in insn 4381 is invariant (43), cost 4, depends on 15
(set (reg:DI 1324)
    (reg:DI 1892))

Hot cost: 4 (final)
Set in insn 4382 is invariant (44), cost 4, depends on 18
(set (reg:DI 1889)
    (reg:DI 1303))

Hot cost: 4 (final)
Set in insn 4383 is invariant (45), cost 4, depends on 14
(set (reg:DI 1890)
    (reg:DI 1313))

Hot cost: 4 (final)
Set in insn 4384 is invariant (46), cost 4, depends on 16
(set (reg:DI 1326)
    (reg:DI 1893))

Hot cost: 4 (final)
Set in insn 4385 is invariant (47), cost 4, depends on 19
(set (reg:DI 1336)
    (reg:DI 1894))

Hot cost: 4 (final)
Set in insn 4386 is invariant (48), cost 4, depends on 20
(plus:DI (reg/v:DI 432 [ val0 ])
    (reg/v:DI 434 [ val1 ]))

Cold cost: 4 (final)
(set (reg:DI 519 [ D.3802 ])
    (plus:DI (reg/v:DI 432 [ val0 ])
        (reg/v:DI 434 [ val1 ])))

Cold cost: 4 (final)
Set in insn 1966 is invariant (49), cost 4, depends on 
(const_int 4979156007449604625 [0x4519840211493211])

Cold cost: 16 (final)
(set (reg:DI 1353)
    (const_int 4979156007449604625 [0x4519840211493211]))

Cold cost: 16 (final)
Set in insn 1969 is invariant (50), cost 16, depends on 
(ior:DI (reg/v:DI 432 [ val0 ])
    (reg:DI 1353))

Cold cost: 4 (final)
(set (reg:DI 521 [ D.3802 ])
    (ior:DI (reg/v:DI 432 [ val0 ])
        (reg:DI 1353)))

Cold cost: 4 (final)
Set in insn 1970 is invariant (51), cost 4, depends on 50
(const_int 64 [0x40])

Cold cost: 4 (final)
(set (reg:SI 1361)
    (const_int 64 [0x40]))

Cold cost: 4 (final)
Set in insn 1994 is invariant (52), cost 4, depends on 
(minus:SI (reg:SI 1361)
    (reg:SI 261 [ D.3797 ]))

Cold cost: 4 (final)
(set (reg:SI 539 [ D.3797 ])
    (minus:SI (reg:SI 1361)
        (reg:SI 261 [ D.3797 ])))

Cold cost: 4 (final)
Set in insn 1995 is invariant (53), cost 4, depends on 52
(const_int 3481428888784487333 [0x3050852102c843a5])

Cold cost: 16 (final)
(set (reg:DI 1364)
    (const_int 3481428888784487333 [0x3050852102c843a5]))

Cold cost: 16 (final)
Set in insn 2011 is invariant (54), cost 16, depends on 
(ior:DI (reg/v:DI 434 [ val1 ])
    (reg:DI 1364))

Cold cost: 4 (final)
(set (reg:DI 542 [ D.3802 ])
    (ior:DI (reg/v:DI 434 [ val1 ])
        (reg:DI 1364)))

Cold cost: 4 (final)
Set in insn 2012 is invariant (55), cost 4, depends on 54
Invariant 2 is equivalent to invariant 0.
Invariant 3 is equivalent to invariant 1.
Invariant 10 is equivalent to invariant 9.
Invariant 15 is equivalent to invariant 13.
Invariant 17 is equivalent to invariant 12.
Invariant 18 is equivalent to invariant 11.
Invariant 32 is equivalent to invariant 26.
Invariant 34 is equivalent to invariant 33.
Invariant 35 is equivalent to invariant 26.
Invariant 36 is equivalent to invariant 33.
Invariant 38 is equivalent to invariant 26.
Invariant 40 is equivalent to invariant 33.
Invariant 41 is equivalent to invariant 33.
Invariant 42 is equivalent to invariant 29.
Invariant 43 is equivalent to invariant 30.
Invariant 44 is equivalent to invariant 31.
Invariant 45 is equivalent to invariant 19.
Invariant 46 is equivalent to invariant 20.
Decided to move invariant 51 -- gain 20
Decided to move dependent invariant 50
Decided to move invariant 55 -- gain 20
Decided to move dependent invariant 54
Decided to move invariant 12 -- gain 8
deferring rescan insn with uid = 1643.
deferring rescan insn with uid = 1644.
deferring rescan insn with uid = 4404.
changing bb of uid 1643
  from 94 to 86
deferring rescan insn with uid = 1811.
deferring rescan insn with uid = 4380.
deferring rescan insn with uid = 1698.
deferring rescan insn with uid = 4399.
deferring rescan insn with uid = 4405.
deferring deletion of insn with uid = 1810.
deferring rescan insn with uid = 1969.
deferring rescan insn with uid = 1970.
deferring rescan insn with uid = 4406.
changing bb of uid 1969
  from 119 to 86
deferring rescan insn with uid = 1970.
deferring rescan insn with uid = 2075.
deferring rescan insn with uid = 1973.
deferring rescan insn with uid = 4407.
changing bb of uid 1970
  from 119 to 86
deferring rescan insn with uid = 2011.
deferring rescan insn with uid = 2012.
deferring rescan insn with uid = 4408.
changing bb of uid 2011
  from 121 to 86
deferring rescan insn with uid = 2012.
deferring rescan insn with uid = 2106.
deferring rescan insn with uid = 2015.
deferring rescan insn with uid = 4409.
changing bb of uid 2012
  from 121 to 86
*****starting processing of loop 1 ******
starting the processing of deferred insns
rescanning insn with uid = 1643.
rescanning insn with uid = 1644.
rescanning insn with uid = 1698.
rescanning insn with uid = 1811.
rescanning insn with uid = 1969.
rescanning insn with uid = 1970.
rescanning insn with uid = 1973.
rescanning insn with uid = 2011.
rescanning insn with uid = 2012.
rescanning insn with uid = 2015.
rescanning insn with uid = 2075.
rescanning insn with uid = 2106.
rescanning insn with uid = 4380.
rescanning insn with uid = 4399.
rescanning insn with uid = 4404.
rescanning insn with uid = 4405.
rescanning insn with uid = 4406.
rescanning insn with uid = 4407.
rescanning insn with uid = 4408.
rescanning insn with uid = 4409.
ending the processing of deferred insns
setting blocks to analyze 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 69 ( 0.23)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 94 ( 0.31)
df_worklist_dataflow_doublequeue:n_basic_blocks 301 n_edges 435 count 94 ( 0.31)


starting region dump


main

Dataflow summary:
def_info->table_size = 1887, use_info->table_size = 4121
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u} r433={1d,3u} r434={1d,2u} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,4u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,4u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,1u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d,1u} r1010={1d,1u} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d} r1272={1d} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d} r1287={1d,2u} r1288={1d} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,4u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,6u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,4u} r1314={1d,3u,2e} r1315={1d} r1316={1d,2u} r1317={1d} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d} r1325={1d,1u} r1326={1d} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d} r1337={1d,1u} r1338={1d} r1339={1d,1u} r1340={1d,1u} r1341={1d} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} r1889={1d} r1890={1d} r1891={1d} r1892={1d,4u} r1893={1d,1u} r1894={1d,1u} r1895={1d,2u} r1896={1d,2u} r1897={1d,4u} r1898={1d,5u} r1899={1d,2u} r1900={1d,1u} r1901={1d,2u} r1902={1d,2u} r1903={1d,7u} r1904={1d,2u} r1905={1d,3u} r1906={1d,2u} r1907={1d,3u} 
;;    total ref usage 11668{7890d,3709u,69e} in 2739{2604 regular + 135 call} insns.
;; Reaching defs:
;;  sparse invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66
;;  dense invalidated 	
;;  reg->defs[] map:	0[0,61] 1[62,121] 2[122,177] 3[178,217] 4[218,251] 5[252,285] 6[286,319] 7[320,353] 8[354,387] 9[388,421] 10[422,455] 11[456,489] 12[490,523] 13[524,557] 14[558,591] 15[592,625] 16[626,693] 17[694,761] 18[762,795] 30[796,829] 32[830,863] 33[864,897] 34[898,931] 35[932,965] 36[966,999] 37[1000,1033] 38[1034,1067] 39[1068,1101] 48[1102,1135] 49[1136,1169] 50[1170,1203] 51[1204,1237] 52[1238,1271] 53[1272,1305] 54[1306,1339] 55[1340,1373] 56[1374,1407] 57[1408,1441] 58[1442,1475] 59[1476,1509] 60[1510,1543] 61[1544,1577] 62[1578,1611] 63[1612,1645] 66[1646,1700] 294[1701,1701] 301[1702,1702] 303[1703,1703] 309[1704,1704] 311[1705,1705] 317[1706,1706] 319[1707,1707] 320[1708,1711] 328[1712,1715] 329[1716,1716] 331[1717,1717] 339[1718,1718] 341[1719,1719] 349[1720,1720] 351[1721,1721] 360[1722,1740] 844[1741,1741] 845[1742,1742] 846[1743,1743] 857[1744,1744] 858[1745,1745] 859[1746,1746] 860[1747,1747] 861[1748,1748] 862[1749,1749] 863[1750,1750] 864[1751,1751] 865[1752,1752] 866[1753,1753] 867[1754,1754] 868[1755,1755] 869[1756,1756] 870[1757,1757] 872[1758,1758] 873[1759,1759] 874[1760,1760] 875[1761,1761] 876[1762,1762] 877[1763,1763] 878[1764,1764] 879[1765,1765] 881[1766,1766] 882[1767,1767] 883[1768,1768] 885[1769,1769] 888[1770,1770] 889[1771,1771] 890[1772,1772] 892[1773,1773] 894[1774,1774] 895[1775,1775] 896[1776,1776] 897[1777,1777] 899[1778,1778] 900[1779,1779] 901[1780,1780] 903[1781,1781] 906[1782,1782] 907[1783,1783] 908[1784,1784] 910[1785,1785] 912[1786,1786] 913[1787,1787] 914[1788,1788] 915[1789,1789] 917[1790,1790] 919[1791,1791] 921[1792,1792] 922[1793,1793] 923[1794,1794] 924[1795,1795] 926[1796,1796] 927[1797,1797] 929[1798,1798] 930[1799,1799] 931[1800,1800] 933[1801,1801] 935[1802,1802] 936[1803,1803] 937[1804,1804] 938[1805,1805] 940[1806,1806] 942[1807,1807] 944[1808,1808] 945[1809,1809] 946[1810,1810] 947[1811,1811] 949[1812,1812] 950[1813,1813] 952[1814,1814] 953[1815,1815] 954[1816,1816] 956[1817,1817] 958[1818,1818] 959[1819,1819] 960[1820,1820] 961[1821,1821] 963[1822,1822] 965[1823,1823] 967[1824,1824] 968[1825,1825] 969[1826,1826] 970[1827,1827] 972[1828,1828] 973[1829,1829] 975[1830,1830] 976[1831,1831] 977[1832,1832] 979[1833,1833] 981[1834,1834] 982[1835,1835] 983[1836,1836] 984[1837,1837] 986[1838,1838] 988[1839,1839] 990[1840,1840] 991[1841,1841] 992[1842,1842] 993[1843,1843] 995[1844,1844] 996[1845,1845] 998[1846,1846] 999[1847,1847] 1000[1848,1848] 1002[1849,1849] 1004[1850,1850] 1005[1851,1851] 1006[1852,1852] 1007[1853,1853] 1009[1854,1854] 1010[1855,1855] 1011[1856,1856] 1013[1857,1857] 1854[1858,1863] 1855[1864,1867] 1856[1868,1886] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(29){ }u33(31){ }u34(64){ }u35(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294
;; lr  def 	 66 [cc] 844
;; live  in  	 294 320 328
;; live  gen 	 66 [cc] 844
;; live  kill	
;; rd  in  	(12) 0[61],66[1700],294[1701],320[1708,1709,1710,1711],328[1712,1713,1714,1715],1013[1857]
;; rd  gen 	(2) 66[1646],844[1741]
;; rd  kill	(1) 844[1741]
;;  UD chains for artificial uses at top

(code_label 939 4198 317 7 48 "" [1 uses])
(note 317 939 318 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 318
;;      reg 294 { d1701(bb 55 insn 937) }
(insn 318 317 319 7 (set (reg:SI 844)
        (plus:SI (reg/v:SI 294 [ c ])
            (const_int -63 [0xffffffffffffffc1]))) options.c:52 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 294 [ c ])
        (nil)))
;;   UD chains for insn luid 1 uid 319
;;      reg 844 { d1741(bb 7 insn 318) }
(insn 319 318 320 7 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 844)
            (const_int 55 [0x37]))) options.c:52 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 2 uid 320
;;      reg 66 { d1646(bb 7 insn 319) }
(jump_insn 320 319 4051 7 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) options.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 909)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 844 1864
;; live  out 	 320 328 844
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],844[1741]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(29){ }u40(31){ }u41(64){ }u42(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 844 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 844
;; lr  def 	 66 [cc] 845 846
;; live  in  	 320 328 844
;; live  gen 	 845 846
;; live  kill	 66 [cc]
;; rd  in  	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],844[1741]
;; rd  gen 	(2) 845[1742],846[1743]
;; rd  kill	(2) 845[1742],846[1743]
;;  UD chains for artificial uses at top

(note 4051 320 321 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 321
(insn 321 4051 322 8 (set (reg/f:DI 846)
        (high:DI (label_ref 324))) options.c:52 48 {*movdi_aarch64}
     (insn_list:REG_LABEL_OPERAND 324 (nil)))
;;   UD chains for insn luid 1 uid 322
;;      reg 846 { d1743(bb 8 insn 321) }
(insn 322 321 323 8 (set (reg/f:DI 845)
        (lo_sum:DI (reg/f:DI 846)
            (label_ref 324))) options.c:52 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 846)
        (insn_list:REG_LABEL_OPERAND 324 (expr_list:REG_EQUAL (label_ref 324)
                (nil)))))
;;   UD chains for insn luid 2 uid 323
;;      reg 844 { d1741(bb 7 insn 318) }
;;      reg 845 { d1742(bb 8 insn 322) }
(jump_insn 323 322 327 8 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 845)
                            (reg:SI 844)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 324))
        ]) options.c:52 16 {casesi_dispatch}
     (expr_list:REG_DEAD (reg/f:DI 845)
        (expr_list:REG_DEAD (reg:SI 844)
            (expr_list:REG_UNUSED (reg:CC 66 cc)
                (nil))))
 -> 324)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(29){ }u84(31){ }u85(64){ }u86(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 857 858 859
;; live  in  	 320 328
;; live  gen 	 857 858 859
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(3) 857[1744],858[1745],859[1746]
;; rd  kill	(3) 857[1744],858[1745],859[1746]
;;  UD chains for artificial uses at top

(code_label 365 363 366 11 23 "" [1 uses])
(note 366 365 367 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 367
(insn 367 366 368 11 (set (reg/f:DI 858)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 368
;;      reg 858 { d1745(bb 11 insn 367) }
(insn 368 367 369 11 (set (reg/f:DI 857)
        (lo_sum:DI (reg/f:DI 858)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 858)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 369
(insn 369 368 370 11 (set (reg:SI 859)
        (const_int 1 [0x1])) options.c:108 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 370
;;      reg 857 { d1744(bb 11 insn 368) }
;;      reg 859 { d1746(bb 11 insn 369) }
(insn 370 369 373 11 (set (mem/c:SI (reg/f:DI 857) [3 VERBOSE+0 S4 A32])
        (reg:SI 859)) options.c:108 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 859)
        (expr_list:REG_DEAD (reg/f:DI 857)
            (nil))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(29){ }u91(31){ }u92(64){ }u93(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 860 861 862
;; live  in  	 320 328
;; live  gen 	 860 861 862
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(3) 860[1747],861[1748],862[1749]
;; rd  kill	(3) 860[1747],861[1748],862[1749]
;;  UD chains for artificial uses at top

(code_label 373 370 374 12 22 "" [1 uses])
(note 374 373 375 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 375
(insn 375 374 376 12 (set (reg/f:DI 861)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 376
;;      reg 861 { d1748(bb 12 insn 375) }
(insn 376 375 377 12 (set (reg/f:DI 860)
        (lo_sum:DI (reg/f:DI 861)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 861)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 377
(insn 377 376 378 12 (set (reg:SI 862)
        (const_int 1 [0x1])) options.c:111 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 378
;;      reg 860 { d1747(bb 12 insn 376) }
;;      reg 862 { d1749(bb 12 insn 377) }
(insn 378 377 381 12 (set (mem/c:SI (plus:DI (reg/f:DI 860)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])
        (reg:SI 862)) options.c:111 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 862)
        (expr_list:REG_DEAD (reg/f:DI 860)
            (nil))))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u97(29){ }u98(31){ }u99(64){ }u100(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 863 864 865 866 867
;; live  in  	 320 328
;; live  gen 	 0 [x0] 66 [cc] 863 864 865 866 867
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(7) 0[1],66[1649],863[1750],864[1751],865[1752],866[1753],867[1754]
;; rd  kill	(5) 863[1750],864[1751],865[1752],866[1753],867[1754]
;;  UD chains for artificial uses at top

(code_label 381 378 382 13 25 "" [1 uses])
(note 382 381 383 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 383
(insn 383 382 384 13 (set (reg/f:DI 864)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 384
;;      reg 864 { d1751(bb 13 insn 383) }
(insn 384 383 385 13 (set (reg/f:DI 863)
        (lo_sum:DI (reg/f:DI 864)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 864)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 2 uid 385
;;      reg 863 { d1750(bb 13 insn 384) }
(insn 385 384 386 13 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 863) [2 optarg+0 S8 A64])) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 863)
        (nil)))
;;   UD chains for insn luid 3 uid 386
;;      reg 31 { }
;;      reg 0 { d0(bb 13 insn 385) }
(call_insn 386 385 387 13 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:114 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 4 uid 387
;;      reg 0 { d1(bb 13 insn 386) }
(insn 387 386 389 13 (set (reg/f:DI 865)
        (reg:DI 0 x0)) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 865)
            (nil))))
;;   UD chains for insn luid 5 uid 389
(insn 389 387 390 13 (set (reg/f:DI 867)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 390
;;      reg 867 { d1754(bb 13 insn 389) }
(insn 390 389 391 13 (set (reg/f:DI 866)
        (lo_sum:DI (reg/f:DI 867)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 867)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 7 uid 391
;;      reg 865 { d1752(bb 13 insn 387) }
;;      reg 866 { d1753(bb 13 insn 390) }
(insn 391 390 392 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 866)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])
        (reg/f:DI 865)) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 866)
        (nil)))
;;   UD chains for insn luid 8 uid 392
;;      reg 865 { d1752(bb 13 insn 387) }
(insn 392 391 393 13 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 865)
            (const_int 0 [0]))) options.c:115 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 865)
        (nil)))
;;   UD chains for insn luid 9 uid 393
;;      reg 66 { d1649(bb 13 insn 392) }
(jump_insn 393 392 394 13 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:115 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 924)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u112(29){ }u113(31){ }u114(64){ }u115(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 868 869 870 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 868 869 870 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[3],360[1722],868[1755],869[1756],870[1757],1856[1868]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],868[1755],869[1756],870[1757],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 394 393 395 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 395
(debug_insn 395 394 396 14 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:116 -1
     (nil))
;;   UD chains for insn luid 1 uid 396
(debug_insn 396 395 397 14 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)) options.c:116 -1
     (nil))
;;   UD chains for insn luid 2 uid 397
(insn 397 396 398 14 (set (reg/f:DI 869)
        (high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 398
;;      reg 869 { d1756(bb 14 insn 397) }
(insn 398 397 399 14 (set (reg/f:DI 868)
        (lo_sum:DI (reg/f:DI 869)
            (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 869)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
            (nil))))
;;   UD chains for insn luid 4 uid 399
(insn 399 398 400 14 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 400
;;      reg 1856 { d1868(bb 14 insn 399) }
(insn 400 399 401 14 (set (reg/f:DI 870)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 401
;;      reg 868 { d1755(bb 14 insn 398) }
(insn 401 400 402 14 (set (reg:DI 2 x2)
        (reg/f:DI 868)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 868)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
            (nil))))
;;   UD chains for insn luid 7 uid 402
(insn 402 401 403 14 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 403
;;      reg 870 { d1757(bb 14 insn 400) }
(insn 403 402 404 14 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 870) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 870)
        (nil)))
;;   UD chains for insn luid 9 uid 404
;;      reg 31 { }
;;      reg 0 { d2(bb 14 insn 403) }
;;      reg 1 { d63(bb 14 insn 402) }
;;      reg 2 { d123(bb 14 insn 401) }
(call_insn 404 403 405 14 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 405
(debug_insn 405 404 406 14 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
;;   UD chains for insn luid 11 uid 406
(debug_insn 406 405 407 14 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
;;   UD chains for insn luid 12 uid 407
(debug_insn 407 406 190 14 (var_location:SI err (const_int 1 [0x1])) options.c:117 -1
     (nil))
;;   UD chains for insn luid 13 uid 190
(insn 190 407 410 14 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:117 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u124(29){ }u125(31){ }u126(64){ }u127(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 872 873 874 875 876
;; live  in  	 320 328
;; live  gen 	 0 [x0] 66 [cc] 872 873 874 875 876
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(7) 0[5],66[1652],872[1758],873[1759],874[1760],875[1761],876[1762]
;; rd  kill	(5) 872[1758],873[1759],874[1760],875[1761],876[1762]
;;  UD chains for artificial uses at top

(code_label 410 190 411 15 26 "" [1 uses])
(note 411 410 412 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 412
(insn 412 411 413 15 (set (reg/f:DI 873)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 1 uid 413
;;      reg 873 { d1759(bb 15 insn 412) }
(insn 413 412 414 15 (set (reg/f:DI 872)
        (lo_sum:DI (reg/f:DI 873)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 873)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 2 uid 414
;;      reg 872 { d1758(bb 15 insn 413) }
(insn 414 413 415 15 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 872) [2 optarg+0 S8 A64])) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 872)
        (nil)))
;;   UD chains for insn luid 3 uid 415
;;      reg 31 { }
;;      reg 0 { d4(bb 15 insn 414) }
(call_insn 415 414 416 15 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:121 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;   UD chains for insn luid 4 uid 416
;;      reg 0 { d5(bb 15 insn 415) }
(insn 416 415 418 15 (set (reg/f:DI 874)
        (reg:DI 0 x0)) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 874)
            (nil))))
;;   UD chains for insn luid 5 uid 418
(insn 418 416 419 15 (set (reg/f:DI 876)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 419
;;      reg 876 { d1762(bb 15 insn 418) }
(insn 419 418 420 15 (set (reg/f:DI 875)
        (lo_sum:DI (reg/f:DI 876)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 876)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 7 uid 420
;;      reg 874 { d1760(bb 15 insn 416) }
;;      reg 875 { d1761(bb 15 insn 419) }
(insn 420 419 421 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 875)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])
        (reg/f:DI 874)) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 875)
        (nil)))
;;   UD chains for insn luid 8 uid 421
;;      reg 874 { d1760(bb 15 insn 416) }
(insn 421 420 422 15 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 874)
            (const_int 0 [0]))) options.c:122 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 874)
        (nil)))
;;   UD chains for insn luid 9 uid 422
;;      reg 66 { d1652(bb 15 insn 421) }
(jump_insn 422 421 423 15 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:122 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 924)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(29){ }u140(31){ }u141(64){ }u142(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 877 878 879 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 877 878 879 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[7],360[1723],877[1763],878[1764],879[1765],1856[1869]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],877[1763],878[1764],879[1765],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 423 422 424 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 424
(debug_insn 424 423 425 16 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:123 -1
     (nil))
;;   UD chains for insn luid 1 uid 425
(debug_insn 425 424 426 16 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)) options.c:123 -1
     (nil))
;;   UD chains for insn luid 2 uid 426
(insn 426 425 427 16 (set (reg/f:DI 878)
        (high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 427
;;      reg 878 { d1764(bb 16 insn 426) }
(insn 427 426 428 16 (set (reg/f:DI 877)
        (lo_sum:DI (reg/f:DI 878)
            (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 878)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
            (nil))))
;;   UD chains for insn luid 4 uid 428
(insn 428 427 429 16 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 429
;;      reg 1856 { d1869(bb 16 insn 428) }
(insn 429 428 430 16 (set (reg/f:DI 879)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 430
;;      reg 877 { d1763(bb 16 insn 427) }
(insn 430 429 431 16 (set (reg:DI 2 x2)
        (reg/f:DI 877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 877)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
            (nil))))
;;   UD chains for insn luid 7 uid 431
(insn 431 430 432 16 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 432
;;      reg 879 { d1765(bb 16 insn 429) }
(insn 432 431 433 16 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 879) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 879)
        (nil)))
;;   UD chains for insn luid 9 uid 433
;;      reg 31 { }
;;      reg 0 { d6(bb 16 insn 432) }
;;      reg 1 { d66(bb 16 insn 431) }
;;      reg 2 { d126(bb 16 insn 430) }
(call_insn 433 432 434 16 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 434
(debug_insn 434 433 435 16 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
;;   UD chains for insn luid 11 uid 435
(debug_insn 435 434 436 16 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
;;   UD chains for insn luid 12 uid 436
(debug_insn 436 435 189 16 (var_location:SI err (const_int 1 [0x1])) options.c:124 -1
     (nil))
;;   UD chains for insn luid 13 uid 189
(insn 189 436 439 16 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:124 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u151(29){ }u152(31){ }u153(64){ }u154(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 301 303 881 882 883 885 1854
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 301 303 881 882 883 885 1854
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 0[10],66[1656],301[1702],303[1703],881[1766],882[1767],883[1768],885[1769],1854[1858]
;; rd  kill	(12) 301[1702],303[1703],881[1766],882[1767],883[1768],885[1769],1854[1858,1859,1860,1861,1862,1863]
;;  UD chains for artificial uses at top

(code_label 439 189 440 17 27 "" [1 uses])
(note 440 439 441 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 441
;;      reg 31 { }
(call_insn/u 441 440 442 17 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:128 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 442
;;      reg 0 { d8(bb 17 insn 441) }
(insn 442 441 443 17 (set (reg/f:DI 301 [ D.3807 ])
        (reg:DI 0 x0)) options.c:128 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 443
;;      reg 301 { d1702(bb 17 insn 442) }
(insn 443 442 444 17 (set (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])
        (const_int 0 [0])) options.c:128 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 444
(insn 444 443 445 17 (set (reg/f:DI 882)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 445
;;      reg 882 { d1767(bb 17 insn 444) }
(insn 445 444 446 17 (set (reg/f:DI 881)
        (lo_sum:DI (reg/f:DI 882)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 882)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 5 uid 446
(insn 446 445 447 17 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:129 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 447
(insn 447 446 448 17 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:129 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 448
;;      reg 881 { d1766(bb 17 insn 445) }
(insn 448 447 449 17 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) options.c:129 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 449
;;      reg 31 { }
;;      reg 0 { d9(bb 17 insn 448) }
;;      reg 1 { d69(bb 17 insn 447) }
;;      reg 2 { d129(bb 17 insn 446) }
(call_insn 449 448 450 17 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:129 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 9 uid 450
;;      reg 0 { d10(bb 17 insn 449) }
(insn 450 449 451 17 (set (reg:DI 303 [ D.3798 ])
        (reg:DI 0 x0)) options.c:129 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 10 uid 451
(insn 451 450 452 17 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 452
;;      reg 1854 { d1858(bb 17 insn 451) }
(insn 452 451 453 17 (set (reg/f:DI 883)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 12 uid 453
;;      reg 303 { d1703(bb 17 insn 450) }
;;      reg 883 { d1768(bb 17 insn 452) }
(insn 453 452 454 17 (set (mem/c:DI (reg/f:DI 883) [4 SCALE+0 S8 A64])
        (reg:DI 303 [ D.3798 ])) options.c:129 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 883)
        (expr_list:REG_DEAD (reg:DI 303 [ D.3798 ])
            (nil))))
;;   UD chains for insn luid 13 uid 454
;;      reg 301 { d1702(bb 17 insn 442) }
(insn 454 453 455 17 (set (reg:SI 885 [ *_125 ])
        (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])) options.c:130 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 301 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 14 uid 455
;;      reg 885 { d1769(bb 17 insn 454) }
(insn 455 454 456 17 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 885 [ *_125 ])
            (const_int 0 [0]))) options.c:130 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 885 [ *_125 ])
        (nil)))
;;   UD chains for insn luid 15 uid 456
;;      reg 66 { d1656(bb 17 insn 455) }
(jump_insn 456 455 457 17 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 474)
            (pc))) options.c:130 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 474)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 881 1854 1864
;; live  out 	 320 328 881 1854
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],881[1766],1854[1858]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(29){ }u172(31){ }u173(64){ }u174(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 881 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 881
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 888 889 890 1856
;; live  in  	 320 328 881 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 888 889 890 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],881[1766],1854[1858]
;; rd  gen 	(6) 0[12],360[1724],888[1770],889[1771],890[1772],1856[1870]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],888[1770],889[1771],890[1772],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 457 456 458 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 458
(debug_insn 458 457 459 18 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:131 -1
     (nil))
;;   UD chains for insn luid 1 uid 459
(debug_insn 459 458 462 18 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)) options.c:131 -1
     (nil))
;;   UD chains for insn luid 2 uid 462
(insn 462 459 463 18 (set (reg/f:DI 889)
        (high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 463
;;      reg 889 { d1771(bb 18 insn 462) }
(insn 463 462 464 18 (set (reg/f:DI 888)
        (lo_sum:DI (reg/f:DI 889)
            (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 889)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
            (nil))))
;;   UD chains for insn luid 4 uid 464
(insn 464 463 465 18 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 465
;;      reg 1856 { d1870(bb 18 insn 464) }
(insn 465 464 466 18 (set (reg/f:DI 890)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 466
;;      reg 881 { d1766(bb 17 insn 445) }
(insn 466 465 467 18 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 881)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>) [2 optarg+0 S8 A64])
            (nil))))
;;   UD chains for insn luid 7 uid 467
;;      reg 888 { d1770(bb 18 insn 463) }
(insn 467 466 468 18 (set (reg:DI 2 x2)
        (reg/f:DI 888)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 888)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
            (nil))))
;;   UD chains for insn luid 8 uid 468
(insn 468 467 469 18 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 469
;;      reg 890 { d1772(bb 18 insn 465) }
(insn 469 468 470 18 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 890) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 890)
        (nil)))
;;   UD chains for insn luid 10 uid 470
;;      reg 31 { }
;;      reg 0 { d11(bb 18 insn 469) }
;;      reg 1 { d71(bb 18 insn 468) }
;;      reg 2 { d131(bb 18 insn 467) }
;;      reg 3 { d184(bb 18 insn 466) }
(call_insn 470 469 471 18 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 11 uid 471
(debug_insn 471 470 472 18 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
;;   UD chains for insn luid 12 uid 472
(debug_insn 472 471 473 18 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
;;   UD chains for insn luid 13 uid 473
(debug_insn 473 472 172 18 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:132 -1
     (nil))
;;   UD chains for insn luid 14 uid 172
(insn 172 473 474 18 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:132 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1858]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u187(29){ }u188(31){ }u189(64){ }u190(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 892 894
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 892 894
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],881[1766],1854[1858]
;; rd  gen 	(3) 66[1658],892[1773],894[1774]
;; rd  kill	(2) 892[1773],894[1774]
;;  UD chains for artificial uses at top

(code_label 474 172 475 19 30 "" [1 uses])
(note 475 474 476 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 476
;;      reg 360 { }
(debug_insn 476 475 478 19 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 478
;;      reg 1854 { d1858(bb 17 insn 451) }
(insn 478 476 479 19 (set (reg/f:DI 892)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 479
;;      reg 892 { d1773(bb 19 insn 478) }
(insn 479 478 480 19 (set (reg:DI 894 [ SCALE ])
        (mem/c:DI (reg/f:DI 892) [4 SCALE+0 S8 A64])) options.c:134 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 892)
        (nil)))
;;   UD chains for insn luid 3 uid 480
;;      reg 894 { d1774(bb 19 insn 479) }
(insn 480 479 481 19 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 894 [ SCALE ])
            (const_int 0 [0]))) options.c:134 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 894 [ SCALE ])
        (nil)))
;;   UD chains for insn luid 4 uid 481
;;      reg 66 { d1658(bb 19 insn 480) }
(jump_insn 481 480 482 19 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:134 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8688 (nil)))
 -> 924)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(29){ }u197(31){ }u198(64){ }u199(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 895 896 897 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 895 896 897 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[14],360[1725],895[1775],896[1776],897[1777],1856[1871]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],895[1775],896[1776],897[1777],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 482 481 483 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 483
(debug_insn 483 482 484 20 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:135 -1
     (nil))
;;   UD chains for insn luid 1 uid 484
(debug_insn 484 483 485 20 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)) options.c:135 -1
     (nil))
;;   UD chains for insn luid 2 uid 485
(insn 485 484 486 20 (set (reg/f:DI 896)
        (high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 486
;;      reg 896 { d1776(bb 20 insn 485) }
(insn 486 485 487 20 (set (reg/f:DI 895)
        (lo_sum:DI (reg/f:DI 896)
            (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 896)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
            (nil))))
;;   UD chains for insn luid 4 uid 487
(insn 487 486 488 20 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 488
;;      reg 1856 { d1871(bb 20 insn 487) }
(insn 488 487 489 20 (set (reg/f:DI 897)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 489
;;      reg 895 { d1775(bb 20 insn 486) }
(insn 489 488 490 20 (set (reg:DI 2 x2)
        (reg/f:DI 895)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 895)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
            (nil))))
;;   UD chains for insn luid 7 uid 490
(insn 490 489 491 20 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 491
;;      reg 897 { d1777(bb 20 insn 488) }
(insn 491 490 492 20 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 897) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 897)
        (nil)))
;;   UD chains for insn luid 9 uid 492
;;      reg 31 { }
;;      reg 0 { d13(bb 20 insn 491) }
;;      reg 1 { d73(bb 20 insn 490) }
;;      reg 2 { d133(bb 20 insn 489) }
(call_insn 492 491 493 20 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 493
(debug_insn 493 492 494 20 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
;;   UD chains for insn luid 11 uid 494
(debug_insn 494 493 495 20 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
;;   UD chains for insn luid 12 uid 495
(debug_insn 495 494 188 20 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:136 -1
     (nil))
;;   UD chains for insn luid 13 uid 188
(insn 188 495 498 20 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:136 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u208(29){ }u209(31){ }u210(64){ }u211(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 309 311 899 900 901 903 1854
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 309 311 899 900 901 903 1854
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 0[17],66[1662],309[1704],311[1705],899[1778],900[1779],901[1780],903[1781],1854[1859]
;; rd  kill	(12) 309[1704],311[1705],899[1778],900[1779],901[1780],903[1781],1854[1858,1859,1860,1861,1862,1863]
;;  UD chains for artificial uses at top

(code_label 498 188 499 21 24 "" [1 uses])
(note 499 498 500 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 500
;;      reg 31 { }
(call_insn/u 500 499 501 21 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:140 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 501
;;      reg 0 { d15(bb 21 insn 500) }
(insn 501 500 502 21 (set (reg/f:DI 309 [ D.3807 ])
        (reg:DI 0 x0)) options.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 502
;;      reg 309 { d1704(bb 21 insn 501) }
(insn 502 501 503 21 (set (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])
        (const_int 0 [0])) options.c:140 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 503
(insn 503 502 504 21 (set (reg/f:DI 900)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 504
;;      reg 900 { d1779(bb 21 insn 503) }
(insn 504 503 505 21 (set (reg/f:DI 899)
        (lo_sum:DI (reg/f:DI 900)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 900)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 5 uid 505
(insn 505 504 506 21 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:141 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 506
(insn 506 505 507 21 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:141 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 507
;;      reg 899 { d1778(bb 21 insn 504) }
(insn 507 506 508 21 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) options.c:141 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 508
;;      reg 31 { }
;;      reg 0 { d16(bb 21 insn 507) }
;;      reg 1 { d76(bb 21 insn 506) }
;;      reg 2 { d136(bb 21 insn 505) }
(call_insn 508 507 509 21 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:141 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 9 uid 509
;;      reg 0 { d17(bb 21 insn 508) }
(insn 509 508 510 21 (set (reg:DI 311 [ D.3798 ])
        (reg:DI 0 x0)) options.c:141 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 10 uid 510
(insn 510 509 511 21 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 11 uid 511
;;      reg 1854 { d1859(bb 21 insn 510) }
(insn 511 510 512 21 (set (reg/f:DI 901)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 12 uid 512
;;      reg 311 { d1705(bb 21 insn 509) }
;;      reg 901 { d1780(bb 21 insn 511) }
(insn 512 511 513 21 (set (mem/c:DI (plus:DI (reg/f:DI 901)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])
        (reg:DI 311 [ D.3798 ])) options.c:141 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 901)
        (expr_list:REG_DEAD (reg:DI 311 [ D.3798 ])
            (nil))))
;;   UD chains for insn luid 13 uid 513
;;      reg 309 { d1704(bb 21 insn 501) }
(insn 513 512 514 21 (set (reg:SI 903 [ *_133 ])
        (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])) options.c:142 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 309 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 14 uid 514
;;      reg 903 { d1781(bb 21 insn 513) }
(insn 514 513 515 21 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 903 [ *_133 ])
            (const_int 0 [0]))) options.c:142 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 903 [ *_133 ])
        (nil)))
;;   UD chains for insn luid 15 uid 515
;;      reg 66 { d1662(bb 21 insn 514) }
(jump_insn 515 514 516 21 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 533)
            (pc))) options.c:142 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 533)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 899 1854 1864
;; live  out 	 320 328 899 1854
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],899[1778],1854[1859]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u228(29){ }u229(31){ }u230(64){ }u231(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 899 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 899
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 906 907 908 1856
;; live  in  	 320 328 899 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 906 907 908 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],899[1778],1854[1859]
;; rd  gen 	(6) 0[19],360[1726],906[1782],907[1783],908[1784],1856[1872]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],906[1782],907[1783],908[1784],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 516 515 517 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 517
(debug_insn 517 516 518 22 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:143 -1
     (nil))
;;   UD chains for insn luid 1 uid 518
(debug_insn 518 517 521 22 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)) options.c:143 -1
     (nil))
;;   UD chains for insn luid 2 uid 521
(insn 521 518 522 22 (set (reg/f:DI 907)
        (high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 522
;;      reg 907 { d1783(bb 22 insn 521) }
(insn 522 521 523 22 (set (reg/f:DI 906)
        (lo_sum:DI (reg/f:DI 907)
            (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 907)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
            (nil))))
;;   UD chains for insn luid 4 uid 523
(insn 523 522 524 22 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 524
;;      reg 1856 { d1872(bb 22 insn 523) }
(insn 524 523 525 22 (set (reg/f:DI 908)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 525
;;      reg 899 { d1778(bb 21 insn 504) }
(insn 525 524 526 22 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 899)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>) [2 optarg+0 S8 A64])
            (nil))))
;;   UD chains for insn luid 7 uid 526
;;      reg 906 { d1782(bb 22 insn 522) }
(insn 526 525 527 22 (set (reg:DI 2 x2)
        (reg/f:DI 906)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 906)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
            (nil))))
;;   UD chains for insn luid 8 uid 527
(insn 527 526 528 22 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 9 uid 528
;;      reg 908 { d1784(bb 22 insn 524) }
(insn 528 527 529 22 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 908) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 908)
        (nil)))
;;   UD chains for insn luid 10 uid 529
;;      reg 31 { }
;;      reg 0 { d18(bb 22 insn 528) }
;;      reg 1 { d78(bb 22 insn 527) }
;;      reg 2 { d138(bb 22 insn 526) }
;;      reg 3 { d189(bb 22 insn 525) }
(call_insn 529 528 530 22 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 11 uid 530
(debug_insn 530 529 531 22 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
;;   UD chains for insn luid 12 uid 531
(debug_insn 531 530 532 22 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
;;   UD chains for insn luid 13 uid 532
(debug_insn 532 531 173 22 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:144 -1
     (nil))
;;   UD chains for insn luid 14 uid 173
(insn 173 532 533 22 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:144 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1859]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u244(29){ }u245(31){ }u246(64){ }u247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 910 912
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 910 912
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],899[1778],1854[1859]
;; rd  gen 	(3) 66[1664],910[1785],912[1786]
;; rd  kill	(2) 910[1785],912[1786]
;;  UD chains for artificial uses at top

(code_label 533 173 534 23 31 "" [1 uses])
(note 534 533 535 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 535
;;      reg 360 { }
(debug_insn 535 534 537 23 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 537
;;      reg 1854 { d1859(bb 21 insn 510) }
(insn 537 535 538 23 (set (reg/f:DI 910)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 538
;;      reg 910 { d1785(bb 23 insn 537) }
(insn 538 537 539 23 (set (reg:DI 912 [ edgefactor ])
        (mem/c:DI (plus:DI (reg/f:DI 910)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) options.c:146 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 910)
        (nil)))
;;   UD chains for insn luid 3 uid 539
;;      reg 912 { d1786(bb 23 insn 538) }
(insn 539 538 540 23 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 912 [ edgefactor ])
            (const_int 0 [0]))) options.c:146 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 912 [ edgefactor ])
        (nil)))
;;   UD chains for insn luid 4 uid 540
;;      reg 66 { d1664(bb 23 insn 539) }
(jump_insn 540 539 541 23 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:146 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8688 (nil)))
 -> 924)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u253(29){ }u254(31){ }u255(64){ }u256(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 913 914 915 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 913 914 915 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[21],360[1727],913[1787],914[1788],915[1789],1856[1873]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],913[1787],914[1788],915[1789],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 541 540 542 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 542
(debug_insn 542 541 543 24 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:147 -1
     (nil))
;;   UD chains for insn luid 1 uid 543
(debug_insn 543 542 544 24 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)) options.c:147 -1
     (nil))
;;   UD chains for insn luid 2 uid 544
(insn 544 543 545 24 (set (reg/f:DI 914)
        (high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 545
;;      reg 914 { d1788(bb 24 insn 544) }
(insn 545 544 546 24 (set (reg/f:DI 913)
        (lo_sum:DI (reg/f:DI 914)
            (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 914)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
            (nil))))
;;   UD chains for insn luid 4 uid 546
(insn 546 545 547 24 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 547
;;      reg 1856 { d1873(bb 24 insn 546) }
(insn 547 546 548 24 (set (reg/f:DI 915)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 548
;;      reg 913 { d1787(bb 24 insn 545) }
(insn 548 547 549 24 (set (reg:DI 2 x2)
        (reg/f:DI 913)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 913)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
            (nil))))
;;   UD chains for insn luid 7 uid 549
(insn 549 548 550 24 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 550
;;      reg 915 { d1789(bb 24 insn 547) }
(insn 550 549 551 24 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 915) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 915)
        (nil)))
;;   UD chains for insn luid 9 uid 551
;;      reg 31 { }
;;      reg 0 { d20(bb 24 insn 550) }
;;      reg 1 { d80(bb 24 insn 549) }
;;      reg 2 { d140(bb 24 insn 548) }
(call_insn 551 550 552 24 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 552
(debug_insn 552 551 553 24 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
;;   UD chains for insn luid 11 uid 553
(debug_insn 553 552 554 24 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
;;   UD chains for insn luid 12 uid 554
(debug_insn 554 553 187 24 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:148 -1
     (nil))
;;   UD chains for insn luid 13 uid 187
(insn 187 554 557 24 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:148 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u265(29){ }u266(31){ }u267(64){ }u268(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 317 319 917 919 921 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 317 319 917 919 921 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 32[843],66[1668],317[1706],319[1707],917[1790],919[1791],921[1792],1854[1860],1855[1864]
;; rd  kill	(15) 317[1706],319[1707],917[1790],919[1791],921[1792],1854[1858,1859,1860,1861,1862,1863],1855[1864,1865,1866,1867]
;;  UD chains for artificial uses at top

(code_label 557 187 558 25 18 "" [2 uses])
(note 558 557 559 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 559
;;      reg 31 { }
(call_insn/u 559 558 560 25 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:153 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 560
;;      reg 0 { d22(bb 25 insn 559) }
(insn 560 559 561 25 (set (reg/f:DI 317 [ D.3807 ])
        (reg:DI 0 x0)) options.c:153 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 561
;;      reg 317 { d1706(bb 25 insn 560) }
(insn 561 560 562 25 (set (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])
        (const_int 0 [0])) options.c:153 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 562
(insn 562 561 563 25 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 563
;;      reg 1855 { d1864(bb 25 insn 562) }
(insn 563 562 564 25 (set (reg/f:DI 917)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
;;   UD chains for insn luid 5 uid 564
(insn 564 563 565 25 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:154 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 565
;;      reg 917 { d1790(bb 25 insn 563) }
(insn 565 564 566 25 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 917) [2 optarg+0 S8 A64])) options.c:154 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 917)
        (nil)))
;;   UD chains for insn luid 7 uid 566
;;      reg 31 { }
;;      reg 0 { d23(bb 25 insn 565) }
;;      reg 1 { d83(bb 25 insn 564) }
(call_insn 566 565 567 25 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:154 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 8 uid 567
;;      reg 32 { d843(bb 25 insn 566) }
(insn 567 566 568 25 (set (reg:DF 319 [ D.3804 ])
        (reg:DF 32 v0)) options.c:154 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
;;   UD chains for insn luid 9 uid 568
(insn 568 567 569 25 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 569
;;      reg 1854 { d1860(bb 25 insn 568) }
(insn 569 568 570 25 (set (reg/f:DI 919)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 11 uid 570
;;      reg 319 { d1707(bb 25 insn 567) }
;;      reg 919 { d1791(bb 25 insn 569) }
(insn 570 569 571 25 (set (mem/c:DF (plus:DI (reg/f:DI 919)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 319 [ D.3804 ])) options.c:154 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 919)
        (expr_list:REG_DEAD (reg:DF 319 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 12 uid 571
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 571 570 572 25 (set (reg:SI 921 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:155 465 {andsi3}
     (nil))
;;   UD chains for insn luid 13 uid 572
;;      reg 921 { d1792(bb 25 insn 571) }
(insn 572 571 573 25 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 921 [ D.3797 ])
            (const_int 0 [0]))) options.c:155 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 921 [ D.3797 ])
        (nil)))
;;   UD chains for insn luid 14 uid 573
;;      reg 66 { d1668(bb 25 insn 572) }
(jump_insn 573 572 574 25 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 588)
            (pc))) options.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 588)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; live  out 	 317 320 328 1854 1855
;; rd  out 	(11) 317[1706],320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u284(29){ }u285(31){ }u286(64){ }u287(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 922 923 924 1856
;; live  in  	 317 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 922 923 924 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(11) 317[1706],320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;; rd  gen 	(6) 0[26],360[1728],922[1793],923[1794],924[1795],1856[1874]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],922[1793],923[1794],924[1795],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 574 573 575 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 575
(debug_insn 575 574 576 26 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:156 -1
     (nil))
;;   UD chains for insn luid 1 uid 576
(debug_insn 576 575 577 26 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)) options.c:156 -1
     (nil))
;;   UD chains for insn luid 2 uid 577
(insn 577 576 578 26 (set (reg/f:DI 923)
        (high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 578
;;      reg 923 { d1794(bb 26 insn 577) }
(insn 578 577 579 26 (set (reg/f:DI 922)
        (lo_sum:DI (reg/f:DI 923)
            (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 923)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
            (nil))))
;;   UD chains for insn luid 4 uid 579
(insn 579 578 580 26 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 580
;;      reg 1856 { d1874(bb 26 insn 579) }
(insn 580 579 581 26 (set (reg/f:DI 924)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 581
;;      reg 922 { d1793(bb 26 insn 578) }
(insn 581 580 582 26 (set (reg:DI 2 x2)
        (reg/f:DI 922)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 922)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
            (nil))))
;;   UD chains for insn luid 7 uid 582
(insn 582 581 583 26 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 583
;;      reg 924 { d1795(bb 26 insn 580) }
(insn 583 582 584 26 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 924) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 924)
        (nil)))
;;   UD chains for insn luid 9 uid 584
;;      reg 31 { }
;;      reg 0 { d25(bb 26 insn 583) }
;;      reg 1 { d85(bb 26 insn 582) }
;;      reg 2 { d144(bb 26 insn 581) }
(call_insn 584 583 585 26 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 585
(debug_insn 585 584 586 26 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
;;   UD chains for insn luid 11 uid 586
(debug_insn 586 585 587 26 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
;;   UD chains for insn luid 12 uid 587
(debug_insn 587 586 174 26 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:157 -1
     (nil))
;;   UD chains for insn luid 13 uid 174
(insn 174 587 588 26 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:157 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; live  out 	 317 320 328 1854 1855
;; rd  out 	(11) 317[1706],320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u296(29){ }u297(31){ }u298(64){ }u299(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317
;; lr  def 	 66 [cc] 926
;; live  in  	 317 320 328 1854 1855
;; live  gen 	 66 [cc] 926
;; live  kill	
;; rd  in  	(11) 317[1706],320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;; rd  gen 	(2) 66[1670],926[1796]
;; rd  kill	(1) 926[1796]
;;  UD chains for artificial uses at top

(code_label 588 174 589 27 32 "" [1 uses])
(note 589 588 590 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 590
;;      reg 360 { }
(debug_insn 590 589 591 27 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 591
;;      reg 317 { d1706(bb 25 insn 560) }
(insn 591 590 592 27 (set (reg:SI 926 [ *_141 ])
        (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])) options.c:159 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 317 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 2 uid 592
;;      reg 926 { d1796(bb 27 insn 591) }
(insn 592 591 593 27 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 926 [ *_141 ])
            (const_int 0 [0]))) options.c:159 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 926 [ *_141 ])
        (nil)))
;;   UD chains for insn luid 3 uid 593
;;      reg 66 { d1670(bb 27 insn 592) }
(jump_insn 593 592 594 27 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 611)
            (pc))) options.c:159 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 611)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u304(29){ }u305(31){ }u306(64){ }u307(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 927 929 930 931 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 927 929 930 931 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;; rd  gen 	(7) 0[28],360[1729],927[1797],929[1798],930[1799],931[1800],1856[1875]
;; rd  kill	(42) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],927[1797],929[1798],930[1799],931[1800],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 594 593 595 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 595
(debug_insn 595 594 596 28 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:160 -1
     (nil))
;;   UD chains for insn luid 1 uid 596
(debug_insn 596 595 598 28 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)) options.c:160 -1
     (nil))
;;   UD chains for insn luid 2 uid 598
;;      reg 1855 { d1864(bb 25 insn 562) }
(insn 598 596 599 28 (set (reg/f:DI 927)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 3 uid 599
(insn 599 598 600 28 (set (reg/f:DI 930)
        (high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 600
;;      reg 930 { d1799(bb 28 insn 599) }
(insn 600 599 601 28 (set (reg/f:DI 929)
        (lo_sum:DI (reg/f:DI 930)
            (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 930)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
            (nil))))
;;   UD chains for insn luid 5 uid 601
(insn 601 600 602 28 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 602
;;      reg 1856 { d1875(bb 28 insn 601) }
(insn 602 601 603 28 (set (reg/f:DI 931)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 7 uid 603
;;      reg 927 { d1797(bb 28 insn 598) }
(insn 603 602 604 28 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 927) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 927)
        (nil)))
;;   UD chains for insn luid 8 uid 604
;;      reg 929 { d1798(bb 28 insn 600) }
(insn 604 603 605 28 (set (reg:DI 2 x2)
        (reg/f:DI 929)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 929)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
            (nil))))
;;   UD chains for insn luid 9 uid 605
(insn 605 604 606 28 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 606
;;      reg 931 { d1800(bb 28 insn 602) }
(insn 606 605 607 28 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 931) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 931)
        (nil)))
;;   UD chains for insn luid 11 uid 607
;;      reg 31 { }
;;      reg 0 { d27(bb 28 insn 606) }
;;      reg 1 { d87(bb 28 insn 605) }
;;      reg 2 { d146(bb 28 insn 604) }
;;      reg 3 { d195(bb 28 insn 603) }
(call_insn 607 606 608 28 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 12 uid 608
(debug_insn 608 607 609 28 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
;;   UD chains for insn luid 13 uid 609
(debug_insn 609 608 610 28 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
;;   UD chains for insn luid 14 uid 610
(debug_insn 610 609 175 28 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:161 -1
     (nil))
;;   UD chains for insn luid 15 uid 175
(insn 175 610 611 28 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:161 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u319(29){ }u320(31){ }u321(64){ }u322(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 933 935
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 933 935
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1860],1855[1864]
;; rd  gen 	(3) 66[1672],933[1801],935[1802]
;; rd  kill	(2) 933[1801],935[1802]
;;  UD chains for artificial uses at top

(code_label 611 175 612 29 33 "" [1 uses])
(note 612 611 613 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 613
;;      reg 360 { }
(debug_insn 613 612 615 29 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 615
;;      reg 1854 { d1860(bb 25 insn 568) }
(insn 615 613 616 29 (set (reg/f:DI 933)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 616
;;      reg 933 { d1801(bb 29 insn 615) }
(insn 616 615 617 29 (set (reg:DF 935 [ A ])
        (mem/c:DF (plus:DI (reg/f:DI 933)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:163 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 933)
        (nil)))
;;   UD chains for insn luid 3 uid 617
;;      reg 935 { d1802(bb 29 insn 616) }
(insn 617 616 618 29 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 935 [ A ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:163 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 935 [ A ])
        (nil)))
;;   UD chains for insn luid 4 uid 618
;;      reg 66 { d1672(bb 29 insn 617) }
(jump_insn 618 617 4063 29 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4063)
            (pc))) options.c:163 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4063)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u328(29){ }u329(31){ }u330(64){ }u331(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 936 937 938 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 936 937 938 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[30],360[1730],936[1803],937[1804],938[1805],1856[1876]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],936[1803],937[1804],938[1805],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(code_label 4063 618 622 30 215 "" [1 uses])
(note 622 4063 623 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 623
(debug_insn 623 622 624 30 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:164 -1
     (nil))
;;   UD chains for insn luid 1 uid 624
(debug_insn 624 623 625 30 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)) options.c:164 -1
     (nil))
;;   UD chains for insn luid 2 uid 625
(insn 625 624 626 30 (set (reg/f:DI 937)
        (high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 626
;;      reg 937 { d1804(bb 30 insn 625) }
(insn 626 625 627 30 (set (reg/f:DI 936)
        (lo_sum:DI (reg/f:DI 937)
            (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 937)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
            (nil))))
;;   UD chains for insn luid 4 uid 627
(insn 627 626 628 30 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 628
;;      reg 1856 { d1876(bb 30 insn 627) }
(insn 628 627 629 30 (set (reg/f:DI 938)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 629
;;      reg 936 { d1803(bb 30 insn 626) }
(insn 629 628 630 30 (set (reg:DI 2 x2)
        (reg/f:DI 936)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 936)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
            (nil))))
;;   UD chains for insn luid 7 uid 630
(insn 630 629 631 30 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 631
;;      reg 938 { d1805(bb 30 insn 628) }
(insn 631 630 632 30 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 938) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 938)
        (nil)))
;;   UD chains for insn luid 9 uid 632
;;      reg 31 { }
;;      reg 0 { d29(bb 30 insn 631) }
;;      reg 1 { d89(bb 30 insn 630) }
;;      reg 2 { d148(bb 30 insn 629) }
(call_insn 632 631 633 30 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 633
(debug_insn 633 632 634 30 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
;;   UD chains for insn luid 11 uid 634
(debug_insn 634 633 635 30 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
;;   UD chains for insn luid 12 uid 635
(debug_insn 635 634 176 30 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:165 -1
     (nil))
;;   UD chains for insn luid 13 uid 176
(insn 176 635 636 30 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:165 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u340(29){ }u341(31){ }u342(64){ }u343(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(2) 320[1708],328[1712]
;; rd  kill	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at top

(code_label 636 176 637 31 34 "" [0 uses])
(note 637 636 638 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 638
;;      reg 360 { }
(debug_insn 638 637 639 31 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 639
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 639 638 640 31 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:167 466 {iorsi3}
     (nil))
;;   UD chains for insn luid 2 uid 640
;;      reg 320 { d1708(bb 31 insn 639) }
(debug_insn 640 639 641 31 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:167 -1
     (nil))
;;   UD chains for insn luid 3 uid 641
;;      reg 328 { d1715(bb 52 insn 905) d1714(bb 45 insn 817) d1713(bb 38 insn 729) d1712(bb 31 insn 641) }
(insn 641 640 642 31 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:168 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 642
;;      reg 328 { d1712(bb 31 insn 641) }
(debug_insn 642 641 645 31 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:168 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(2) 320[1708],328[1712]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u349(29){ }u350(31){ }u351(64){ }u352(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 329 331 940 942 944 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 329 331 940 942 944 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 32[848],66[1676],329[1716],331[1717],940[1806],942[1807],944[1808],1854[1861],1855[1865]
;; rd  kill	(15) 329[1716],331[1717],940[1806],942[1807],944[1808],1854[1858,1859,1860,1861,1862,1863],1855[1864,1865,1866,1867]
;;  UD chains for artificial uses at top

(code_label 645 642 646 32 19 "" [2 uses])
(note 646 645 647 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 647
;;      reg 31 { }
(call_insn/u 647 646 648 32 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:172 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 648
;;      reg 0 { d31(bb 32 insn 647) }
(insn 648 647 649 32 (set (reg/f:DI 329 [ D.3807 ])
        (reg:DI 0 x0)) options.c:172 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 649
;;      reg 329 { d1716(bb 32 insn 648) }
(insn 649 648 650 32 (set (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])
        (const_int 0 [0])) options.c:172 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 650
(insn 650 649 651 32 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 651
;;      reg 1855 { d1865(bb 32 insn 650) }
(insn 651 650 652 32 (set (reg/f:DI 940)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
;;   UD chains for insn luid 5 uid 652
(insn 652 651 653 32 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:173 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 653
;;      reg 940 { d1806(bb 32 insn 651) }
(insn 653 652 654 32 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 940) [2 optarg+0 S8 A64])) options.c:173 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 940)
        (nil)))
;;   UD chains for insn luid 7 uid 654
;;      reg 31 { }
;;      reg 0 { d32(bb 32 insn 653) }
;;      reg 1 { d92(bb 32 insn 652) }
(call_insn 654 653 655 32 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:173 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 8 uid 655
;;      reg 32 { d848(bb 32 insn 654) }
(insn 655 654 656 32 (set (reg:DF 331 [ D.3804 ])
        (reg:DF 32 v0)) options.c:173 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
;;   UD chains for insn luid 9 uid 656
(insn 656 655 657 32 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 657
;;      reg 1854 { d1861(bb 32 insn 656) }
(insn 657 656 658 32 (set (reg/f:DI 942)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 11 uid 658
;;      reg 331 { d1717(bb 32 insn 655) }
;;      reg 942 { d1807(bb 32 insn 657) }
(insn 658 657 659 32 (set (mem/c:DF (plus:DI (reg/f:DI 942)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 331 [ D.3804 ])) options.c:173 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 942)
        (expr_list:REG_DEAD (reg:DF 331 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 12 uid 659
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 659 658 660 32 (set (reg:SI 944 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:174 465 {andsi3}
     (nil))
;;   UD chains for insn luid 13 uid 660
;;      reg 944 { d1808(bb 32 insn 659) }
(insn 660 659 661 32 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 944 [ D.3797 ])
            (const_int 0 [0]))) options.c:174 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 944 [ D.3797 ])
        (nil)))
;;   UD chains for insn luid 14 uid 661
;;      reg 66 { d1676(bb 32 insn 660) }
(jump_insn 661 660 662 32 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 676)
            (pc))) options.c:174 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 676)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; live  out 	 320 328 329 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],329[1716],1854[1861],1855[1865]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u368(29){ }u369(31){ }u370(64){ }u371(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 945 946 947 1856
;; live  in  	 320 328 329 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 945 946 947 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],329[1716],1854[1861],1855[1865]
;; rd  gen 	(6) 0[35],360[1731],945[1809],946[1810],947[1811],1856[1877]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],945[1809],946[1810],947[1811],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 662 661 663 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 663
(debug_insn 663 662 664 33 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:175 -1
     (nil))
;;   UD chains for insn luid 1 uid 664
(debug_insn 664 663 665 33 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)) options.c:175 -1
     (nil))
;;   UD chains for insn luid 2 uid 665
(insn 665 664 666 33 (set (reg/f:DI 946)
        (high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 666
;;      reg 946 { d1810(bb 33 insn 665) }
(insn 666 665 667 33 (set (reg/f:DI 945)
        (lo_sum:DI (reg/f:DI 946)
            (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 946)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
            (nil))))
;;   UD chains for insn luid 4 uid 667
(insn 667 666 668 33 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 668
;;      reg 1856 { d1877(bb 33 insn 667) }
(insn 668 667 669 33 (set (reg/f:DI 947)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 669
;;      reg 945 { d1809(bb 33 insn 666) }
(insn 669 668 670 33 (set (reg:DI 2 x2)
        (reg/f:DI 945)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 945)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
            (nil))))
;;   UD chains for insn luid 7 uid 670
(insn 670 669 671 33 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 671
;;      reg 947 { d1811(bb 33 insn 668) }
(insn 671 670 672 33 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 947) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 947)
        (nil)))
;;   UD chains for insn luid 9 uid 672
;;      reg 31 { }
;;      reg 0 { d34(bb 33 insn 671) }
;;      reg 1 { d94(bb 33 insn 670) }
;;      reg 2 { d152(bb 33 insn 669) }
(call_insn 672 671 673 33 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 673
(debug_insn 673 672 674 33 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
;;   UD chains for insn luid 11 uid 674
(debug_insn 674 673 675 33 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
;;   UD chains for insn luid 12 uid 675
(debug_insn 675 674 177 33 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:176 -1
     (nil))
;;   UD chains for insn luid 13 uid 177
(insn 177 675 676 33 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:176 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; live  out 	 320 328 329 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],329[1716],1854[1861],1855[1865]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u380(29){ }u381(31){ }u382(64){ }u383(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 329
;; lr  def 	 66 [cc] 949
;; live  in  	 320 328 329 1854 1855
;; live  gen 	 66 [cc] 949
;; live  kill	
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],329[1716],1854[1861],1855[1865]
;; rd  gen 	(2) 66[1678],949[1812]
;; rd  kill	(1) 949[1812]
;;  UD chains for artificial uses at top

(code_label 676 177 677 34 36 "" [1 uses])
(note 677 676 678 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 678
;;      reg 360 { }
(debug_insn 678 677 679 34 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 679
;;      reg 329 { d1716(bb 32 insn 648) }
(insn 679 678 680 34 (set (reg:SI 949 [ *_155 ])
        (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])) options.c:178 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 329 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 2 uid 680
;;      reg 949 { d1812(bb 34 insn 679) }
(insn 680 679 681 34 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 949 [ *_155 ])
            (const_int 0 [0]))) options.c:178 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 949 [ *_155 ])
        (nil)))
;;   UD chains for insn luid 3 uid 681
;;      reg 66 { d1678(bb 34 insn 680) }
(jump_insn 681 680 682 34 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) options.c:178 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 699)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1861],1855[1865]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u388(29){ }u389(31){ }u390(64){ }u391(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 950 952 953 954 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 950 952 953 954 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1861],1855[1865]
;; rd  gen 	(7) 0[37],360[1732],950[1813],952[1814],953[1815],954[1816],1856[1878]
;; rd  kill	(42) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],950[1813],952[1814],953[1815],954[1816],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 682 681 683 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 683
(debug_insn 683 682 684 35 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:179 -1
     (nil))
;;   UD chains for insn luid 1 uid 684
(debug_insn 684 683 686 35 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)) options.c:179 -1
     (nil))
;;   UD chains for insn luid 2 uid 686
;;      reg 1855 { d1865(bb 32 insn 650) }
(insn 686 684 687 35 (set (reg/f:DI 950)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 3 uid 687
(insn 687 686 688 35 (set (reg/f:DI 953)
        (high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 688
;;      reg 953 { d1815(bb 35 insn 687) }
(insn 688 687 689 35 (set (reg/f:DI 952)
        (lo_sum:DI (reg/f:DI 953)
            (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 953)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
            (nil))))
;;   UD chains for insn luid 5 uid 689
(insn 689 688 690 35 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 690
;;      reg 1856 { d1878(bb 35 insn 689) }
(insn 690 689 691 35 (set (reg/f:DI 954)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 7 uid 691
;;      reg 950 { d1813(bb 35 insn 686) }
(insn 691 690 692 35 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 950) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 950)
        (nil)))
;;   UD chains for insn luid 8 uid 692
;;      reg 952 { d1814(bb 35 insn 688) }
(insn 692 691 693 35 (set (reg:DI 2 x2)
        (reg/f:DI 952)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 952)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
            (nil))))
;;   UD chains for insn luid 9 uid 693
(insn 693 692 694 35 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 694
;;      reg 954 { d1816(bb 35 insn 690) }
(insn 694 693 695 35 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 954) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 954)
        (nil)))
;;   UD chains for insn luid 11 uid 695
;;      reg 31 { }
;;      reg 0 { d36(bb 35 insn 694) }
;;      reg 1 { d96(bb 35 insn 693) }
;;      reg 2 { d154(bb 35 insn 692) }
;;      reg 3 { d201(bb 35 insn 691) }
(call_insn 695 694 696 35 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 12 uid 696
(debug_insn 696 695 697 35 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
;;   UD chains for insn luid 13 uid 697
(debug_insn 697 696 698 35 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
;;   UD chains for insn luid 14 uid 698
(debug_insn 698 697 178 35 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:180 -1
     (nil))
;;   UD chains for insn luid 15 uid 178
(insn 178 698 699 35 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:180 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1861]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u403(29){ }u404(31){ }u405(64){ }u406(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 956 958
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 956 958
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1861],1855[1865]
;; rd  gen 	(3) 66[1680],956[1817],958[1818]
;; rd  kill	(2) 956[1817],958[1818]
;;  UD chains for artificial uses at top

(code_label 699 178 700 36 37 "" [1 uses])
(note 700 699 701 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 701
;;      reg 360 { }
(debug_insn 701 700 703 36 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 703
;;      reg 1854 { d1861(bb 32 insn 656) }
(insn 703 701 704 36 (set (reg/f:DI 956)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 704
;;      reg 956 { d1817(bb 36 insn 703) }
(insn 704 703 705 36 (set (reg:DF 958 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 956)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:182 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 956)
        (nil)))
;;   UD chains for insn luid 3 uid 705
;;      reg 958 { d1818(bb 36 insn 704) }
(insn 705 704 706 36 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 958 [ B ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:182 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 958 [ B ])
        (nil)))
;;   UD chains for insn luid 4 uid 706
;;      reg 66 { d1680(bb 36 insn 705) }
(jump_insn 706 705 4064 36 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4064)
            (pc))) options.c:182 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4064)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u412(29){ }u413(31){ }u414(64){ }u415(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 959 960 961 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 959 960 961 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[39],360[1733],959[1819],960[1820],961[1821],1856[1879]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],959[1819],960[1820],961[1821],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(code_label 4064 706 710 37 216 "" [1 uses])
(note 710 4064 711 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 711
(debug_insn 711 710 712 37 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:183 -1
     (nil))
;;   UD chains for insn luid 1 uid 712
(debug_insn 712 711 713 37 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)) options.c:183 -1
     (nil))
;;   UD chains for insn luid 2 uid 713
(insn 713 712 714 37 (set (reg/f:DI 960)
        (high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 714
;;      reg 960 { d1820(bb 37 insn 713) }
(insn 714 713 715 37 (set (reg/f:DI 959)
        (lo_sum:DI (reg/f:DI 960)
            (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 960)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
            (nil))))
;;   UD chains for insn luid 4 uid 715
(insn 715 714 716 37 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 716
;;      reg 1856 { d1879(bb 37 insn 715) }
(insn 716 715 717 37 (set (reg/f:DI 961)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 717
;;      reg 959 { d1819(bb 37 insn 714) }
(insn 717 716 718 37 (set (reg:DI 2 x2)
        (reg/f:DI 959)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 959)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
            (nil))))
;;   UD chains for insn luid 7 uid 718
(insn 718 717 719 37 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 719
;;      reg 961 { d1821(bb 37 insn 716) }
(insn 719 718 720 37 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 961) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 961)
        (nil)))
;;   UD chains for insn luid 9 uid 720
;;      reg 31 { }
;;      reg 0 { d38(bb 37 insn 719) }
;;      reg 1 { d98(bb 37 insn 718) }
;;      reg 2 { d156(bb 37 insn 717) }
(call_insn 720 719 721 37 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 721
(debug_insn 721 720 722 37 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
;;   UD chains for insn luid 11 uid 722
(debug_insn 722 721 723 37 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
;;   UD chains for insn luid 12 uid 723
(debug_insn 723 722 179 37 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:184 -1
     (nil))
;;   UD chains for insn luid 13 uid 179
(insn 179 723 724 37 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:184 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u424(29){ }u425(31){ }u426(64){ }u427(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(2) 320[1709],328[1713]
;; rd  kill	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at top

(code_label 724 179 725 38 38 "" [0 uses])
(note 725 724 726 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 726
;;      reg 360 { }
(debug_insn 726 725 727 38 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 727
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 727 726 728 38 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:186 466 {iorsi3}
     (nil))
;;   UD chains for insn luid 2 uid 728
;;      reg 320 { d1709(bb 38 insn 727) }
(debug_insn 728 727 729 38 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:186 -1
     (nil))
;;   UD chains for insn luid 3 uid 729
;;      reg 328 { d1715(bb 52 insn 905) d1714(bb 45 insn 817) d1713(bb 38 insn 729) d1712(bb 31 insn 641) }
(insn 729 728 730 38 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:187 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 730
;;      reg 328 { d1713(bb 38 insn 729) }
(debug_insn 730 729 733 38 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:187 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(2) 320[1709],328[1713]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u433(29){ }u434(31){ }u435(64){ }u436(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 339 341 963 965 967 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 339 341 963 965 967 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 32[853],66[1684],339[1718],341[1719],963[1822],965[1823],967[1824],1854[1862],1855[1866]
;; rd  kill	(15) 339[1718],341[1719],963[1822],965[1823],967[1824],1854[1858,1859,1860,1861,1862,1863],1855[1864,1865,1866,1867]
;;  UD chains for artificial uses at top

(code_label 733 730 734 39 20 "" [2 uses])
(note 734 733 735 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 735
;;      reg 31 { }
(call_insn/u 735 734 736 39 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:191 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 736
;;      reg 0 { d40(bb 39 insn 735) }
(insn 736 735 737 39 (set (reg/f:DI 339 [ D.3807 ])
        (reg:DI 0 x0)) options.c:191 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 737
;;      reg 339 { d1718(bb 39 insn 736) }
(insn 737 736 738 39 (set (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])
        (const_int 0 [0])) options.c:191 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 738
(insn 738 737 739 39 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 739
;;      reg 1855 { d1866(bb 39 insn 738) }
(insn 739 738 740 39 (set (reg/f:DI 963)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
;;   UD chains for insn luid 5 uid 740
(insn 740 739 741 39 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:192 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 741
;;      reg 963 { d1822(bb 39 insn 739) }
(insn 741 740 742 39 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 963) [2 optarg+0 S8 A64])) options.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 963)
        (nil)))
;;   UD chains for insn luid 7 uid 742
;;      reg 31 { }
;;      reg 0 { d41(bb 39 insn 741) }
;;      reg 1 { d101(bb 39 insn 740) }
(call_insn 742 741 743 39 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:192 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 8 uid 743
;;      reg 32 { d853(bb 39 insn 742) }
(insn 743 742 744 39 (set (reg:DF 341 [ D.3804 ])
        (reg:DF 32 v0)) options.c:192 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
;;   UD chains for insn luid 9 uid 744
(insn 744 743 745 39 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 745
;;      reg 1854 { d1862(bb 39 insn 744) }
(insn 745 744 746 39 (set (reg/f:DI 965)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 11 uid 746
;;      reg 341 { d1719(bb 39 insn 743) }
;;      reg 965 { d1823(bb 39 insn 745) }
(insn 746 745 747 39 (set (mem/c:DF (plus:DI (reg/f:DI 965)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 341 [ D.3804 ])) options.c:192 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 965)
        (expr_list:REG_DEAD (reg:DF 341 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 12 uid 747
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 747 746 748 39 (set (reg:SI 967 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:193 465 {andsi3}
     (nil))
;;   UD chains for insn luid 13 uid 748
;;      reg 967 { d1824(bb 39 insn 747) }
(insn 748 747 749 39 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 967 [ D.3797 ])
            (const_int 0 [0]))) options.c:193 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 967 [ D.3797 ])
        (nil)))
;;   UD chains for insn luid 14 uid 749
;;      reg 66 { d1684(bb 39 insn 748) }
(jump_insn 749 748 750 39 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 764)
            (pc))) options.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 764)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; live  out 	 320 328 339 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],339[1718],1854[1862],1855[1866]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u452(29){ }u453(31){ }u454(64){ }u455(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 968 969 970 1856
;; live  in  	 320 328 339 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 968 969 970 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],339[1718],1854[1862],1855[1866]
;; rd  gen 	(6) 0[44],360[1734],968[1825],969[1826],970[1827],1856[1880]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],968[1825],969[1826],970[1827],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 750 749 751 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 751
(debug_insn 751 750 752 40 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:194 -1
     (nil))
;;   UD chains for insn luid 1 uid 752
(debug_insn 752 751 753 40 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)) options.c:194 -1
     (nil))
;;   UD chains for insn luid 2 uid 753
(insn 753 752 754 40 (set (reg/f:DI 969)
        (high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 754
;;      reg 969 { d1826(bb 40 insn 753) }
(insn 754 753 755 40 (set (reg/f:DI 968)
        (lo_sum:DI (reg/f:DI 969)
            (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 969)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
            (nil))))
;;   UD chains for insn luid 4 uid 755
(insn 755 754 756 40 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 756
;;      reg 1856 { d1880(bb 40 insn 755) }
(insn 756 755 757 40 (set (reg/f:DI 970)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 757
;;      reg 968 { d1825(bb 40 insn 754) }
(insn 757 756 758 40 (set (reg:DI 2 x2)
        (reg/f:DI 968)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 968)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
            (nil))))
;;   UD chains for insn luid 7 uid 758
(insn 758 757 759 40 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 759
;;      reg 970 { d1827(bb 40 insn 756) }
(insn 759 758 760 40 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 970) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 970)
        (nil)))
;;   UD chains for insn luid 9 uid 760
;;      reg 31 { }
;;      reg 0 { d43(bb 40 insn 759) }
;;      reg 1 { d103(bb 40 insn 758) }
;;      reg 2 { d160(bb 40 insn 757) }
(call_insn 760 759 761 40 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 761
(debug_insn 761 760 762 40 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
;;   UD chains for insn luid 11 uid 762
(debug_insn 762 761 763 40 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
;;   UD chains for insn luid 12 uid 763
(debug_insn 763 762 180 40 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:195 -1
     (nil))
;;   UD chains for insn luid 13 uid 180
(insn 180 763 764 40 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:195 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; live  out 	 320 328 339 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],339[1718],1854[1862],1855[1866]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u464(29){ }u465(31){ }u466(64){ }u467(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 339
;; lr  def 	 66 [cc] 972
;; live  in  	 320 328 339 1854 1855
;; live  gen 	 66 [cc] 972
;; live  kill	
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],339[1718],1854[1862],1855[1866]
;; rd  gen 	(2) 66[1686],972[1828]
;; rd  kill	(1) 972[1828]
;;  UD chains for artificial uses at top

(code_label 764 180 765 41 40 "" [1 uses])
(note 765 764 766 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 766
;;      reg 360 { }
(debug_insn 766 765 767 41 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 767
;;      reg 339 { d1718(bb 39 insn 736) }
(insn 767 766 768 41 (set (reg:SI 972 [ *_167 ])
        (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])) options.c:197 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 339 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 2 uid 768
;;      reg 972 { d1828(bb 41 insn 767) }
(insn 768 767 769 41 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 972 [ *_167 ])
            (const_int 0 [0]))) options.c:197 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 972 [ *_167 ])
        (nil)))
;;   UD chains for insn luid 3 uid 769
;;      reg 66 { d1686(bb 41 insn 768) }
(jump_insn 769 768 770 41 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 787)
            (pc))) options.c:197 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 787)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1862],1855[1866]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u472(29){ }u473(31){ }u474(64){ }u475(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 973 975 976 977 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 973 975 976 977 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1862],1855[1866]
;; rd  gen 	(7) 0[46],360[1735],973[1829],975[1830],976[1831],977[1832],1856[1881]
;; rd  kill	(42) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],973[1829],975[1830],976[1831],977[1832],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 770 769 771 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 771
(debug_insn 771 770 772 42 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:198 -1
     (nil))
;;   UD chains for insn luid 1 uid 772
(debug_insn 772 771 774 42 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)) options.c:198 -1
     (nil))
;;   UD chains for insn luid 2 uid 774
;;      reg 1855 { d1866(bb 39 insn 738) }
(insn 774 772 775 42 (set (reg/f:DI 973)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 3 uid 775
(insn 775 774 776 42 (set (reg/f:DI 976)
        (high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 776
;;      reg 976 { d1831(bb 42 insn 775) }
(insn 776 775 777 42 (set (reg/f:DI 975)
        (lo_sum:DI (reg/f:DI 976)
            (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 976)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
            (nil))))
;;   UD chains for insn luid 5 uid 777
(insn 777 776 778 42 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 778
;;      reg 1856 { d1881(bb 42 insn 777) }
(insn 778 777 779 42 (set (reg/f:DI 977)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 7 uid 779
;;      reg 973 { d1829(bb 42 insn 774) }
(insn 779 778 780 42 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 973) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 973)
        (nil)))
;;   UD chains for insn luid 8 uid 780
;;      reg 975 { d1830(bb 42 insn 776) }
(insn 780 779 781 42 (set (reg:DI 2 x2)
        (reg/f:DI 975)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 975)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
            (nil))))
;;   UD chains for insn luid 9 uid 781
(insn 781 780 782 42 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 782
;;      reg 977 { d1832(bb 42 insn 778) }
(insn 782 781 783 42 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 977) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 977)
        (nil)))
;;   UD chains for insn luid 11 uid 783
;;      reg 31 { }
;;      reg 0 { d45(bb 42 insn 782) }
;;      reg 1 { d105(bb 42 insn 781) }
;;      reg 2 { d162(bb 42 insn 780) }
;;      reg 3 { d207(bb 42 insn 779) }
(call_insn 783 782 784 42 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 12 uid 784
(debug_insn 784 783 785 42 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
;;   UD chains for insn luid 13 uid 785
(debug_insn 785 784 786 42 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
;;   UD chains for insn luid 14 uid 786
(debug_insn 786 785 181 42 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:199 -1
     (nil))
;;   UD chains for insn luid 15 uid 181
(insn 181 786 787 42 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:199 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1862]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u487(29){ }u488(31){ }u489(64){ }u490(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 979 981
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 979 981
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1862],1855[1866]
;; rd  gen 	(3) 66[1688],979[1833],981[1834]
;; rd  kill	(2) 979[1833],981[1834]
;;  UD chains for artificial uses at top

(code_label 787 181 788 43 41 "" [1 uses])
(note 788 787 789 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 789
;;      reg 360 { }
(debug_insn 789 788 791 43 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 791
;;      reg 1854 { d1862(bb 39 insn 744) }
(insn 791 789 792 43 (set (reg/f:DI 979)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 792
;;      reg 979 { d1833(bb 43 insn 791) }
(insn 792 791 793 43 (set (reg:DF 981 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 979)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:201 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 979)
        (nil)))
;;   UD chains for insn luid 3 uid 793
;;      reg 981 { d1834(bb 43 insn 792) }
(insn 793 792 794 43 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 981 [ C ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:201 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 981 [ C ])
        (nil)))
;;   UD chains for insn luid 4 uid 794
;;      reg 66 { d1688(bb 43 insn 793) }
(jump_insn 794 793 4065 43 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4065)
            (pc))) options.c:201 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4065)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u496(29){ }u497(31){ }u498(64){ }u499(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 982 983 984 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 982 983 984 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[48],360[1736],982[1835],983[1836],984[1837],1856[1882]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],982[1835],983[1836],984[1837],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(code_label 4065 794 798 44 217 "" [1 uses])
(note 798 4065 799 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 799
(debug_insn 799 798 800 44 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:202 -1
     (nil))
;;   UD chains for insn luid 1 uid 800
(debug_insn 800 799 801 44 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)) options.c:202 -1
     (nil))
;;   UD chains for insn luid 2 uid 801
(insn 801 800 802 44 (set (reg/f:DI 983)
        (high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 802
;;      reg 983 { d1836(bb 44 insn 801) }
(insn 802 801 803 44 (set (reg/f:DI 982)
        (lo_sum:DI (reg/f:DI 983)
            (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 983)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
            (nil))))
;;   UD chains for insn luid 4 uid 803
(insn 803 802 804 44 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 804
;;      reg 1856 { d1882(bb 44 insn 803) }
(insn 804 803 805 44 (set (reg/f:DI 984)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 805
;;      reg 982 { d1835(bb 44 insn 802) }
(insn 805 804 806 44 (set (reg:DI 2 x2)
        (reg/f:DI 982)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 982)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
            (nil))))
;;   UD chains for insn luid 7 uid 806
(insn 806 805 807 44 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 807
;;      reg 984 { d1837(bb 44 insn 804) }
(insn 807 806 808 44 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 984) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 984)
        (nil)))
;;   UD chains for insn luid 9 uid 808
;;      reg 31 { }
;;      reg 0 { d47(bb 44 insn 807) }
;;      reg 1 { d107(bb 44 insn 806) }
;;      reg 2 { d164(bb 44 insn 805) }
(call_insn 808 807 809 44 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 809
(debug_insn 809 808 810 44 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
;;   UD chains for insn luid 11 uid 810
(debug_insn 810 809 811 44 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
;;   UD chains for insn luid 12 uid 811
(debug_insn 811 810 182 44 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:203 -1
     (nil))
;;   UD chains for insn luid 13 uid 182
(insn 182 811 812 44 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:203 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u508(29){ }u509(31){ }u510(64){ }u511(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(2) 320[1710],328[1714]
;; rd  kill	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at top

(code_label 812 182 813 45 42 "" [0 uses])
(note 813 812 814 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 814
;;      reg 360 { }
(debug_insn 814 813 815 45 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 815
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 815 814 816 45 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:205 466 {iorsi3}
     (nil))
;;   UD chains for insn luid 2 uid 816
;;      reg 320 { d1710(bb 45 insn 815) }
(debug_insn 816 815 817 45 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:205 -1
     (nil))
;;   UD chains for insn luid 3 uid 817
;;      reg 328 { d1715(bb 52 insn 905) d1714(bb 45 insn 817) d1713(bb 38 insn 729) d1712(bb 31 insn 641) }
(insn 817 816 818 45 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:206 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 818
;;      reg 328 { d1714(bb 45 insn 817) }
(debug_insn 818 817 821 45 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:206 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(2) 320[1710],328[1714]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u517(29){ }u518(31){ }u519(64){ }u520(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 349 351 986 988 990 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 349 351 986 988 990 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(9) 32[858],66[1692],349[1720],351[1721],986[1838],988[1839],990[1840],1854[1863],1855[1867]
;; rd  kill	(15) 349[1720],351[1721],986[1838],988[1839],990[1840],1854[1858,1859,1860,1861,1862,1863],1855[1864,1865,1866,1867]
;;  UD chains for artificial uses at top

(code_label 821 818 822 46 21 "" [2 uses])
(note 822 821 823 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 823
;;      reg 31 { }
(call_insn/u 823 822 824 46 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:210 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;   UD chains for insn luid 1 uid 824
;;      reg 0 { d49(bb 46 insn 823) }
(insn 824 823 825 46 (set (reg/f:DI 349 [ D.3807 ])
        (reg:DI 0 x0)) options.c:210 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
;;   UD chains for insn luid 2 uid 825
;;      reg 349 { d1720(bb 46 insn 824) }
(insn 825 824 826 46 (set (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])
        (const_int 0 [0])) options.c:210 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 826
(insn 826 825 827 46 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 827
;;      reg 1855 { d1867(bb 46 insn 826) }
(insn 827 826 828 46 (set (reg/f:DI 986)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
;;   UD chains for insn luid 5 uid 828
(insn 828 827 829 46 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:211 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 829
;;      reg 986 { d1838(bb 46 insn 827) }
(insn 829 828 830 46 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 986) [2 optarg+0 S8 A64])) options.c:211 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 986)
        (nil)))
;;   UD chains for insn luid 7 uid 830
;;      reg 31 { }
;;      reg 0 { d50(bb 46 insn 829) }
;;      reg 1 { d110(bb 46 insn 828) }
(call_insn 830 829 831 46 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:211 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
;;   UD chains for insn luid 8 uid 831
;;      reg 32 { d858(bb 46 insn 830) }
(insn 831 830 832 46 (set (reg:DF 351 [ D.3804 ])
        (reg:DF 32 v0)) options.c:211 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
;;   UD chains for insn luid 9 uid 832
(insn 832 831 833 46 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 833
;;      reg 1854 { d1863(bb 46 insn 832) }
(insn 833 832 834 46 (set (reg/f:DI 988)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
;;   UD chains for insn luid 11 uid 834
;;      reg 351 { d1721(bb 46 insn 831) }
;;      reg 988 { d1839(bb 46 insn 833) }
(insn 834 833 835 46 (set (mem/c:DF (plus:DI (reg/f:DI 988)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 351 [ D.3804 ])) options.c:211 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 988)
        (expr_list:REG_DEAD (reg:DF 351 [ D.3804 ])
            (nil))))
;;   UD chains for insn luid 12 uid 835
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 835 834 836 46 (set (reg:SI 990 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:212 465 {andsi3}
     (nil))
;;   UD chains for insn luid 13 uid 836
;;      reg 990 { d1840(bb 46 insn 835) }
(insn 836 835 837 46 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 990 [ D.3797 ])
            (const_int 0 [0]))) options.c:212 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 990 [ D.3797 ])
        (nil)))
;;   UD chains for insn luid 14 uid 837
;;      reg 66 { d1692(bb 46 insn 836) }
(jump_insn 837 836 838 46 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 852)
            (pc))) options.c:212 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 852)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; live  out 	 320 328 349 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],349[1720],1854[1863],1855[1867]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u536(29){ }u537(31){ }u538(64){ }u539(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 991 992 993 1856
;; live  in  	 320 328 349 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 991 992 993 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],349[1720],1854[1863],1855[1867]
;; rd  gen 	(6) 0[53],360[1737],991[1841],992[1842],993[1843],1856[1883]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],991[1841],992[1842],993[1843],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 838 837 839 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 839
(debug_insn 839 838 840 47 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:213 -1
     (nil))
;;   UD chains for insn luid 1 uid 840
(debug_insn 840 839 841 47 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)) options.c:213 -1
     (nil))
;;   UD chains for insn luid 2 uid 841
(insn 841 840 842 47 (set (reg/f:DI 992)
        (high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 842
;;      reg 992 { d1842(bb 47 insn 841) }
(insn 842 841 843 47 (set (reg/f:DI 991)
        (lo_sum:DI (reg/f:DI 992)
            (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 992)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
            (nil))))
;;   UD chains for insn luid 4 uid 843
(insn 843 842 844 47 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 844
;;      reg 1856 { d1883(bb 47 insn 843) }
(insn 844 843 845 47 (set (reg/f:DI 993)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 845
;;      reg 991 { d1841(bb 47 insn 842) }
(insn 845 844 846 47 (set (reg:DI 2 x2)
        (reg/f:DI 991)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 991)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
            (nil))))
;;   UD chains for insn luid 7 uid 846
(insn 846 845 847 47 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 847
;;      reg 993 { d1843(bb 47 insn 844) }
(insn 847 846 848 47 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 993) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 993)
        (nil)))
;;   UD chains for insn luid 9 uid 848
;;      reg 31 { }
;;      reg 0 { d52(bb 47 insn 847) }
;;      reg 1 { d112(bb 47 insn 846) }
;;      reg 2 { d168(bb 47 insn 845) }
(call_insn 848 847 849 47 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 849
(debug_insn 849 848 850 47 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
;;   UD chains for insn luid 11 uid 850
(debug_insn 850 849 851 47 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
;;   UD chains for insn luid 12 uid 851
(debug_insn 851 850 183 47 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:214 -1
     (nil))
;;   UD chains for insn luid 13 uid 183
(insn 183 851 852 47 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:214 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; live  out 	 320 328 349 1854 1855
;; rd  out 	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],349[1720],1854[1863],1855[1867]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u548(29){ }u549(31){ }u550(64){ }u551(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 349
;; lr  def 	 66 [cc] 995
;; live  in  	 320 328 349 1854 1855
;; live  gen 	 66 [cc] 995
;; live  kill	
;; rd  in  	(11) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],349[1720],1854[1863],1855[1867]
;; rd  gen 	(2) 66[1694],995[1844]
;; rd  kill	(1) 995[1844]
;;  UD chains for artificial uses at top

(code_label 852 183 853 48 44 "" [1 uses])
(note 853 852 854 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 854
;;      reg 360 { }
(debug_insn 854 853 855 48 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 855
;;      reg 349 { d1720(bb 46 insn 824) }
(insn 855 854 856 48 (set (reg:SI 995 [ *_179 ])
        (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])) options.c:216 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 349 [ D.3807 ])
        (nil)))
;;   UD chains for insn luid 2 uid 856
;;      reg 995 { d1844(bb 48 insn 855) }
(insn 856 855 857 48 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 995 [ *_179 ])
            (const_int 0 [0]))) options.c:216 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 995 [ *_179 ])
        (nil)))
;;   UD chains for insn luid 3 uid 857
;;      reg 66 { d1694(bb 48 insn 856) }
(jump_insn 857 856 858 48 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 875)
            (pc))) options.c:216 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 875)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855
;; rd  out 	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1863],1855[1867]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u556(29){ }u557(31){ }u558(64){ }u559(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 996 998 999 1000 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 996 998 999 1000 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1863],1855[1867]
;; rd  gen 	(7) 0[55],360[1738],996[1845],998[1846],999[1847],1000[1848],1856[1884]
;; rd  kill	(42) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],996[1845],998[1846],999[1847],1000[1848],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(note 858 857 859 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 859
(debug_insn 859 858 860 49 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:217 -1
     (nil))
;;   UD chains for insn luid 1 uid 860
(debug_insn 860 859 862 49 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)) options.c:217 -1
     (nil))
;;   UD chains for insn luid 2 uid 862
;;      reg 1855 { d1867(bb 46 insn 826) }
(insn 862 860 863 49 (set (reg/f:DI 996)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
;;   UD chains for insn luid 3 uid 863
(insn 863 862 864 49 (set (reg/f:DI 999)
        (high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 864
;;      reg 999 { d1847(bb 49 insn 863) }
(insn 864 863 865 49 (set (reg/f:DI 998)
        (lo_sum:DI (reg/f:DI 999)
            (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 999)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
            (nil))))
;;   UD chains for insn luid 5 uid 865
(insn 865 864 866 49 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 866
;;      reg 1856 { d1884(bb 49 insn 865) }
(insn 866 865 867 49 (set (reg/f:DI 1000)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 7 uid 867
;;      reg 996 { d1845(bb 49 insn 862) }
(insn 867 866 868 49 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 996) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 996)
        (nil)))
;;   UD chains for insn luid 8 uid 868
;;      reg 998 { d1846(bb 49 insn 864) }
(insn 868 867 869 49 (set (reg:DI 2 x2)
        (reg/f:DI 998)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 998)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
            (nil))))
;;   UD chains for insn luid 9 uid 869
(insn 869 868 870 49 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 10 uid 870
;;      reg 1000 { d1848(bb 49 insn 866) }
(insn 870 869 871 49 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1000) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1000)
        (nil)))
;;   UD chains for insn luid 11 uid 871
;;      reg 31 { }
;;      reg 0 { d54(bb 49 insn 870) }
;;      reg 1 { d114(bb 49 insn 869) }
;;      reg 2 { d170(bb 49 insn 868) }
;;      reg 3 { d213(bb 49 insn 867) }
(call_insn 871 870 872 49 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;   UD chains for insn luid 12 uid 872
(debug_insn 872 871 873 49 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
;;   UD chains for insn luid 13 uid 873
(debug_insn 873 872 874 49 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
;;   UD chains for insn luid 14 uid 874
(debug_insn 874 873 184 49 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:218 -1
     (nil))
;;   UD chains for insn luid 15 uid 184
(insn 184 874 875 49 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:218 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854
;; rd  out 	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1863]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u571(29){ }u572(31){ }u573(64){ }u574(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 1002 1004
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 1002 1004
;; live  kill	
;; rd  in  	(10) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],1854[1863],1855[1867]
;; rd  gen 	(3) 66[1696],1002[1849],1004[1850]
;; rd  kill	(2) 1002[1849],1004[1850]
;;  UD chains for artificial uses at top

(code_label 875 184 876 50 45 "" [1 uses])
(note 876 875 877 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 877
;;      reg 360 { }
(debug_insn 877 876 879 50 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 879
;;      reg 1854 { d1863(bb 46 insn 832) }
(insn 879 877 880 50 (set (reg/f:DI 1002)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
;;   UD chains for insn luid 2 uid 880
;;      reg 1002 { d1849(bb 50 insn 879) }
(insn 880 879 881 50 (set (reg:DF 1004 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1002)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:220 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1002)
        (nil)))
;;   UD chains for insn luid 3 uid 881
;;      reg 1004 { d1850(bb 50 insn 880) }
(insn 881 880 882 50 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1004 [ D ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:220 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1004 [ D ])
        (nil)))
;;   UD chains for insn luid 4 uid 882
;;      reg 66 { d1696(bb 50 insn 881) }
(jump_insn 882 881 4066 50 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4066)
            (pc))) options.c:220 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4066)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u580(29){ }u581(31){ }u582(64){ }u583(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 1005 1006 1007 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 1005 1006 1007 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(6) 0[57],360[1739],1005[1851],1006[1852],1007[1853],1856[1885]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],1005[1851],1006[1852],1007[1853],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(code_label 4066 882 886 51 218 "" [1 uses])
(note 886 4066 887 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 887
(debug_insn 887 886 888 51 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:221 -1
     (nil))
;;   UD chains for insn luid 1 uid 888
(debug_insn 888 887 889 51 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)) options.c:221 -1
     (nil))
;;   UD chains for insn luid 2 uid 889
(insn 889 888 890 51 (set (reg/f:DI 1006)
        (high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 890
;;      reg 1006 { d1852(bb 51 insn 889) }
(insn 890 889 891 51 (set (reg/f:DI 1005)
        (lo_sum:DI (reg/f:DI 1006)
            (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1006)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
            (nil))))
;;   UD chains for insn luid 4 uid 891
(insn 891 890 892 51 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 892
;;      reg 1856 { d1885(bb 51 insn 891) }
(insn 892 891 893 51 (set (reg/f:DI 1007)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 893
;;      reg 1005 { d1851(bb 51 insn 890) }
(insn 893 892 894 51 (set (reg:DI 2 x2)
        (reg/f:DI 1005)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1005)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
            (nil))))
;;   UD chains for insn luid 7 uid 894
(insn 894 893 895 51 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 895
;;      reg 1007 { d1853(bb 51 insn 892) }
(insn 895 894 896 51 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1007) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1007)
        (nil)))
;;   UD chains for insn luid 9 uid 896
;;      reg 31 { }
;;      reg 0 { d56(bb 51 insn 895) }
;;      reg 1 { d116(bb 51 insn 894) }
;;      reg 2 { d172(bb 51 insn 893) }
(call_insn 896 895 897 51 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 897
(debug_insn 897 896 898 51 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
;;   UD chains for insn luid 11 uid 898
(debug_insn 898 897 899 51 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
;;   UD chains for insn luid 12 uid 899
(debug_insn 899 898 185 51 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:222 -1
     (nil))
;;   UD chains for insn luid 13 uid 185
(insn 185 899 900 51 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:222 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u592(29){ }u593(31){ }u594(64){ }u595(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(2) 320[1711],328[1715]
;; rd  kill	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at top

(code_label 900 185 901 52 46 "" [0 uses])
(note 901 900 902 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 902
;;      reg 360 { }
(debug_insn 902 901 903 52 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 903
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(insn 903 902 904 52 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:224 466 {iorsi3}
     (nil))
;;   UD chains for insn luid 2 uid 904
;;      reg 320 { d1711(bb 52 insn 903) }
(debug_insn 904 903 905 52 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:224 -1
     (nil))
;;   UD chains for insn luid 3 uid 905
;;      reg 328 { d1715(bb 52 insn 905) d1714(bb 45 insn 817) d1713(bb 38 insn 729) d1712(bb 31 insn 641) }
(insn 905 904 906 52 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:225 94 {*addsi3_aarch64}
     (nil))
;;   UD chains for insn luid 4 uid 906
;;      reg 328 { d1715(bb 52 insn 905) }
(debug_insn 906 905 909 52 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:225 -1
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(2) 320[1711],328[1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u601(29){ }u602(31){ }u603(64){ }u604(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 1009 1010 1011 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 1009 1010 1011 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(9) 320[1708,1709,1710,1711],328[1712,1713,1714,1715],844[1741]
;; rd  gen 	(6) 0[59],360[1740],1009[1854],1010[1855],1011[1856],1856[1886]
;; rd  kill	(41) 360[1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740],1009[1854],1010[1855],1011[1856],1856[1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886]
;;  UD chains for artificial uses at top

(code_label 909 906 910 53 15 "" [40 uses])
(note 910 909 911 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 911
(debug_insn 911 910 912 53 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:228 -1
     (nil))
;;   UD chains for insn luid 1 uid 912
(debug_insn 912 911 913 53 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)) options.c:228 -1
     (nil))
;;   UD chains for insn luid 2 uid 913
(insn 913 912 914 53 (set (reg/f:DI 1010)
        (high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 3 uid 914
;;      reg 1010 { d1855(bb 53 insn 913) }
(insn 914 913 915 53 (set (reg/f:DI 1009)
        (lo_sum:DI (reg/f:DI 1010)
            (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1010)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)
            (nil))))
;;   UD chains for insn luid 4 uid 915
(insn 915 914 916 53 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 5 uid 916
;;      reg 1856 { d1886(bb 53 insn 915) }
(insn 916 915 917 53 (set (reg/f:DI 1011)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
;;   UD chains for insn luid 6 uid 917
;;      reg 1009 { d1854(bb 53 insn 914) }
(insn 917 916 918 53 (set (reg:DI 2 x2)
        (reg/f:DI 1009)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1009)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)
            (nil))))
;;   UD chains for insn luid 7 uid 918
(insn 918 917 919 53 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 8 uid 919
;;      reg 1011 { d1856(bb 53 insn 916) }
(insn 919 918 920 53 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1011) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1011)
        (nil)))
;;   UD chains for insn luid 9 uid 920
;;      reg 31 { }
;;      reg 0 { d58(bb 53 insn 919) }
;;      reg 1 { d118(bb 53 insn 918) }
;;      reg 2 { d174(bb 53 insn 917) }
(call_insn 920 919 921 53 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 10 uid 921
(debug_insn 921 920 922 53 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
;;   UD chains for insn luid 11 uid 922
(debug_insn 922 921 923 53 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
;;   UD chains for insn luid 12 uid 923
(debug_insn 923 922 186 53 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:229 -1
     (nil))
;;   UD chains for insn luid 13 uid 186
(insn 186 923 924 53 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:229 47 {*movsi_aarch64}
     (nil))
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u613(29){ }u614(31){ }u615(64){ }u616(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 320 328
;; live  gen 	
;; live  kill	
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top

(code_label 924 186 925 54 29 "" [4 uses])
(note 925 924 926 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328
;; rd  out 	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }


;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u617(29){ }u618(31){ }u619(64){ }u620(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1864
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 294 1013
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 294 1013
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(8) 320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;; rd  gen 	(4) 0[61],66[1700],294[1701],1013[1857]
;; rd  kill	(2) 294[1701],1013[1857]
;;  UD chains for artificial uses at top

(code_label 926 925 927 55 14 "" [0 uses])
(note 927 926 928 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 928
;;      reg 320 { d1711(bb 52 insn 903) d1710(bb 45 insn 815) d1709(bb 38 insn 727) d1708(bb 31 insn 639) }
(debug_insn 928 927 929 55 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) -1
     (nil))
;;   UD chains for insn luid 1 uid 929
;;      reg 328 { d1715(bb 52 insn 905) d1714(bb 45 insn 817) d1713(bb 38 insn 729) d1712(bb 31 insn 641) }
(debug_insn 929 928 930 55 (var_location:SI nset (reg/v:SI 328 [ nset ])) -1
     (nil))
;;   UD chains for insn luid 2 uid 930
;;      reg 360 { }
(debug_insn 930 929 932 55 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
;;   UD chains for insn luid 3 uid 932
;;      reg 1864 { }
(insn 932 930 933 55 (set (reg/f:DI 1013)
        (lo_sum:DI (reg/f:DI 1864)
            (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
        (nil)))
;;   UD chains for insn luid 4 uid 933
;;      reg 1013 { d1857(bb 55 insn 932) }
(insn 933 932 934 55 (set (reg:DI 2 x2)
        (reg/f:DI 1013)) options.c:51 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1013)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
            (nil))))
;;   UD chains for insn luid 5 uid 934
;;      reg 838 { }
(insn 934 933 935 55 (set (reg:DI 1 x1)
        (reg/v/f:DI 838 [ argv ])) options.c:51 48 {*movdi_aarch64}
     (nil))
;;   UD chains for insn luid 6 uid 935
;;      reg 837 { }
(insn 935 934 936 55 (set (reg:SI 0 x0)
        (reg/v:SI 837 [ argc ])) options.c:51 47 {*movsi_aarch64}
     (nil))
;;   UD chains for insn luid 7 uid 936
;;      reg 31 { }
;;      reg 0 { d60(bb 55 insn 935) }
;;      reg 1 { d120(bb 55 insn 934) }
;;      reg 2 { d176(bb 55 insn 933) }
(call_insn 936 935 937 55 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>) [0 getopt S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:51 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;   UD chains for insn luid 8 uid 937
;;      reg 0 { d61(bb 55 insn 936) }
(insn 937 936 938 55 (set (reg/v:SI 294 [ c ])
        (reg:SI 0 x0)) options.c:51 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (nil)))
;;   UD chains for insn luid 9 uid 938
;;      reg 294 { d1701(bb 55 insn 937) }
(debug_insn 938 937 940 55 (var_location:SI c (reg/v:SI 294 [ c ])) options.c:51 -1
     (nil))
;;   UD chains for insn luid 10 uid 940
;;      reg 294 { d1701(bb 55 insn 937) }
(insn 940 938 941 55 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 294 [ c ])
            (const_int -1 [0xffffffffffffffff]))) options.c:51 390 {*cmpsi}
     (nil))
;;   UD chains for insn luid 11 uid 941
;;      reg 66 { d1700(bb 55 insn 940) }
(jump_insn 941 940 942 55 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 939)
            (pc))) options.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9700 (nil)))
 -> 939)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294 320 328 837 838 1864
;; live  out 	 294 320 328
;; rd  out 	(9) 294[1701],320[1708,1709,1710,1711],328[1712,1713,1714,1715]
;;  UD chains for artificial uses at bottom
;;   reg 29 { }
;;   reg 31 { }
;;   reg 64 { }
;;   reg 65 { }



*****ending processing of loop 1 ******
(lo_sum:DI (reg/f:DI 1864)
    (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))

Hot cost: 4 (final)
(set (reg/f:DI 1013)
    (lo_sum:DI (reg/f:DI 1864)
        (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)))

Hot cost: 4 (final)
Set in insn 932 is invariant (0), cost 4, depends on 
Set in insn 933 is invariant (1), cost 0, depends on 0
Set in insn 934 is invariant (2), cost 0, depends on 
Set in insn 935 is invariant (3), cost 0, depends on 
(high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))

Cold cost: 4 (final)
(set (reg/f:DI 1010)
    (high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)))

Cold cost: 4 (final)
Set in insn 913 is invariant (4), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1010)
    (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))

Cold cost: 4 (final)
(set (reg/f:DI 1009)
    (lo_sum:DI (reg/f:DI 1010)
        (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)))

Cold cost: 4 (final)
Set in insn 914 is invariant (5), cost 4, depends on 4
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 915 is invariant (6), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1011)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 916 is invariant (7), cost 4, depends on 6
Set in insn 917 is invariant (8), cost 0, depends on 5
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 918 is invariant (9), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 186 is invariant (10), cost 4, depends on 
(high:DI (label_ref 324))

Hot cost: 4 (final)
(set (reg/f:DI 846)
    (high:DI (label_ref 324)))

Hot cost: 4 (final)
Set in insn 321 is invariant (11), cost 4, depends on 
(lo_sum:DI (reg/f:DI 846)
    (label_ref 324))

Hot cost: 4 (final)
(set (reg/f:DI 845)
    (lo_sum:DI (reg/f:DI 846)
        (label_ref 324)))

Hot cost: 4 (final)
Set in insn 322 is invariant (12), cost 4, depends on 11
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 1855)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 826 is invariant (13), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 986)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 827 is invariant (14), cost 4, depends on 13
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 828 is invariant (15), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 832 is invariant (16), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 988)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 833 is invariant (17), cost 4, depends on 16
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1002)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 879 is invariant (18), cost 4, depends on 16
(high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))

Cold cost: 4 (final)
(set (reg/f:DI 1006)
    (high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)))

Cold cost: 4 (final)
Set in insn 889 is invariant (19), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1006)
    (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))

Cold cost: 4 (final)
(set (reg/f:DI 1005)
    (lo_sum:DI (reg/f:DI 1006)
        (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)))

Cold cost: 4 (final)
Set in insn 890 is invariant (20), cost 4, depends on 19
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 891 is invariant (21), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1007)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 892 is invariant (22), cost 4, depends on 21
Set in insn 893 is invariant (23), cost 0, depends on 20
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 894 is invariant (24), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 185 is invariant (25), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 996)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 862 is invariant (26), cost 4, depends on 13
(high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))

Cold cost: 4 (final)
(set (reg/f:DI 999)
    (high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)))

Cold cost: 4 (final)
Set in insn 863 is invariant (27), cost 4, depends on 
(lo_sum:DI (reg/f:DI 999)
    (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))

Cold cost: 4 (final)
(set (reg/f:DI 998)
    (lo_sum:DI (reg/f:DI 999)
        (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)))

Cold cost: 4 (final)
Set in insn 864 is invariant (28), cost 4, depends on 27
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 865 is invariant (29), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1000)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 866 is invariant (30), cost 4, depends on 29
Set in insn 868 is invariant (31), cost 0, depends on 28
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 869 is invariant (32), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 184 is invariant (33), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))

Cold cost: 4 (final)
(set (reg/f:DI 992)
    (high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)))

Cold cost: 4 (final)
Set in insn 841 is invariant (34), cost 4, depends on 
(lo_sum:DI (reg/f:DI 992)
    (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))

Cold cost: 4 (final)
(set (reg/f:DI 991)
    (lo_sum:DI (reg/f:DI 992)
        (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)))

Cold cost: 4 (final)
Set in insn 842 is invariant (35), cost 4, depends on 34
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 843 is invariant (36), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 993)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 844 is invariant (37), cost 4, depends on 36
Set in insn 845 is invariant (38), cost 0, depends on 35
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 846 is invariant (39), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 183 is invariant (40), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 1855)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 738 is invariant (41), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 963)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 739 is invariant (42), cost 4, depends on 41
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 740 is invariant (43), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 744 is invariant (44), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 965)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 745 is invariant (45), cost 4, depends on 44
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 979)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 791 is invariant (46), cost 4, depends on 44
(high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))

Cold cost: 4 (final)
(set (reg/f:DI 983)
    (high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)))

Cold cost: 4 (final)
Set in insn 801 is invariant (47), cost 4, depends on 
(lo_sum:DI (reg/f:DI 983)
    (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))

Cold cost: 4 (final)
(set (reg/f:DI 982)
    (lo_sum:DI (reg/f:DI 983)
        (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)))

Cold cost: 4 (final)
Set in insn 802 is invariant (48), cost 4, depends on 47
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 803 is invariant (49), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 984)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 804 is invariant (50), cost 4, depends on 49
Set in insn 805 is invariant (51), cost 0, depends on 48
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 806 is invariant (52), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 182 is invariant (53), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 973)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 774 is invariant (54), cost 4, depends on 41
(high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))

Cold cost: 4 (final)
(set (reg/f:DI 976)
    (high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)))

Cold cost: 4 (final)
Set in insn 775 is invariant (55), cost 4, depends on 
(lo_sum:DI (reg/f:DI 976)
    (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))

Cold cost: 4 (final)
(set (reg/f:DI 975)
    (lo_sum:DI (reg/f:DI 976)
        (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)))

Cold cost: 4 (final)
Set in insn 776 is invariant (56), cost 4, depends on 55
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 777 is invariant (57), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 977)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 778 is invariant (58), cost 4, depends on 57
Set in insn 780 is invariant (59), cost 0, depends on 56
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 781 is invariant (60), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 181 is invariant (61), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))

Cold cost: 4 (final)
(set (reg/f:DI 969)
    (high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)))

Cold cost: 4 (final)
Set in insn 753 is invariant (62), cost 4, depends on 
(lo_sum:DI (reg/f:DI 969)
    (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))

Cold cost: 4 (final)
(set (reg/f:DI 968)
    (lo_sum:DI (reg/f:DI 969)
        (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)))

Cold cost: 4 (final)
Set in insn 754 is invariant (63), cost 4, depends on 62
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 755 is invariant (64), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 970)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 756 is invariant (65), cost 4, depends on 64
Set in insn 757 is invariant (66), cost 0, depends on 63
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 758 is invariant (67), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 180 is invariant (68), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 1855)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 650 is invariant (69), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 940)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 651 is invariant (70), cost 4, depends on 69
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 652 is invariant (71), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 656 is invariant (72), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 942)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 657 is invariant (73), cost 4, depends on 72
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 956)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 703 is invariant (74), cost 4, depends on 72
(high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))

Cold cost: 4 (final)
(set (reg/f:DI 960)
    (high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)))

Cold cost: 4 (final)
Set in insn 713 is invariant (75), cost 4, depends on 
(lo_sum:DI (reg/f:DI 960)
    (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))

Cold cost: 4 (final)
(set (reg/f:DI 959)
    (lo_sum:DI (reg/f:DI 960)
        (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)))

Cold cost: 4 (final)
Set in insn 714 is invariant (76), cost 4, depends on 75
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 715 is invariant (77), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 961)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 716 is invariant (78), cost 4, depends on 77
Set in insn 717 is invariant (79), cost 0, depends on 76
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 718 is invariant (80), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 179 is invariant (81), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 950)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 686 is invariant (82), cost 4, depends on 69
(high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))

Cold cost: 4 (final)
(set (reg/f:DI 953)
    (high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)))

Cold cost: 4 (final)
Set in insn 687 is invariant (83), cost 4, depends on 
(lo_sum:DI (reg/f:DI 953)
    (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))

Cold cost: 4 (final)
(set (reg/f:DI 952)
    (lo_sum:DI (reg/f:DI 953)
        (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)))

Cold cost: 4 (final)
Set in insn 688 is invariant (84), cost 4, depends on 83
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 689 is invariant (85), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 954)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 690 is invariant (86), cost 4, depends on 85
Set in insn 692 is invariant (87), cost 0, depends on 84
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 693 is invariant (88), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 178 is invariant (89), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))

Cold cost: 4 (final)
(set (reg/f:DI 946)
    (high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)))

Cold cost: 4 (final)
Set in insn 665 is invariant (90), cost 4, depends on 
(lo_sum:DI (reg/f:DI 946)
    (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))

Cold cost: 4 (final)
(set (reg/f:DI 945)
    (lo_sum:DI (reg/f:DI 946)
        (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)))

Cold cost: 4 (final)
Set in insn 666 is invariant (91), cost 4, depends on 90
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 667 is invariant (92), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 947)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 668 is invariant (93), cost 4, depends on 92
Set in insn 669 is invariant (94), cost 0, depends on 91
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 670 is invariant (95), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 177 is invariant (96), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 1855)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 562 is invariant (97), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 917)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 563 is invariant (98), cost 4, depends on 97
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 564 is invariant (99), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 568 is invariant (100), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 919)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 569 is invariant (101), cost 4, depends on 100
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 933)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 615 is invariant (102), cost 4, depends on 100
(high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))

Cold cost: 4 (final)
(set (reg/f:DI 937)
    (high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)))

Cold cost: 4 (final)
Set in insn 625 is invariant (103), cost 4, depends on 
(lo_sum:DI (reg/f:DI 937)
    (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))

Cold cost: 4 (final)
(set (reg/f:DI 936)
    (lo_sum:DI (reg/f:DI 937)
        (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)))

Cold cost: 4 (final)
Set in insn 626 is invariant (104), cost 4, depends on 103
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 627 is invariant (105), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 938)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 628 is invariant (106), cost 4, depends on 105
Set in insn 629 is invariant (107), cost 0, depends on 104
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 630 is invariant (108), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 176 is invariant (109), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1855)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 927)
    (lo_sum:DI (reg/f:DI 1855)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 598 is invariant (110), cost 4, depends on 97
(high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))

Cold cost: 4 (final)
(set (reg/f:DI 930)
    (high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)))

Cold cost: 4 (final)
Set in insn 599 is invariant (111), cost 4, depends on 
(lo_sum:DI (reg/f:DI 930)
    (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))

Cold cost: 4 (final)
(set (reg/f:DI 929)
    (lo_sum:DI (reg/f:DI 930)
        (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)))

Cold cost: 4 (final)
Set in insn 600 is invariant (112), cost 4, depends on 111
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 601 is invariant (113), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 931)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 602 is invariant (114), cost 4, depends on 113
Set in insn 604 is invariant (115), cost 0, depends on 112
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 605 is invariant (116), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 175 is invariant (117), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))

Cold cost: 4 (final)
(set (reg/f:DI 923)
    (high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)))

Cold cost: 4 (final)
Set in insn 577 is invariant (118), cost 4, depends on 
(lo_sum:DI (reg/f:DI 923)
    (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))

Cold cost: 4 (final)
(set (reg/f:DI 922)
    (lo_sum:DI (reg/f:DI 923)
        (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)))

Cold cost: 4 (final)
Set in insn 578 is invariant (119), cost 4, depends on 118
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 579 is invariant (120), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 924)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 580 is invariant (121), cost 4, depends on 120
Set in insn 581 is invariant (122), cost 0, depends on 119
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 582 is invariant (123), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 174 is invariant (124), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 900)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 503 is invariant (125), cost 4, depends on 
(lo_sum:DI (reg/f:DI 900)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 899)
    (lo_sum:DI (reg/f:DI 900)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 504 is invariant (126), cost 4, depends on 125
(const_int 10 [0xa])

Cold cost: 4 (final)
Set in insn 505 is invariant (127), cost 4, depends on 
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 506 is invariant (128), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 510 is invariant (129), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 901)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 511 is invariant (130), cost 4, depends on 129
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 910)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 537 is invariant (131), cost 4, depends on 129
(high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))

Cold cost: 4 (final)
(set (reg/f:DI 914)
    (high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)))

Cold cost: 4 (final)
Set in insn 544 is invariant (132), cost 4, depends on 
(lo_sum:DI (reg/f:DI 914)
    (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))

Cold cost: 4 (final)
(set (reg/f:DI 913)
    (lo_sum:DI (reg/f:DI 914)
        (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)))

Cold cost: 4 (final)
Set in insn 545 is invariant (133), cost 4, depends on 132
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 546 is invariant (134), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 915)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 547 is invariant (135), cost 4, depends on 134
Set in insn 548 is invariant (136), cost 0, depends on 133
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 549 is invariant (137), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 187 is invariant (138), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))

Cold cost: 4 (final)
(set (reg/f:DI 907)
    (high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)))

Cold cost: 4 (final)
Set in insn 521 is invariant (139), cost 4, depends on 
(lo_sum:DI (reg/f:DI 907)
    (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))

Cold cost: 4 (final)
(set (reg/f:DI 906)
    (lo_sum:DI (reg/f:DI 907)
        (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)))

Cold cost: 4 (final)
Set in insn 522 is invariant (140), cost 4, depends on 139
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 523 is invariant (141), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 908)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 524 is invariant (142), cost 4, depends on 141
Set in insn 526 is invariant (143), cost 0, depends on 140
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 527 is invariant (144), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 173 is invariant (145), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 882)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 444 is invariant (146), cost 4, depends on 
(lo_sum:DI (reg/f:DI 882)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 881)
    (lo_sum:DI (reg/f:DI 882)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 445 is invariant (147), cost 4, depends on 146
(const_int 10 [0xa])

Cold cost: 4 (final)
Set in insn 446 is invariant (148), cost 4, depends on 
(const_int 0 [0])

Cold cost: 0 (final)
Set in insn 447 is invariant (149), cost 0, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 1854)
    (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 451 is invariant (150), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 883)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 452 is invariant (151), cost 4, depends on 150
(lo_sum:DI (reg/f:DI 1854)
    (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 892)
    (lo_sum:DI (reg/f:DI 1854)
        (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 478 is invariant (152), cost 4, depends on 150
(high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))

Cold cost: 4 (final)
(set (reg/f:DI 896)
    (high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)))

Cold cost: 4 (final)
Set in insn 485 is invariant (153), cost 4, depends on 
(lo_sum:DI (reg/f:DI 896)
    (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))

Cold cost: 4 (final)
(set (reg/f:DI 895)
    (lo_sum:DI (reg/f:DI 896)
        (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)))

Cold cost: 4 (final)
Set in insn 486 is invariant (154), cost 4, depends on 153
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 487 is invariant (155), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 897)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 488 is invariant (156), cost 4, depends on 155
Set in insn 489 is invariant (157), cost 0, depends on 154
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 490 is invariant (158), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 188 is invariant (159), cost 4, depends on 
(high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))

Cold cost: 4 (final)
(set (reg/f:DI 889)
    (high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)))

Cold cost: 4 (final)
Set in insn 462 is invariant (160), cost 4, depends on 
(lo_sum:DI (reg/f:DI 889)
    (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))

Cold cost: 4 (final)
(set (reg/f:DI 888)
    (lo_sum:DI (reg/f:DI 889)
        (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)))

Cold cost: 4 (final)
Set in insn 463 is invariant (161), cost 4, depends on 160
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 464 is invariant (162), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 890)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 465 is invariant (163), cost 4, depends on 162
Set in insn 467 is invariant (164), cost 0, depends on 161
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 468 is invariant (165), cost 4, depends on 
(const_int -1 [0xffffffffffffffff])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int -1 [0xffffffffffffffff]))

Cold cost: 4 (final)
Set in insn 172 is invariant (166), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 873)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 412 is invariant (167), cost 4, depends on 
(lo_sum:DI (reg/f:DI 873)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 872)
    (lo_sum:DI (reg/f:DI 873)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 413 is invariant (168), cost 4, depends on 167
(high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 876)
    (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 418 is invariant (169), cost 4, depends on 
(lo_sum:DI (reg/f:DI 876)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 875)
    (lo_sum:DI (reg/f:DI 876)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 419 is invariant (170), cost 4, depends on 169
(high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))

Cold cost: 4 (final)
(set (reg/f:DI 878)
    (high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)))

Cold cost: 4 (final)
Set in insn 426 is invariant (171), cost 4, depends on 
(lo_sum:DI (reg/f:DI 878)
    (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))

Cold cost: 4 (final)
(set (reg/f:DI 877)
    (lo_sum:DI (reg/f:DI 878)
        (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)))

Cold cost: 4 (final)
Set in insn 427 is invariant (172), cost 4, depends on 171
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 428 is invariant (173), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 879)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 429 is invariant (174), cost 4, depends on 173
Set in insn 430 is invariant (175), cost 0, depends on 172
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 431 is invariant (176), cost 4, depends on 
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 189 is invariant (177), cost 4, depends on 
(high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 864)
    (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 383 is invariant (178), cost 4, depends on 
(lo_sum:DI (reg/f:DI 864)
    (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))

Cold cost: 4 (final)
(set (reg/f:DI 863)
    (lo_sum:DI (reg/f:DI 864)
        (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)))

Cold cost: 4 (final)
Set in insn 384 is invariant (179), cost 4, depends on 178
(high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 867)
    (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 389 is invariant (180), cost 4, depends on 
(lo_sum:DI (reg/f:DI 867)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 866)
    (lo_sum:DI (reg/f:DI 867)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 390 is invariant (181), cost 4, depends on 180
(high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))

Cold cost: 4 (final)
(set (reg/f:DI 869)
    (high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)))

Cold cost: 4 (final)
Set in insn 397 is invariant (182), cost 4, depends on 
(lo_sum:DI (reg/f:DI 869)
    (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))

Cold cost: 4 (final)
(set (reg/f:DI 868)
    (lo_sum:DI (reg/f:DI 869)
        (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)))

Cold cost: 4 (final)
Set in insn 398 is invariant (183), cost 4, depends on 182
(high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 1856)
    (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 399 is invariant (184), cost 4, depends on 
(lo_sum:DI (reg/f:DI 1856)
    (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))

Cold cost: 4 (final)
(set (reg/f:DI 870)
    (lo_sum:DI (reg/f:DI 1856)
        (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)))

Cold cost: 4 (final)
Set in insn 400 is invariant (185), cost 4, depends on 184
Set in insn 401 is invariant (186), cost 0, depends on 183
(const_int 1 [0x1])

Cold cost: 4 (final)
Set in insn 402 is invariant (187), cost 4, depends on 
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg/v:SI 360 [ err ])
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 190 is invariant (188), cost 4, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 861)
    (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 375 is invariant (189), cost 4, depends on 
(lo_sum:DI (reg/f:DI 861)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 860)
    (lo_sum:DI (reg/f:DI 861)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 376 is invariant (190), cost 4, depends on 189
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:SI 862)
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 377 is invariant (191), cost 4, depends on 
(high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 858)
    (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 367 is invariant (192), cost 4, depends on 
(lo_sum:DI (reg/f:DI 858)
    (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))

Cold cost: 4 (final)
(set (reg/f:DI 857)
    (lo_sum:DI (reg/f:DI 858)
        (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])))

Cold cost: 4 (final)
Set in insn 368 is invariant (193), cost 4, depends on 192
(const_int 1 [0x1])

Cold cost: 4 (final)
(set (reg:SI 859)
    (const_int 1 [0x1]))

Cold cost: 4 (final)
Set in insn 369 is invariant (194), cost 4, depends on 
Invariant 18 is equivalent to invariant 17.
Invariant 21 is equivalent to invariant 6.
Invariant 22 is equivalent to invariant 7.
Invariant 24 is equivalent to invariant 9.
Invariant 25 is equivalent to invariant 10.
Invariant 26 is equivalent to invariant 14.
Invariant 29 is equivalent to invariant 6.
Invariant 30 is equivalent to invariant 7.
Invariant 32 is equivalent to invariant 9.
Invariant 33 is equivalent to invariant 10.
Invariant 36 is equivalent to invariant 6.
Invariant 37 is equivalent to invariant 7.
Invariant 39 is equivalent to invariant 9.
Invariant 40 is equivalent to invariant 10.
Invariant 41 is equivalent to invariant 13.
Invariant 42 is equivalent to invariant 14.
Invariant 43 is equivalent to invariant 15.
Invariant 44 is equivalent to invariant 16.
Invariant 45 is equivalent to invariant 17.
Invariant 46 is equivalent to invariant 17.
Invariant 49 is equivalent to invariant 6.
Invariant 50 is equivalent to invariant 7.
Invariant 52 is equivalent to invariant 9.
Invariant 53 is equivalent to invariant 10.
Invariant 54 is equivalent to invariant 14.
Invariant 57 is equivalent to invariant 6.
Invariant 58 is equivalent to invariant 7.
Invariant 60 is equivalent to invariant 9.
Invariant 61 is equivalent to invariant 10.
Invariant 64 is equivalent to invariant 6.
Invariant 65 is equivalent to invariant 7.
Invariant 67 is equivalent to invariant 9.
Invariant 68 is equivalent to invariant 10.
Invariant 69 is equivalent to invariant 13.
Invariant 70 is equivalent to invariant 14.
Invariant 71 is equivalent to invariant 15.
Invariant 72 is equivalent to invariant 16.
Invariant 73 is equivalent to invariant 17.
Invariant 74 is equivalent to invariant 17.
Invariant 77 is equivalent to invariant 6.
Invariant 78 is equivalent to invariant 7.
Invariant 80 is equivalent to invariant 9.
Invariant 81 is equivalent to invariant 10.
Invariant 82 is equivalent to invariant 14.
Invariant 85 is equivalent to invariant 6.
Invariant 86 is equivalent to invariant 7.
Invariant 88 is equivalent to invariant 9.
Invariant 89 is equivalent to invariant 10.
Invariant 92 is equivalent to invariant 6.
Invariant 93 is equivalent to invariant 7.
Invariant 95 is equivalent to invariant 9.
Invariant 96 is equivalent to invariant 10.
Invariant 97 is equivalent to invariant 13.
Invariant 98 is equivalent to invariant 14.
Invariant 99 is equivalent to invariant 15.
Invariant 100 is equivalent to invariant 16.
Invariant 101 is equivalent to invariant 17.
Invariant 102 is equivalent to invariant 17.
Invariant 105 is equivalent to invariant 6.
Invariant 106 is equivalent to invariant 7.
Invariant 108 is equivalent to invariant 9.
Invariant 109 is equivalent to invariant 10.
Invariant 110 is equivalent to invariant 14.
Invariant 113 is equivalent to invariant 6.
Invariant 114 is equivalent to invariant 7.
Invariant 116 is equivalent to invariant 9.
Invariant 117 is equivalent to invariant 10.
Invariant 120 is equivalent to invariant 6.
Invariant 121 is equivalent to invariant 7.
Invariant 123 is equivalent to invariant 9.
Invariant 124 is equivalent to invariant 10.
Invariant 125 is equivalent to invariant 13.
Invariant 126 is equivalent to invariant 14.
Invariant 128 is equivalent to invariant 15.
Invariant 129 is equivalent to invariant 16.
Invariant 130 is equivalent to invariant 17.
Invariant 131 is equivalent to invariant 17.
Invariant 134 is equivalent to invariant 6.
Invariant 135 is equivalent to invariant 7.
Invariant 137 is equivalent to invariant 9.
Invariant 138 is equivalent to invariant 10.
Invariant 141 is equivalent to invariant 6.
Invariant 142 is equivalent to invariant 7.
Invariant 144 is equivalent to invariant 9.
Invariant 145 is equivalent to invariant 10.
Invariant 146 is equivalent to invariant 13.
Invariant 147 is equivalent to invariant 14.
Invariant 148 is equivalent to invariant 127.
Invariant 149 is equivalent to invariant 15.
Invariant 150 is equivalent to invariant 16.
Invariant 151 is equivalent to invariant 17.
Invariant 152 is equivalent to invariant 17.
Invariant 155 is equivalent to invariant 6.
Invariant 156 is equivalent to invariant 7.
Invariant 158 is equivalent to invariant 9.
Invariant 159 is equivalent to invariant 10.
Invariant 162 is equivalent to invariant 6.
Invariant 163 is equivalent to invariant 7.
Invariant 165 is equivalent to invariant 9.
Invariant 166 is equivalent to invariant 10.
Invariant 167 is equivalent to invariant 13.
Invariant 168 is equivalent to invariant 14.
Invariant 173 is equivalent to invariant 6.
Invariant 174 is equivalent to invariant 7.
Invariant 176 is equivalent to invariant 9.
Invariant 177 is equivalent to invariant 9.
Invariant 178 is equivalent to invariant 13.
Invariant 179 is equivalent to invariant 14.
Invariant 180 is equivalent to invariant 169.
Invariant 181 is equivalent to invariant 170.
Invariant 184 is equivalent to invariant 6.
Invariant 185 is equivalent to invariant 7.
Invariant 187 is equivalent to invariant 9.
Invariant 188 is equivalent to invariant 9.
Invariant 189 is equivalent to invariant 169.
Invariant 190 is equivalent to invariant 170.
Invariant 191 is equivalent to invariant 9.
Invariant 192 is equivalent to invariant 169.
Invariant 193 is equivalent to invariant 170.
Invariant 194 is equivalent to invariant 9.
Decided to move invariant 5 -- gain 8
Decided to move dependent invariant 4
Decided to move invariant 12 -- gain 8
Decided to move dependent invariant 11
Decided to move invariant 0 -- gain 4
Invariant 0 moved without introducing a new temporary register
changing bb of uid 932
  from 55 to 6
deferring rescan insn with uid = 913.
deferring rescan insn with uid = 914.
deferring rescan insn with uid = 4410.
changing bb of uid 913
  from 53 to 6
deferring rescan insn with uid = 914.
deferring rescan insn with uid = 917.
deferring rescan insn with uid = 4411.
changing bb of uid 914
  from 53 to 6
deferring rescan insn with uid = 321.
deferring rescan insn with uid = 322.
deferring rescan insn with uid = 4412.
changing bb of uid 321
  from 8 to 6
deferring rescan insn with uid = 322.
deferring rescan insn with uid = 323.
deferring rescan insn with uid = 4413.
changing bb of uid 322
  from 8 to 6
starting the processing of deferred insns
rescanning insn with uid = 321.
rescanning insn with uid = 322.
rescanning insn with uid = 323.
rescanning insn with uid = 913.
rescanning insn with uid = 914.
rescanning insn with uid = 917.
rescanning insn with uid = 4410.
rescanning insn with uid = 4411.
rescanning insn with uid = 4412.
rescanning insn with uid = 4413.
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 3[x3] 4[x4] 5[x5] 16[x16] 17[x17] 30[x30] 31[sp] 32[v0] 33[v1] 34[v2] 35[v3] 36[v4] 37[v5] 66[cc]
;;  ref usage 	r0={240d,136u} r1={205d,70u} r2={193d,57u} r3={160d,24u} r4={138d,2u} r5={137d,1u} r6={136d} r7={136d} r8={136d} r9={135d} r10={135d} r11={135d} r12={135d} r13={135d} r14={135d} r15={135d} r16={270d} r17={270d} r18={136d} r29={1d,300u} r30={136d} r31={1d,435u} r32={149d,33u} r33={146d,10u} r34={140d,4u} r35={139d,3u} r36={137d,1u} r37={137d,1u} r38={136d} r39={136d} r48={135d} r49={135d} r50={135d} r51={135d} r52={135d} r53={135d} r54={135d} r55={135d} r56={135d} r57={135d} r58={135d} r59={135d} r60={135d} r61={135d} r62={135d} r63={135d} r64={1d,372u,9e} r65={1d,299u} r66={310d,169u} r240={3d,1u} r243={1d,3u} r244={1d,2u} r245={1d,11u} r246={1d,3u} r259={1d,1u} r261={1d,5u,1e} r262={1d,7u} r263={1d,1u} r266={2d,4u} r269={1d,4u} r283={1d,3u} r285={1d,1u} r286={1d,1u} r287={2d,6u} r289={1d,1u} r290={1d,4u} r291={1d,6u} r293={1d,1u} r294={1d,3u} r301={1d,2u} r303={1d,1u} r309={1d,2u} r311={1d,1u} r317={1d,2u} r319={1d,1u} r320={5d,14u} r328={5d,11u} r329={1d,2u} r331={1d,1u} r339={1d,2u} r341={1d,1u} r349={1d,2u} r351={1d,1u} r360={20d,16u} r386={1d,2u} r397={1d,2u,1e} r400={1d,2u} r406={1d,2u} r408={1d,2u} r410={1d,2u} r414={1d,2u} r416={2d,9u} r421={1d,4u} r424={1d,4u} r425={1d,2u} r427={1d,2u} r430={1d,2u} r431={1d,3u} r432={1d,2u} r433={1d,3u} r434={1d,2u} r435={2d,7u} r436={2d,9u} r438={1d,6u} r441={1d,6u} r442={4d,8u} r443={3d,9u} r444={1d,2u} r447={1d,3u} r456={2d,2u} r457={1d,4u} r460={2d,6u} r461={2d,2u} r463={2d,3u,2e} r464={2d,7u,1e} r468={4d,8u,2e} r469={3d,10u,3e} r473={2d,4u,1e} r476={2d,7u,2e} r478={1d,3u} r480={1d,3u} r482={1d,1u} r484={1d,1u} r485={1d,3u} r487={1d,1u} r489={1d,1u} r490={1d,3u} r492={1d,1u} r494={1d,1u} r496={1d,5u} r499={1d,3u} r501={1d,1u} r503={1d,1u} r504={1d,3u} r506={1d,1u} r508={1d,1u} r509={1d,3u} r511={1d,1u} r513={1d,1u} r515={1d,3u} r519={1d,2u} r520={1d,4u} r521={1d,4u} r523={1d,3u} r525={1d,1u} r527={1d,1u} r528={1d,3u} r530={1d,1u} r532={1d,1u} r533={1d,3u} r535={1d,1u} r537={1d,1u} r539={1d,4u} r540={1d,5u} r542={1d,4u} r544={1d,3u} r546={1d,1u} r548={1d,1u} r549={1d,3u} r551={1d,1u} r553={1d,1u} r554={1d,3u} r556={1d,1u} r558={1d,1u} r560={1d,3u} r566={1d,2u} r567={1d,1u} r571={1d,3u} r572={1d,5u} r575={2d,5u} r576={2d,3u} r578={2d,4u} r581={2d,4u} r582={1d,2u} r583={1d,2u} r590={1d,1u} r592={2d,4u} r596={2d,8u} r599={1d,2u} r600={1d,3u} r603={1d,3u} r604={1d,1u} r606={1d,4u} r608={1d,1u} r609={2d,8u} r610={4d,6u} r611={1d,2u} r613={1d,4u} r618={1d,3u} r623={1d,12u} r624={1d,12u} r625={1d,2u} r626={1d,1u} r638={1d,2u} r640={1d,2u} r643={1d,6u,1e} r646={1d,2u} r647={1d,17u} r653={1d,2u} r659={1d,1u} r666={1d,4u} r668={1d,15u} r672={2d,4u} r674={1d,8u} r675={1d,9u} r679={1d,2u} r688={1d,4u} r690={1d,2u} r692={1d,4u} r694={1d,2u} r695={4d,8u} r708={2d,4u} r710={1d,3u} r712={3d,3u} r714={4d,8u,2e} r715={15d,32u} r716={7d,2u} r720={1d,1u} r727={1d,2u} r731={1d,2u} r732={1d,2u} r733={2d,5u} r734={1d,5u} r735={1d,2u} r737={1d,2u} r738={2d,4u} r739={1d,3u} r741={1d,2u} r742={2d,8u} r745={2d,11u} r746={1d,14u} r747={3d,7u} r750={4d,13u,3e} r751={3d,11u,3e} r752={1d,3u} r753={1d,2u} r754={1d,2u} r763={1d,2u} r770={2d,2u} r775={2d,10u,2e} r776={2d,3u} r777={2d,6u} r782={1d,1u} r785={2d,6u} r788={2d,7u} r789={2d,9u,2e} r790={2d,8u,2e} r791={2d,4u} r795={1d,1u} r799={1d,3u} r800={1d,1u} r805={2d,1u} r806={5d,6u} r809={2d,4u} r811={1d,8u} r826={4d,8u} r828={3d,1u} r829={5d,1u} r830={1d,2u} r831={3d,2u} r837={1d,3u} r838={1d,2u} r839={1d,1u} r840={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,2u} r845={1d} r846={1d} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,2u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,2u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,2u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r881={1d,2u} r882={1d,1u} r883={1d,1u} r885={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r892={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r899={1d,2u} r900={1d,1u} r901={1d,1u} r903={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r910={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r917={1d,1u} r919={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r926={1d,1u} r927={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r933={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r940={1d,1u} r942={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r949={1d,1u} r950={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r956={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r963={1d,1u} r965={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r972={1d,1u} r973={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r979={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r986={1d,1u} r988={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r995={1d,1u} r996={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1002={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1009={1d} r1010={1d} r1011={1d,1u} r1013={1d,1u} r1015={1d,2u} r1016={1d,1u} r1017={1d,1u} r1018={1d,4u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1029={1d,1u,1e} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,4u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1044={1d,1u,1e} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,4u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1059={1d,1u,1e} r1060={1d,1u} r1061={1d,1u} r1062={1d,1u} r1063={1d,4u} r1069={1d,1u} r1070={1d,1u} r1071={1d,1u} r1074={1d,1u,1e} r1075={1d,1u} r1076={1d,1u} r1077={1d,1u} r1078={1d,1u} r1079={1d,1u} r1081={1d,1u} r1082={1d,4u} r1086={1d,1u} r1089={1d,1u} r1092={1d,1u} r1093={1d,3u} r1099={1d,1u} r1100={1d,1u} r1102={1d,1u} r1103={1d,8u} r1105={1d,3u,1e} r1108={1d,2u} r1111={1d,2u} r1115={1d,4u} r1127={1d,1u} r1128={1d,1u,1e} r1129={1d,1u} r1130={1d,1u} r1133={1d,1u,1e} r1135={1d,1u} r1136={1d,1u} r1138={1d,2u} r1139={1d,1u} r1142={1d,1u} r1143={1d,6u} r1145={1d,1u} r1149={1d,4u} r1150={1d,1u} r1151={1d,1u} r1164={1d,1u} r1165={1d,1u} r1170={1d,4u} r1180={1d,1u} r1182={1d,1u} r1183={1d,1u} r1184={1d,1u} r1185={1d,1u} r1186={1d,1u} r1187={1d,1u} r1188={1d,1u} r1189={1d,1u} r1190={1d,1u} r1191={1d,1u} r1192={1d,1u} r1193={1d,1u} r1198={1d,1u} r1199={1d,1u} r1200={1d,1u} r1203={1d,9u} r1205={1d,1u} r1208={1d,1u} r1211={1d,1u} r1213={1d,3u} r1221={1d,1u} r1228={1d,1u} r1232={1d,3u,1e} r1235={1d,1u} r1236={1d,1u} r1237={1d,1u} r1238={1d,1u} r1239={1d,1u} r1242={1d,1u} r1245={1d,1u} r1248={1d,1u,1e} r1249={1d,2u} r1251={1d,2u} r1253={1d,1u,1e} r1256={1d,2u} r1259={1d,2u,1e} r1261={1d,1u} r1262={1d,1u} r1263={1d,1u} r1264={1d,2u,1e} r1266={1d,1u} r1267={1d,1u} r1268={1d,1u} r1269={1d,1u} r1270={1d,1u} r1271={1d} r1272={1d} r1273={1d,2u} r1274={1d,3u,2e} r1275={1d} r1276={1d,2u} r1277={1d,1u} r1278={1d,1u} r1279={1d,1u} r1280={1d,1u} r1282={1d,1u} r1283={1d,1u} r1285={1d,3u,2e} r1286={1d} r1287={1d,2u} r1288={1d} r1289={1d,1u} r1290={1d,1u} r1291={1d,1u} r1293={1d,1u} r1294={1d,1u} r1295={1d} r1296={1d,1u} r1297={1d,1u} r1298={1d,1u} r1299={1d,1u} r1300={1d,1u} r1301={1d,1u} r1302={1d,1u} r1303={1d,4u} r1304={1d,3u,2e} r1305={1d,2u} r1306={1d,6u} r1307={1d,1u} r1308={1d,1u} r1309={1d,1u} r1311={1d,1u} r1312={1d,1u} r1313={1d,4u} r1314={1d,3u,2e} r1315={1d} r1316={1d,2u} r1317={1d} r1318={1d,1u} r1319={1d,1u} r1320={1d,1u} r1322={1d,1u} r1323={1d,1u} r1324={1d} r1325={1d,1u} r1326={1d} r1327={1d,3u,2e} r1328={1d,2u} r1330={1d,1u} r1331={1d,1u} r1332={1d,1u} r1334={1d,1u} r1335={1d,1u} r1336={1d} r1337={1d,1u} r1338={1d} r1339={1d,1u} r1340={1d,1u} r1341={1d} r1342={1d,1u} r1343={1d,1u,1e} r1344={1d} r1345={1d,1u} r1346={1d,1u} r1348={1d,1u} r1349={1d,1u} r1350={1d,1u} r1351={1d,1u} r1352={1d,1u} r1353={1d} r1354={1d,1u} r1355={1d,1u} r1356={1d,1u} r1357={1d,1u} r1358={1d,1u} r1359={1d,1u} r1360={1d,1u} r1361={1d,1u} r1362={1d,1u} r1363={1d,1u} r1364={1d} r1365={1d,1u} r1366={1d,1u} r1367={1d,1u} r1368={1d,1u} r1369={1d,1u} r1370={1d,1u} r1371={1d,1u} r1372={1d,1u} r1373={1d,1u} r1374={1d,1u} r1375={1d,1u} r1376={1d,1u} r1377={1d,1u} r1378={1d,1u} r1379={1d,1u} r1380={1d,1u} r1381={1d,1u} r1382={1d,1u} r1383={1d,1u} r1384={1d,1u} r1385={1d,1u} r1386={1d,1u} r1387={1d,1u} r1388={1d,1u} r1389={1d,1u} r1390={1d,1u} r1391={1d,1u} r1392={1d,1u} r1393={1d,1u} r1394={1d,1u} r1395={1d,1u} r1396={1d,1u} r1397={1d,1u} r1398={1d,1u} r1402={1d,1u} r1403={1d,1u} r1404={1d,1u} r1407={1d,1u} r1408={1d,1u} r1411={1d,1u} r1414={1d,1u} r1415={1d,1u} r1418={1d,1u} r1419={1d,1u} r1420={1d,1u} r1423={1d,1u} r1425={1d,3u} r1433={1d,1u} r1434={1d,1u} r1435={1d,1u} r1438={1d,1u} r1439={1d,1u} r1441={1d,1u} r1442={1d,3u} r1446={1d,1u} r1447={1d,2u} r1451={1d} r1453={1d,1u} r1455={1d,4u} r1465={1d} r1466={1d,4u} r1476={1d,2u,1e} r1477={1d} r1480={1d,1u,1e} r1481={1d} r1482={1d,1u} r1485={1d,4u} r1495={1d,1u} r1496={1d} r1497={1d,2u,1e} r1500={1d,1u,1e} r1502={1d,1u} r1504={1d,2u,1e} r1508={1d,1u,1e} r1510={1d,1u} r1513={1d,4u} r1523={1d,1u} r1525={1d,2u,1e} r1528={1d,1u,1e} r1530={1d,1u} r1532={1d,1u} r1533={1d,1u} r1534={1d,1u} r1535={1d} r1536={1d,1u} r1537={1d,1u} r1538={1d} r1539={1d,1u} r1540={1d,1u} r1541={1d,1u} r1542={1d,1u} r1543={1d,1u} r1544={1d,1u} r1545={1d} r1548={1d} r1549={1d,1u} r1550={1d,4u} r1560={1d,1u} r1561={1d,1u} r1564={1d,1u} r1566={1d,1u} r1567={1d,1u} r1569={1d,1u} r1570={1d,4u} r1580={1d,1u} r1582={1d,1u} r1583={1d,4u} r1585={1d,6u} r1605={1d,1u} r1606={1d,1u} r1607={1d,1u} r1609={1d,1u} r1613={1d,1u} r1614={1d,1u} r1615={1d,1u} r1616={1d,15u} r1622={1d} r1623={1d,1u} r1624={1d,1u} r1625={1d,1u} r1626={1d,1u} r1627={1d,1u} r1628={1d,1u} r1629={1d,1u} r1630={1d,1u} r1633={1d,1u} r1634={1d} r1635={1d} r1636={1d,1u} r1638={1d,1u} r1639={1d,3u} r1641={1d} r1644={1d} r1645={1d,1u} r1646={1d,1u} r1647={1d,1u} r1648={1d,1u} r1649={1d,1u} r1652={1d,1u} r1653={1d,1u} r1654={1d,1u} r1655={1d} r1656={1d,1u} r1657={1d,1u} r1660={1d,1u} r1661={1d,1u} r1662={1d,1u} r1663={1d,1u} r1664={1d,1u} r1665={1d,1u} r1668={1d,1u} r1669={1d,1u} r1670={1d,1u} r1671={1d,2u} r1673={1d,1u} r1674={1d,1u} r1675={1d,1u} r1678={1d,1u} r1679={1d,1u} r1680={1d,1u} r1683={1d,1u} r1684={1d} r1687={1d} r1688={1d,1u} r1694={1d,1u} r1695={1d,1u} r1696={1d,1u} r1697={1d,1u} r1698={1d,2u} r1699={1d,1u} r1700={1d,1u} r1701={1d,1u} r1702={1d,1u} r1703={1d,1u} r1704={1d,1u} r1705={1d,1u} r1706={1d,1u} r1707={1d,1u} r1708={1d,1u} r1709={1d,1u} r1710={2d,3u} r1711={1d,1u} r1716={1d,1u} r1717={1d,1u} r1719={1d,1u} r1720={1d,1u} r1722={1d,1u,1e} r1724={1d,1u} r1725={1d,1u} r1726={1d,1u} r1727={1d,1u} r1728={1d,1u} r1730={1d,1u} r1731={1d,1u} r1732={1d,1u} r1733={1d,1u} r1735={1d,1u} r1736={1d,1u} r1737={1d,1u} r1738={1d,1u} r1739={1d,1u} r1741={1d,1u} r1742={1d,1u} r1743={1d,1u} r1744={1d,1u} r1746={1d,1u} r1747={1d,1u} r1748={1d,1u} r1749={1d,1u} r1750={1d,1u} r1751={1d,1u} r1752={1d,1u} r1754={1d,1u} r1755={1d,1u} r1756={1d,1u} r1757={1d,1u} r1758={1d,1u} r1759={1d,1u} r1760={1d,1u} r1761={1d,1u} r1763={1d,1u} r1764={1d,1u} r1765={1d,1u} r1766={1d,1u} r1767={1d,1u} r1768={1d,1u} r1770={1d,1u} r1771={1d,1u} r1775={1d,1u} r1776={1d,1u} r1777={1d,1u} r1778={1d,1u} r1780={1d,1u} r1781={1d,1u} r1783={1d,1u} r1785={1d,1u} r1786={1d,1u} r1788={1d,1u} r1790={1d,1u} r1791={1d,1u} r1793={1d,1u} r1794={1d,1u} r1796={1d,1u} r1797={1d} r1798={1d} r1799={1d,1u} r1800={1d,1u} r1801={1d,1u} r1802={1d,1u} r1804={1d,1u} r1805={1d,1u} r1806={1d,2u} r1807={1d,1u} r1808={1d,1u} r1810={1d} r1812={1d,1u} r1813={1d,1u} r1814={1d,1u} r1816={1d,1u} r1817={1d} r1819={1d,1u} r1820={1d,1u} r1821={1d,1u} r1822={1d,1u} r1824={1d,1u} r1825={1d,1u} r1826={1d,1u} r1828={1d,1u} r1831={1d,1u} r1832={1d,1u} r1833={1d,1u} r1834={1d,1u} r1837={1d,1u} r1839={1d,1u} r1842={1d,1u} r1843={1d,2u} r1844={1d,1u} r1845={1d,1u} r1846={1d,1u} r1848={1d,1u} r1849={1d} r1851={1d,1u} r1852={1d,1u} r1853={1d,15u} r1854={13d,31u} r1855={4d,8u} r1856={29d,28u} r1857={1d,1u} r1858={1d,1u} r1859={3d,4u} r1860={3d,4u} r1861={1d,20u} r1862={1d,14u} r1863={1d,7u} r1864={1d,1u} r1865={1d} r1866={1d} r1867={1d,1u} r1868={1d} r1869={1d,2u} r1870={1d,2u} r1871={1d,2u} r1872={1d,2u} r1873={1d,2u} r1874={1d,4u} r1875={1d,6u} r1876={1d,2u} r1877={1d,2u} r1878={1d,2u} r1879={1d,4u} r1880={1d,3u} r1881={1d,9u} r1882={1d,3u} r1883={1d,2u} r1884={1d,2u} r1885={1d,2u} r1886={1d,2u} r1887={1d,1u} r1888={1d,3u} r1889={1d} r1890={1d} r1891={1d} r1892={1d,4u} r1893={1d,1u} r1894={1d,1u} r1895={1d,2u} r1896={1d,2u} r1897={1d,4u} r1898={1d,5u} r1899={1d,2u} r1900={1d,1u} r1901={1d,2u} r1902={1d,2u} r1903={1d,7u} r1904={1d,2u} r1905={1d,3u} r1906={1d,2u} r1907={1d,3u} r1908={1d,2u} r1909={1d,2u} r1910={1d,2u} r1911={1d,2u} 
;;    total ref usage 11676{7894d,3713u,69e} in 2743{2608 regular + 135 call} insns.
;; basic block 2, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(29){ }u1(31){ }u2(64){ }u3(65){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 837 838
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 66 [cc] 837 838
;; live  kill	
(note 287 0 169 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 169 287 170 2 (set (reg/v:SI 837 [ argc ])
        (reg:SI 0 x0 [ argc ])) graph500.c:58 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0 [ argc ])
        (nil)))
(insn 170 169 171 2 (set (reg/v/f:DI 838 [ argv ])
        (reg:DI 1 x1 [ argv ])) graph500.c:58 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ argv ])
        (nil)))
(note 171 170 289 2 NOTE_INSN_FUNCTION_BEG)
(insn 289 171 290 2 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 837 [ argc ])
            (const_int 1 [0x1]))) graph500.c:65 390 {*cmpsi}
     (nil))
(jump_insn 290 289 4256 2 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) graph500.c:65 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5248 (nil)))
 -> 294)
;;  succ:       4 [52.5%] 
;;              3 [47.5%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838

;; basic block 3, loop depth 0, count 0, freq 27
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [47.5%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1854
;; live  kill	
(note 4256 290 4197 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 4197 4256 294 3 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) -1
     (nil))
;;  succ:       74 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 4, loop depth 0, count 0, freq 30
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [52.5%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u8(29){ }u9(31){ }u10(64){ }u11(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 293 839 840
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838
;; live  gen 	 0 [x0] 66 [cc] 293 839 840
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 294 4197 295 4 11 "" [1 uses])
(note 295 294 296 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 296 295 297 4 (var_location:SI argc (reg/v:SI 837 [ argc ])) -1
     (nil))
(debug_insn 297 296 298 4 (var_location:DI argv (reg/v/f:DI 838 [ argv ])) -1
     (nil))
(debug_insn 298 297 299 4 (var_location:SI err (const_int 0 [0])) options.c:44 -1
     (nil))
(debug_insn 299 298 300 4 (var_location:SI nset (const_int 0 [0])) options.c:45 -1
     (nil))
(debug_insn 300 299 301 4 (var_location:SI whichset (const_int 0 [0])) options.c:46 -1
     (nil))
(insn 301 300 302 4 (set (reg/f:DI 840)
        (high:DI (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 48 {*movdi_aarch64}
     (nil))
(insn 302 301 303 4 (set (reg/f:DI 839)
        (lo_sum:DI (reg/f:DI 840)
            (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>))) options.c:48 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 840)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>)
            (nil))))
(insn 303 302 304 4 (set (reg:DI 0 x0)
        (reg/f:DI 839)) options.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 839)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x82]  <var_decl 0x7f3c5d82eab0 *.LC1>)
            (nil))))
(call_insn 304 303 305 4 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:48 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 305 304 306 4 (set (reg/f:DI 293 [ D.3800 ])
        (reg:DI 0 x0)) options.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 306 305 307 4 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 293 [ D.3800 ])
            (const_int 0 [0]))) options.c:48 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 293 [ D.3800 ])
        (nil)))
(jump_insn 307 306 308 4 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 313)
            (pc))) options.c:48 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 313)
;;  succ:       5 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838

;; basic block 5, loop depth 0, count 0, freq 25
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [85.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(29){ }u22(31){ }u23(64){ }u24(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 842 843
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838
;; live  gen 	 842 843
;; live  kill	
(note 308 307 309 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 311 5 (set (reg/f:DI 842)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:49 48 {*movdi_aarch64}
     (nil))
(insn 311 309 312 5 (set (reg:SI 843)
        (const_int 1 [0x1])) options.c:49 47 {*movsi_aarch64}
     (nil))
(insn 312 311 313 5 (set (mem/c:SI (lo_sum:DI (reg/f:DI 842)
                (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) [3 VERBOSE+0 S4 A32])
        (reg:SI 843)) options.c:49 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 843)
        (expr_list:REG_DEAD (reg/f:DI 842)
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838

;; basic block 6, loop depth 0, count 0, freq 30
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [15.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(29){ }u29(31){ }u30(64){ }u31(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 320 328 360 1864
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838
;; live  gen 	 320 328 360 1864
;; live  kill	
(code_label 313 312 314 6 13 "" [1 uses])
(note 314 313 191 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 191 314 192 6 (set (reg/v:SI 320 [ whichset ])
        (const_int 0 [0])) options.c:117 47 {*movsi_aarch64}
     (nil))
(insn 192 191 193 6 (set (reg/v:SI 328 [ nset ])
        (const_int 0 [0])) options.c:117 47 {*movsi_aarch64}
     (nil))
(insn 193 192 4198 6 (set (reg/v:SI 360 [ err ])
        (const_int 0 [0])) options.c:117 47 {*movsi_aarch64}
     (nil))
(insn 4198 193 932 6 (set (reg/f:DI 1864)
        (high:DI (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) -1
     (nil))
(insn 932 4198 913 6 (set (reg/f:DI 1013)
        (lo_sum:DI (reg/f:DI 1864)
            (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>))) options.c:51 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
        (nil)))
(insn 913 932 914 6 (set (reg/f:DI 1908)
        (high:DI (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 914 913 321 6 (set (reg/f:DI 1909)
        (lo_sum:DI (reg/f:DI 1908)
            (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1010)
        (nil)))
(insn 321 914 322 6 (set (reg/f:DI 1910)
        (high:DI (label_ref 324))) options.c:52 48 {*movdi_aarch64}
     (insn_list:REG_LABEL_OPERAND 324 (nil)))
(insn 322 321 939 6 (set (reg/f:DI 1911)
        (lo_sum:DI (reg/f:DI 1910)
            (label_ref 324))) options.c:52 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 846)
        (insn_list:REG_LABEL_OPERAND 324 (nil))))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 360 837 838 1710 1864
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 360 837 838 1864

;; basic block 7, loop depth 1, count 0, freq 161, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [97.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u32(29){ }u33(31){ }u34(64){ }u35(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294
;; lr  def 	 66 [cc] 844
;; live  in  	 294 320 328
;; live  gen 	 66 [cc] 844
;; live  kill	
(code_label 939 322 317 7 48 "" [1 uses])
(note 317 939 318 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 7 (set (reg:SI 844)
        (plus:SI (reg/v:SI 294 [ c ])
            (const_int -63 [0xffffffffffffffc1]))) options.c:52 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 294 [ c ])
        (nil)))
(insn 319 318 320 7 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 844)
            (const_int 55 [0x37]))) options.c:52 390 {*cmpsi}
     (nil))
(jump_insn 320 319 4051 7 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) options.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 909)
;;  succ:       53 [50.0%] 
;;              8 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 844 1864
;; live  out 	 320 328 844

;; basic block 8, loop depth 1, count 0, freq 81, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(29){ }u40(31){ }u41(64){ }u42(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 844 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 844
;; lr  def 	 66 [cc] 845 846
;; live  in  	 320 328 844
;; live  gen 	 845 846
;; live  kill	 66 [cc]
(note 4051 320 4412 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 4412 4051 4413 8 (set (reg/f:DI 846)
        (reg/f:DI 1910)) options.c:52 -1
     (nil))
(insn 4413 4412 323 8 (set (reg/f:DI 845)
        (reg/f:DI 1911)) options.c:52 -1
     (nil))
(jump_insn 323 4413 327 8 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 1911)
                            (reg:SI 844)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 324))
        ]) options.c:52 16 {casesi_dispatch}
     (expr_list:REG_DEAD (reg/f:DI 845)
        (expr_list:REG_DEAD (reg:SI 844)
            (expr_list:REG_UNUSED (reg:CC 66 cc)
                (nil))))
 -> 324)
;;  succ:       53 [4.0%] 
;;              10 [8.0%]  (LOOP_EXIT)
;;              25 [8.0%] 
;;              32 [8.0%] 
;;              39 [8.0%] 
;;              46 [8.0%] 
;;              12 [8.0%] 
;;              11 [8.0%] 
;;              21 [8.0%] 
;;              13 [8.0%] 
;;              15 [8.0%] 
;;              17 [8.0%] 
;;              9 [8.0%]  (LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 9, loop depth 0, count 0, freq 12
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%]  (LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(29){ }u47(31){ }u48(64){ }u49(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 847 848 849 850
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 847 848 849 850
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 327 323 328 9 28 "" [1 uses])
(note 328 327 329 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 329 328 330 9 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)) -1
     (nil))
(insn 330 329 331 9 (set (reg/f:DI 848)
        (high:DI (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (nil))
(insn 331 330 332 9 (set (reg/f:DI 847)
        (lo_sum:DI (reg/f:DI 848)
            (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 848)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>)
            (nil))))
(insn 332 331 333 9 (set (reg/f:DI 850)
        (high:DI (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (nil))
(insn 333 332 334 9 (set (reg/f:DI 849)
        (lo_sum:DI (reg/f:DI 850)
            (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 850)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)
            (nil))))
(insn 334 333 335 9 (set (reg:SI 3 x3)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 47 {*movsi_aarch64}
     (nil))
(insn 335 334 336 9 (set (reg:DI 2 x2)
        (reg/f:DI 847)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 847)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x82]  <var_decl 0x7f3c5d82eb40 *.LC2>)
            (nil))))
(insn 336 335 337 9 (set (reg:DI 1 x1)
        (reg/f:DI 849)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 849)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x82]  <var_decl 0x7f3c5d82ebd0 *.LC3>)
            (nil))))
(insn 337 336 338 9 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 47 {*movsi_aarch64}
     (nil))
(call_insn 338 337 339 9 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
(debug_insn 339 338 340 9 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:54 -1
     (nil))
(insn 340 339 341 9 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:55 47 {*movsi_aarch64}
     (nil))
(call_insn 341 340 343 9 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:55 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 10, loop depth 0, count 0, freq 12
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%]  (LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(29){ }u62(31){ }u63(64){ }u64(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 851 852 854 855 856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 851 852 854 855 856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 343 341 344 10 16 "" [2 uses])
(note 344 343 345 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 345 344 346 10 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)) -1
     (nil))
(insn 346 345 347 10 (set (reg:DF 851)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 5.00000000000000444089209850062616169452667236328125e-2 [0x0.cccccccccccdp-4])
        (nil)))
(insn 347 346 349 10 (set (reg:DF 852)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))
(insn 349 347 350 10 (set (reg:DF 854)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 5.6999999999999995115018691649311222136020660400390625e-1 [0x0.91eb851eb851e8p+0])
        (nil)))
(insn 350 349 351 10 (set (reg/f:DI 856)
        (high:DI (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (nil))
(insn 351 350 352 10 (set (reg/f:DI 855)
        (lo_sum:DI (reg/f:DI 856)
            (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 856)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)
            (nil))))
(insn 352 351 353 10 (set (reg:DF 35 v3)
        (reg:DF 851)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 851)
        (expr_list:REG_EQUAL (const_double:DF 5.00000000000000444089209850062616169452667236328125e-2 [0x0.cccccccccccdp-4])
            (nil))))
(insn 353 352 354 10 (set (reg:DF 34 v2)
        (reg:DF 852)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
        (nil)))
(insn 354 353 355 10 (set (reg:DF 33 v1)
        (reg:DF 852)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 852)
        (expr_list:REG_EQUAL (const_double:DF 1.90000000000000002220446049250313080847263336181640625e-1 [0x0.c28f5c28f5c29p-2])
            (nil))))
(insn 355 354 356 10 (set (reg:DF 32 v0)
        (reg:DF 854)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 854)
        (expr_list:REG_EQUAL (const_double:DF 5.6999999999999995115018691649311222136020660400390625e-1 [0x0.91eb851eb851e8p+0])
            (nil))))
(insn 356 355 357 10 (set (reg:DI 3 x3)
        (const_int 16 [0x10])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (nil))
(insn 357 356 358 10 (set (reg:DI 2 x2)
        (const_int 14 [0xe])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (nil))
(insn 358 357 359 10 (set (reg:DI 1 x1)
        (reg/f:DI 855)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 855)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x82]  <var_decl 0x7f3c5d82ec60 *.LC7>)
            (nil))))
(insn 359 358 360 10 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 47 {*movsi_aarch64}
     (nil))
(call_insn 360 359 361 10 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>) [0 __printf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:104 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 35 v3)
        (expr_list:REG_DEAD (reg:DF 34 v2)
            (expr_list:REG_DEAD (reg:DF 33 v1)
                (expr_list:REG_DEAD (reg:DF 32 v0)
                    (expr_list:REG_DEAD (reg:DI 3 x3)
                        (expr_list:REG_DEAD (reg:DI 2 x2)
                            (expr_list:REG_DEAD (reg:DI 1 x1)
                                (expr_list:REG_UNUSED (reg:SI 0 x0)
                                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7f3c5e252700 __printf_chk>)
                                        (nil))))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (expr_list:DF (use (reg:DF 32 v0))
                                (expr_list:DF (use (reg:DF 33 v1))
                                    (expr_list:DF (use (reg:DF 34 v2))
                                        (expr_list:DF (use (reg:DF 35 v3))
                                            (nil))))))))))))
(debug_insn 361 360 362 10 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:59 -1
     (nil))
(insn 362 361 363 10 (set (reg:SI 0 x0)
        (const_int 0 [0])) options.c:105 47 {*movsi_aarch64}
     (nil))
(call_insn 363 362 365 10 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:105 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 11, loop depth 1, count 0, freq 12
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(29){ }u84(31){ }u85(64){ }u86(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 857 858 859
;; live  in  	 320 328
;; live  gen 	 857 858 859
;; live  kill	
(code_label 365 363 366 11 23 "" [1 uses])
(note 366 365 367 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 11 (set (reg/f:DI 858)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 48 {*movdi_aarch64}
     (nil))
(insn 368 367 369 11 (set (reg/f:DI 857)
        (lo_sum:DI (reg/f:DI 858)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:108 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 858)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 369 368 370 11 (set (reg:SI 859)
        (const_int 1 [0x1])) options.c:108 47 {*movsi_aarch64}
     (nil))
(insn 370 369 373 11 (set (mem/c:SI (reg/f:DI 857) [3 VERBOSE+0 S4 A32])
        (reg:SI 859)) options.c:108 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 859)
        (expr_list:REG_DEAD (reg/f:DI 857)
            (nil))))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 12, loop depth 1, count 0, freq 12
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(29){ }u91(31){ }u92(64){ }u93(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 860 861 862
;; live  in  	 320 328
;; live  gen 	 860 861 862
;; live  kill	
(code_label 373 370 374 12 22 "" [1 uses])
(note 374 373 375 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 12 (set (reg/f:DI 861)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 48 {*movdi_aarch64}
     (nil))
(insn 376 375 377 12 (set (reg/f:DI 860)
        (lo_sum:DI (reg/f:DI 861)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:111 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 861)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 377 376 378 12 (set (reg:SI 862)
        (const_int 1 [0x1])) options.c:111 47 {*movsi_aarch64}
     (nil))
(insn 378 377 381 12 (set (mem/c:SI (plus:DI (reg/f:DI 860)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])
        (reg:SI 862)) options.c:111 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 862)
        (expr_list:REG_DEAD (reg/f:DI 860)
            (nil))))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 13, loop depth 1, count 0, freq 12
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u97(29){ }u98(31){ }u99(64){ }u100(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 863 864 865 866 867
;; live  in  	 320 328
;; live  gen 	 0 [x0] 66 [cc] 863 864 865 866 867
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 381 378 382 13 25 "" [1 uses])
(note 382 381 383 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 13 (set (reg/f:DI 864)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 48 {*movdi_aarch64}
     (nil))
(insn 384 383 385 13 (set (reg/f:DI 863)
        (lo_sum:DI (reg/f:DI 864)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:114 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 864)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 385 384 386 13 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 863) [2 optarg+0 S8 A64])) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 863)
        (nil)))
(call_insn 386 385 387 13 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:114 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 387 386 389 13 (set (reg/f:DI 865)
        (reg:DI 0 x0)) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 865)
            (nil))))
(insn 389 387 390 13 (set (reg/f:DI 867)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 48 {*movdi_aarch64}
     (nil))
(insn 390 389 391 13 (set (reg/f:DI 866)
        (lo_sum:DI (reg/f:DI 867)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:114 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 867)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 391 390 392 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 866)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])
        (reg/f:DI 865)) options.c:114 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 866)
        (nil)))
(insn 392 391 393 13 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 865)
            (const_int 0 [0]))) options.c:115 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 865)
        (nil)))
(jump_insn 393 392 394 13 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:115 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 924)
;;  succ:       14 [6.7%]  (FALLTHRU)
;;              54 [93.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 14, loop depth 1, count 0, freq 1
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [6.7%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u112(29){ }u113(31){ }u114(64){ }u115(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 868 869 870 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 868 869 870 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 394 393 395 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(debug_insn 395 394 396 14 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:116 -1
     (nil))
(debug_insn 396 395 397 14 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)) options.c:116 -1
     (nil))
(insn 397 396 398 14 (set (reg/f:DI 869)
        (high:DI (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 398 397 399 14 (set (reg/f:DI 868)
        (lo_sum:DI (reg/f:DI 869)
            (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 869)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
            (nil))))
(insn 399 398 400 14 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 48 {*movdi_aarch64}
     (nil))
(insn 400 399 401 14 (set (reg/f:DI 870)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:116 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 401 400 402 14 (set (reg:DI 2 x2)
        (reg/f:DI 868)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 868)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x82]  <var_decl 0x7f3c5d82ecf0 *.LC8>)
            (nil))))
(insn 402 401 403 14 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 403 402 404 14 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 870) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 870)
        (nil)))
(call_insn 404 403 405 14 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 405 404 406 14 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
(debug_insn 406 405 407 14 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:116 -1
     (nil))
(debug_insn 407 406 190 14 (var_location:SI err (const_int 1 [0x1])) options.c:117 -1
     (nil))
(insn 190 407 410 14 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:117 47 {*movsi_aarch64}
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 15, loop depth 1, count 0, freq 12
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u124(29){ }u125(31){ }u126(64){ }u127(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 872 873 874 875 876
;; live  in  	 320 328
;; live  gen 	 0 [x0] 66 [cc] 872 873 874 875 876
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 410 190 411 15 26 "" [1 uses])
(note 411 410 412 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 15 (set (reg/f:DI 873)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 48 {*movdi_aarch64}
     (nil))
(insn 413 412 414 15 (set (reg/f:DI 872)
        (lo_sum:DI (reg/f:DI 873)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:121 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 873)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 414 413 415 15 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 872) [2 optarg+0 S8 A64])) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 872)
        (nil)))
(call_insn 415 414 416 15 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>) [0 __strdup S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:121 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x7f3c5e252600 __strdup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 416 415 418 15 (set (reg/f:DI 874)
        (reg:DI 0 x0)) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 874)
            (nil))))
(insn 418 416 419 15 (set (reg/f:DI 876)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 48 {*movdi_aarch64}
     (nil))
(insn 419 418 420 15 (set (reg/f:DI 875)
        (lo_sum:DI (reg/f:DI 876)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) options.c:121 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 876)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 420 419 421 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 875)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])
        (reg/f:DI 874)) options.c:121 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 875)
        (nil)))
(insn 421 420 422 15 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 874)
            (const_int 0 [0]))) options.c:122 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 874)
        (nil)))
(jump_insn 422 421 423 15 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:122 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 924)
;;  succ:       16 [6.7%]  (FALLTHRU)
;;              54 [93.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 16, loop depth 1, count 0, freq 1
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [6.7%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(29){ }u140(31){ }u141(64){ }u142(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 877 878 879 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 877 878 879 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 423 422 424 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(debug_insn 424 423 425 16 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:123 -1
     (nil))
(debug_insn 425 424 426 16 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)) options.c:123 -1
     (nil))
(insn 426 425 427 16 (set (reg/f:DI 878)
        (high:DI (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 427 426 428 16 (set (reg/f:DI 877)
        (lo_sum:DI (reg/f:DI 878)
            (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 878)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
            (nil))))
(insn 428 427 429 16 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 48 {*movdi_aarch64}
     (nil))
(insn 429 428 430 16 (set (reg/f:DI 879)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:123 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 430 429 431 16 (set (reg:DI 2 x2)
        (reg/f:DI 877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 877)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x82]  <var_decl 0x7f3c5d82ed80 *.LC9>)
            (nil))))
(insn 431 430 432 16 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 432 431 433 16 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 879) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 879)
        (nil)))
(call_insn 433 432 434 16 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 434 433 435 16 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
(debug_insn 435 434 436 16 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:123 -1
     (nil))
(debug_insn 436 435 189 16 (var_location:SI err (const_int 1 [0x1])) options.c:124 -1
     (nil))
(insn 189 436 439 16 (set (reg/v:SI 360 [ err ])
        (const_int 1 [0x1])) options.c:124 47 {*movsi_aarch64}
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 17, loop depth 1, count 0, freq 12
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u151(29){ }u152(31){ }u153(64){ }u154(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 301 303 881 882 883 885 1854
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 301 303 881 882 883 885 1854
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 439 189 440 17 27 "" [1 uses])
(note 440 439 441 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 441 440 442 17 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:128 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 442 441 443 17 (set (reg/f:DI 301 [ D.3807 ])
        (reg:DI 0 x0)) options.c:128 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 443 442 444 17 (set (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])
        (const_int 0 [0])) options.c:128 47 {*movsi_aarch64}
     (nil))
(insn 444 443 445 17 (set (reg/f:DI 882)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 48 {*movdi_aarch64}
     (nil))
(insn 445 444 446 17 (set (reg/f:DI 881)
        (lo_sum:DI (reg/f:DI 882)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:129 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 882)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 446 445 447 17 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:129 47 {*movsi_aarch64}
     (nil))
(insn 447 446 448 17 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:129 48 {*movdi_aarch64}
     (nil))
(insn 448 447 449 17 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) options.c:129 48 {*movdi_aarch64}
     (nil))
(call_insn 449 448 450 17 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:129 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 450 449 451 17 (set (reg:DI 303 [ D.3798 ])
        (reg:DI 0 x0)) options.c:129 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 451 450 452 17 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 48 {*movdi_aarch64}
     (nil))
(insn 452 451 453 17 (set (reg/f:DI 883)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:129 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 453 452 454 17 (set (mem/c:DI (reg/f:DI 883) [4 SCALE+0 S8 A64])
        (reg:DI 303 [ D.3798 ])) options.c:129 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 883)
        (expr_list:REG_DEAD (reg:DI 303 [ D.3798 ])
            (nil))))
(insn 454 453 455 17 (set (reg:SI 885 [ *_125 ])
        (mem:SI (reg/f:DI 301 [ D.3807 ]) [3 *_125+0 S4 A32])) options.c:130 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 301 [ D.3807 ])
        (nil)))
(insn 455 454 456 17 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 885 [ *_125 ])
            (const_int 0 [0]))) options.c:130 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 885 [ *_125 ])
        (nil)))
(jump_insn 456 455 457 17 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 474)
            (pc))) options.c:130 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 474)
;;  succ:       18 [29.0%]  (FALLTHRU)
;;              19 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 881 1854 1864
;; live  out 	 320 328 881 1854

;; basic block 18, loop depth 1, count 0, freq 4
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [29.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u171(29){ }u172(31){ }u173(64){ }u174(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 881 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 881
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 888 889 890 1856
;; live  in  	 320 328 881 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 888 889 890 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 457 456 458 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 458 457 459 18 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:131 -1
     (nil))
(debug_insn 459 458 462 18 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)) options.c:131 -1
     (nil))
(insn 462 459 463 18 (set (reg/f:DI 889)
        (high:DI (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 463 462 464 18 (set (reg/f:DI 888)
        (lo_sum:DI (reg/f:DI 889)
            (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 889)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
            (nil))))
(insn 464 463 465 18 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 48 {*movdi_aarch64}
     (nil))
(insn 465 464 466 18 (set (reg/f:DI 890)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:131 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 466 465 467 18 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 881) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 881)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>) [2 optarg+0 S8 A64])
            (nil))))
(insn 467 466 468 18 (set (reg:DI 2 x2)
        (reg/f:DI 888)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 888)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x82]  <var_decl 0x7f3c5d82ee10 *.LC10>)
            (nil))))
(insn 468 467 469 18 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 469 468 470 18 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 890) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 890)
        (nil)))
(call_insn 470 469 471 18 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 471 470 472 18 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
(debug_insn 472 471 473 18 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:131 -1
     (nil))
(debug_insn 473 472 172 18 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:132 -1
     (nil))
(insn 172 473 474 18 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:132 47 {*movsi_aarch64}
     (nil))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 19, loop depth 1, count 0, freq 12
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [71.0%] 
;;              18 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u187(29){ }u188(31){ }u189(64){ }u190(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 892 894
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 892 894
;; live  kill	
(code_label 474 172 475 19 30 "" [1 uses])
(note 475 474 476 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 476 475 478 19 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 478 476 479 19 (set (reg/f:DI 892)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:134 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 479 478 480 19 (set (reg:DI 894 [ SCALE ])
        (mem/c:DI (reg/f:DI 892) [4 SCALE+0 S8 A64])) options.c:134 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 892)
        (nil)))
(insn 480 479 481 19 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 894 [ SCALE ])
            (const_int 0 [0]))) options.c:134 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 894 [ SCALE ])
        (nil)))
(jump_insn 481 480 482 19 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:134 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8688 (nil)))
 -> 924)
;;  succ:       20 [13.1%]  (FALLTHRU)
;;              54 [86.9%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 20, loop depth 1, count 0, freq 2
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [13.1%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(29){ }u197(31){ }u198(64){ }u199(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 895 896 897 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 895 896 897 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 482 481 483 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 483 482 484 20 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:135 -1
     (nil))
(debug_insn 484 483 485 20 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)) options.c:135 -1
     (nil))
(insn 485 484 486 20 (set (reg/f:DI 896)
        (high:DI (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 486 485 487 20 (set (reg/f:DI 895)
        (lo_sum:DI (reg/f:DI 896)
            (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 896)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
            (nil))))
(insn 487 486 488 20 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 48 {*movdi_aarch64}
     (nil))
(insn 488 487 489 20 (set (reg/f:DI 897)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:135 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 489 488 490 20 (set (reg:DI 2 x2)
        (reg/f:DI 895)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 895)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x82]  <var_decl 0x7f3c5d82eea0 *.LC11>)
            (nil))))
(insn 490 489 491 20 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 491 490 492 20 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 897) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 897)
        (nil)))
(call_insn 492 491 493 20 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 493 492 494 20 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
(debug_insn 494 493 495 20 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:135 -1
     (nil))
(debug_insn 495 494 188 20 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:136 -1
     (nil))
(insn 188 495 498 20 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:136 47 {*movsi_aarch64}
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 21, loop depth 1, count 0, freq 12
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u208(29){ }u209(31){ }u210(64){ }u211(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 309 311 899 900 901 903 1854
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 309 311 899 900 901 903 1854
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 498 188 499 21 24 "" [1 uses])
(note 499 498 500 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 500 499 501 21 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:140 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 501 500 502 21 (set (reg/f:DI 309 [ D.3807 ])
        (reg:DI 0 x0)) options.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 502 501 503 21 (set (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])
        (const_int 0 [0])) options.c:140 47 {*movsi_aarch64}
     (nil))
(insn 503 502 504 21 (set (reg/f:DI 900)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 48 {*movdi_aarch64}
     (nil))
(insn 504 503 505 21 (set (reg/f:DI 899)
        (lo_sum:DI (reg/f:DI 900)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:141 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 900)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 505 504 506 21 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) options.c:141 47 {*movsi_aarch64}
     (nil))
(insn 506 505 507 21 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:141 48 {*movdi_aarch64}
     (nil))
(insn 507 506 508 21 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) options.c:141 48 {*movdi_aarch64}
     (nil))
(call_insn 508 507 509 21 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:141 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 509 508 510 21 (set (reg:DI 311 [ D.3798 ])
        (reg:DI 0 x0)) options.c:141 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 510 509 511 21 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 48 {*movdi_aarch64}
     (nil))
(insn 511 510 512 21 (set (reg/f:DI 901)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:141 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 512 511 513 21 (set (mem/c:DI (plus:DI (reg/f:DI 901)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])
        (reg:DI 311 [ D.3798 ])) options.c:141 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 901)
        (expr_list:REG_DEAD (reg:DI 311 [ D.3798 ])
            (nil))))
(insn 513 512 514 21 (set (reg:SI 903 [ *_133 ])
        (mem:SI (reg/f:DI 309 [ D.3807 ]) [3 *_133+0 S4 A32])) options.c:142 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 309 [ D.3807 ])
        (nil)))
(insn 514 513 515 21 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 903 [ *_133 ])
            (const_int 0 [0]))) options.c:142 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 903 [ *_133 ])
        (nil)))
(jump_insn 515 514 516 21 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 533)
            (pc))) options.c:142 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 533)
;;  succ:       22 [29.0%]  (FALLTHRU)
;;              23 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 899 1854 1864
;; live  out 	 320 328 899 1854

;; basic block 22, loop depth 1, count 0, freq 4
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [29.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u228(29){ }u229(31){ }u230(64){ }u231(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 899 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 899
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 906 907 908 1856
;; live  in  	 320 328 899 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 906 907 908 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 516 515 517 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 517 516 518 22 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:143 -1
     (nil))
(debug_insn 518 517 521 22 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)) options.c:143 -1
     (nil))
(insn 521 518 522 22 (set (reg/f:DI 907)
        (high:DI (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 522 521 523 22 (set (reg/f:DI 906)
        (lo_sum:DI (reg/f:DI 907)
            (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 907)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
            (nil))))
(insn 523 522 524 22 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 48 {*movdi_aarch64}
     (nil))
(insn 524 523 525 22 (set (reg/f:DI 908)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:143 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 525 524 526 22 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 899) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 899)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>) [2 optarg+0 S8 A64])
            (nil))))
(insn 526 525 527 22 (set (reg:DI 2 x2)
        (reg/f:DI 906)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 906)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x82]  <var_decl 0x7f3c5d840000 *.LC12>)
            (nil))))
(insn 527 526 528 22 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 528 527 529 22 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 908) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 908)
        (nil)))
(call_insn 529 528 530 22 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 530 529 531 22 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
(debug_insn 531 530 532 22 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:143 -1
     (nil))
(debug_insn 532 531 173 22 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:144 -1
     (nil))
(insn 173 532 533 22 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:144 47 {*movsi_aarch64}
     (nil))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 23, loop depth 1, count 0, freq 12
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [71.0%] 
;;              22 [100.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u244(29){ }u245(31){ }u246(64){ }u247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 910 912
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 910 912
;; live  kill	
(code_label 533 173 534 23 31 "" [1 uses])
(note 534 533 535 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 535 534 537 23 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 537 535 538 23 (set (reg/f:DI 910)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:146 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 538 537 539 23 (set (reg:DI 912 [ edgefactor ])
        (mem/c:DI (plus:DI (reg/f:DI 910)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) options.c:146 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 910)
        (nil)))
(insn 539 538 540 23 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 912 [ edgefactor ])
            (const_int 0 [0]))) options.c:146 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 912 [ edgefactor ])
        (nil)))
(jump_insn 540 539 541 23 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 924)
            (pc))) options.c:146 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8688 (nil)))
 -> 924)
;;  succ:       24 [13.1%]  (FALLTHRU)
;;              54 [86.9%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 24, loop depth 1, count 0, freq 2
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [13.1%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u253(29){ }u254(31){ }u255(64){ }u256(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 913 914 915 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 913 914 915 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 541 540 542 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 542 541 543 24 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:147 -1
     (nil))
(debug_insn 543 542 544 24 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)) options.c:147 -1
     (nil))
(insn 544 543 545 24 (set (reg/f:DI 914)
        (high:DI (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 545 544 546 24 (set (reg/f:DI 913)
        (lo_sum:DI (reg/f:DI 914)
            (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 914)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
            (nil))))
(insn 546 545 547 24 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 48 {*movdi_aarch64}
     (nil))
(insn 547 546 548 24 (set (reg/f:DI 915)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:147 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 548 547 549 24 (set (reg:DI 2 x2)
        (reg/f:DI 913)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 913)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x82]  <var_decl 0x7f3c5d840090 *.LC13>)
            (nil))))
(insn 549 548 550 24 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 550 549 551 24 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 915) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 915)
        (nil)))
(call_insn 551 550 552 24 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 552 551 553 24 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
(debug_insn 553 552 554 24 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:147 -1
     (nil))
(debug_insn 554 553 187 24 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:148 -1
     (nil))
(insn 187 554 557 24 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:148 47 {*movsi_aarch64}
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 25, loop depth 1, count 0, freq 12
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u265(29){ }u266(31){ }u267(64){ }u268(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 317 319 917 919 921 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 317 319 917 919 921 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 557 187 558 25 18 "" [2 uses])
(note 558 557 559 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 559 558 560 25 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:153 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 560 559 561 25 (set (reg/f:DI 317 [ D.3807 ])
        (reg:DI 0 x0)) options.c:153 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 561 560 562 25 (set (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])
        (const_int 0 [0])) options.c:153 47 {*movsi_aarch64}
     (nil))
(insn 562 561 563 25 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 48 {*movdi_aarch64}
     (nil))
(insn 563 562 564 25 (set (reg/f:DI 917)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:154 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 564 563 565 25 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:154 48 {*movdi_aarch64}
     (nil))
(insn 565 564 566 25 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 917) [2 optarg+0 S8 A64])) options.c:154 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 917)
        (nil)))
(call_insn 566 565 567 25 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:154 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 567 566 568 25 (set (reg:DF 319 [ D.3804 ])
        (reg:DF 32 v0)) options.c:154 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 568 567 569 25 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 48 {*movdi_aarch64}
     (nil))
(insn 569 568 570 25 (set (reg/f:DI 919)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:154 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 570 569 571 25 (set (mem/c:DF (plus:DI (reg/f:DI 919)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 319 [ D.3804 ])) options.c:154 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 919)
        (expr_list:REG_DEAD (reg:DF 319 [ D.3804 ])
            (nil))))
(insn 571 570 572 25 (set (reg:SI 921 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:155 465 {andsi3}
     (nil))
(insn 572 571 573 25 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 921 [ D.3797 ])
            (const_int 0 [0]))) options.c:155 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 921 [ D.3797 ])
        (nil)))
(jump_insn 573 572 574 25 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 588)
            (pc))) options.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 588)
;;  succ:       26 [29.0%]  (FALLTHRU)
;;              27 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; live  out 	 317 320 328 1854 1855

;; basic block 26, loop depth 1, count 0, freq 4
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [29.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u284(29){ }u285(31){ }u286(64){ }u287(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 922 923 924 1856
;; live  in  	 317 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 922 923 924 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 574 573 575 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 575 574 576 26 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:156 -1
     (nil))
(debug_insn 576 575 577 26 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)) options.c:156 -1
     (nil))
(insn 577 576 578 26 (set (reg/f:DI 923)
        (high:DI (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 578 577 579 26 (set (reg/f:DI 922)
        (lo_sum:DI (reg/f:DI 923)
            (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 923)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
            (nil))))
(insn 579 578 580 26 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 48 {*movdi_aarch64}
     (nil))
(insn 580 579 581 26 (set (reg/f:DI 924)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:156 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 581 580 582 26 (set (reg:DI 2 x2)
        (reg/f:DI 922)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 922)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x82]  <var_decl 0x7f3c5d840120 *.LC14>)
            (nil))))
(insn 582 581 583 26 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 583 582 584 26 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 924) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 924)
        (nil)))
(call_insn 584 583 585 26 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 585 584 586 26 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
(debug_insn 586 585 587 26 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:156 -1
     (nil))
(debug_insn 587 586 174 26 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:157 -1
     (nil))
(insn 174 587 588 26 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:157 47 {*movsi_aarch64}
     (nil))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; live  out 	 317 320 328 1854 1855

;; basic block 27, loop depth 1, count 0, freq 12
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [71.0%] 
;;              26 [100.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u296(29){ }u297(31){ }u298(64){ }u299(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 317
;; lr  def 	 66 [cc] 926
;; live  in  	 317 320 328 1854 1855
;; live  gen 	 66 [cc] 926
;; live  kill	
(code_label 588 174 589 27 32 "" [1 uses])
(note 589 588 590 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 590 589 591 27 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 591 590 592 27 (set (reg:SI 926 [ *_141 ])
        (mem:SI (reg/f:DI 317 [ D.3807 ]) [3 *_141+0 S4 A32])) options.c:159 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 317 [ D.3807 ])
        (nil)))
(insn 592 591 593 27 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 926 [ *_141 ])
            (const_int 0 [0]))) options.c:159 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 926 [ *_141 ])
        (nil)))
(jump_insn 593 592 594 27 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 611)
            (pc))) options.c:159 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 611)
;;  succ:       28 [29.0%]  (FALLTHRU)
;;              29 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855

;; basic block 28, loop depth 1, count 0, freq 4
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [29.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u304(29){ }u305(31){ }u306(64){ }u307(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 927 929 930 931 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 927 929 930 931 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 594 593 595 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(debug_insn 595 594 596 28 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:160 -1
     (nil))
(debug_insn 596 595 598 28 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)) options.c:160 -1
     (nil))
(insn 598 596 599 28 (set (reg/f:DI 927)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:160 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 599 598 600 28 (set (reg/f:DI 930)
        (high:DI (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 600 599 601 28 (set (reg/f:DI 929)
        (lo_sum:DI (reg/f:DI 930)
            (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 930)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
            (nil))))
(insn 601 600 602 28 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 48 {*movdi_aarch64}
     (nil))
(insn 602 601 603 28 (set (reg/f:DI 931)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:160 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 603 602 604 28 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 927) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 927)
        (nil)))
(insn 604 603 605 28 (set (reg:DI 2 x2)
        (reg/f:DI 929)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 929)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x82]  <var_decl 0x7f3c5d8401b0 *.LC15>)
            (nil))))
(insn 605 604 606 28 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 606 605 607 28 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 931) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 931)
        (nil)))
(call_insn 607 606 608 28 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 608 607 609 28 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
(debug_insn 609 608 610 28 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:160 -1
     (nil))
(debug_insn 610 609 175 28 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:161 -1
     (nil))
(insn 175 610 611 28 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:161 47 {*movsi_aarch64}
     (nil))
;;  succ:       29 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 29, loop depth 1, count 0, freq 12
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [71.0%] 
;;              28 [100.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u319(29){ }u320(31){ }u321(64){ }u322(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 933 935
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 933 935
;; live  kill	
(code_label 611 175 612 29 33 "" [1 uses])
(note 612 611 613 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 613 612 615 29 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 615 613 616 29 (set (reg/f:DI 933)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:163 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 616 615 617 29 (set (reg:DF 935 [ A ])
        (mem/c:DF (plus:DI (reg/f:DI 933)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:163 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 933)
        (nil)))
(insn 617 616 618 29 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 935 [ A ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:163 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 935 [ A ])
        (nil)))
(jump_insn 618 617 4063 29 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4063)
            (pc))) options.c:163 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4063)
;;  succ:       30 [13.1%] 
;;              31 [86.9%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 30, loop depth 1, count 0, freq 2
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 [13.1%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u328(29){ }u329(31){ }u330(64){ }u331(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 936 937 938 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 936 937 938 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 4063 618 622 30 215 "" [1 uses])
(note 622 4063 623 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(debug_insn 623 622 624 30 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:164 -1
     (nil))
(debug_insn 624 623 625 30 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)) options.c:164 -1
     (nil))
(insn 625 624 626 30 (set (reg/f:DI 937)
        (high:DI (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 626 625 627 30 (set (reg/f:DI 936)
        (lo_sum:DI (reg/f:DI 937)
            (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 937)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
            (nil))))
(insn 627 626 628 30 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 48 {*movdi_aarch64}
     (nil))
(insn 628 627 629 30 (set (reg/f:DI 938)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:164 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 629 628 630 30 (set (reg:DI 2 x2)
        (reg/f:DI 936)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 936)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x82]  <var_decl 0x7f3c5d840240 *.LC16>)
            (nil))))
(insn 630 629 631 30 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 631 630 632 30 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 938) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 938)
        (nil)))
(call_insn 632 631 633 30 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 633 632 634 30 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
(debug_insn 634 633 635 30 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:164 -1
     (nil))
(debug_insn 635 634 176 30 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:165 -1
     (nil))
(insn 176 635 636 30 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:165 47 {*movsi_aarch64}
     (nil))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 31, loop depth 1, count 0, freq 12
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [100.0%]  (FALLTHRU)
;;              29 [86.9%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u340(29){ }u341(31){ }u342(64){ }u343(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
(code_label 636 176 637 31 34 "" [0 uses])
(note 637 636 638 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 638 637 639 31 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 639 638 640 31 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 1 [0x1]))) options.c:167 466 {iorsi3}
     (nil))
(debug_insn 640 639 641 31 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:167 -1
     (nil))
(insn 641 640 642 31 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:168 94 {*addsi3_aarch64}
     (nil))
(debug_insn 642 641 645 31 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:168 -1
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 32, loop depth 1, count 0, freq 12
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u349(29){ }u350(31){ }u351(64){ }u352(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 329 331 940 942 944 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 329 331 940 942 944 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 645 642 646 32 19 "" [2 uses])
(note 646 645 647 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 647 646 648 32 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:172 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 648 647 649 32 (set (reg/f:DI 329 [ D.3807 ])
        (reg:DI 0 x0)) options.c:172 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 649 648 650 32 (set (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])
        (const_int 0 [0])) options.c:172 47 {*movsi_aarch64}
     (nil))
(insn 650 649 651 32 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 48 {*movdi_aarch64}
     (nil))
(insn 651 650 652 32 (set (reg/f:DI 940)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:173 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 652 651 653 32 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:173 48 {*movdi_aarch64}
     (nil))
(insn 653 652 654 32 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 940) [2 optarg+0 S8 A64])) options.c:173 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 940)
        (nil)))
(call_insn 654 653 655 32 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:173 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 655 654 656 32 (set (reg:DF 331 [ D.3804 ])
        (reg:DF 32 v0)) options.c:173 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 656 655 657 32 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 48 {*movdi_aarch64}
     (nil))
(insn 657 656 658 32 (set (reg/f:DI 942)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:173 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 658 657 659 32 (set (mem/c:DF (plus:DI (reg/f:DI 942)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 331 [ D.3804 ])) options.c:173 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 942)
        (expr_list:REG_DEAD (reg:DF 331 [ D.3804 ])
            (nil))))
(insn 659 658 660 32 (set (reg:SI 944 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:174 465 {andsi3}
     (nil))
(insn 660 659 661 32 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 944 [ D.3797 ])
            (const_int 0 [0]))) options.c:174 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 944 [ D.3797 ])
        (nil)))
(jump_insn 661 660 662 32 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 676)
            (pc))) options.c:174 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 676)
;;  succ:       33 [29.0%]  (FALLTHRU)
;;              34 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; live  out 	 320 328 329 1854 1855

;; basic block 33, loop depth 1, count 0, freq 4
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [29.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u368(29){ }u369(31){ }u370(64){ }u371(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 945 946 947 1856
;; live  in  	 320 328 329 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 945 946 947 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 662 661 663 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(debug_insn 663 662 664 33 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:175 -1
     (nil))
(debug_insn 664 663 665 33 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)) options.c:175 -1
     (nil))
(insn 665 664 666 33 (set (reg/f:DI 946)
        (high:DI (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 666 665 667 33 (set (reg/f:DI 945)
        (lo_sum:DI (reg/f:DI 946)
            (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 946)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
            (nil))))
(insn 667 666 668 33 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 48 {*movdi_aarch64}
     (nil))
(insn 668 667 669 33 (set (reg/f:DI 947)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:175 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 669 668 670 33 (set (reg:DI 2 x2)
        (reg/f:DI 945)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 945)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x82]  <var_decl 0x7f3c5d8402d0 *.LC17>)
            (nil))))
(insn 670 669 671 33 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 671 670 672 33 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 947) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 947)
        (nil)))
(call_insn 672 671 673 33 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 673 672 674 33 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
(debug_insn 674 673 675 33 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:175 -1
     (nil))
(debug_insn 675 674 177 33 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:176 -1
     (nil))
(insn 177 675 676 33 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:176 47 {*movsi_aarch64}
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; live  out 	 320 328 329 1854 1855

;; basic block 34, loop depth 1, count 0, freq 12
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [71.0%] 
;;              33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u380(29){ }u381(31){ }u382(64){ }u383(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 329 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 329
;; lr  def 	 66 [cc] 949
;; live  in  	 320 328 329 1854 1855
;; live  gen 	 66 [cc] 949
;; live  kill	
(code_label 676 177 677 34 36 "" [1 uses])
(note 677 676 678 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(debug_insn 678 677 679 34 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 679 678 680 34 (set (reg:SI 949 [ *_155 ])
        (mem:SI (reg/f:DI 329 [ D.3807 ]) [3 *_155+0 S4 A32])) options.c:178 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 329 [ D.3807 ])
        (nil)))
(insn 680 679 681 34 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 949 [ *_155 ])
            (const_int 0 [0]))) options.c:178 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 949 [ *_155 ])
        (nil)))
(jump_insn 681 680 682 34 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) options.c:178 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 699)
;;  succ:       35 [29.0%]  (FALLTHRU)
;;              36 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855

;; basic block 35, loop depth 1, count 0, freq 4
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [29.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u388(29){ }u389(31){ }u390(64){ }u391(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 950 952 953 954 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 950 952 953 954 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 682 681 683 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 683 682 684 35 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:179 -1
     (nil))
(debug_insn 684 683 686 35 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)) options.c:179 -1
     (nil))
(insn 686 684 687 35 (set (reg/f:DI 950)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:179 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 687 686 688 35 (set (reg/f:DI 953)
        (high:DI (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 688 687 689 35 (set (reg/f:DI 952)
        (lo_sum:DI (reg/f:DI 953)
            (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 953)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
            (nil))))
(insn 689 688 690 35 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 48 {*movdi_aarch64}
     (nil))
(insn 690 689 691 35 (set (reg/f:DI 954)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:179 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 691 690 692 35 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 950) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 950)
        (nil)))
(insn 692 691 693 35 (set (reg:DI 2 x2)
        (reg/f:DI 952)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 952)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x82]  <var_decl 0x7f3c5d840360 *.LC18>)
            (nil))))
(insn 693 692 694 35 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 694 693 695 35 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 954) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 954)
        (nil)))
(call_insn 695 694 696 35 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 696 695 697 35 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
(debug_insn 697 696 698 35 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:179 -1
     (nil))
(debug_insn 698 697 178 35 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:180 -1
     (nil))
(insn 178 698 699 35 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:180 47 {*movsi_aarch64}
     (nil))
;;  succ:       36 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 36, loop depth 1, count 0, freq 12
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [71.0%] 
;;              35 [100.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u403(29){ }u404(31){ }u405(64){ }u406(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 956 958
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 956 958
;; live  kill	
(code_label 699 178 700 36 37 "" [1 uses])
(note 700 699 701 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(debug_insn 701 700 703 36 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 703 701 704 36 (set (reg/f:DI 956)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:182 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 704 703 705 36 (set (reg:DF 958 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 956)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:182 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 956)
        (nil)))
(insn 705 704 706 36 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 958 [ B ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:182 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 958 [ B ])
        (nil)))
(jump_insn 706 705 4064 36 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4064)
            (pc))) options.c:182 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4064)
;;  succ:       37 [13.1%] 
;;              38 [86.9%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 37, loop depth 1, count 0, freq 2
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 [13.1%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u412(29){ }u413(31){ }u414(64){ }u415(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 959 960 961 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 959 960 961 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 4064 706 710 37 216 "" [1 uses])
(note 710 4064 711 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 711 710 712 37 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:183 -1
     (nil))
(debug_insn 712 711 713 37 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)) options.c:183 -1
     (nil))
(insn 713 712 714 37 (set (reg/f:DI 960)
        (high:DI (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 714 713 715 37 (set (reg/f:DI 959)
        (lo_sum:DI (reg/f:DI 960)
            (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 960)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
            (nil))))
(insn 715 714 716 37 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 48 {*movdi_aarch64}
     (nil))
(insn 716 715 717 37 (set (reg/f:DI 961)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:183 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 717 716 718 37 (set (reg:DI 2 x2)
        (reg/f:DI 959)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 959)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x82]  <var_decl 0x7f3c5d8403f0 *.LC19>)
            (nil))))
(insn 718 717 719 37 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 719 718 720 37 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 961) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 961)
        (nil)))
(call_insn 720 719 721 37 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 721 720 722 37 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
(debug_insn 722 721 723 37 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:183 -1
     (nil))
(debug_insn 723 722 179 37 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:184 -1
     (nil))
(insn 179 723 724 37 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:184 47 {*movsi_aarch64}
     (nil))
;;  succ:       38 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 38, loop depth 1, count 0, freq 12
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [100.0%]  (FALLTHRU)
;;              36 [86.9%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u424(29){ }u425(31){ }u426(64){ }u427(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
(code_label 724 179 725 38 38 "" [0 uses])
(note 725 724 726 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 726 725 727 38 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 727 726 728 38 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 2 [0x2]))) options.c:186 466 {iorsi3}
     (nil))
(debug_insn 728 727 729 38 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:186 -1
     (nil))
(insn 729 728 730 38 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:187 94 {*addsi3_aarch64}
     (nil))
(debug_insn 730 729 733 38 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:187 -1
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 39, loop depth 1, count 0, freq 12
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u433(29){ }u434(31){ }u435(64){ }u436(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 339 341 963 965 967 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 339 341 963 965 967 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 733 730 734 39 20 "" [2 uses])
(note 734 733 735 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 735 734 736 39 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:191 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 736 735 737 39 (set (reg/f:DI 339 [ D.3807 ])
        (reg:DI 0 x0)) options.c:191 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 737 736 738 39 (set (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])
        (const_int 0 [0])) options.c:191 47 {*movsi_aarch64}
     (nil))
(insn 738 737 739 39 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 48 {*movdi_aarch64}
     (nil))
(insn 739 738 740 39 (set (reg/f:DI 963)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:192 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 740 739 741 39 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:192 48 {*movdi_aarch64}
     (nil))
(insn 741 740 742 39 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 963) [2 optarg+0 S8 A64])) options.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 963)
        (nil)))
(call_insn 742 741 743 39 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:192 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 743 742 744 39 (set (reg:DF 341 [ D.3804 ])
        (reg:DF 32 v0)) options.c:192 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 744 743 745 39 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 48 {*movdi_aarch64}
     (nil))
(insn 745 744 746 39 (set (reg/f:DI 965)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:192 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 746 745 747 39 (set (mem/c:DF (plus:DI (reg/f:DI 965)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 341 [ D.3804 ])) options.c:192 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 965)
        (expr_list:REG_DEAD (reg:DF 341 [ D.3804 ])
            (nil))))
(insn 747 746 748 39 (set (reg:SI 967 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:193 465 {andsi3}
     (nil))
(insn 748 747 749 39 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 967 [ D.3797 ])
            (const_int 0 [0]))) options.c:193 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 967 [ D.3797 ])
        (nil)))
(jump_insn 749 748 750 39 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 764)
            (pc))) options.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 764)
;;  succ:       40 [29.0%]  (FALLTHRU)
;;              41 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; live  out 	 320 328 339 1854 1855

;; basic block 40, loop depth 1, count 0, freq 4
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [29.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u452(29){ }u453(31){ }u454(64){ }u455(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 968 969 970 1856
;; live  in  	 320 328 339 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 968 969 970 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 750 749 751 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(debug_insn 751 750 752 40 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:194 -1
     (nil))
(debug_insn 752 751 753 40 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)) options.c:194 -1
     (nil))
(insn 753 752 754 40 (set (reg/f:DI 969)
        (high:DI (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 754 753 755 40 (set (reg/f:DI 968)
        (lo_sum:DI (reg/f:DI 969)
            (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 969)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
            (nil))))
(insn 755 754 756 40 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 48 {*movdi_aarch64}
     (nil))
(insn 756 755 757 40 (set (reg/f:DI 970)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:194 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 757 756 758 40 (set (reg:DI 2 x2)
        (reg/f:DI 968)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 968)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x82]  <var_decl 0x7f3c5d840480 *.LC20>)
            (nil))))
(insn 758 757 759 40 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 759 758 760 40 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 970) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 970)
        (nil)))
(call_insn 760 759 761 40 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 761 760 762 40 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
(debug_insn 762 761 763 40 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:194 -1
     (nil))
(debug_insn 763 762 180 40 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:195 -1
     (nil))
(insn 180 763 764 40 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:195 47 {*movsi_aarch64}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; live  out 	 320 328 339 1854 1855

;; basic block 41, loop depth 1, count 0, freq 12
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [71.0%] 
;;              40 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u464(29){ }u465(31){ }u466(64){ }u467(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 339 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 339
;; lr  def 	 66 [cc] 972
;; live  in  	 320 328 339 1854 1855
;; live  gen 	 66 [cc] 972
;; live  kill	
(code_label 764 180 765 41 40 "" [1 uses])
(note 765 764 766 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(debug_insn 766 765 767 41 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 767 766 768 41 (set (reg:SI 972 [ *_167 ])
        (mem:SI (reg/f:DI 339 [ D.3807 ]) [3 *_167+0 S4 A32])) options.c:197 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 339 [ D.3807 ])
        (nil)))
(insn 768 767 769 41 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 972 [ *_167 ])
            (const_int 0 [0]))) options.c:197 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 972 [ *_167 ])
        (nil)))
(jump_insn 769 768 770 41 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 787)
            (pc))) options.c:197 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 787)
;;  succ:       42 [29.0%]  (FALLTHRU)
;;              43 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855

;; basic block 42, loop depth 1, count 0, freq 4
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [29.0%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u472(29){ }u473(31){ }u474(64){ }u475(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 973 975 976 977 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 973 975 976 977 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 770 769 771 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(debug_insn 771 770 772 42 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:198 -1
     (nil))
(debug_insn 772 771 774 42 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)) options.c:198 -1
     (nil))
(insn 774 772 775 42 (set (reg/f:DI 973)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:198 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 775 774 776 42 (set (reg/f:DI 976)
        (high:DI (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 776 775 777 42 (set (reg/f:DI 975)
        (lo_sum:DI (reg/f:DI 976)
            (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 976)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
            (nil))))
(insn 777 776 778 42 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 48 {*movdi_aarch64}
     (nil))
(insn 778 777 779 42 (set (reg/f:DI 977)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:198 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 779 778 780 42 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 973) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 973)
        (nil)))
(insn 780 779 781 42 (set (reg:DI 2 x2)
        (reg/f:DI 975)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 975)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x82]  <var_decl 0x7f3c5d840510 *.LC21>)
            (nil))))
(insn 781 780 782 42 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 782 781 783 42 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 977) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 977)
        (nil)))
(call_insn 783 782 784 42 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 784 783 785 42 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
(debug_insn 785 784 786 42 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:198 -1
     (nil))
(debug_insn 786 785 181 42 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:199 -1
     (nil))
(insn 181 786 787 42 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:199 47 {*movsi_aarch64}
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 43, loop depth 1, count 0, freq 12
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [71.0%] 
;;              42 [100.0%]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u487(29){ }u488(31){ }u489(64){ }u490(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 979 981
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 979 981
;; live  kill	
(code_label 787 181 788 43 41 "" [1 uses])
(note 788 787 789 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(debug_insn 789 788 791 43 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 791 789 792 43 (set (reg/f:DI 979)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:201 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 792 791 793 43 (set (reg:DF 981 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 979)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:201 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 979)
        (nil)))
(insn 793 792 794 43 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 981 [ C ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:201 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 981 [ C ])
        (nil)))
(jump_insn 794 793 4065 43 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4065)
            (pc))) options.c:201 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4065)
;;  succ:       44 [13.1%] 
;;              45 [86.9%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 44, loop depth 1, count 0, freq 2
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 [13.1%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u496(29){ }u497(31){ }u498(64){ }u499(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 982 983 984 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 982 983 984 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 4065 794 798 44 217 "" [1 uses])
(note 798 4065 799 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 799 798 800 44 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:202 -1
     (nil))
(debug_insn 800 799 801 44 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)) options.c:202 -1
     (nil))
(insn 801 800 802 44 (set (reg/f:DI 983)
        (high:DI (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 802 801 803 44 (set (reg/f:DI 982)
        (lo_sum:DI (reg/f:DI 983)
            (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 983)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
            (nil))))
(insn 803 802 804 44 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 48 {*movdi_aarch64}
     (nil))
(insn 804 803 805 44 (set (reg/f:DI 984)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:202 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 805 804 806 44 (set (reg:DI 2 x2)
        (reg/f:DI 982)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 982)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x82]  <var_decl 0x7f3c5d8405a0 *.LC22>)
            (nil))))
(insn 806 805 807 44 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 807 806 808 44 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 984) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 984)
        (nil)))
(call_insn 808 807 809 44 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 809 808 810 44 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
(debug_insn 810 809 811 44 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:202 -1
     (nil))
(debug_insn 811 810 182 44 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:203 -1
     (nil))
(insn 182 811 812 44 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:203 47 {*movsi_aarch64}
     (nil))
;;  succ:       45 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 45, loop depth 1, count 0, freq 12
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44 [100.0%]  (FALLTHRU)
;;              43 [86.9%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u508(29){ }u509(31){ }u510(64){ }u511(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
(code_label 812 182 813 45 42 "" [0 uses])
(note 813 812 814 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(debug_insn 814 813 815 45 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 815 814 816 45 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 4 [0x4]))) options.c:205 466 {iorsi3}
     (nil))
(debug_insn 816 815 817 45 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:205 -1
     (nil))
(insn 817 816 818 45 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:206 94 {*addsi3_aarch64}
     (nil))
(debug_insn 818 817 821 45 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:206 -1
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 46, loop depth 1, count 0, freq 12
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [8.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u517(29){ }u518(31){ }u519(64){ }u520(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 349 351 986 988 990 1854 1855
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 349 351 986 988 990 1854 1855
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 821 818 822 46 21 "" [2 uses])
(note 822 821 823 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 823 822 824 46 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:210 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 824 823 825 46 (set (reg/f:DI 349 [ D.3807 ])
        (reg:DI 0 x0)) options.c:210 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 825 824 826 46 (set (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])
        (const_int 0 [0])) options.c:210 47 {*movsi_aarch64}
     (nil))
(insn 826 825 827 46 (set (reg/f:DI 1855)
        (high:DI (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 48 {*movdi_aarch64}
     (nil))
(insn 827 826 828 46 (set (reg/f:DI 986)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:211 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
        (nil)))
(insn 828 827 829 46 (set (reg:DI 1 x1)
        (const_int 0 [0])) options.c:211 48 {*movdi_aarch64}
     (nil))
(insn 829 828 830 46 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 986) [2 optarg+0 S8 A64])) options.c:211 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 986)
        (nil)))
(call_insn 830 829 831 46 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>) [0 strtod S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:211 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_DEAD (reg:DI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f3c5e252500 strtod>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 831 830 832 46 (set (reg:DF 351 [ D.3804 ])
        (reg:DF 32 v0)) options.c:211 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 832 831 833 46 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 48 {*movdi_aarch64}
     (nil))
(insn 833 832 834 46 (set (reg/f:DI 988)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:211 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 834 833 835 46 (set (mem/c:DF (plus:DI (reg/f:DI 988)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 351 [ D.3804 ])) options.c:211 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 988)
        (expr_list:REG_DEAD (reg:DF 351 [ D.3804 ])
            (nil))))
(insn 835 834 836 46 (set (reg:SI 990 [ D.3797 ])
        (and:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:212 465 {andsi3}
     (nil))
(insn 836 835 837 46 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 990 [ D.3797 ])
            (const_int 0 [0]))) options.c:212 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 990 [ D.3797 ])
        (nil)))
(jump_insn 837 836 838 46 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 852)
            (pc))) options.c:212 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 852)
;;  succ:       47 [29.0%]  (FALLTHRU)
;;              48 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; live  out 	 320 328 349 1854 1855

;; basic block 47, loop depth 1, count 0, freq 4
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [29.0%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u536(29){ }u537(31){ }u538(64){ }u539(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 991 992 993 1856
;; live  in  	 320 328 349 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 991 992 993 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 838 837 839 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(debug_insn 839 838 840 47 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:213 -1
     (nil))
(debug_insn 840 839 841 47 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)) options.c:213 -1
     (nil))
(insn 841 840 842 47 (set (reg/f:DI 992)
        (high:DI (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 842 841 843 47 (set (reg/f:DI 991)
        (lo_sum:DI (reg/f:DI 992)
            (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 992)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
            (nil))))
(insn 843 842 844 47 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 48 {*movdi_aarch64}
     (nil))
(insn 844 843 845 47 (set (reg/f:DI 993)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:213 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 845 844 846 47 (set (reg:DI 2 x2)
        (reg/f:DI 991)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 991)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x82]  <var_decl 0x7f3c5d840630 *.LC23>)
            (nil))))
(insn 846 845 847 47 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 847 846 848 47 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 993) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 993)
        (nil)))
(call_insn 848 847 849 47 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 849 848 850 47 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
(debug_insn 850 849 851 47 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:213 -1
     (nil))
(debug_insn 851 850 183 47 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:214 -1
     (nil))
(insn 183 851 852 47 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:214 47 {*movsi_aarch64}
     (nil))
;;  succ:       48 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; live  out 	 320 328 349 1854 1855

;; basic block 48, loop depth 1, count 0, freq 12
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 [71.0%] 
;;              47 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u548(29){ }u549(31){ }u550(64){ }u551(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 349 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 349
;; lr  def 	 66 [cc] 995
;; live  in  	 320 328 349 1854 1855
;; live  gen 	 66 [cc] 995
;; live  kill	
(code_label 852 183 853 48 44 "" [1 uses])
(note 853 852 854 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(debug_insn 854 853 855 48 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 855 854 856 48 (set (reg:SI 995 [ *_179 ])
        (mem:SI (reg/f:DI 349 [ D.3807 ]) [3 *_179+0 S4 A32])) options.c:216 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 349 [ D.3807 ])
        (nil)))
(insn 856 855 857 48 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 995 [ *_179 ])
            (const_int 0 [0]))) options.c:216 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 995 [ *_179 ])
        (nil)))
(jump_insn 857 856 858 48 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 875)
            (pc))) options.c:216 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 875)
;;  succ:       49 [29.0%]  (FALLTHRU)
;;              50 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; live  out 	 320 328 1854 1855

;; basic block 49, loop depth 1, count 0, freq 4
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [29.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u556(29){ }u557(31){ }u558(64){ }u559(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1855 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1855
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 996 998 999 1000 1856
;; live  in  	 320 328 1854 1855
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 360 996 998 999 1000 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 858 857 859 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(debug_insn 859 858 860 49 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:217 -1
     (nil))
(debug_insn 860 859 862 49 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)) options.c:217 -1
     (nil))
(insn 862 860 863 49 (set (reg/f:DI 996)
        (lo_sum:DI (reg/f:DI 1855)
            (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>))) options.c:217 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1855)
        (expr_list:REG_EQUAL (symbol_ref:DI ("optarg") [flags 0xc0]  <var_decl 0x7f3c5e254ab0 optarg>)
            (nil))))
(insn 863 862 864 49 (set (reg/f:DI 999)
        (high:DI (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 864 863 865 49 (set (reg/f:DI 998)
        (lo_sum:DI (reg/f:DI 999)
            (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 999)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
            (nil))))
(insn 865 864 866 49 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 48 {*movdi_aarch64}
     (nil))
(insn 866 865 867 49 (set (reg/f:DI 1000)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:217 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 867 866 868 49 (set (reg:DI 3 x3)
        (mem/f/c:DI (reg/f:DI 996) [2 optarg+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 996)
        (nil)))
(insn 868 867 869 49 (set (reg:DI 2 x2)
        (reg/f:DI 998)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 998)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x82]  <var_decl 0x7f3c5d8406c0 *.LC24>)
            (nil))))
(insn 869 868 870 49 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 870 869 871 49 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1000) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1000)
        (nil)))
(call_insn 871 870 872 49 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(debug_insn 872 871 873 49 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
(debug_insn 873 872 874 49 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:217 -1
     (nil))
(debug_insn 874 873 184 49 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:218 -1
     (nil))
(insn 184 874 875 49 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:218 47 {*movsi_aarch64}
     (nil))
;;  succ:       50 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; live  out 	 320 328 1854

;; basic block 50, loop depth 1, count 0, freq 12
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [71.0%] 
;;              49 [100.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u571(29){ }u572(31){ }u573(64){ }u574(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1854 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 1002 1004
;; live  in  	 320 328 1854
;; live  gen 	 66 [cc] 1002 1004
;; live  kill	
(code_label 875 184 876 50 45 "" [1 uses])
(note 876 875 877 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(debug_insn 877 876 879 50 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 879 877 880 50 (set (reg/f:DI 1002)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:220 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 880 879 881 50 (set (reg:DF 1004 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1002)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:220 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1002)
        (nil)))
(insn 881 880 882 50 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1004 [ D ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:220 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1004 [ D ])
        (nil)))
(jump_insn 882 881 4066 50 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4066)
            (pc))) options.c:220 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 1312 (nil)))
 -> 4066)
;;  succ:       51 [13.1%] 
;;              52 [86.9%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 51, loop depth 1, count 0, freq 2
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 [13.1%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u580(29){ }u581(31){ }u582(64){ }u583(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 1005 1006 1007 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 1005 1006 1007 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 4066 882 886 51 218 "" [1 uses])
(note 886 4066 887 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(debug_insn 887 886 888 51 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:221 -1
     (nil))
(debug_insn 888 887 889 51 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)) options.c:221 -1
     (nil))
(insn 889 888 890 51 (set (reg/f:DI 1006)
        (high:DI (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 890 889 891 51 (set (reg/f:DI 1005)
        (lo_sum:DI (reg/f:DI 1006)
            (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1006)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
            (nil))))
(insn 891 890 892 51 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 48 {*movdi_aarch64}
     (nil))
(insn 892 891 893 51 (set (reg/f:DI 1007)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:221 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 893 892 894 51 (set (reg:DI 2 x2)
        (reg/f:DI 1005)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1005)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x82]  <var_decl 0x7f3c5d840750 *.LC25>)
            (nil))))
(insn 894 893 895 51 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 895 894 896 51 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1007) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1007)
        (nil)))
(call_insn 896 895 897 51 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 897 896 898 51 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
(debug_insn 898 897 899 51 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:221 -1
     (nil))
(debug_insn 899 898 185 51 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:222 -1
     (nil))
(insn 185 899 900 51 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:222 47 {*movsi_aarch64}
     (nil))
;;  succ:       52 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 52, loop depth 1, count 0, freq 12
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [100.0%]  (FALLTHRU)
;;              50 [86.9%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u592(29){ }u593(31){ }u594(64){ }u595(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; lr  def 	 320 328
;; live  in  	 320 328
;; live  gen 	 320 328
;; live  kill	
(code_label 900 185 901 52 46 "" [0 uses])
(note 901 900 902 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(debug_insn 902 901 903 52 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 903 902 904 52 (set (reg/v:SI 320 [ whichset ])
        (ior:SI (reg/v:SI 320 [ whichset ])
            (const_int 8 [0x8]))) options.c:224 466 {iorsi3}
     (nil))
(debug_insn 904 903 905 52 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) options.c:224 -1
     (nil))
(insn 905 904 906 52 (set (reg/v:SI 328 [ nset ])
        (plus:SI (reg/v:SI 328 [ nset ])
            (const_int 1 [0x1]))) options.c:225 94 {*addsi3_aarch64}
     (nil))
(debug_insn 906 905 909 52 (var_location:SI nset (reg/v:SI 328 [ nset ])) options.c:225 -1
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 53, loop depth 1, count 0, freq 12
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [4.0%] 
;;              7 [50.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u601(29){ }u602(31){ }u603(64){ }u604(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 360 1009 1010 1011 1856
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 360 1009 1010 1011 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 909 906 910 53 15 "" [40 uses])
(note 910 909 911 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(debug_insn 911 910 912 53 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:228 -1
     (nil))
(debug_insn 912 911 4410 53 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)) options.c:228 -1
     (nil))
(insn 4410 912 4411 53 (set (reg/f:DI 1010)
        (reg/f:DI 1908)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 4411 4410 915 53 (set (reg/f:DI 1009)
        (reg/f:DI 1909)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 915 4411 916 53 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 48 {*movdi_aarch64}
     (nil))
(insn 916 915 917 53 (set (reg/f:DI 1011)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:228 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 917 916 918 53 (set (reg:DI 2 x2)
        (reg/f:DI 1909)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1009)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x82]  <var_decl 0x7f3c5d8407e0 *.LC26>)
            (nil))))
(insn 918 917 919 53 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 919 918 920 53 (set (reg:DI 0 x0)
        (mem/f/c:DI (reg/f:DI 1011) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1011)
        (nil)))
(call_insn 920 919 921 53 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 921 920 922 53 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
(debug_insn 922 921 923 53 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:228 -1
     (nil))
(debug_insn 923 922 186 53 (var_location:SI err (const_int -1 [0xffffffffffffffff])) options.c:229 -1
     (nil))
(insn 186 923 924 53 (set (reg/v:SI 360 [ err ])
        (const_int -1 [0xffffffffffffffff])) options.c:229 47 {*movsi_aarch64}
     (nil))
;;  succ:       54 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 54, loop depth 1, count 0, freq 132, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [93.3%] 
;;              12 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (FALLTHRU)
;;              53 [100.0%]  (FALLTHRU)
;;              52 [100.0%]  (FALLTHRU)
;;              45 [100.0%]  (FALLTHRU)
;;              38 [100.0%]  (FALLTHRU)
;;              31 [100.0%]  (FALLTHRU)
;;              24 [100.0%]  (FALLTHRU)
;;              23 [86.9%] 
;;              20 [100.0%]  (FALLTHRU)
;;              19 [86.9%] 
;;              16 [100.0%]  (FALLTHRU)
;;              15 [93.3%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u613(29){ }u614(31){ }u615(64){ }u616(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 320 328
;; live  gen 	
;; live  kill	
(code_label 924 186 925 54 29 "" [4 uses])
(note 925 924 926 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
;;  succ:       55 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; live  out 	 320 328

;; basic block 55, loop depth 1, count 0, freq 166, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              54 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u617(29){ }u618(31){ }u619(64){ }u620(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 837 838 1864
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 837 838 1864
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 294 1013
;; live  in  	 320 328
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 294 1013
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 926 925 927 55 14 "" [0 uses])
(note 927 926 928 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(debug_insn 928 927 929 55 (var_location:SI whichset (reg/v:SI 320 [ whichset ])) -1
     (nil))
(debug_insn 929 928 930 55 (var_location:SI nset (reg/v:SI 328 [ nset ])) -1
     (nil))
(debug_insn 930 929 933 55 (var_location:SI err (reg/v:SI 360 [ err ])) -1
     (nil))
(insn 933 930 934 55 (set (reg:DI 2 x2)
        (reg/f:DI 1013)) options.c:51 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1013)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x82]  <var_decl 0x7f3c5d840870 *.LC27>)
            (nil))))
(insn 934 933 935 55 (set (reg:DI 1 x1)
        (reg/v/f:DI 838 [ argv ])) options.c:51 48 {*movdi_aarch64}
     (nil))
(insn 935 934 936 55 (set (reg:SI 0 x0)
        (reg/v:SI 837 [ argc ])) options.c:51 47 {*movsi_aarch64}
     (nil))
(call_insn 936 935 937 55 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>) [0 getopt S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:51 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("getopt") [flags 0x41]  <function_decl 0x7f3c5e252400 getopt>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 937 936 938 55 (set (reg/v:SI 294 [ c ])
        (reg:SI 0 x0)) options.c:51 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (nil)))
(debug_insn 938 937 940 55 (var_location:SI c (reg/v:SI 294 [ c ])) options.c:51 -1
     (nil))
(insn 940 938 941 55 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 294 [ c ])
            (const_int -1 [0xffffffffffffffff]))) options.c:51 390 {*cmpsi}
     (nil))
(jump_insn 941 940 942 55 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 939)
            (pc))) options.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9700 (nil)))
 -> 939)
;;  succ:       7 [97.0%] 
;;              56 [3.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 294 320 328 837 838 1864
;; live  out 	 294 320 328

;; basic block 56, loop depth 0, count 0, freq 5
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [3.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u636(29){ }u637(31){ }u638(64){ }u639(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 360 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 360
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 360
;; live  gen 	 66 [cc]
;; live  kill	
(note 942 941 943 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 56 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 360 [ err ])
            (const_int 0 [0]))) options.c:232 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 360 [ err ])
        (nil)))
(jump_insn 944 943 945 56 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 949)
            (pc))) options.c:232 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 949)
;;  succ:       57 [0.0%]  (FALLTHRU)
;;              58 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328

;; basic block 57, loop depth 0, count 0, freq 0
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [0.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u642(29){ }u643(31){ }u644(64){ }u645(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 945 944 946 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 57 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:233 47 {*movsi_aarch64}
     (nil))
(call_insn 947 946 949 57 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:233 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 58, loop depth 0, count 0, freq 5
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u648(29){ }u649(31){ }u650(64){ }u651(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 328
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 949 947 950 58 49 "" [1 uses])
(note 950 949 951 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 951 950 952 58 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 3 [0x3]))) options.c:234 390 {*cmpsi}
     (nil))
(jump_insn 952 951 953 58 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1115)
            (pc))) options.c:234 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 1115)
;;  succ:       59 [28.0%]  (FALLTHRU)
;;              71 [72.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 328

;; basic block 59, loop depth 0, count 0, freq 1
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [28.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u654(29){ }u655(31){ }u656(64){ }u657(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; lr  def 	 66 [cc] 1015
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 320
;; live  gen 	 66 [cc] 1015
;; live  kill	
(note 953 952 954 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 59 (set (reg:SI 1015)
        (plus:SI (reg/v:SI 320 [ whichset ])
            (const_int -7 [0xfffffffffffffff9]))) options.c:235 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 320 [ whichset ])
        (nil)))
(insn 955 954 956 59 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1015)
            (const_int 7 [0x7]))) options.c:235 390 {*cmpsi}
     (nil))
(jump_insn 956 955 4060 59 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1043)
            (pc))) options.c:235 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1043)
;;  succ:       65 [50.0%] 
;;              60 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1015 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1015

;; basic block 60, loop depth 0, count 0, freq 1
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [50.0%]  (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u661(29){ }u662(31){ }u663(64){ }u664(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1015 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1015
;; lr  def 	 66 [cc] 1016 1017
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1015
;; live  gen 	 1016 1017
;; live  kill	 66 [cc]
(note 4060 956 957 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 957 4060 958 60 (set (reg/f:DI 1017)
        (high:DI (label_ref 960))) options.c:235 48 {*movdi_aarch64}
     (insn_list:REG_LABEL_OPERAND 960 (nil)))
(insn 958 957 959 60 (set (reg/f:DI 1016)
        (lo_sum:DI (reg/f:DI 1017)
            (label_ref 960))) options.c:235 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1017)
        (insn_list:REG_LABEL_OPERAND 960 (expr_list:REG_EQUAL (label_ref 960)
                (nil)))))
(jump_insn 959 958 963 60 (parallel [
            (set (pc)
                (mem:DI (unspec [
                            (reg/f:DI 1016)
                            (reg:SI 1015)
                        ] UNSPEC_CASESI) [0  S8 A8]))
            (clobber (reg:CC 66 cc))
            (clobber (scratch:DI))
            (clobber (scratch:DI))
            (use (label_ref 960))
        ]) options.c:235 16 {casesi_dispatch}
     (expr_list:REG_DEAD (reg/f:DI 1016)
        (expr_list:REG_DEAD (reg:SI 1015)
            (expr_list:REG_UNUSED (reg:CC 66 cc)
                (nil))))
 -> 960)
;;  succ:       65 [11.1%] 
;;              61 [22.2%] 
;;              62 [22.2%] 
;;              63 [22.2%] 
;;              64 [22.2%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 61, loop depth 0, count 0, freq 0
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [22.2%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u668(29){ }u669(31){ }u670(64){ }u671(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1018 1024 1025 1026 1029 1030 1031 1032 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1018 1024 1025 1026 1029 1030 1031 1032 1854
;; live  kill	
(code_label 963 959 964 61 52 "" [1 uses])
(note 964 963 965 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 966 61 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 48 {*movdi_aarch64}
     (nil))
(insn 966 965 971 61 (set (reg/f:DI 1018)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:237 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 971 966 972 61 (set (reg:DF 1025 [ A ])
        (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:237 54 {*movdf_aarch64}
     (nil))
(insn 972 971 973 61 (set (reg:DF 1026 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:237 54 {*movdf_aarch64}
     (nil))
(insn 973 972 976 61 (set (reg:DF 1024 [ D.3804 ])
        (plus:DF (reg:DF 1025 [ A ])
            (reg:DF 1026 [ B ]))) options.c:237 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1026 [ B ])
        (expr_list:REG_DEAD (reg:DF 1025 [ A ])
            (nil))))
(insn 976 973 977 61 (set (reg:DF 1030 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:237 54 {*movdf_aarch64}
     (nil))
(insn 977 976 978 61 (set (reg:DF 1029 [ D.3804 ])
        (plus:DF (reg:DF 1024 [ D.3804 ])
            (reg:DF 1030 [ C ]))) options.c:237 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1030 [ C ])
        (expr_list:REG_DEAD (reg:DF 1024 [ D.3804 ])
            (nil))))
(insn 978 977 979 61 (set (reg:DF 1032)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:237 54 {*movdf_aarch64}
     (nil))
(insn 979 978 980 61 (set (reg:DF 1031 [ D.3804 ])
        (minus:DF (reg:DF 1032)
            (reg:DF 1029 [ D.3804 ]))) options.c:237 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1032)
        (expr_list:REG_DEAD (reg:DF 1029 [ D.3804 ])
            (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                    (reg:DF 1029 [ D.3804 ]))
                (nil)))))
(insn 980 979 983 61 (set (mem/c:DF (plus:DI (reg/f:DI 1018)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1031 [ D.3804 ])) options.c:237 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 1031 [ D.3804 ])
        (expr_list:REG_DEAD (reg/f:DI 1018)
            (nil))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 62, loop depth 0, count 0, freq 0
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [22.2%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u690(29){ }u691(31){ }u692(64){ }u693(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1033 1039 1040 1041 1044 1045 1046 1047 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1033 1039 1040 1041 1044 1045 1046 1047 1854
;; live  kill	
(code_label 983 980 984 62 54 "" [1 uses])
(note 984 983 985 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 986 62 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 48 {*movdi_aarch64}
     (nil))
(insn 986 985 991 62 (set (reg/f:DI 1033)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:240 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 991 986 992 62 (set (reg:DF 1040 [ A ])
        (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:240 54 {*movdf_aarch64}
     (nil))
(insn 992 991 993 62 (set (reg:DF 1041 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:240 54 {*movdf_aarch64}
     (nil))
(insn 993 992 996 62 (set (reg:DF 1039 [ D.3804 ])
        (plus:DF (reg:DF 1040 [ A ])
            (reg:DF 1041 [ B ]))) options.c:240 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1041 [ B ])
        (expr_list:REG_DEAD (reg:DF 1040 [ A ])
            (nil))))
(insn 996 993 997 62 (set (reg:DF 1045 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:240 54 {*movdf_aarch64}
     (nil))
(insn 997 996 998 62 (set (reg:DF 1044 [ D.3804 ])
        (plus:DF (reg:DF 1039 [ D.3804 ])
            (reg:DF 1045 [ D ]))) options.c:240 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1045 [ D ])
        (expr_list:REG_DEAD (reg:DF 1039 [ D.3804 ])
            (nil))))
(insn 998 997 999 62 (set (reg:DF 1047)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:240 54 {*movdf_aarch64}
     (nil))
(insn 999 998 1000 62 (set (reg:DF 1046 [ D.3804 ])
        (minus:DF (reg:DF 1047)
            (reg:DF 1044 [ D.3804 ]))) options.c:240 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1047)
        (expr_list:REG_DEAD (reg:DF 1044 [ D.3804 ])
            (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                    (reg:DF 1044 [ D.3804 ]))
                (nil)))))
(insn 1000 999 1003 62 (set (mem/c:DF (plus:DI (reg/f:DI 1033)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 1046 [ D.3804 ])) options.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 1046 [ D.3804 ])
        (expr_list:REG_DEAD (reg/f:DI 1033)
            (nil))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 63, loop depth 0, count 0, freq 0
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [22.2%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u712(29){ }u713(31){ }u714(64){ }u715(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1048 1054 1055 1056 1059 1060 1061 1062 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1048 1054 1055 1056 1059 1060 1061 1062 1854
;; live  kill	
(code_label 1003 1000 1004 63 55 "" [1 uses])
(note 1004 1003 1005 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1005 1004 1006 63 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 48 {*movdi_aarch64}
     (nil))
(insn 1006 1005 1011 63 (set (reg/f:DI 1048)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:243 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1011 1006 1012 63 (set (reg:DF 1055 [ A ])
        (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:243 54 {*movdf_aarch64}
     (nil))
(insn 1012 1011 1013 63 (set (reg:DF 1056 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:243 54 {*movdf_aarch64}
     (nil))
(insn 1013 1012 1016 63 (set (reg:DF 1054 [ D.3804 ])
        (plus:DF (reg:DF 1055 [ A ])
            (reg:DF 1056 [ C ]))) options.c:243 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1056 [ C ])
        (expr_list:REG_DEAD (reg:DF 1055 [ A ])
            (nil))))
(insn 1016 1013 1017 63 (set (reg:DF 1060 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:243 54 {*movdf_aarch64}
     (nil))
(insn 1017 1016 1018 63 (set (reg:DF 1059 [ D.3804 ])
        (plus:DF (reg:DF 1054 [ D.3804 ])
            (reg:DF 1060 [ D ]))) options.c:243 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1060 [ D ])
        (expr_list:REG_DEAD (reg:DF 1054 [ D.3804 ])
            (nil))))
(insn 1018 1017 1019 63 (set (reg:DF 1062)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:243 54 {*movdf_aarch64}
     (nil))
(insn 1019 1018 1020 63 (set (reg:DF 1061 [ D.3804 ])
        (minus:DF (reg:DF 1062)
            (reg:DF 1059 [ D.3804 ]))) options.c:243 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1062)
        (expr_list:REG_DEAD (reg:DF 1059 [ D.3804 ])
            (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                    (reg:DF 1059 [ D.3804 ]))
                (nil)))))
(insn 1020 1019 1023 63 (set (mem/c:DF (plus:DI (reg/f:DI 1048)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 1061 [ D.3804 ])) options.c:243 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 1061 [ D.3804 ])
        (expr_list:REG_DEAD (reg/f:DI 1048)
            (nil))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 64, loop depth 0, count 0, freq 0
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [22.2%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u734(29){ }u735(31){ }u736(64){ }u737(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1063 1069 1070 1071 1074 1075 1076 1077 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1063 1069 1070 1071 1074 1075 1076 1077 1854
;; live  kill	
(code_label 1023 1020 1024 64 56 "" [1 uses])
(note 1024 1023 1025 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1025 1024 1026 64 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 48 {*movdi_aarch64}
     (nil))
(insn 1026 1025 1031 64 (set (reg/f:DI 1063)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:246 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1031 1026 1032 64 (set (reg:DF 1070 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:246 54 {*movdf_aarch64}
     (nil))
(insn 1032 1031 1033 64 (set (reg:DF 1071 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:246 54 {*movdf_aarch64}
     (nil))
(insn 1033 1032 1036 64 (set (reg:DF 1069 [ D.3804 ])
        (plus:DF (reg:DF 1070 [ B ])
            (reg:DF 1071 [ C ]))) options.c:246 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1071 [ C ])
        (expr_list:REG_DEAD (reg:DF 1070 [ B ])
            (nil))))
(insn 1036 1033 1037 64 (set (reg:DF 1075 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:246 54 {*movdf_aarch64}
     (nil))
(insn 1037 1036 1038 64 (set (reg:DF 1074 [ D.3804 ])
        (plus:DF (reg:DF 1069 [ D.3804 ])
            (reg:DF 1075 [ D ]))) options.c:246 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1075 [ D ])
        (expr_list:REG_DEAD (reg:DF 1069 [ D.3804 ])
            (nil))))
(insn 1038 1037 1039 64 (set (reg:DF 1077)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:246 54 {*movdf_aarch64}
     (nil))
(insn 1039 1038 1040 64 (set (reg:DF 1076 [ D.3804 ])
        (minus:DF (reg:DF 1077)
            (reg:DF 1074 [ D.3804 ]))) options.c:246 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1077)
        (expr_list:REG_DEAD (reg:DF 1074 [ D.3804 ])
            (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                    (reg:DF 1074 [ D.3804 ]))
                (nil)))))
(insn 1040 1039 1043 64 (set (mem/c:DF (plus:DI (reg/f:DI 1063)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 1076 [ D.3804 ])) options.c:246 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 1076 [ D.3804 ])
        (expr_list:REG_DEAD (reg/f:DI 1063)
            (nil))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 65, loop depth 0, count 0, freq 0
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [11.1%] 
;;              59 [50.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u756(29){ }u757(31){ }u758(64){ }u759(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1078 1079 1081
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1078 1079 1081
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1043 1040 1044 65 51 "" [5 uses])
(note 1044 1043 1045 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1045 1044 1046 65 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:249 -1
     (nil))
(debug_insn 1046 1045 1047 65 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)) options.c:249 -1
     (nil))
(insn 1047 1046 1048 65 (set (reg/f:DI 1079)
        (high:DI (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 1048 1047 1049 65 (set (reg/f:DI 1078)
        (lo_sum:DI (reg/f:DI 1079)
            (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1079)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)
            (nil))))
(insn 1049 1048 1051 65 (set (reg/f:DI 1081)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:249 48 {*movdi_aarch64}
     (nil))
(insn 1051 1049 1052 65 (set (reg:DI 2 x2)
        (reg/f:DI 1078)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1078)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x82]  <var_decl 0x7f3c5d840900 *.LC28>)
            (nil))))
(insn 1052 1051 1053 65 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 1053 1052 1054 65 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1081)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1081)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 1054 1053 1055 65 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 1055 1054 1056 65 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:249 -1
     (nil))
(debug_insn 1056 1055 1057 65 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:249 -1
     (nil))
(call_insn 1057 1056 1059 65 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:250 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 66, loop depth 0, count 0, freq 1
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [100.0%]  (FALLTHRU)
;;              62 [100.0%]  (FALLTHRU)
;;              63 [100.0%]  (FALLTHRU)
;;              64 [100.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u769(29){ }u770(31){ }u771(64){ }u772(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 386 1082
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; live  gen 	 66 [cc] 386 1082
;; live  kill	
(code_label 1059 1057 1060 66 57 "" [0 uses])
(note 1060 1059 1062 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1062 1060 1063 66 (set (reg/f:DI 1082)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:252 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1063 1062 1064 66 (set (reg:DF 386 [ D.3804 ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:252 54 {*movdf_aarch64}
     (nil))
(insn 1064 1063 1065 66 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 386 [ D.3804 ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 395 {*cmpedf}
     (nil))
(jump_insn 1065 1064 1066 66 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1088)
;;  succ:       70 [0.0%] 
;;              67 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854

;; basic block 67, loop depth 0, count 0, freq 1
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u777(29){ }u778(31){ }u779(64){ }u780(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1082
;; lr  def 	 66 [cc] 1086
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854
;; live  gen 	 66 [cc] 1086
;; live  kill	
(note 1066 1065 1069 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1066 1070 67 (set (reg:DF 1086 [ B ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:252 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (mem/c:DF (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
                    (const_int 24 [0x18]))) [1 B+0 S8 A64])
        (nil)))
(insn 1070 1069 1071 67 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1086 [ B ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1086 [ B ])
        (nil)))
(jump_insn 1071 1070 1072 67 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1088)
;;  succ:       70 [0.0%] 
;;              68 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854

;; basic block 68, loop depth 0, count 0, freq 1
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [100.0%]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u786(29){ }u787(31){ }u788(64){ }u789(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1082
;; lr  def 	 66 [cc] 1089
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854
;; live  gen 	 66 [cc] 1089
;; live  kill	
(note 1072 1071 1075 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1075 1072 1076 68 (set (reg:DF 1089 [ C ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:252 54 {*movdf_aarch64}
     (expr_list:REG_EQUAL (mem/c:DF (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
                    (const_int 32 [0x20]))) [1 C+0 S8 A64])
        (nil)))
(insn 1076 1075 1077 68 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1089 [ C ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1089 [ C ])
        (nil)))
(jump_insn 1077 1076 1078 68 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) options.c:252 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1088)
;;  succ:       70 [0.0%] 
;;              69 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854

;; basic block 69, loop depth 0, count 0, freq 1
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 [100.0%]  (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u795(29){ }u796(31){ }u797(64){ }u798(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1710 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1082
;; lr  def 	 66 [cc] 1092
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1082 1854
;; live  gen 	 66 [cc] 1092
;; live  kill	
(note 1078 1077 1082 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1082 1078 1083 69 (set (reg:DF 1092 [ D ])
        (mem/c:DF (plus:DI (reg/f:DI 1082)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:252 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1082)
        (expr_list:REG_EQUAL (mem/c:DF (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
                        (const_int 40 [0x28]))) [1 D+0 S8 A64])
            (nil))))
(insn 1083 1082 1084 69 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1092 [ D ])
            (const_double:DF 0.0 [0x0.0p+0]))) options.c:252 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1092 [ D ])
        (nil)))
(jump_insn 1084 1083 1088 69 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1088)
            (pc))) options.c:252 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1088)
;;  succ:       70 [0.0%] 
;;              74 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1854

;; basic block 70, loop depth 0, count 0, freq 0
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [0.0%] 
;;              66 [0.0%] 
;;              69 [0.0%] 
;;              68 [0.0%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u804(29){ }u805(31){ }u806(64){ }u807(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1093 1099 1100 1102
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 386 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 1093 1099 1100 1102
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1088 1084 1089 70 58 "" [4 uses])
(note 1089 1088 1090 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1090 1089 1091 70 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) options.c:253 -1
     (nil))
(debug_insn 1091 1090 1093 70 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)) options.c:253 -1
     (nil))
(insn 1093 1091 1098 70 (set (reg/f:DI 1093)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:253 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
            (nil))))
(insn 1098 1093 1099 70 (set (reg/f:DI 1100)
        (high:DI (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 1099 1098 1100 70 (set (reg/f:DI 1099)
        (lo_sum:DI (reg/f:DI 1100)
            (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)
            (nil))))
(insn 1100 1099 1102 70 (set (reg/f:DI 1102)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) options.c:253 48 {*movdi_aarch64}
     (nil))
(insn 1102 1100 1103 70 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1093)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 54 {*movdf_aarch64}
     (nil))
(insn 1103 1102 1104 70 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1093)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 54 {*movdf_aarch64}
     (nil))
(insn 1104 1103 1105 70 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1093)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1093)
        (nil)))
(insn 1105 1104 1106 70 (set (reg:DF 32 v0)
        (reg:DF 386 [ D.3804 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 386 [ D.3804 ])
        (nil)))
(insn 1106 1105 1107 70 (set (reg:DI 2 x2)
        (reg/f:DI 1099)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1099)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x82]  <var_decl 0x7f3c5d840990 *.LC29>)
            (nil))))
(insn 1107 1106 1108 70 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 1108 1107 1109 70 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1102)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1102)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 1109 1108 1110 70 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DF 35 v3)
        (expr_list:REG_DEAD (reg:DF 34 v2)
            (expr_list:REG_DEAD (reg:DF 33 v1)
                (expr_list:REG_DEAD (reg:DF 32 v0)
                    (expr_list:REG_DEAD (reg:DI 2 x2)
                        (expr_list:REG_DEAD (reg:SI 1 x1)
                            (expr_list:REG_UNUSED (reg:SI 0 x0)
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                                    (nil)))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (nil)))))))))))
(debug_insn 1110 1109 1111 70 (var_location:DI __stream (clobber (const_int 0 [0]))) options.c:253 -1
     (nil))
(debug_insn 1111 1110 1112 70 (var_location:DI __fmt (clobber (const_int 0 [0]))) options.c:253 -1
     (nil))
(insn 1112 1111 1113 70 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) options.c:256 47 {*movsi_aarch64}
     (nil))
(call_insn 1113 1112 1115 70 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:256 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 71, loop depth 0, count 0, freq 4
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 [72.0%] 
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u831(29){ }u832(31){ }u833(64){ }u834(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 328 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 328
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 328
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 1115 1113 1116 71 50 "" [1 uses])
(note 1116 1115 1117 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1117 1116 1118 71 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 328 [ nset ])
            (const_int 0 [0]))) options.c:258 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 328 [ nset ])
        (nil)))
(jump_insn 1118 1117 4258 71 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4258)
            (pc))) options.c:258 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 1912 (nil)))
 -> 4258)
;;  succ:       73 [80.9%]  (FALLTHRU)
;;              72 [19.1%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 72, loop depth 0, count 0, freq 1
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 [19.1%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 1854
;; live  kill	
(code_label 4258 1118 4257 72 247 "" [1 uses])
(note 4257 4258 4199 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 4199 4257 1119 72 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) -1
     (nil))
;;  succ:       74 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 73, loop depth 0, count 0, freq 3
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [80.9%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u837(29){ }u838(31){ }u839(64){ }u840(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 397 400 406 408 410 1103 1105 1108 1111 1115 1127 1128 1129 1130 1854
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 32 [v0] 33 [v1] 397 400 406 408 410 1103 1105 1108 1111 1115 1127 1128 1129 1130 1854
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1119 4199 1120 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1120 1119 1121 73 (set (reg/f:DI 1854)
        (high:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 48 {*movdi_aarch64}
     (nil))
(insn 1121 1120 1122 73 (set (reg/f:DI 1103)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) options.c:259 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1122 1121 1123 73 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) options.c:259 54 {*movdf_aarch64}
     (nil))
(call_insn/u 1123 1122 1124 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:259 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1124 1123 1126 73 (set (reg:TF 1105)
        (reg:TF 32 v0)) options.c:259 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (nil)))
(debug_insn 1126 1124 1129 73 (var_location:TF sum (reg:TF 1105)) options.c:259 -1
     (nil))
(insn 1129 1126 1130 73 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) options.c:260 54 {*movdf_aarch64}
     (nil))
(call_insn/u 1130 1129 1131 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1131 1130 1132 73 (set (reg:TF 397 [ D.3808 ])
        (reg:TF 32 v0)) options.c:260 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (nil)))
(insn 1132 1131 1133 73 (set (reg:TF 33 v1)
        (reg:TF 397 [ D.3808 ])) options.c:260 55 {*movtf_aarch64}
     (nil))
(insn 1133 1132 1134 73 (set (reg:TF 32 v0)
        (reg:TF 1105)) options.c:260 55 {*movtf_aarch64}
     (nil))
(call_insn/u 1134 1133 1135 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:260 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1135 1134 1137 73 (set (reg:TF 1108)
        (reg:TF 32 v0)) options.c:260 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (expr_list:REG_EQUAL (plus:TF (reg:TF 1105)
                (reg:TF 397 [ D.3808 ]))
            (nil))))
(debug_insn 1137 1135 1140 73 (var_location:TF sum (reg:TF 1108)) options.c:260 -1
     (nil))
(insn 1140 1137 1141 73 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) options.c:261 54 {*movdf_aarch64}
     (nil))
(call_insn/u 1141 1140 1142 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1142 1141 1143 73 (set (reg:TF 400 [ D.3808 ])
        (reg:TF 32 v0)) options.c:261 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (nil)))
(insn 1143 1142 1144 73 (set (reg:TF 33 v1)
        (reg:TF 400 [ D.3808 ])) options.c:261 55 {*movtf_aarch64}
     (nil))
(insn 1144 1143 1145 73 (set (reg:TF 32 v0)
        (reg:TF 1108)) options.c:261 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 1108)
        (nil)))
(call_insn/u 1145 1144 1146 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:261 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1146 1145 1148 73 (set (reg:TF 1111)
        (reg:TF 32 v0)) options.c:261 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (nil)))
(debug_insn 1148 1146 1151 73 (var_location:TF sum (reg:TF 1111)) options.c:261 -1
     (nil))
(insn 1151 1148 1152 73 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) options.c:262 54 {*movdf_aarch64}
     (nil))
(call_insn/u 1152 1151 1154 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__extenddftf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__extenddftf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:DF 32 v0))
                (nil)))))
(insn 1154 1152 1156 73 (set (reg:TF 33 v1)
        (reg:TF 1111)) options.c:262 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 1111)
        (nil)))
(call_insn/u 1156 1154 1157 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__addtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:262 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__addtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(insn 1157 1156 1159 73 (set (reg:TF 1115)
        (reg:TF 32 v0)) options.c:262 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 32 v0)
        (nil)))
(debug_insn 1159 1157 1160 73 (var_location:TF sum (reg:TF 1115)) options.c:262 -1
     (nil))
(insn 1160 1159 1161 73 (set (reg:TF 33 v1)
        (reg:TF 1115)) options.c:263 55 {*movtf_aarch64}
     (nil))
(insn 1161 1160 1162 73 (set (reg:TF 32 v0)
        (reg:TF 1105)) options.c:263 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 1105)
        (nil)))
(call_insn/u 1162 1161 1165 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(call_insn/u 1165 1162 1166 73 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:263 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1166 1165 1169 73 (set (reg:DF 406 [ D.3804 ])
        (reg:DF 32 v0)) options.c:263 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 1169 1166 1170 73 (set (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 16 [0x10])) [1 A+0 S8 A64])
        (reg:DF 406 [ D.3804 ])) options.c:263 54 {*movdf_aarch64}
     (nil))
(insn 1170 1169 1171 73 (set (reg:TF 33 v1)
        (reg:TF 1115)) options.c:264 55 {*movtf_aarch64}
     (nil))
(insn 1171 1170 1172 73 (set (reg:TF 32 v0)
        (reg:TF 397 [ D.3808 ])) options.c:264 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 397 [ D.3808 ])
        (nil)))
(call_insn/u 1172 1171 1175 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(call_insn/u 1175 1172 1176 73 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:264 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1176 1175 1179 73 (set (reg:DF 408 [ D.3804 ])
        (reg:DF 32 v0)) options.c:264 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 1179 1176 1180 73 (set (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 24 [0x18])) [1 B+0 S8 A64])
        (reg:DF 408 [ D.3804 ])) options.c:264 54 {*movdf_aarch64}
     (nil))
(insn 1180 1179 1181 73 (set (reg:TF 33 v1)
        (reg:TF 1115)) options.c:265 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 1115)
        (nil)))
(insn 1181 1180 1182 73 (set (reg:TF 32 v0)
        (reg:TF 400 [ D.3808 ])) options.c:265 55 {*movtf_aarch64}
     (expr_list:REG_DEAD (reg:TF 400 [ D.3808 ])
        (nil)))
(call_insn/u 1182 1181 1185 73 (parallel [
            (set (reg:TF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__divtf3") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:TF 33 v1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__divtf3") [flags 0x41])
            (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 33 v1))
                (expr_list (use (reg:TF 32 v0))
                    (nil))))))
(call_insn/u 1185 1182 1186 73 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("__trunctfdf2") [flags 0x41]) [0  S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) options.c:265 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__trunctfdf2") [flags 0x41])
        (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list (use (reg:TF 32 v0))
                (nil)))))
(insn 1186 1185 1189 73 (set (reg:DF 410 [ D.3804 ])
        (reg:DF 32 v0)) options.c:265 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 1189 1186 1192 73 (set (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 32 [0x20])) [1 C+0 S8 A64])
        (reg:DF 410 [ D.3804 ])) options.c:265 54 {*movdf_aarch64}
     (nil))
(insn 1192 1189 1193 73 (set (reg:DF 1127 [ D.3804 ])
        (plus:DF (reg:DF 406 [ D.3804 ])
            (reg:DF 408 [ D.3804 ]))) options.c:266 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 408 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 406 [ D.3804 ])
            (nil))))
(insn 1193 1192 1194 73 (set (reg:DF 1128 [ D.3804 ])
        (plus:DF (reg:DF 1127 [ D.3804 ])
            (reg:DF 410 [ D.3804 ]))) options.c:266 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1127 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 410 [ D.3804 ])
            (nil))))
(insn 1194 1193 1195 73 (set (reg:DF 1130)
        (const_double:DF 1.0e+0 [0x0.8p+1])) options.c:266 54 {*movdf_aarch64}
     (nil))
(insn 1195 1194 1196 73 (set (reg:DF 1129 [ D.3804 ])
        (minus:DF (reg:DF 1130)
            (reg:DF 1128 [ D.3804 ]))) options.c:266 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1130)
        (expr_list:REG_DEAD (reg:DF 1128 [ D.3804 ])
            (expr_list:REG_EQUAL (minus:DF (const_double:DF 1.0e+0 [0x0.8p+1])
                    (reg:DF 1128 [ D.3804 ]))
                (nil)))))
(insn 1196 1195 1197 73 (set (mem/c:DF (plus:DI (reg/f:DI 1103)
                (const_int 40 [0x28])) [1 D+0 S8 A64])
        (reg:DF 1129 [ D.3804 ])) options.c:266 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 1129 [ D.3804 ])
        (expr_list:REG_DEAD (reg/f:DI 1103)
            (nil))))
;;  succ:       74 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854

;; basic block 74, loop depth 0, count 0, freq 32
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              73 [100.0%]  (FALLTHRU)
;;              69 [100.0%]  (FALLTHRU)
;;              72 [100.0%]  (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u944(29){ }u945(31){ }u946(64){ }u947(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 243 286 1133 1135 1136 1138 1139 1853
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; live  gen 	 0 [x0] 66 [cc] 243 286 1133 1135 1136 1138 1139 1853
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1197 1196 1198 74 12 "" [0 uses])
(note 1198 1197 1201 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1201 1198 1203 74 (set (reg:DI 1133 [ SCALE ])
        (mem/c:DI (lo_sum:DI (reg/f:DI 1854)
                (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])) [4 SCALE+0 S8 A64])) graph500.c:68 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]) [4 SCALE+0 S8 A64])
        (nil)))
(insn 1203 1201 1204 74 (set (reg:DI 1135)
        (const_int 1 [0x1])) graph500.c:68 48 {*movdi_aarch64}
     (nil))
(insn 1204 1203 1205 74 (set (reg:DI 243 [ D.3798 ])
        (ashift:DI (reg:DI 1135)
            (subreg:QI (reg:DI 1133 [ SCALE ]) 0))) graph500.c:68 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1135)
        (expr_list:REG_DEAD (reg:DI 1133 [ SCALE ])
            (expr_list:REG_EQUAL (ashift:DI (const_int 1 [0x1])
                    (subreg:QI (reg:DI 1133 [ SCALE ]) 0))
                (nil)))))
(insn 1205 1204 1206 74 (set (reg/f:DI 1853)
        (high:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 48 {*movdi_aarch64}
     (nil))
(insn 1206 1205 1207 74 (set (reg/f:DI 1136)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:68 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1207 1206 1208 74 (set (mem/c:DI (plus:DI (reg/f:DI 1136)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])
        (reg:DI 243 [ D.3798 ])) graph500.c:68 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1136)
        (nil)))
(debug_insn 1208 1207 1209 74 (var_location:DI seed (const_int -1 [0xffffffffffffffff])) prng.c:29 -1
     (nil))
(insn 1209 1208 1210 74 (set (reg/f:DI 1139)
        (high:DI (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 48 {*movdi_aarch64}
     (nil))
(insn 1210 1209 1211 74 (set (reg/f:DI 1138)
        (lo_sum:DI (reg/f:DI 1139)
            (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>))) prng.c:30 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1139)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
            (nil))))
(insn 1211 1210 1212 74 (set (reg:DI 0 x0)
        (reg/f:DI 1138)) prng.c:30 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
        (nil)))
(call_insn 1212 1211 1213 74 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:30 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1213 1212 1214 74 (set (reg/f:DI 286 [ D.3800 ])
        (reg:DI 0 x0)) prng.c:30 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 1214 1213 1215 74 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 286 [ D.3800 ])
            (const_int 0 [0]))) prng.c:30 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/f:DI 286 [ D.3800 ])
        (nil)))
(jump_insn 1215 1214 1216 74 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3766)
            (pc))) prng.c:30 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 3766)
;;  succ:       75 [69.8%]  (FALLTHRU)
;;              267 [30.2%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1138 1710 1853 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1138 1853 1854

;; basic block 75, loop depth 0, count 0, freq 22
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 [69.8%]  (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u963(29){ }u964(31){ }u965(64){ }u966(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1138 1710 1853 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1138
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 414 416 1142
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1138 1853 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 414 416 1142
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1216 1215 1217 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1217 1216 1218 75 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>) [0 __errno_location S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:31 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f3c5e252300 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 1218 1217 1219 75 (set (reg/f:DI 414 [ D.3807 ])
        (reg:DI 0 x0)) prng.c:31 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(insn 1219 1218 1222 75 (set (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])
        (const_int 0 [0])) prng.c:31 47 {*movsi_aarch64}
     (nil))
(insn 1222 1219 1223 75 (set (reg:DI 0 x0)
        (reg/f:DI 1138)) prng.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1138)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC30") [flags 0x82]  <var_decl 0x7f3c5d840a20 *.LC30>)
            (nil))))
(call_insn 1223 1222 1225 75 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>) [0 getenv S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getenv") [flags 0x41]  <function_decl 0x7f3c5e252200 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1225 1223 1226 75 (set (reg:SI 2 x2)
        (const_int 10 [0xa])) prng.c:32 47 {*movsi_aarch64}
     (nil))
(insn 1226 1225 1228 75 (set (reg:DI 1 x1)
        (const_int 0 [0])) prng.c:32 48 {*movdi_aarch64}
     (nil))
(call_insn 1228 1226 1229 75 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>) [0 strtol S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) prng.c:32 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f3c5e252100 strtol>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (nil)))))))
(insn 1229 1228 1230 75 (set (reg/v:DI 416 [ seed ])
        (reg:DI 0 x0)) prng.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 1230 1229 1231 75 (var_location:DI seed (reg/v:DI 416 [ seed ])) prng.c:32 -1
     (nil))
(insn 1231 1230 1232 75 (set (reg:SI 1142 [ *_266 ])
        (mem:SI (reg/f:DI 414 [ D.3807 ]) [3 *_266+0 S4 A32])) prng.c:33 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 414 [ D.3807 ])
        (nil)))
(insn 1232 1231 1233 75 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1142 [ *_266 ])
            (const_int 0 [0]))) prng.c:33 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1142 [ *_266 ])
        (nil)))
(jump_insn 1233 1232 1234 75 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3766)
            (pc))) prng.c:33 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3766)
;;  succ:       267 [50.0%] 
;;              76 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1710 1853 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854

;; basic block 76, loop depth 0, count 0, freq 11
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [50.0%]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u986(29){ }u987(31){ }u988(64){ }u989(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1710 1853 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 416
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854
;; live  gen 	 66 [cc]
;; live  kill	
(note 1234 1233 1235 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1235 1234 1236 76 (var_location:DI seed (reg/v:DI 416 [ seed ])) -1
     (nil))
(insn 1236 1235 1237 76 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 416 [ seed ])
            (const_int 0 [0]))) prng.c:36 391 {*cmpdi}
     (nil))
(jump_insn 1237 1236 3769 76 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3766)
            (pc))) prng.c:36 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 3766)
;;  succ:       267
;;              77 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1710 1853 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854

;; basic block 77, loop depth 0, count 0, freq 32
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [100.0%]  (FALLTHRU)
;;              267 [100.0%]  (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u993(29){ }u994(31){ }u995(64){ }u996(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1710 1853 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854
;; lr  def 	 66 [cc] 244 245 421 424 425 427 1143 1145 1149 1150 1151 1164 1165 1170 1180 1862
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854
;; live  gen 	 66 [cc] 244 245 421 424 425 427 1143 1145 1149 1150 1151 1164 1165 1170 1180 1862
;; live  kill	
(code_label 3769 1237 1238 77 182 "" [0 uses])
(note 1238 3769 1239 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1239 1238 1242 77 (var_location:DI seed (reg/v:DI 416 [ seed ])) -1
     (nil))
(insn 1242 1239 1243 77 (set (reg/f:DI 1143)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) prng.c:37 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1243 1242 1244 77 (set (mem/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])
        (reg/v:DI 416 [ seed ])) prng.c:37 48 {*movdi_aarch64}
     (nil))
(debug_insn 1244 1243 1245 77 (var_location:DI userseed (reg/v:DI 416 [ seed ])) prng.c:38 -1
     (nil))
(debug_insn 1245 1244 1246 77 (var_location:DI seed (symbol_ref:DI ("prng_seed") [flags 0x82]  <var_decl 0x7f3c5e254a20 prng_seed>)) prng.c:38 -1
     (nil))
(insn 1246 1245 1247 77 (set (reg:DI 1145 [ D.3802 ])
        (and:DI (reg/v:DI 416 [ seed ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:19 468 {anddi3}
     (nil))
(insn 1247 1246 1251 77 (set (reg:DI 421 [ D.3802 ])
        (plus:DI (reg:DI 1145 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:19 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1145 [ D.3802 ])
        (nil)))
(insn 1251 1247 1252 77 (set (reg/f:DI 1149)
        (plus:DI (reg/f:DI 1143)
            (const_int 40 [0x28]))) prng.c:19 95 {*adddi3_aarch64}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                (const_int 40 [0x28])))
        (nil)))
(insn 1252 1251 1253 77 (set (mem/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 40 [0x28])) [4 MEM[(uint_fast32_t *)&prng_seed]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:19 48 {*movdi_aarch64}
     (nil))
(insn 1253 1252 1254 77 (set (reg:DI 1150 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 416 [ seed ])
            (const_int 30 [0x1e]))) prng.c:20 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 1254 1253 1255 77 (set (reg:DI 1151 [ D.3802 ])
        (and:DI (reg:DI 1150 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) prng.c:20 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1150 [ D.3802 ])
        (nil)))
(insn 1255 1254 1260 77 (set (reg:DI 424 [ D.3802 ])
        (plus:DI (reg:DI 1151 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:20 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1151 [ D.3802 ])
        (nil)))
(insn 1260 1255 1265 77 (set (mem/c:DI (plus:DI (reg/f:DI 1149)
                (const_int 8 [0x8])) [4 MEM[(uint_fast32_t *)&prng_seed + 8B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:20 48 {*movdi_aarch64}
     (nil))
(insn 1265 1260 1270 77 (set (mem/c:DI (plus:DI (reg/f:DI 1149)
                (const_int 16 [0x10])) [4 MEM[(uint_fast32_t *)&prng_seed + 16B]+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) prng.c:21 48 {*movdi_aarch64}
     (nil))
(insn 1270 1265 1271 77 (set (mem/c:DI (plus:DI (reg/f:DI 1149)
                (const_int 24 [0x18])) [4 MEM[(uint_fast32_t *)&prng_seed + 24B]+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) prng.c:22 48 {*movdi_aarch64}
     (nil))
(insn 1271 1270 1272 77 (set (reg:DI 425 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 416 [ seed ])
            (const_int 60 [0x3c]))) prng.c:23 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg/v:DI 416 [ seed ])
        (nil)))
(insn 1272 1271 1273 77 (set (reg:DI 1164 [ D.3802 ])
        (ashift:DI (reg:DI 425 [ D.3802 ])
            (const_int 4 [0x4]))) prng.c:23 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1273 1272 1274 77 (set (reg:DI 1165 [ D.3802 ])
        (plus:DI (reg:DI 425 [ D.3802 ])
            (const_int 1 [0x1]))) prng.c:23 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 425 [ D.3802 ])
        (nil)))
(insn 1274 1273 1279 77 (set (reg:DI 427 [ D.3802 ])
        (plus:DI (reg:DI 1164 [ D.3802 ])
            (reg:DI 1165 [ D.3802 ]))) prng.c:23 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1165 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 1164 [ D.3802 ])
            (nil))))
(insn 1279 1274 1280 77 (set (mem/c:DI (plus:DI (reg/f:DI 1149)
                (const_int 32 [0x20])) [4 MEM[(uint_fast32_t *)&prng_seed + 32B]+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) prng.c:23 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1149)
        (nil)))
(debug_insn 1280 1279 1281 77 (var_location:DI userseed (clobber (const_int 0 [0]))) prng.c:38 -1
     (nil))
(debug_insn 1281 1280 1282 77 (var_location:DI seed (clobber (const_int 0 [0]))) prng.c:38 -1
     (nil))
(debug_insn 1282 1281 1283 77 (var_location:DI st (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) prng.c:38 -1
     (nil))
(debug_insn 1283 1282 1284 77 (var_location:DI seed (symbol_ref:DI ("prng_seed") [flags 0x82]  <var_decl 0x7f3c5e254a20 prng_seed>)) prng.c:38 -1
     (nil))
(insn 1284 1283 1285 77 (set (reg/f:DI 1862)
        (high:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 48 {*movdi_aarch64}
     (nil))
(insn 1285 1284 1286 77 (set (reg/f:DI 1170)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) generator/splittable_mrg.c:280 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 1286 1285 1289 77 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:280 48 {*movdi_aarch64}
     (nil))
(insn 1289 1286 1292 77 (set (mem/c:DI (plus:DI (reg/f:DI 1170)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:281 48 {*movdi_aarch64}
     (nil))
(insn 1292 1289 1295 77 (set (mem/c:DI (plus:DI (reg/f:DI 1170)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 421 [ D.3802 ])) generator/splittable_mrg.c:282 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 421 [ D.3802 ])
        (nil)))
(insn 1295 1292 1298 77 (set (mem/c:DI (plus:DI (reg/f:DI 1170)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 424 [ D.3802 ])) generator/splittable_mrg.c:283 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 424 [ D.3802 ])
        (nil)))
(insn 1298 1295 1299 77 (set (mem/c:DI (plus:DI (reg/f:DI 1170)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 427 [ D.3802 ])) generator/splittable_mrg.c:284 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1170)
        (expr_list:REG_DEAD (reg:DI 427 [ D.3802 ])
            (nil))))
(debug_insn 1299 1298 1300 77 (var_location:DI st (clobber (const_int 0 [0]))) prng.c:39 -1
     (nil))
(debug_insn 1300 1299 1301 77 (var_location:DI seed (clobber (const_int 0 [0]))) prng.c:39 -1
     (nil))
(debug_insn 1301 1300 1303 77 (var_location:DI seed (clobber (const_int 0 [0]))) graph500.c:70 -1
     (nil))
(insn 1303 1301 1304 77 (set (reg/f:DI 1180)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:72 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1304 1303 1305 77 (set (reg:DI 244 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1180)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:72 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1180)
        (nil)))
(insn 1305 1304 1306 77 (set (reg/v:DI 245 [ desired_nedge ])
        (mult:DI (reg:DI 243 [ D.3798 ])
            (reg:DI 244 [ D.3798 ]))) graph500.c:72 363 {muldi3}
     (nil))
(debug_insn 1306 1305 1307 77 (var_location:DI desired_nedge (reg/v:DI 245 [ desired_nedge ])) graph500.c:72 -1
     (nil))
(insn 1307 1306 1308 77 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 243 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:74 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 243 [ D.3798 ])
        (nil)))
(jump_insn 1308 1307 1309 77 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1322)
            (pc))) graph500.c:74 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1322)
;;  succ:       78 [0.0%]  (FALLTHRU)
;;              79 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 244 245 1143 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 244 245 1143 1853 1854 1862

;; basic block 78, loop depth 0, count 0, freq 0
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [0.0%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u1065(29){ }u1066(31){ }u1067(64){ }u1068(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1182 1183 1184 1185 1186 1187
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1182 1183 1184 1185 1186 1187
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1309 1308 1310 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1310 1309 1311 78 (set (reg/f:DI 1183)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 48 {*movdi_aarch64}
     (nil))
(insn 1311 1310 1312 78 (set (reg/f:DI 1182)
        (lo_sum:DI (reg/f:DI 1183)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:74 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1183)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 1312 1311 1313 78 (set (reg/f:DI 1185)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 48 {*movdi_aarch64}
     (nil))
(insn 1313 1312 1314 78 (set (reg/f:DI 1184)
        (lo_sum:DI (reg/f:DI 1185)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:74 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1185)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 1314 1313 1315 78 (set (reg/f:DI 1187)
        (high:DI (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 48 {*movdi_aarch64}
     (nil))
(insn 1315 1314 1316 78 (set (reg/f:DI 1186)
        (lo_sum:DI (reg/f:DI 1187)
            (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>))) graph500.c:74 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1187)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>)
            (nil))))
(insn 1316 1315 1317 78 (set (reg:DI 3 x3)
        (reg/f:DI 1182)) graph500.c:74 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1182)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 1317 1316 1318 78 (set (reg:SI 2 x2)
        (const_int 74 [0x4a])) graph500.c:74 47 {*movsi_aarch64}
     (nil))
(insn 1318 1317 1319 78 (set (reg:DI 1 x1)
        (reg/f:DI 1184)) graph500.c:74 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1184)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 1319 1318 1320 78 (set (reg:DI 0 x0)
        (reg/f:DI 1186)) graph500.c:74 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1186)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC32") [flags 0x82]  <var_decl 0x7f3c5d840b40 *.LC32>)
            (nil))))
(call_insn 1320 1319 1322 78 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:74 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 79, loop depth 0, count 0, freq 32
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 [100.0%] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u1080(29){ }u1081(31){ }u1082(64){ }u1083(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 244 245 1143 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 244 245
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 244 245 1143 1853 1854 1862
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 1322 1320 1323 79 63 "" [1 uses])
(note 1323 1322 1324 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1324 1323 1325 79 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 244 [ D.3798 ])
            (reg/v:DI 245 [ desired_nedge ]))) graph500.c:75 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 244 [ D.3798 ])
        (nil)))
(jump_insn 1325 1324 1326 79 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1339)
            (pc))) graph500.c:75 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1339)
;;  succ:       80 [0.0%]  (FALLTHRU)
;;              81 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1143 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1143 1853 1854 1862

;; basic block 80, loop depth 0, count 0, freq 0
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [0.0%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u1087(29){ }u1088(31){ }u1089(64){ }u1090(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1188 1189 1190 1191 1192 1193
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1188 1189 1190 1191 1192 1193
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1326 1325 1327 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1327 1326 1328 80 (set (reg/f:DI 1189)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 48 {*movdi_aarch64}
     (nil))
(insn 1328 1327 1329 80 (set (reg/f:DI 1188)
        (lo_sum:DI (reg/f:DI 1189)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:75 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1189)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 1329 1328 1330 80 (set (reg/f:DI 1191)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 48 {*movdi_aarch64}
     (nil))
(insn 1330 1329 1331 80 (set (reg/f:DI 1190)
        (lo_sum:DI (reg/f:DI 1191)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:75 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1191)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 1331 1330 1332 80 (set (reg/f:DI 1193)
        (high:DI (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 48 {*movdi_aarch64}
     (nil))
(insn 1332 1331 1333 80 (set (reg/f:DI 1192)
        (lo_sum:DI (reg/f:DI 1193)
            (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>))) graph500.c:75 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1193)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>)
            (nil))))
(insn 1333 1332 1334 80 (set (reg:DI 3 x3)
        (reg/f:DI 1188)) graph500.c:75 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1188)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 1334 1333 1335 80 (set (reg:SI 2 x2)
        (const_int 75 [0x4b])) graph500.c:75 47 {*movsi_aarch64}
     (nil))
(insn 1335 1334 1336 80 (set (reg:DI 1 x1)
        (reg/f:DI 1190)) graph500.c:75 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1190)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 1336 1335 1337 80 (set (reg:DI 0 x0)
        (reg/f:DI 1192)) graph500.c:75 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1192)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC33") [flags 0x82]  <var_decl 0x7f3c5d840bd0 *.LC33>)
            (nil))))
(call_insn 1337 1336 1339 80 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:75 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 81, loop depth 0, count 0, freq 32
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 [100.0%] 
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u1102(29){ }u1103(31){ }u1104(64){ }u1105(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1143 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1143
;; lr  def 	 66 [cc] 246
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1143 1853 1854 1862
;; live  gen 	 66 [cc] 246
;; live  kill	
(code_label 1339 1337 1340 81 64 "" [1 uses])
(note 1340 1339 1343 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1343 1340 1344 81 (set (reg/f:DI 246 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 8 [0x8])) [2 dumpname+0 S8 A64])) graph500.c:82 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [2 dumpname+0 S8 A64])
        (nil)))
(insn 1344 1343 1345 81 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 246 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:82 391 {*cmpdi}
     (nil))
(jump_insn 1345 1344 1346 81 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2225)
            (pc))) graph500.c:82 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 2225)
;;  succ:       82 [30.2%]  (FALLTHRU)
;;              130 [69.8%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 246 1143 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 246 1143 1853 1854 1862

;; basic block 82, loop depth 0, count 0, freq 10
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [30.2%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u1111(29){ }u1112(31){ }u1113(64){ }u1114(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 66 [cc] 1198
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1853 1854 1862
;; live  gen 	 66 [cc] 1198
;; live  kill	
(note 1346 1345 1349 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1349 1346 1350 82 (set (reg:SI 1198 [ VERBOSE ])
        (mem/c:SI (lo_sum:DI (reg/f:DI 1853)
                (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) [3 VERBOSE+0 S4 A32])) graph500.c:83 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]) [3 VERBOSE+0 S4 A32])
        (nil)))
(insn 1350 1349 1351 82 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1198 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:83 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1198 [ VERBOSE ])
        (nil)))
(jump_insn 1351 1350 1352 82 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1363)
            (pc))) graph500.c:83 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1363)
;;  succ:       83 [29.0%]  (FALLTHRU)
;;              84 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1853 1854 1862

;; basic block 83, loop depth 0, count 0, freq 3
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 [29.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u1120(29){ }u1121(31){ }u1122(64){ }u1123(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1199 1200 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1853 1854 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1199 1200 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1352 1351 1353 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1353 1352 1354 83 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:83 -1
     (nil))
(debug_insn 1354 1353 1355 83 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)) graph500.c:83 -1
     (nil))
(insn 1355 1354 1356 83 (set (reg/f:DI 1200)
        (high:DI (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 1356 1355 1357 83 (set (reg/f:DI 1199)
        (lo_sum:DI (reg/f:DI 1200)
            (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1200)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)
            (nil))))
(insn 1357 1356 1359 83 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:83 48 {*movdi_aarch64}
     (nil))
(insn 1359 1357 1360 83 (set (reg:DI 2 x2)
        (reg/f:DI 1199)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1199)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x82]  <var_decl 0x7f3c5d840c60 *.LC34>)
            (nil))))
(insn 1360 1359 1361 83 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 1361 1360 1362 83 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 1362 1361 1363 83 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       84 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1853 1854 1862

;; basic block 84, loop depth 0, count 0, freq 10
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 [71.0%] 
;;              83 [100.0%]  (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u1132(29){ }u1133(31){ }u1134(64){ }u1135(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 66 [cc] 1203 1205
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1853 1854 1862
;; live  gen 	 66 [cc] 1203 1205
;; live  kill	
(code_label 1363 1362 1364 84 66 "" [1 uses])
(note 1364 1363 1366 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1364 1367 84 (set (reg/f:DI 1203)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:84 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 1367 1366 1368 84 (set (reg:SI 1205 [ use_RMAT ])
        (mem/c:SI (plus:DI (reg/f:DI 1203)
                (const_int 4 [0x4])) [3 use_RMAT+0 S4 A32])) graph500.c:84 47 {*movsi_aarch64}
     (nil))
(insn 1368 1367 1369 84 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1205 [ use_RMAT ])
            (const_int 0 [0]))) graph500.c:84 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1205 [ use_RMAT ])
        (nil)))
(jump_insn 1369 1368 1370 84 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1415)
            (pc))) graph500.c:84 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1415)
;;  succ:       85 [50.0%]  (FALLTHRU)
;;              86 [50.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1853 1854 1862

;; basic block 85, loop depth 0, count 0, freq 5
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [50.0%]  (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u1140(29){ }u1141(31){ }u1142(64){ }u1143(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 259 289 1208 1211 1213 1221 1859
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1853 1854 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 32 [v0] 33 [v1] 34 [v2] 259 289 1208 1211 1213 1221 1859
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1370 1369 1373 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1373 1370 1374 85 (set (mem/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) graph500.c:85 48 {*movdi_aarch64}
     (nil))
(debug_insn 1374 1373 1375 85 (var_location:DI sz (ashift:DI (reg/v:DI 245 [ desired_nedge ])
        (const_int 4 [0x4]))) graph500.c:86 -1
     (nil))
(insn 1375 1374 1376 85 (set (reg:DI 1208 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) xalloc.c:104 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg/v:DI 245 [ desired_nedge ])
        (nil)))
(insn 1376 1375 1377 85 (set (reg:DI 0 x0)
        (reg:DI 1208 [ D.3802 ])) xalloc.c:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1208 [ D.3802 ])
        (nil)))
(call_insn 1377 1376 1378 85 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 1378 1377 1379 85 (set (reg/f:DI 289 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 1379 1378 1382 85 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:86 -1
     (nil))
(insn 1382 1379 1383 85 (set (mem/f/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/f:DI 289 [ D.3806 ])) graph500.c:86 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 289 [ D.3806 ])
        (nil)))
(insn 1383 1382 1384 85 (set (reg/f:DI 1859)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 48 {*movdi_aarch64}
     (nil))
(insn 1384 1383 1385 85 (set (reg/f:DI 1211)
        (lo_sum:DI (reg/f:DI 1859)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 1385 1384 1386 85 (set (reg:DI 1 x1)
        (reg/f:DI 1211)) timer.c:43 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1211)
        (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
            (nil))))
(insn 1386 1385 1387 85 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 47 {*movsi_aarch64}
     (nil))
(call_insn 1387 1386 1389 85 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 1389 1387 1396 85 (set (reg/f:DI 1213)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:87 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 1396 1389 1401 85 (set (reg:DI 1221 [ SCALE ])
        (mem/c:DI (lo_sum:DI (reg/f:DI 1854)
                (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])) [4 SCALE+0 S8 A64])) graph500.c:87 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]) [4 SCALE+0 S8 A64])
        (nil)))
(insn 1401 1396 1402 85 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1213)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:87 54 {*movdf_aarch64}
     (nil))
(insn 1402 1401 1403 85 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1213)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:87 54 {*movdf_aarch64}
     (nil))
(insn 1403 1402 1404 85 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1213)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:87 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1213)
        (nil)))
(insn 1404 1403 1405 85 (set (reg:SI 2 x2)
        (subreg:SI (reg:DI 1221 [ SCALE ]) 0)) graph500.c:87 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1221 [ SCALE ])
        (nil)))
(insn 1405 1404 1406 85 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:87 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [4 nedge+0 S8 A64])
        (nil)))
(insn 1406 1405 1407 85 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:87 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 88 [0x58]))) [2 IJ+0 S8 A64])
        (nil)))
(call_insn 1407 1406 1408 85 (parallel [
            (call (mem:DI (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>) [0 rmat_edgelist S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DF 34 v2)
        (expr_list:REG_DEAD (reg:DF 33 v1)
            (expr_list:REG_DEAD (reg:DF 32 v0)
                (expr_list:REG_DEAD (reg:SI 2 x2)
                    (expr_list:REG_DEAD (reg:DI 1 x1)
                        (expr_list:REG_DEAD (reg:DI 0 x0)
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("rmat_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24c400 rmat_edgelist>)
                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                    (nil)))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (nil))))))))))
(call_insn 1408 1407 1409 85 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:87 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 1409 1408 1412 85 (set (reg:DF 259 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:87 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 1412 1409 1415 85 (set (mem/c:DF (plus:DI (reg/f:DI 1203)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 259 [ D.3804 ])) graph500.c:87 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1203)
        (expr_list:REG_DEAD (reg:DF 259 [ D.3804 ])
            (nil))))
;;  succ:       128 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 86, loop depth 0, count 0, freq 5
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 [50.0%] 
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u1194(29){ }u1195(31){ }u1196(64){ }u1197(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 261 262 290 430 431 432 433 434 435 438 441 444 447 576 1228 1232 1235 1236 1237 1238 1239 1242 1245 1248 1249 1251 1253 1256 1859 1863 1903 1904 1905 1906 1907
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 1203 1853 1854 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 261 262 290 430 431 432 433 434 435 438 441 444 447 576 1228 1232 1235 1236 1237 1238 1239 1242 1245 1248 1249 1251 1253 1256 1859 1863 1903 1904 1905 1906 1907
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1415 1412 1416 86 67 "" [1 uses])
(note 1416 1415 1417 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1417 1416 1418 86 (set (reg/f:DI 1859)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 48 {*movdi_aarch64}
     (nil))
(insn 1418 1417 1419 86 (set (reg/f:DI 1228)
        (lo_sum:DI (reg/f:DI 1859)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 1419 1418 1420 86 (set (reg:DI 1 x1)
        (reg/f:DI 1228)) timer.c:43 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1228)
        (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
            (nil))))
(insn 1420 1419 1421 86 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 47 {*movsi_aarch64}
     (nil))
(call_insn 1421 1420 1424 86 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 1424 1421 4075 86 (set (reg:DI 1232 [ SCALE ])
        (mem/c:DI (lo_sum:DI (reg/f:DI 1854)
                (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])) [4 SCALE+0 S8 A64])) graph500.c:89 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]) [4 SCALE+0 S8 A64])
        (nil)))
(debug_insn 4075 1424 1425 86 (var_location:SI D#53 (subreg:SI (reg:DI 1232 [ SCALE ]) 0)) -1
     (nil))
(insn 1425 4075 1428 86 (set (reg:SI 261 [ D.3797 ])
        (subreg:SI (reg:DI 1232 [ SCALE ]) 0)) graph500.c:89 47 {*movsi_aarch64}
     (nil))
(insn 1428 1425 1429 86 (set (reg:DI 262 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 32 [0x20])) [4 userseed+0 S8 A64])) graph500.c:89 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [4 userseed+0 S8 A64])
        (nil)))
(debug_insn 1429 1428 1430 86 (var_location:SI log_numverts (debug_expr:SI D#53)) graph500.c:89 -1
     (nil))
(debug_insn 1430 1429 1431 86 (var_location:DI M (reg/v:DI 245 [ desired_nedge ])) graph500.c:89 -1
     (nil))
(debug_insn 1431 1430 1432 86 (var_location:DI userseed1 (reg:DI 262 [ D.3802 ])) graph500.c:89 -1
     (nil))
(debug_insn 1432 1431 1433 86 (var_location:DI userseed2 (reg:DI 262 [ D.3802 ])) graph500.c:89 -1
     (nil))
(debug_insn 1433 1432 1434 86 (var_location:DI result_ptr_in (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>)) -1
     (nil))
(debug_insn 1434 1433 1435 86 (var_location:DI nedges_ptr_in (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>)) -1
     (nil))
(debug_insn 1435 1434 1436 86 (var_location:DI nedges_ptr (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>)) generator/make_graph.c:44 -1
     (nil))
(debug_insn 1436 1435 1437 86 (var_location:DI result_ptr (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>)) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1437 1436 1438 86 (var_location:DI userseed1 (reg:DI 262 [ D.3802 ])) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1438 1437 1439 86 (var_location:DI userseed2 (reg:DI 262 [ D.3802 ])) generator/make_graph.c:45 -1
     (nil))
(debug_insn 1439 1438 1440 86 (var_location:DI seed (debug_implicit_ptr:DI seed)) generator/make_graph.c:45 -1
     (nil))
(insn 1440 1439 1441 86 (set (reg:DI 1235 [ D.3802 ])
        (and:DI (reg:DI 262 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:52 468 {anddi3}
     (nil))
(insn 1441 1440 1442 86 (set (reg:DI 438 [ state$z1 ])
        (plus:DI (reg:DI 1235 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:52 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1235 [ D.3802 ])
        (nil)))
(insn 1442 1441 1443 86 (set (reg:DI 1236 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 30 [0x1e]))) generator/utils.c:53 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 1443 1442 1444 86 (set (reg:DI 1237 [ D.3802 ])
        (and:DI (reg:DI 1236 [ D.3802 ])
            (const_int 1073741823 [0x3fffffff]))) generator/utils.c:53 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1236 [ D.3802 ])
        (nil)))
(insn 1444 1443 1445 86 (set (reg:DI 441 [ state$z2 ])
        (plus:DI (reg:DI 1237 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:53 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1237 [ D.3802 ])
        (nil)))
(insn 1445 1444 1446 86 (set (reg:DI 444 [ D.3802 ])
        (lshiftrt:DI (reg:DI 262 [ D.3802 ])
            (const_int 60 [0x3c]))) generator/utils.c:56 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 262 [ D.3802 ])
        (nil)))
(insn 1446 1445 1447 86 (set (reg:DI 1238 [ D.3802 ])
        (ashift:DI (reg:DI 444 [ D.3802 ])
            (const_int 4 [0x4]))) generator/utils.c:56 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1447 1446 1448 86 (set (reg:DI 1239 [ D.3802 ])
        (plus:DI (reg:DI 444 [ D.3802 ])
            (const_int 1 [0x1]))) generator/utils.c:56 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 444 [ D.3802 ])
        (nil)))
(insn 1448 1447 1449 86 (set (reg:DI 447 [ state$z5 ])
        (plus:DI (reg:DI 1238 [ D.3802 ])
            (reg:DI 1239 [ D.3802 ]))) generator/utils.c:56 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1239 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 1238 [ D.3802 ])
            (nil))))
(debug_insn 1449 1448 1450 86 (var_location:DI userseed1 (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(debug_insn 1450 1449 1451 86 (var_location:DI userseed2 (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(debug_insn 1451 1450 1454 86 (var_location:DI seed (clobber (const_int 0 [0]))) generator/make_graph.c:50 -1
     (nil))
(insn 1454 1451 1455 86 (set (mem/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])
        (reg/v:DI 245 [ desired_nedge ])) generator/make_graph.c:52 48 {*movdi_aarch64}
     (nil))
(insn 1455 1454 1456 86 (set (reg:DI 1242 [ D.3802 ])
        (ashift:DI (reg/v:DI 245 [ desired_nedge ])
            (const_int 4 [0x4]))) generator/make_graph.c:53 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1456 1455 1457 86 (set (reg:DI 0 x0)
        (reg:DI 1242 [ D.3802 ])) generator/make_graph.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1242 [ D.3802 ])
        (nil)))
(call_insn 1457 1456 4080 86 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/make_graph.c:53 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 4080 1457 1458 86 (var_location:DI D#57 (reg:DI 0 x0)) -1
     (nil))
(insn 1458 4080 1459 86 (set (reg/v/f:DI 430 [ edges ])
        (reg:DI 0 x0)) generator/make_graph.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 1459 1458 1462 86 (var_location:DI edges (debug_expr:DI D#57)) generator/make_graph.c:53 -1
     (nil))
(insn 1462 1459 1463 86 (set (mem/f/c:DI (plus:DI (reg/f:DI 1203)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])
        (reg/v/f:DI 430 [ edges ])) generator/make_graph.c:54 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1203)
        (nil)))
(debug_insn 1463 1462 1464 86 (var_location:DI seed (debug_implicit_ptr:DI seed)) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1464 1463 1465 86 (var_location:SI logN (debug_expr:SI D#53)) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1465 1464 1466 86 (var_location:DI end_edge (reg/v:DI 245 [ desired_nedge ])) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1466 1465 1467 86 (var_location:DI edges (debug_expr:DI D#57)) generator/make_graph.c:54 -1
     (nil))
(debug_insn 1467 1466 1468 86 (var_location:DI start_edge (const_int 0 [0])) -1
     (nil))
(insn 1468 1467 1469 86 (set (reg:DI 1245)
        (const_int 1 [0x1])) generator/graph_generator.c:169 48 {*movdi_aarch64}
     (nil))
(insn 1469 1468 1470 86 (set (reg/v:DI 290 [ nverts ])
        (ashift:DI (reg:DI 1245)
            (subreg:QI (reg:DI 1232 [ SCALE ]) 0))) generator/graph_generator.c:169 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1245)
        (expr_list:REG_DEAD (reg:DI 1232 [ SCALE ])
            (expr_list:REG_EQUAL (ashift:DI (const_int 1 [0x1])
                    (subreg:QI (reg:DI 1232 [ SCALE ]) 0))
                (nil)))))
(debug_insn 1470 1469 1473 86 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) generator/graph_generator.c:169 -1
     (nil))
(debug_insn 1473 1470 1474 86 (var_location:DI state$z1 (reg:DI 438 [ state$z1 ])) generator/splittable_mrg.c:280 -1
     (nil))
(debug_insn 1474 1473 1475 86 (var_location:DI state$z2 (reg:DI 441 [ state$z2 ])) generator/splittable_mrg.c:281 -1
     (nil))
(debug_insn 1475 1474 1476 86 (var_location:DI state$z3 (reg:DI 438 [ state$z1 ])) generator/splittable_mrg.c:282 -1
     (nil))
(debug_insn 1476 1475 1477 86 (var_location:DI state$z4 (reg:DI 441 [ state$z2 ])) generator/splittable_mrg.c:283 -1
     (nil))
(debug_insn 1477 1476 1478 86 (var_location:DI state$z5 (reg:DI 447 [ state$z5 ])) generator/splittable_mrg.c:284 -1
     (nil))
(debug_insn 1478 1477 1479 86 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:172 -1
     (nil))
(debug_insn 1479 1478 1480 86 (var_location:DI seed (clobber (const_int 0 [0]))) generator/graph_generator.c:172 -1
     (nil))
(insn 1480 1479 1481 86 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 48 {*movdi_aarch64}
     (nil))
(insn 1481 1480 1482 86 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 48 {*movdi_aarch64}
     (nil))
(insn 1482 1481 1483 86 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:176 48 {*movdi_aarch64}
     (nil))
(insn 1483 1482 1484 86 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:176 48 {*movdi_aarch64}
     (nil))
(insn 1484 1483 1485 86 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:176 48 {*movdi_aarch64}
     (nil))
(insn 1485 1484 1486 86 (set (reg/f:DI 1863)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:177 95 {*adddi3_aarch64}
     (nil))
(insn 1486 1485 1487 86 (set (reg:DI 2 x2)
        (const_int 7 [0x7])) generator/graph_generator.c:177 48 {*movdi_aarch64}
     (nil))
(insn 1487 1486 1488 86 (set (reg:DI 1 x1)
        (const_int 50 [0x32])) generator/graph_generator.c:177 48 {*movdi_aarch64}
     (nil))
(insn 1488 1487 1489 86 (set (reg:DI 0 x0)
        (reg/f:DI 1863)) generator/graph_generator.c:177 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(call_insn 1489 1488 1490 86 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>) [0 mrg_skip.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:177 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_DEAD (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_skip.constprop.2") [flags 0x43]  <function_decl 0x7f3c5e23c600 mrg_skip.constprop>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 1490 1489 1492 86 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:177 -1
     (nil))
(insn 1492 1490 1493 86 (set (reg:DI 0 x0)
        (reg/f:DI 1863)) generator/splittable_mrg.c:268 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(call_insn 1493 1492 1494 86 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1494 1493 1495 86 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:178 -1
     (nil))
(debug_insn 1495 1494 1496 86 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:178 -1
     (nil))
(insn 1496 1495 1497 86 (set (reg:DI 1248 [ new_state.z1 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:179 48 {*movdi_aarch64}
     (nil))
(insn 1497 1496 1498 86 (set (reg:DI 1249)
        (const_int 4294967295 [0xffffffff])) generator/graph_generator.c:179 48 {*movdi_aarch64}
     (nil))
(insn 1498 1497 1499 86 (set (reg/v:DI 431 [ val0 ])
        (mult:DI (reg:DI 1248 [ new_state.z1 ])
            (reg:DI 1249))) generator/graph_generator.c:179 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1248 [ new_state.z1 ])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1248 [ new_state.z1 ])
                (const_int 4294967295 [0xffffffff]))
            (nil))))
(debug_insn 1499 1498 1500 86 (var_location:DI val0 (reg/v:DI 431 [ val0 ])) generator/graph_generator.c:179 -1
     (nil))
(debug_insn 1500 1499 1502 86 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:179 -1
     (nil))
(insn 1502 1500 1503 86 (set (reg:DI 0 x0)
        (reg/f:DI 1863)) generator/splittable_mrg.c:268 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(call_insn 1503 1502 1504 86 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1504 1503 1505 86 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:180 -1
     (nil))
(insn 1505 1504 4076 86 (set (reg:DI 1251 [ new_state.z1 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:180 48 {*movdi_aarch64}
     (nil))
(debug_insn 4076 1505 1506 86 (var_location:DI D#54 (plus:DI (reg/v:DI 431 [ val0 ])
        (reg:DI 1251 [ new_state.z1 ]))) -1
     (nil))
(insn 1506 4076 1507 86 (set (reg/v:DI 432 [ val0 ])
        (plus:DI (reg/v:DI 431 [ val0 ])
            (reg:DI 1251 [ new_state.z1 ]))) generator/graph_generator.c:180 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1251 [ new_state.z1 ])
        (expr_list:REG_DEAD (reg/v:DI 431 [ val0 ])
            (nil))))
(debug_insn 1507 1506 1508 86 (var_location:DI val0 (debug_expr:DI D#54)) generator/graph_generator.c:180 -1
     (nil))
(debug_insn 1508 1507 1510 86 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:180 -1
     (nil))
(insn 1510 1508 1511 86 (set (reg:DI 0 x0)
        (reg/f:DI 1863)) generator/splittable_mrg.c:268 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(call_insn 1511 1510 1512 86 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1512 1511 1513 86 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:181 -1
     (nil))
(debug_insn 1513 1512 1514 86 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:181 -1
     (nil))
(insn 1514 1513 1516 86 (set (reg:DI 1253 [ new_state.z1 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:182 48 {*movdi_aarch64}
     (nil))
(insn 1516 1514 1517 86 (set (reg/v:DI 433 [ val1 ])
        (mult:DI (reg:DI 1253 [ new_state.z1 ])
            (reg:DI 1249))) generator/graph_generator.c:182 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1253 [ new_state.z1 ])
        (expr_list:REG_DEAD (reg:DI 1249)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1253 [ new_state.z1 ])
                    (const_int 4294967295 [0xffffffff]))
                (nil)))))
(debug_insn 1517 1516 1518 86 (var_location:DI val1 (reg/v:DI 433 [ val1 ])) generator/graph_generator.c:182 -1
     (nil))
(debug_insn 1518 1517 1520 86 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:182 -1
     (nil))
(insn 1520 1518 1521 86 (set (reg:DI 0 x0)
        (reg/f:DI 1863)) generator/splittable_mrg.c:268 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(call_insn 1521 1520 1522 86 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>) [0 mrg_orig_step S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:268 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_orig_step.lto_priv.12") [flags 0x43]  <function_decl 0x7f3c5e239b00 mrg_orig_step>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 1522 1521 1523 86 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:183 -1
     (nil))
(insn 1523 1522 4077 86 (set (reg:DI 1256 [ new_state.z1 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/graph_generator.c:183 48 {*movdi_aarch64}
     (nil))
(debug_insn 4077 1523 1524 86 (var_location:DI D#55 (plus:DI (reg/v:DI 433 [ val1 ])
        (reg:DI 1256 [ new_state.z1 ]))) -1
     (nil))
(insn 1524 4077 1525 86 (set (reg/v:DI 434 [ val1 ])
        (plus:DI (reg/v:DI 433 [ val1 ])
            (reg:DI 1256 [ new_state.z1 ]))) generator/graph_generator.c:183 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1256 [ new_state.z1 ])
        (expr_list:REG_DEAD (reg/v:DI 433 [ val1 ])
            (nil))))
(debug_insn 1525 1524 1526 86 (var_location:DI val1 (debug_expr:DI D#55)) generator/graph_generator.c:183 -1
     (nil))
(debug_insn 1526 1525 1527 86 (var_location:DI ei (const_int 0 [0])) generator/graph_generator.c:193 -1
     (nil))
(insn 1527 1526 215 86 (set (reg:DI 576 [ ivtmp.134 ])
        (reg/v/f:DI 430 [ edges ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 430 [ edges ])
        (nil)))
(insn 215 1527 1643 86 (set (reg/v:DI 435 [ start_edge ])
        (const_int 0 [0])) generator/graph_generator.c:193 48 {*movdi_aarch64}
     (nil))
(insn 1643 215 1969 86 (set (reg:DI 1903)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 1969 1643 1970 86 (set (reg:DI 1904)
        (const_int 4979156007449604625 [0x4519840211493211])) generator/graph_generator.c:123 48 {*movdi_aarch64}
     (nil))
(insn 1970 1969 2011 86 (set (reg:DI 1905 [ D.3802 ])
        (ior:DI (reg/v:DI 432 [ val0 ])
            (reg:DI 1904))) generator/graph_generator.c:123 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 1353)
        (nil)))
(insn 2011 1970 2012 86 (set (reg:DI 1906)
        (const_int 3481428888784487333 [0x3050852102c843a5])) generator/graph_generator.c:126 48 {*movdi_aarch64}
     (nil))
(insn 2012 2011 2167 86 (set (reg:DI 1907 [ D.3802 ])
        (ior:DI (reg/v:DI 434 [ val1 ])
            (reg:DI 1906))) generator/graph_generator.c:126 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 1364)
        (nil)))
;;  succ:       126 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1710 1853 1854 1859 1862 1863
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1853 1854 1859 1862 1863

;; basic block 87, loop depth 1, count 0, freq 214, maybe hot
;; Invalid sum of incoming frequencies 19, should be 214
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 [91.0%] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u1313(29){ }u1314(31){ }u1315(64){ }u1316(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 435 438 441 447
;; lr  def 	 66 [cc] 266 460
;; live  in  	 435 576
;; live  gen 	 66 [cc] 266 460
;; live  kill	
(code_label 2167 2012 1530 87 94 "" [1 uses])
(note 1530 2167 1531 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1531 1530 1532 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [5 MEM[(struct mrg_state *)&new_state]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
(insn 1532 1531 1533 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [5 MEM[(struct mrg_state *)&new_state + 8B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
(insn 1533 1532 1534 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [5 MEM[(struct mrg_state *)&new_state + 16B]+0 S8 A64])
        (reg:DI 438 [ state$z1 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
(insn 1534 1533 1535 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [5 MEM[(struct mrg_state *)&new_state + 24B]+0 S8 A64])
        (reg:DI 441 [ state$z2 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
(insn 1535 1534 4079 87 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [5 MEM[(struct mrg_state *)&new_state + 32B]+0 S8 A64])
        (reg:DI 447 [ state$z5 ])) generator/graph_generator.c:194 48 {*movdi_aarch64}
     (nil))
(debug_insn 4079 1535 1536 87 (var_location:DI D#56 (reg/v:DI 435 [ start_edge ])) -1
     (nil))
(insn 1536 4079 1537 87 (set (reg/v:DI 266 [ exponent_middle ])
        (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:195 48 {*movdi_aarch64}
     (nil))
(debug_insn 1537 1536 1538 87 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1538 1537 1542 87 (var_location:DI exponent_high (const_int 0 [0])) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1542 1538 1543 87 (var_location:DI exponent_low (const_int 0 [0])) -1
     (nil))
(debug_insn 1543 1542 1544 87 (var_location:SI byte_index (const_int 8 [0x8])) -1
     (nil))
(debug_insn 1544 1543 195 87 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
(insn 195 1544 1545 87 (set (reg/v:SI 460 [ byte_index ])
        (const_int 8 [0x8])) generator/splittable_mrg.c:193 47 {*movsi_aarch64}
     (nil))
(insn 1545 195 1546 87 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 435 [ start_edge ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 391 {*cmpdi}
     (nil))
(jump_insn 1546 1545 1623 87 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1620)
            (pc))) generator/splittable_mrg.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 1620)
;;  succ:       90 [91.0%] 
;;              88 [9.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863
;; live  out 	 266 435 460 576

;; basic block 88, loop depth 1, count 0, freq 214, maybe hot
;; Invalid sum of incoming frequencies 36, should be 214
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 [9.0%]  (FALLTHRU)
;;              92 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u1332(29){ }u1333(31){ }u1334(64){ }u1335(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 290
;; lr  def 	 66 [cc]
;; live  in  	 435 576
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 1623 1546 1547 88 75 "" [0 uses])
(note 1547 1623 1550 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1550 1547 1551 88 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1551 1550 1552 88 (var_location:DI exponent_high (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1552 1551 1553 88 (var_location:DI exponent_middle (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1553 1552 1554 88 (var_location:SI byte_index (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1554 1553 1555 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1555 1554 1556 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1556 1555 1557 88 (var_location:QI val (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1557 1556 1558 88 (var_location:DI exponent_low (clobber (const_int 0 [0]))) generator/graph_generator.c:195 -1
     (nil))
(debug_insn 1558 1557 1559 88 (var_location:DI D#37 (ashift:DI (debug_expr:DI D#56)
        (const_int 4 [0x4]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1559 1558 1560 88 (var_location:DI D#36 (plus:DI (debug_expr:DI D#57)
        (debug_expr:DI D#37))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1560 1559 1562 88 (var_location:SI D#1 (const_int 0 [0])) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1562 1560 1563 88 (var_location:SI lgN (debug_expr:SI D#53)) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1563 1562 1564 88 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1564 1563 1565 88 (var_location:DI result (debug_expr:DI D#36)) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1565 1564 1566 88 (var_location:DI val0 (debug_expr:DI D#54)) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1566 1565 1567 88 (var_location:DI val1 (debug_expr:DI D#55)) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 1567 1566 1568 88 (var_location:DI base_tgt (const_int 0 [0])) -1
     (nil))
(debug_insn 1568 1567 1569 88 (var_location:DI base_src (const_int 0 [0])) -1
     (nil))
(debug_insn 1569 1568 1570 88 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1570 1569 1571 88 (var_location:DI nverts (reg/v:DI 290 [ nverts ])) -1
     (nil))
(insn 1571 1570 1572 88 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 290 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 391 {*cmpdi}
     (nil))
(jump_insn 1572 1571 1575 88 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1627)
            (pc))) generator/graph_generator.c:136 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 1627)
;;  succ:       93 [95.5%] 
;;              89 [4.5%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576

;; basic block 89, loop depth 1, count 0, freq 10
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [4.5%]  (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u1340(29){ }u1341(31){ }u1342(64){ }u1343(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 443 747
;; live  in  	 435 576
;; live  gen 	 443 747
;; live  kill	
(note 1575 1572 213 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 213 1575 4074 89 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/graph_generator.c:135 48 {*movdi_aarch64}
     (nil))
(debug_insn 4074 213 214 89 (var_location:DI D#52 (const_int 0 [0])) -1
     (nil))
(insn 214 4074 1620 89 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/graph_generator.c:135 48 {*movdi_aarch64}
     (nil))
;;  succ:       119 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; live  out 	 435 443 576 747

;; basic block 90, loop depth 1, count 0, freq 195, maybe hot
;;  prev block 89, next block 293, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 [91.0%] 
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u1348(29){ }u1349(31){ }u1350(64){ }u1351(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1901 1902
;; live  in  	 266 435 460 576
;; live  gen 	 1901 1902
;; live  kill	
(code_label 1620 214 1578 90 74 "" [1 uses])
(note 1578 1620 1605 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1605 1578 1606 90 (set (reg/f:DI 1901)
        (high:DI (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 48 {*movdi_aarch64}
     (nil))
(insn 1606 1605 4334 90 (set (reg/f:DI 1902)
        (lo_sum:DI (reg/f:DI 1901)
            (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1272)
        (nil)))
;;  succ:       293 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902

;; basic block 293, loop depth 2, count 0, freq 194, maybe hot
;; Invalid sum of incoming frequencies 372, should be 194
;;  prev block 90, next block 91, flags: (NEW, RTL, MODIFIED)
;;  pred:       90 [100.0%]  (FALLTHRU)
;;              300 [100.0%]  (FALLTHRU)
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266
;; lr  def 	 66 [cc] 457
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	 66 [cc] 457
;; live  kill	
(code_label 4334 1606 4333 293 276 "" [0 uses])
(note 4333 4334 1579 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1579 4333 1580 293 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
(debug_insn 1580 1579 1581 293 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
(insn 1581 1580 1582 293 (set (reg/v:SI 457 [ val ])
        (zero_extend:SI (subreg:QI (reg/v:DI 266 [ exponent_middle ]) 0))) generator/splittable_mrg.c:194 88 {*zero_extendqisi2_aarch64}
     (nil))
(debug_insn 1582 1581 1583 293 (var_location:QI val (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/splittable_mrg.c:194 -1
     (nil))
(insn 1583 1582 1584 293 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 457 [ val ])
            (const_int 0 [0]))) generator/splittable_mrg.c:195 390 {*cmpsi}
     (nil))
(jump_insn 1584 1583 1585 293 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1612)
            (pc))) generator/splittable_mrg.c:195 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1612)
;;  succ:       91 [29.0%]  (FALLTHRU)
;;              92 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 457 460 576 1863 1901 1902
;; live  out 	 266 435 457 460 576 1901 1902

;; basic block 91, loop depth 2, count 0, freq 56, maybe hot
;;  prev block 293, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       293 [29.0%]  (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u1357(29){ }u1358(31){ }u1359(64){ }u1360(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 457 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 457 460 1863 1901 1902
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  in  	 266 435 457 460 576 1901 1902
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1259 1261 1262 1263 1264 1266 1267 1268 1269 1270 1271 1272
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 1585 1584 3975 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3975 1585 1586 91 (var_location:QI D#50 (subreg:QI (reg/v:SI 457 [ val ]) 0)) generator/graph_generator.c:136 -1
     (nil))
(debug_insn 1586 3975 1587 91 (var_location:DI mat (plus:DI (plus:DI (mult:DI (zero_extend:DI (debug_expr:QI D#50))
                (const_int 72 [0x48]))
            (mult:DI (sign_extend:DI (reg/v:SI 460 [ byte_index ]))
                (const_int 18432 [0x4800])))
        (symbol_ref:DI ("mrg_skip_matrices") [flags 0xc2]  <var_decl 0x7f3c5e254870 mrg_skip_matrices>))) generator/splittable_mrg.c:195 -1
     (nil))
(debug_insn 1587 1586 1590 91 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1590 1587 1592 91 (set (reg:DI 1259 [ val ])
        (sign_extend:DI (reg/v:SI 457 [ val ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 457 [ val ])
        (nil)))
(insn 1592 1590 1594 91 (set (reg:DI 1261)
        (ashift:DI (reg:DI 1259 [ val ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1594 1592 1595 91 (set (reg:DI 1262)
        (plus:DI (reg:DI 1261)
            (reg:DI 1259 [ val ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1261)
        (expr_list:REG_DEAD (reg:DI 1259 [ val ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1259 [ val ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 1595 1594 1597 91 (set (reg:DI 1263)
        (ashift:DI (reg:DI 1262)
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1262)
        (nil)))
(insn 1597 1595 1599 91 (set (reg:DI 1264 [ byte_index ])
        (sign_extend:DI (reg/v:SI 460 [ byte_index ]))) generator/splittable_mrg.c:195 80 {*extendsidi2_aarch64}
     (nil))
(insn 1599 1597 1601 91 (set (reg:DI 1266)
        (ashift:DI (reg:DI 1264 [ byte_index ])
            (const_int 3 [0x3]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1601 1599 1602 91 (set (reg:DI 1267)
        (plus:DI (reg:DI 1266)
            (reg:DI 1264 [ byte_index ]))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1266)
        (expr_list:REG_DEAD (reg:DI 1264 [ byte_index ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1264 [ byte_index ])
                    (const_int 9 [0x9]))
                (nil)))))
(insn 1602 1601 1604 91 (set (reg:DI 1268)
        (ashift:DI (reg:DI 1267)
            (const_int 11 [0xb]))) generator/splittable_mrg.c:195 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1267)
        (nil)))
(insn 1604 1602 4402 91 (set (reg:DI 1269)
        (plus:DI (reg:DI 1263)
            (reg:DI 1268))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1268)
        (expr_list:REG_DEAD (reg:DI 1263)
            (nil))))
(insn 4402 1604 4403 91 (set (reg/f:DI 1272)
        (reg/f:DI 1901)) generator/splittable_mrg.c:195 -1
     (nil))
(insn 4403 4402 1607 91 (set (reg/f:DI 1271)
        (reg/f:DI 1902)) generator/splittable_mrg.c:195 -1
     (nil))
(insn 1607 4403 1608 91 (set (reg:DI 1270 [ D.3811 ])
        (plus:DI (reg:DI 1269)
            (reg/f:DI 1902))) generator/splittable_mrg.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1271)
        (expr_list:REG_DEAD (reg:DI 1269)
            (nil))))
(insn 1608 1607 1609 91 (set (reg:DI 2 x2)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(insn 1609 1608 1610 91 (set (reg:DI 1 x1)
        (reg/f:DI 1863)) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))
        (nil)))
(insn 1610 1609 1611 91 (set (reg:DI 0 x0)
        (reg:DI 1270 [ D.3811 ])) generator/splittable_mrg.c:165 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1270 [ D.3811 ])
        (nil)))
(call_insn 1611 1610 1612 91 (parallel [
            (call (mem:DI (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>) [0 mrg_apply_transition S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/splittable_mrg.c:165 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_DEAD (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("mrg_apply_transition.lto_priv.7") [flags 0x43]  <function_decl 0x7f3c5e24cf00 mrg_apply_transition>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       92 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902

;; basic block 92, loop depth 2, count 0, freq 194, maybe hot
;;  prev block 91, next block 300, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       293 [71.0%] 
;;              91 [100.0%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u1401(29){ }u1402(31){ }u1403(64){ }u1404(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 266 460
;; lr  def 	 66 [cc] 266 460
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	 66 [cc] 266 460
;; live  kill	
(code_label 1612 1611 1613 92 73 "" [1 uses])
(note 1613 1612 1614 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1614 1613 1615 92 (set (reg/v:SI 460 [ byte_index ])
        (plus:SI (reg/v:SI 460 [ byte_index ])
            (const_int 1 [0x1]))) generator/splittable_mrg.c:193 94 {*addsi3_aarch64}
     (nil))
(debug_insn 1615 1614 4078 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) generator/splittable_mrg.c:193 -1
     (nil))
(debug_insn 4078 1615 1616 92 (var_location:DI D#56 (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
        (const_int 8 [0x8]))) -1
     (nil))
(insn 1616 4078 1618 92 (set (reg/v:DI 266 [ exponent_middle ])
        (lshiftrt:DI (reg/v:DI 266 [ exponent_middle ])
            (const_int 8 [0x8]))) generator/splittable_mrg.c:193 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(debug_insn 1618 1616 1619 92 (var_location:SI byte_index (reg/v:SI 460 [ byte_index ])) -1
     (nil))
(debug_insn 1619 1618 1621 92 (var_location:DI exponent_middle (debug_expr:DI D#56)) -1
     (nil))
(insn 1621 1619 1622 92 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 266 [ exponent_middle ])
            (const_int 0 [0]))) generator/splittable_mrg.c:193 391 {*cmpdi}
     (nil))
(jump_insn 1622 1621 4348 92 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4348)
            (pc))) generator/splittable_mrg.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4348)
;;  succ:       300 [91.0%]  (DFS_BACK)
;;              88 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902

;; basic block 300, loop depth 2, count 0, freq 177, maybe hot
;;  prev block 92, next block 93, flags: (NEW, RTL, MODIFIED)
;;  pred:       92 [91.0%]  (DFS_BACK)
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 266 435 460 576 1901 1902
;; live  gen 	
;; live  kill	
(code_label 4348 1622 4347 300 283 "" [1 uses])
(note 4347 4348 1627 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
;;  succ:       293 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 266 290 432 434 435 438 441 447 460 576 1863 1901 1902
;; live  out 	 266 435 460 576 1901 1902

;; basic block 93, loop depth 1, count 0, freq 205, maybe hot
;;  prev block 300, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [95.5%] 
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u1412(29){ }u1413(31){ }u1414(64){ }u1415(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 750 1273
;; live  in  	 435 576
;; live  gen 	 66 [cc] 750 1273
;; live  kill	
(code_label 1627 4347 1628 93 71 "" [1 uses])
(note 1628 1627 1629 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1629 1628 1630 93 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1630 1629 1631 93 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1631 1630 1632 93 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1632 1631 1633 93 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1633 1632 1634 93 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1634 1633 1635 93 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(insn 1635 1634 1636 93 (set (reg:DI 750 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 48 {*movdi_aarch64}
     (nil))
(debug_insn 1636 1635 1637 93 (var_location:DI a (reg:DI 750 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1637 1636 1638 93 (var_location:DI a (reg:DI 750 [ D.3802 ])) -1
     (nil))
(debug_insn 1638 1637 1639 93 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 1639 1638 1640 93 (set (reg:DI 1273)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 48 {*movdi_aarch64}
     (nil))
(insn 1640 1639 1641 93 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 750 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:27 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 750 [ D.3802 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
(jump_insn 1641 1640 1642 93 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1671)
            (pc))) generator/mod_arith_64bit.h:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1671)
;;  succ:       95 [0.0%]  (LOOP_EXIT)
;;              94 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 750 1273 1863
;; live  out 	 435 576 750 1273

;; basic block 94, loop depth 1, count 0, freq 204, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93 [100.0%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u1425(29){ }u1426(31){ }u1427(64){ }u1428(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 750 1273 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 750 1273 1903
;; lr  def 	 66 [cc] 468 751 1274 1275 1276 1277 1278 1279 1280 1282 1283
;; live  in  	 435 576 750 1273
;; live  gen 	 66 [cc] 468 751 1274 1275 1276 1277 1278 1279 1280 1282 1283
;; live  kill	
(note 1642 1641 4404 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 4404 1642 1644 94 (set (reg:DI 1275)
        (reg:DI 1903)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1644 4404 1645 94 (set (reg:DI 1274 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1903))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1275)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 750 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
(insn 1645 1644 1646 94 (set (reg:DI 1277)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 1646 1645 1647 94 (set (reg:DI 1276)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1277)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1277)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1274 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
(insn 1647 1646 1648 94 (set (reg:DI 1278)
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1276))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
(insn 1648 1647 1649 94 (set (reg:DI 1279)
        (lshiftrt:DI (reg:DI 1278)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1278)
        (nil)))
(insn 1649 1648 1650 94 (set (reg:DI 1280)
        (plus:DI (reg:DI 1276)
            (reg:DI 1279))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1279)
        (expr_list:REG_DEAD (reg:DI 1276)
            (nil))))
(insn 1650 1649 1652 94 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1280)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1280)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1274 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 1652 1650 1654 94 (set (reg:DI 1282)
        (ashift:DI (reg:DI 468 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1654 1652 1655 94 (set (reg:DI 1283)
        (minus:DI (reg:DI 1282)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1282)
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 1655 1654 1656 94 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1274 [ D.3802 ])
            (reg:DI 1283))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1283)
        (expr_list:REG_DEAD (reg:DI 1274 [ D.3802 ])
            (nil))))
(debug_insn 1656 1655 1657 94 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1657 1656 1658 94 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1658 1657 1659 94 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(insn 1659 1658 1660 94 (set (reg:DI 751 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 48 {*movdi_aarch64}
     (nil))
(debug_insn 1660 1659 1661 94 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1661 1660 1662 94 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1662 1661 1663 94 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1663 1662 1664 94 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1664 1663 1666 94 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1666 1664 1667 94 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1273))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1273)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 751 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
(jump_insn 1667 1666 1671 94 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1751)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1751)
;;  succ:       99 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              100 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 468 576 750 751 1863
;; live  out 	 435 468 576 750 751

;; basic block 95, loop depth 0, count 0, freq 1
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       153 [100.0%]  (FALLTHRU)
;;              93 [0.0%]  (LOOP_EXIT)
;;              152 [100.0%] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u1457(29){ }u1458(31){ }u1459(64){ }u1460(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1671 1667 1672 95 76 "" [2 uses])
(note 1672 1671 1673 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1673 1672 1674 95 (var_location:DI D#11 (const_int 107374182 [0x6666666])) -1
     (nil))
(call_insn/c/i 1674 1673 3968 95 (parallel [
            (call (mem:DI (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>) [0 mod_mul.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("mod_mul.part.1.lto_priv.10") [flags 0x43]  <function_decl 0x7f3c5e24ce00 mod_mul.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 96, loop depth 2, count 0, freq 143, maybe hot
;;  prev block 95, next block 299, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       290 [95.5%] 
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u1462(29){ }u1463(31){ }u1464(64){ }u1465(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 750 751 1306 1892 1903
;; lr  def 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 468 1285 1286 1287 1288 1289 1290 1291 1293 1294 1295
;; live  kill	
(code_label 3968 1674 1676 96 194 "" [1 uses])
(note 1676 3968 1687 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1687 1676 1688 96 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1688 1687 1689 96 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1689 1688 1690 96 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1690 1689 1691 96 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1691 1690 1692 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1692 1691 1693 96 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1693 1692 1694 96 (var_location:DI D#30 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1694 1693 1695 96 (var_location:DI a (debug_expr:DI D#30)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1695 1694 1696 96 (var_location:DI a (debug_expr:DI D#30)) -1
     (nil))
(debug_insn 1696 1695 4399 96 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 4399 1696 1698 96 (set (reg:DI 1286)
        (reg:DI 1903)) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 1698 4399 4400 96 (set (reg:DI 1285 [ D.3802 ])
        (mult:DI (reg:DI 750 [ D.3802 ])
            (reg:DI 1903))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1286)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 750 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
(insn 4400 1698 1700 96 (set (reg:DI 1288)
        (reg:DI 1306)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1700 4400 1701 96 (set (reg:DI 1287)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1288)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1285 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
(insn 1701 1700 1702 96 (set (reg:DI 1289)
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1287))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
(insn 1702 1701 1703 96 (set (reg:DI 1290)
        (lshiftrt:DI (reg:DI 1289)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1289)
        (nil)))
(insn 1703 1702 1704 96 (set (reg:DI 1291)
        (plus:DI (reg:DI 1287)
            (reg:DI 1290))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1290)
        (expr_list:REG_DEAD (reg:DI 1287)
            (nil))))
(insn 1704 1703 1706 96 (set (reg:DI 468 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1291)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1291)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1285 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 1706 1704 1708 96 (set (reg:DI 1293)
        (ashift:DI (reg:DI 468 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1708 1706 1709 96 (set (reg:DI 1294)
        (minus:DI (reg:DI 1293)
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1293)
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 468 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 1709 1708 1710 96 (set (reg:DI 468 [ D.3802 ])
        (minus:DI (reg:DI 1285 [ D.3802 ])
            (reg:DI 1294))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1294)
        (expr_list:REG_DEAD (reg:DI 1285 [ D.3802 ])
            (nil))))
(debug_insn 1710 1709 1711 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1711 1710 1712 96 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1712 1711 1713 96 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1713 1712 1714 96 (var_location:DI D#29 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1714 1713 1715 96 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1715 1714 1716 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1716 1715 1717 96 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1717 1716 1718 96 (var_location:DI a (debug_expr:DI D#29)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1718 1717 4401 96 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 4401 1718 1720 96 (set (reg:DI 1295)
        (reg:DI 1892)) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 1720 4401 1721 96 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 751 [ D.3802 ])
            (reg:DI 1892))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1295)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 751 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
(jump_insn 1721 1720 4346 96 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4346)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 4346)
;;  succ:       97 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              299 [100.0%]  (DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 299, loop depth 2, count 0, freq 143, maybe hot
;;  prev block 96, next block 97, flags: (NEW, RTL, MODIFIED)
;;  pred:       96 [100.0%]  (DFS_BACK)
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	
;; live  kill	
(code_label 4346 1721 4345 299 282 "" [1 uses])
(note 4345 4346 1722 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
;;  succ:       101 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 97, loop depth 0, count 0, freq 0
;;  prev block 299, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       96 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u1495(29){ }u1496(31){ }u1497(64){ }u1498(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; live  gen 	
;; live  kill	
(note 1722 4345 1723 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1723 1722 1724 97 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
        (nil)))
(insn 1724 1723 1725 97 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 1725 1724 1726 97 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 1726 1725 1727 97 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 1727 1726 1840 97 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 98, loop depth 0, count 0, freq 1
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [0.0%]  (LOOP_EXIT)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u1509(29){ }u1510(31){ }u1511(64){ }u1512(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; live  gen 	
;; live  kill	
(code_label 1840 1727 1731 98 82 "" [1 uses])
(note 1731 1840 1732 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1732 1731 1733 98 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 1733 1732 1734 98 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 1734 1733 1735 98 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 1735 1734 1736 98 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
(insn 1736 1735 1737 98 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 469 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 99, loop depth 0, count 0, freq 1
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       158 [100.0%]  (FALLTHRU)
;;              94 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              98 [100.0%]  (FALLTHRU)
;;              156 [100.0%]  (FALLTHRU)
;;              97 [100.0%]  (FALLTHRU)
;;              155 [100.0%] 
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u1523(29){ }u1524(31){ }u1525(64){ }u1526(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1296 1297 1298 1299 1300 1301
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1296 1297 1298 1299 1300 1301
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 1737 1736 1738 99 78 "" [1 uses])
(note 1738 1737 1739 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1739 1738 1740 99 (set (reg/f:DI 1297)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 1740 1739 1741 99 (set (reg/f:DI 1296)
        (lo_sum:DI (reg/f:DI 1297)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>))) generator/mod_arith_64bit.h:34 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1297)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>)
            (nil))))
(insn 1741 1740 1742 99 (set (reg/f:DI 1299)
        (high:DI (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 1742 1741 1743 99 (set (reg/f:DI 1298)
        (lo_sum:DI (reg/f:DI 1299)
            (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>))) generator/mod_arith_64bit.h:34 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1299)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>)
            (nil))))
(insn 1743 1742 1744 99 (set (reg/f:DI 1301)
        (high:DI (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 1744 1743 1745 99 (set (reg/f:DI 1300)
        (lo_sum:DI (reg/f:DI 1301)
            (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>))) generator/mod_arith_64bit.h:34 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1301)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>)
            (nil))))
(insn 1745 1744 1746 99 (set (reg:DI 3 x3)
        (reg/f:DI 1296)) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1296)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3503.lto_priv.8") [flags 0xc2]  <var_decl 0x7f3c5e2547e0 __PRETTY_FUNCTION__>)
            (nil))))
(insn 1746 1745 1747 99 (set (reg:SI 2 x2)
        (const_int 34 [0x22])) generator/mod_arith_64bit.h:34 47 {*movsi_aarch64}
     (nil))
(insn 1747 1746 1748 99 (set (reg:DI 1 x1)
        (reg/f:DI 1298)) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1298)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x82]  <var_decl 0x7f3c5d840d80 *.LC35>)
            (nil))))
(insn 1748 1747 1749 99 (set (reg:DI 0 x0)
        (reg/f:DI 1300)) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1300)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x82]  <var_decl 0x7f3c5d840e10 *.LC36>)
            (nil))))
(call_insn 1749 1748 1751 99 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/mod_arith_64bit.h:34 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 100, loop depth 1, count 0, freq 204, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 [100.0%] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u1538(29){ }u1539(31){ }u1540(64){ }u1541(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 468 576 750 751 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 290 1903
;; lr  def 	 442 443 695 714 747 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  in  	 435 468 576 750 751
;; live  gen 	 442 443 695 714 747 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  kill	
(code_label 1751 1749 1752 100 77 "" [1 uses])
(note 1752 1751 1753 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1753 1752 1754 100 (set (reg:DI 714 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 1754 1753 1755 100 (set (reg:DI 826 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 1755 1754 196 100 (set (reg:DI 695 [ D.3802 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 196 1755 197 100 (set (reg/v:DI 442 [ nverts ])
        (reg/v:DI 290 [ nverts ])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 197 196 4073 100 (set (reg/v:DI 443 [ base_tgt ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(debug_insn 4073 197 198 100 (var_location:DI D#52 (const_int 0 [0])) -1
     (nil))
(insn 198 4073 1776 100 (set (reg/v:DI 747 [ base_src ])
        (const_int 0 [0])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 1776 198 1779 100 (set (reg:DI 1303)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
(insn 1779 1776 1799 100 (set (reg:DI 1306)
        (const_int 8589934597 [0x200000005])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
(insn 1799 1779 4405 100 (set (reg:DI 1313)
        (const_int 7294 [0x1c7e])) generator/graph_generator.c:46 48 {*movdi_aarch64}
     (nil))
(insn 4405 1799 1841 100 (set (reg:DI 1891)
        (reg:DI 1903)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 1841 4405 4378 100 (set (reg:DI 1892)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:34 48 {*movdi_aarch64}
     (nil))
(insn 4378 1841 4379 100 (set (reg:DI 1893)
        (reg:DI 1303)) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
(insn 4379 4378 1885 100 (set (reg:DI 1894)
        (reg:DI 1313)) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (nil))
(insn 1885 4379 1889 100 (set (reg:SI 1895)
        (const_int -776530087 [0xffffffffd1b71759])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
(insn 1889 1885 276 100 (set (reg:SI 1896)
        (const_int 10000 [0x2710])) generator/graph_generator.c:57 47 {*movsi_aarch64}
     (nil))
(insn 276 1889 277 100 (set (reg:DI 1897 [ D.3798 ])
        (const_int 1 [0x1])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
(insn 277 276 1903 100 (set (reg:DI 1898 [ D.3798 ])
        (const_int 0 [0])) generator/graph_generator.c:58 48 {*movdi_aarch64}
     (nil))
(insn 1903 277 273 100 (set (reg:SI 1899)
        (const_int 5699 [0x1643])) generator/graph_generator.c:63 47 {*movsi_aarch64}
     (nil))
(insn 273 1903 1756 100 (set (reg:DI 1900 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:63 48 {*movdi_aarch64}
     (nil))
;;  succ:       101 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 101, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       100 [100.0%]  (FALLTHRU)
;;              299 [100.0%]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u1546(29){ }u1547(31){ }u1548(64){ }u1549(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 468 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 468 751 1303 1306 1313
;; lr  def 	 66 [cc] 469 1302 1304 1305 1307 1308 1309 1311 1312
;; live  in  	 435 442 443 468 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 469 1302 1304 1305 1307 1308 1309 1311 1312
;; live  kill	
(code_label 1756 273 1757 101 79 "" [0 uses])
(note 1757 1756 1758 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1758 1757 1759 101 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
(debug_insn 1759 1758 1760 101 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
(debug_insn 1760 1759 1761 101 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 1761 1760 1762 101 (var_location:DI nverts (reg/v:DI 442 [ nverts ])) -1
     (nil))
(debug_insn 1762 1761 1763 101 (var_location:SI D#9 (debug_expr:SI D#53)) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1763 1762 1764 101 (var_location:DI st (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1764 1763 1765 101 (var_location:SI level (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1765 1764 1766 101 (var_location:SI nlevels (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 1766 1765 1767 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1767 1766 1768 101 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1768 1767 1769 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1769 1768 1770 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1770 1769 1771 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1771 1770 1772 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1772 1771 1773 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1773 1772 1774 101 (var_location:DI sum (reg:DI 468 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1774 1773 1775 101 (var_location:DI a (reg:DI 751 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1775 1774 1777 101 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1777 1775 1778 101 (set (reg:DI 1302 [ D.3802 ])
        (mult:DI (reg:DI 751 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1303)
        (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 751 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
(insn 1778 1777 1780 101 (set (reg:DI 1304 [ D.3802 ])
        (plus:DI (reg:DI 1302 [ D.3802 ])
            (reg:DI 468 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1302 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 468 [ D.3802 ])
            (nil))))
(insn 1780 1778 1781 101 (set (reg:DI 1305)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1306)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1304 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
(insn 1781 1780 1782 101 (set (reg:DI 1307)
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1305))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
(insn 1782 1781 1783 101 (set (reg:DI 1308)
        (lshiftrt:DI (reg:DI 1307)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1307)
        (nil)))
(insn 1783 1782 1784 101 (set (reg:DI 1309)
        (plus:DI (reg:DI 1305)
            (reg:DI 1308))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1308)
        (expr_list:REG_DEAD (reg:DI 1305)
            (nil))))
(insn 1784 1783 1786 101 (set (reg:DI 469 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1309)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1309)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1304 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 1786 1784 1788 101 (set (reg:DI 1311)
        (ashift:DI (reg:DI 469 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1788 1786 1789 101 (set (reg:DI 1312)
        (minus:DI (reg:DI 1311)
            (reg:DI 469 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1311)
        (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 1789 1788 1790 101 (set (reg:DI 469 [ D.3802 ])
        (minus:DI (reg:DI 1304 [ D.3802 ])
            (reg:DI 1312))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1312)
        (expr_list:REG_DEAD (reg:DI 1304 [ D.3802 ])
            (nil))))
(debug_insn 1790 1789 1791 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1791 1790 1792 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1792 1791 1793 101 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1793 1792 1794 101 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1794 1793 1795 101 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1795 1794 1796 101 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1796 1795 1797 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 1797 1796 1798 101 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:45 -1
     (nil))
(debug_insn 1798 1797 1800 101 (var_location:SI val (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 -1
     (nil))
(insn 1800 1798 1801 101 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 469 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:46 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1313)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 469 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
(jump_insn 1801 1800 1802 101 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) generator/graph_generator.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1877)
;;  succ:       102 [50.0%]  (FALLTHRU)
;;              107 [50.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 102, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [50.0%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u1584(29){ }u1585(31){ }u1586(64){ }u1587(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1303 1306 1313 1892 1903
;; lr  def 	 1315 1317 1324 1889 1890
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 1315 1317 1324 1889 1890
;; live  kill	
(note 1802 1801 4380 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 4380 1802 4381 102 (set (reg:DI 1315)
        (reg:DI 1903)) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 4381 4380 4382 102 (set (reg:DI 1317)
        (reg:DI 1306)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 4382 4381 4383 102 (set (reg:DI 1324)
        (reg:DI 1892)) generator/mod_arith_64bit.h:34 -1
     (nil))
(insn 4383 4382 4384 102 (set (reg:DI 1889)
        (reg:DI 1303)) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 4384 4383 3983 102 (set (reg:DI 1890)
        (reg:DI 1313)) generator/graph_generator.c:49 -1
     (nil))
;;  succ:       104 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 103, loop depth 3, count 0, freq 1732, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 [91.0%] 
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u1588(29){ }u1589(31){ }u1590(64){ }u1591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 714 747 750 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750
;; lr  def 	 469 695 750 826
;; live  in  	 435 442 443 469 476 576 695 714 747 750 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 469 695 750 826
;; live  kill	
(code_label 3983 4384 3982 103 196 "" [1 uses])
(note 3982 3983 199 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 199 3982 200 103 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 200 199 201 103 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
(insn 201 200 202 103 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
(insn 202 201 1869 103 (set (reg:DI 469 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/graph_generator.c:49 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;;  succ:       104 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 104, loop depth 3, count 0, freq 1906, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU,DFS_BACK)
;;              102 [100.0%]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u1596(29){ }u1597(31){ }u1598(64){ }u1599(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 714 1306 1892 1903
;; lr  def 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 473 1314 1316 1318 1319 1320 1322 1323
;; live  kill	
(code_label 1869 202 1803 104 83 "" [0 uses])
(note 1803 1869 1804 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1804 1803 1805 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1805 1804 1806 104 (var_location:DI state (plus:DI (reg/f:DI 64 sfp)
        (const_int -40 [0xffffffffffffffd8]))) -1
     (nil))
(debug_insn 1806 1805 1807 104 (var_location:DI D#33 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8])) [0 new_state.z1+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1807 1806 1808 104 (var_location:DI a (debug_expr:DI D#33)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1808 1807 1809 104 (var_location:DI a (debug_expr:DI D#33)) -1
     (nil))
(debug_insn 1809 1808 1811 104 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 1811 1809 1813 104 (set (reg:DI 1314 [ D.3802 ])
        (mult:DI (reg:DI 469 [ D.3802 ])
            (reg:DI 1903))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1315)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 469 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
(insn 1813 1811 1814 104 (set (reg:DI 1316)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:29 383 {umuldi3_highpart}
     (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1314 [ D.3802 ]))
                    (const_int 8589934597 [0x200000005]))
                (const_int 64 [0x40])))
        (nil)))
(insn 1814 1813 1815 104 (set (reg:DI 1318)
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1316))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (nil))
(insn 1815 1814 1816 104 (set (reg:DI 1319)
        (lshiftrt:DI (reg:DI 1318)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1318)
        (nil)))
(insn 1816 1815 1817 104 (set (reg:DI 1320)
        (plus:DI (reg:DI 1316)
            (reg:DI 1319))) generator/mod_arith_64bit.h:29 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1319)
        (expr_list:REG_DEAD (reg:DI 1316)
            (nil))))
(insn 1817 1816 1819 104 (set (reg:DI 473 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1320)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:29 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1320)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1314 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 1819 1817 1821 104 (set (reg:DI 1322)
        (ashift:DI (reg:DI 473 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:29 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1821 1819 1822 104 (set (reg:DI 1323)
        (minus:DI (reg:DI 1322)
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1322)
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 473 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 1822 1821 1826 104 (set (reg:DI 473 [ D.3802 ])
        (minus:DI (reg:DI 1314 [ D.3802 ])
            (reg:DI 1323))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1323)
        (expr_list:REG_DEAD (reg:DI 1314 [ D.3802 ])
            (nil))))
(debug_insn 1826 1822 1832 104 (var_location:DI D#32 (mem/j/c:DI (plus:DI (reg/f:DI 64 sfp)
            (const_int -8 [0xfffffffffffffff8])) [0 new_state.z5+0 S8 A64])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1832 1826 1833 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1833 1832 1834 104 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 1834 1833 1835 104 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1835 1834 1836 104 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1836 1835 1837 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1837 1836 1838 104 (var_location:DI sum (reg:DI 473 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1838 1837 1839 104 (var_location:DI a (debug_expr:DI D#32)) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1839 1838 1842 104 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 1842 1839 1843 104 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 714 [ D.3802 ])
            (reg:DI 1892))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1324)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 714 [ D.3802 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
(jump_insn 1843 1842 1844 104 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 1840)
;;  succ:       98 [0.0%]  (LOOP_EXIT)
;;              105 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 473 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 473 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 105, loop depth 3, count 0, freq 1903, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 [100.0%]  (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u1628(29){ }u1629(31){ }u1630(64){ }u1631(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 473 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 473 714 826 1303 1306 1313 1893 1894
;; lr  def 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  in  	 435 442 443 469 473 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 476 714 1325 1326 1327 1328 1330 1331 1332 1334 1335 1336
;; live  kill	
(note 1844 1843 4385 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 4385 1844 1846 105 (set (reg:DI 1326)
        (reg:DI 1893)) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 1846 4385 1847 105 (set (reg:DI 1325 [ D.3802 ])
        (mult:DI (reg:DI 714 [ D.3802 ])
            (reg:DI 1303))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1326)
        (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 714 [ D.3802 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
(insn 1847 1846 1849 105 (set (reg:DI 1327 [ D.3802 ])
        (plus:DI (reg:DI 1325 [ D.3802 ])
            (reg:DI 473 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1325 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 473 [ D.3802 ])
            (nil))))
(insn 1849 1847 1850 105 (set (reg:DI 1328)
        (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                    (zero_extend:TI (reg:DI 1306)))
                (const_int 64 [0x40])))) generator/mod_arith_64bit.h:36 383 {umuldi3_highpart}
     (expr_list:REG_DEAD (reg:DI 1317)
        (expr_list:REG_EQUAL (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 1327 [ D.3802 ]))
                        (const_int 8589934597 [0x200000005]))
                    (const_int 64 [0x40])))
            (nil))))
(insn 1850 1849 1851 105 (set (reg:DI 1330)
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1328))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (nil))
(insn 1851 1850 1852 105 (set (reg:DI 1331)
        (lshiftrt:DI (reg:DI 1330)
            (const_int 1 [0x1]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1330)
        (nil)))
(insn 1852 1851 1853 105 (set (reg:DI 1332)
        (plus:DI (reg:DI 1328)
            (reg:DI 1331))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1331)
        (expr_list:REG_DEAD (reg:DI 1328)
            (nil))))
(insn 1853 1852 1855 105 (set (reg:DI 476 [ D.3802 ])
        (lshiftrt:DI (reg:DI 1332)
            (const_int 30 [0x1e]))) generator/mod_arith_64bit.h:36 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1332)
        (expr_list:REG_EQUAL (udiv:DI (reg:DI 1327 [ D.3802 ])
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 1855 1853 1857 105 (set (reg:DI 1334)
        (ashift:DI (reg:DI 476 [ D.3802 ])
            (const_int 31 [0x1f]))) generator/mod_arith_64bit.h:36 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 1857 1855 1858 105 (set (reg:DI 1335)
        (minus:DI (reg:DI 1334)
            (reg:DI 476 [ D.3802 ]))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1334)
        (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 476 [ D.3802 ])
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 1858 1857 1859 105 (set (reg:DI 476 [ D.3802 ])
        (minus:DI (reg:DI 1327 [ D.3802 ])
            (reg:DI 1335))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1335)
        (expr_list:REG_DEAD (reg:DI 1327 [ D.3802 ])
            (nil))))
(debug_insn 1859 1858 1860 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1860 1859 1861 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1861 1860 1862 105 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 1862 1861 1863 105 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1863 1862 1864 105 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1864 1863 1865 105 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 1865 1864 1866 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 1866 1865 1867 105 (var_location:DI state (clobber (const_int 0 [0]))) generator/graph_generator.c:48 -1
     (nil))
(debug_insn 1867 1866 1868 105 (var_location:SI val (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 -1
     (nil))
(insn 1868 1867 4386 105 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (nil))
(insn 4386 1868 1871 105 (set (reg:DI 1336)
        (reg:DI 1894)) generator/graph_generator.c:49 -1
     (nil))
(insn 1871 4386 1872 105 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 476 [ D.3802 ])
            (reg:DI 1313))) generator/graph_generator.c:49 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1336)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 476 [ D.3802 ])
                (const_int 7294 [0x1c7e]))
            (nil))))
(jump_insn 1872 1871 1873 105 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3983)
            (pc))) generator/graph_generator.c:49 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3983)
;;  succ:       103 [91.0%] 
;;              106 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 469 476 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 106, loop depth 2, count 0, freq 171, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u1660(29){ }u1661(31){ }u1662(64){ }u1663(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 476 576 695 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 476 695 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 435 442 443 469 476 576 695 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
(note 1873 1872 1874 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1874 1873 208 106 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 476 [ D.3802 ]) 0)) generator/graph_generator.c:48 47 {*movsi_aarch64}
     (nil))
(insn 208 1874 209 106 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 209 208 210 106 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
(insn 210 209 211 106 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 211 210 212 106 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:48 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
(insn 212 211 1877 106 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 476 [ D.3802 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 476 [ D.3802 ])
        (nil)))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 107, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 [50.0%] 
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u1670(29){ }u1671(31){ }u1672(64){ }u1673(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 469 576 695 714 747 750 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 469 695 714 750 826
;; lr  def 	 463 695 714 750 751 826
;; live  in  	 435 442 443 469 576 695 714 747 750 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 463 695 714 750 751 826
;; live  kill	
(code_label 1877 212 1878 107 81 "" [1 uses])
(note 1878 1877 1879 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1879 1878 203 107 (set (reg/v:SI 463 [ val ])
        (subreg:SI (reg:DI 469 [ D.3802 ]) 0)) generator/graph_generator.c:45 47 {*movsi_aarch64}
     (nil))
(insn 203 1879 204 107 (set (reg:DI 751 [ D.3802 ])
        (reg:DI 714 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 204 203 205 107 (set (reg:DI 714 [ D.3802 ])
        (reg:DI 826 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 205 204 206 107 (set (reg:DI 826 [ D.3802 ])
        (reg:DI 695 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 206 205 207 107 (set (reg:DI 695 [ D.3802 ])
        (reg:DI 750 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
(insn 207 206 1880 107 (set (reg:DI 750 [ D.3802 ])
        (reg:DI 469 [ D.3802 ])) generator/graph_generator.c:45 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 469 [ D.3802 ])
        (nil)))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 108, loop depth 2, count 0, freq 345, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107 [100.0%]  (FALLTHRU)
;;              106 [100.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u1680(29){ }u1681(31){ }u1682(64){ }u1683(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 463 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 463 1895 1896
;; lr  def 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  in  	 435 442 443 463 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 464 1337 1338 1339 1340 1341
;; live  kill	
(code_label 1880 207 1881 108 84 "" [0 uses])
(note 1881 1880 1882 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1882 1881 1883 108 (var_location:SI val (reg/v:SI 463 [ val ])) -1
     (nil))
(debug_insn 1883 1882 1884 108 (var_location:SI spk_noise_factor (const_int 0 [0])) generator/graph_generator.c:52 -1
     (nil))
(debug_insn 1884 1883 4387 108 (var_location:SI adjusted_bc_numerator (const_int 1900 [0x76c])) generator/graph_generator.c:56 -1
     (nil))
(insn 4387 1884 1886 108 (set (reg:SI 1338)
        (reg:SI 1895)) generator/graph_generator.c:57 -1
     (nil))
(insn 1886 4387 1887 108 (set (reg:DI 1337)
        (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
            (zero_extend:DI (reg:SI 1895)))) generator/graph_generator.c:57 375 {umulsidi3}
     (expr_list:REG_DEAD (reg:SI 1338)
        (expr_list:REG_EQUAL (mult:DI (zero_extend:DI (reg/v:SI 463 [ val ]))
                (const_int 3518437209 [0xd1b71759]))
            (nil))))
(insn 1887 1886 1888 108 (set (reg:DI 1339)
        (lshiftrt:DI (reg:DI 1337)
            (const_int 32 [0x20]))) generator/graph_generator.c:57 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1337)
        (nil)))
(insn 1888 1887 4388 108 (set (reg/v:SI 464 [ val ])
        (lshiftrt:SI (subreg:SI (reg:DI 1339) 0)
            (const_int 13 [0xd]))) generator/graph_generator.c:57 636 {*aarch64_lshr_sisd_or_int_si3}
     (expr_list:REG_DEAD (reg:DI 1339)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 463 [ val ])
                (const_int 10000 [0x2710]))
            (nil))))
(insn 4388 1888 1890 108 (set (reg:SI 1341)
        (reg:SI 1896)) generator/graph_generator.c:57 -1
     (nil))
(insn 1890 4388 1891 108 (set (reg:SI 1340)
        (mult:SI (reg/v:SI 464 [ val ])
            (reg:SI 1896))) generator/graph_generator.c:57 362 {mulsi3}
     (expr_list:REG_DEAD (reg:SI 1341)
        (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
            (expr_list:REG_EQUAL (mult:SI (reg/v:SI 464 [ val ])
                    (const_int 10000 [0x2710]))
                (nil)))))
(insn 1891 1890 1892 108 (set (reg/v:SI 464 [ val ])
        (minus:SI (reg/v:SI 463 [ val ])
            (reg:SI 1340))) generator/graph_generator.c:57 262 {subsi3}
     (expr_list:REG_DEAD (reg:SI 1340)
        (expr_list:REG_DEAD (reg/v:SI 463 [ val ])
            (nil))))
(debug_insn 1892 1891 1893 108 (var_location:SI val (reg/v:SI 464 [ val ])) generator/graph_generator.c:57 -1
     (nil))
(insn 1893 1892 1894 108 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 464 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:58 390 {*cmpsi}
     (nil))
(jump_insn 1894 1893 1895 108 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3985)
            (pc))) generator/graph_generator.c:58 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 3985)
;;  succ:       274 [39.0%] 
;;              109 [61.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 109, loop depth 2, count 0, freq 210, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [61.0%]  (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u1697(29){ }u1698(31){ }u1699(64){ }u1700(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464
;; lr  def 	 66 [cc] 1342
;; live  in  	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 1342
;; live  kill	
(note 1895 1894 1896 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1896 1895 1897 109 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:59 -1
     (nil))
(insn 1897 1896 1898 109 (set (reg:SI 1342 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -1900 [0xfffffffffffff894]))) generator/graph_generator.c:60 94 {*addsi3_aarch64}
     (nil))
(insn 1898 1897 1899 109 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1342 [ val ])
            (const_int 1899 [0x76b]))) generator/graph_generator.c:60 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1342 [ val ])
        (nil)))
(jump_insn 1899 1898 1900 109 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1909)
            (pc))) generator/graph_generator.c:60 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 1909)
;;  succ:       112 [67.0%] 
;;              110 [33.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 110, loop depth 2, count 0, freq 69, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 [33.0%]  (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u1705(29){ }u1706(31){ }u1707(64){ }u1708(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 464 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 464 1899
;; lr  def 	 66 [cc] 1343 1344
;; live  in  	 435 442 443 464 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 1343 1344
;; live  kill	
(note 1900 1899 1901 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1901 1900 1902 110 (var_location:SI val (plus:SI (reg/v:SI 464 [ val ])
        (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:61 -1
     (nil))
(insn 1902 1901 4394 110 (set (reg:SI 1343 [ val ])
        (plus:SI (reg/v:SI 464 [ val ])
            (const_int -3800 [0xfffffffffffff128]))) generator/graph_generator.c:63 94 {*addsi3_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 464 [ val ])
        (nil)))
(insn 4394 1902 1904 110 (set (reg:SI 1344)
        (reg:SI 1899)) generator/graph_generator.c:63 -1
     (nil))
(insn 1904 4394 1905 110 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1343 [ val ])
            (reg:SI 1899))) generator/graph_generator.c:63 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1344)
        (expr_list:REG_DEAD (reg:SI 1343 [ val ])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 1343 [ val ])
                    (const_int 5699 [0x1643]))
                (nil)))))
(jump_insn 1905 1904 1906 110 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3989)
            (pc))) generator/graph_generator.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 3989)
;;  succ:       111 [33.0%]  (FALLTHRU)
;;              275 [67.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 111, loop depth 2, count 0, freq 23
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       110 [33.0%]  (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u1714(29){ }u1715(31){ }u1716(64){ }u1717(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1898
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
(note 1906 1905 4397 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 4397 1906 4398 111 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
(insn 4398 4397 1909 111 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;;  succ:       276 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 112, loop depth 2, count 0, freq 140, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 [67.0%] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u1718(29){ }u1719(31){ }u1720(64){ }u1721(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 1909 4398 1910 112 86 "" [1 uses])
(note 1910 1909 1911 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1911 1910 1912 112 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1912 1911 1913 112 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1913 1912 1914 112 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 1914 1913 1915 112 (var_location:SI src_offset (const_int 1 [0x1])) generator/graph_generator.c:138 -1
     (nil))
(debug_insn 1915 1914 1916 112 (var_location:SI tgt_offset (const_int 0 [0])) generator/graph_generator.c:139 -1
     (nil))
(insn 1916 1915 1917 112 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
(jump_insn 1917 1916 1918 112 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1939)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1939)
;;  succ:       113 (FALLTHRU,LOOP_EXIT)
;;              115 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 113, loop depth 0, count 0, freq 0
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU,LOOP_EXIT)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u1725(29){ }u1726(31){ }u1727(64){ }u1728(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; live  gen 	
;; live  kill	
(note 1918 1917 1919 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1919 1918 1920 113 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
        (nil)))
(insn 1920 1919 1921 113 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 1921 1920 1922 113 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 1922 1921 1923 113 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 1923 1922 3838 113 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;  succ:       114 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 114, loop depth 0, count 0, freq 0
;; Invalid sum of incoming frequencies 156, should be 0
;;  prev block 113, next block 115, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       277 [100.0%]  (FALLTHRU)
;;              113 [100.0%]  (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u1739(29){ }u1740(31){ }u1741(64){ }u1742(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1345 1346 1348 1349 1350 1351 1352
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1345 1346 1348 1349 1350 1351 1352
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3838 1923 1924 114 185 "" [0 uses])
(note 1924 3838 1925 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1925 1924 1926 114 (set (reg/f:DI 1346)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (nil))
(insn 1926 1925 1928 114 (set (reg/f:DI 1345)
        (lo_sum:DI (reg/f:DI 1346)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) generator/graph_generator.c:140 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1346)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 1928 1926 1929 114 (set (reg/f:DI 1348)
        (plus:DI (reg/f:DI 1345)
            (const_int 16 [0x10]))) generator/graph_generator.c:140 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1345)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))
(insn 1929 1928 1930 114 (set (reg/f:DI 1350)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (nil))
(insn 1930 1929 1931 114 (set (reg/f:DI 1349)
        (lo_sum:DI (reg/f:DI 1350)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:140 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1350)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
            (nil))))
(insn 1931 1930 1932 114 (set (reg/f:DI 1352)
        (high:DI (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (nil))
(insn 1932 1931 1933 114 (set (reg/f:DI 1351)
        (lo_sum:DI (reg/f:DI 1352)
            (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>))) generator/graph_generator.c:140 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1352)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>)
            (nil))))
(insn 1933 1932 1934 114 (set (reg:DI 3 x3)
        (reg/f:DI 1348)) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1348)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))
(insn 1934 1933 1935 114 (set (reg:SI 2 x2)
        (const_int 140 [0x8c])) generator/graph_generator.c:140 47 {*movsi_aarch64}
     (nil))
(insn 1935 1934 1936 114 (set (reg:DI 1 x1)
        (reg/f:DI 1349)) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1349)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
            (nil))))
(insn 1936 1935 1937 114 (set (reg:DI 0 x0)
        (reg/f:DI 1351)) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1351)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x82]  <var_decl 0x7f3c5d840f30 *.LC38>)
            (nil))))
(call_insn 1937 1936 1939 114 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:140 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 115, loop depth 2, count 0, freq 48, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 [100.0%] 
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u1755(29){ }u1756(31){ }u1757(64){ }u1758(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 1939 1937 1940 115 87 "" [1 uses])
(note 1940 1939 1941 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1941 1940 1942 115 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:143 391 {*cmpdi}
     (nil))
(jump_insn 1942 1941 1943 115 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 1947)
            (pc))) generator/graph_generator.c:143 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 1947)
;;  succ:       116 [100.0%]  (FALLTHRU)
;;              117
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 116, loop depth 2, count 0, freq 48, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       115 [100.0%]  (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u1762(29){ }u1763(31){ }u1764(64){ }u1765(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 1897 1898
;; lr  def 	 442 829 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 829 831
;; live  kill	
(note 1943 1942 1944 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1944 1943 4392 116 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
(insn 4392 1944 4393 116 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
(insn 4393 4392 1947 116 (set (reg:DI 831 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
;;  succ:       290 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 117, loop depth 2, count 0, freq 0
;;  prev block 116, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       115
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1768(29){ }u1769(31){ }u1770(64){ }u1771(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 1898
;; lr  def 	 442 829 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 829 831
;; live  kill	
(code_label 1947 4393 1948 117 88 "" [1 uses])
(note 1948 1947 1949 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1949 1948 282 117 (set (reg/v:DI 442 [ nverts ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (nil))
(insn 282 1949 4391 117 (set (reg:DI 831 [ D.3798 ])
        (reg/v:DI 442 [ nverts ])) generator/graph_generator.c:143 48 {*movdi_aarch64}
     (nil))
(insn 4391 282 1952 117 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:143 -1
     (nil))
;;  succ:       290 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 118, loop depth 1, count 0, freq 16
;;  prev block 117, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       290 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u1774(29){ }u1775(31){ }u1776(64){ }u1777(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 695 714 747 750 751 826 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  def 	
;; live  in  	 435 443 576 695 714 747 750 751 826
;; live  gen 	
;; live  kill	
(note 1952 4391 1953 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1953 1952 1954 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
        (nil)))
(insn 1954 1953 1955 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 1955 1954 1956 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 1956 1955 1957 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 1957 1956 1958 118 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;  succ:       119 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; live  out 	 435 443 576 747

;; basic block 119, loop depth 1, count 0, freq 16
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118 [100.0%]  (FALLTHRU)
;;              89 [100.0%]  (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1788(29){ }u1789(31){ }u1790(64){ }u1791(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 576 747 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 432 434 747 1904 1905
;; lr  def 	 66 [cc] 519 520 521 523 525 527 528 530 532 533 535 537 539 540 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363
;; live  in  	 435 443 576 747
;; live  gen 	 66 [cc] 519 520 521 523 525 527 528 530 532 533 535 537 539 540 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363
;; live  kill	
(code_label 1958 1957 1959 119 72 "" [0 uses])
(note 1959 1958 1960 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1960 1959 1961 119 (var_location:DI v0 (debug_expr:DI D#52)) -1
     (nil))
(debug_insn 1961 1960 1962 119 (var_location:SI lgN (debug_expr:SI D#53)) -1
     (nil))
(debug_insn 1962 1961 1963 119 (var_location:DI val0 (debug_expr:DI D#54)) -1
     (nil))
(debug_insn 1963 1962 1965 119 (var_location:DI val1 (debug_expr:DI D#55)) -1
     (nil))
(debug_insn 1965 1963 1966 119 (var_location:DI v (reg/v:DI 747 [ base_src ])) generator/graph_generator.c:121 -1
     (nil))
(insn 1966 1965 1967 119 (set (reg:DI 519 [ D.3802 ])
        (plus:DI (reg/v:DI 432 [ val0 ])
            (reg/v:DI 434 [ val1 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (nil))
(insn 1967 1966 1968 119 (set (reg/v:DI 520 [ v ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 747 [ base_src ])
        (nil)))
(debug_insn 1968 1967 4406 119 (var_location:DI v (reg/v:DI 520 [ v ])) generator/graph_generator.c:122 -1
     (nil))
(insn 4406 1968 4407 119 (set (reg:DI 1353)
        (reg:DI 1904)) generator/graph_generator.c:123 -1
     (nil))
(insn 4407 4406 1971 119 (set (reg:DI 521 [ D.3802 ])
        (reg:DI 1905 [ D.3802 ])) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 1971 4407 1972 119 (var_location:DI v (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 1972 1971 1973 119 (var_location:DI x (mult:DI (reg/v:DI 520 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(insn 1973 1972 1974 119 (set (reg:DI 1354 [ v ])
        (mult:DI (reg/v:DI 520 [ v ])
            (reg:DI 1905 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg/v:DI 520 [ v ])
        (nil)))
(insn 1974 1973 1975 119 (set (reg/v:DI 523 [ x ])
        (bswap:DI (reg:DI 1354 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1354 [ v ])
        (nil)))
(debug_insn 1975 1974 1976 119 (var_location:DI x (reg/v:DI 523 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 1976 1975 1977 119 (set (reg:DI 1355 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 523 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 1977 1976 1978 119 (set (reg:DI 525 [ D.3802 ])
        (and:DI (reg:DI 1355 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1355 [ D.3802 ])
        (nil)))
(insn 1978 1977 1979 119 (set (reg:DI 1356 [ D.3802 ])
        (and:DI (reg/v:DI 523 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 523 [ x ])
        (nil)))
(insn 1979 1978 1980 119 (set (reg:DI 527 [ D.3802 ])
        (ashift:DI (reg:DI 1356 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1356 [ D.3802 ])
        (nil)))
(insn 1980 1979 1981 119 (set (reg/v:DI 528 [ x ])
        (ior:DI (reg:DI 525 [ D.3802 ])
            (reg:DI 527 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 527 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 525 [ D.3802 ])
            (nil))))
(debug_insn 1981 1980 1982 119 (var_location:DI x (reg/v:DI 528 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 1982 1981 1983 119 (set (reg:DI 1357 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 528 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 1983 1982 1984 119 (set (reg:DI 530 [ D.3802 ])
        (and:DI (reg:DI 1357 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1357 [ D.3802 ])
        (nil)))
(insn 1984 1983 1985 119 (set (reg:DI 1358 [ D.3802 ])
        (and:DI (reg/v:DI 528 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 528 [ x ])
        (nil)))
(insn 1985 1984 1986 119 (set (reg:DI 532 [ D.3802 ])
        (ashift:DI (reg:DI 1358 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1358 [ D.3802 ])
        (nil)))
(insn 1986 1985 1987 119 (set (reg/v:DI 533 [ x ])
        (ior:DI (reg:DI 530 [ D.3802 ])
            (reg:DI 532 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 532 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 530 [ D.3802 ])
            (nil))))
(debug_insn 1987 1986 1988 119 (var_location:DI x (reg/v:DI 533 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 1988 1987 1989 119 (set (reg:DI 1359 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 533 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 1989 1988 1990 119 (set (reg:DI 535 [ D.3802 ])
        (and:DI (reg:DI 1359 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1359 [ D.3802 ])
        (nil)))
(insn 1990 1989 1991 119 (set (reg:DI 1360 [ D.3802 ])
        (and:DI (reg/v:DI 533 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 533 [ x ])
        (nil)))
(insn 1991 1990 1993 119 (set (reg:DI 537 [ D.3802 ])
        (ashift:DI (reg:DI 1360 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1360 [ D.3802 ])
        (nil)))
(debug_insn 1993 1991 1994 119 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
(insn 1994 1993 1995 119 (set (reg:SI 1361)
        (const_int 64 [0x40])) generator/graph_generator.c:124 47 {*movsi_aarch64}
     (nil))
(insn 1995 1994 1996 119 (set (reg:SI 539 [ D.3797 ])
        (minus:SI (reg:SI 1361)
            (reg:SI 261 [ D.3797 ]))) generator/graph_generator.c:124 262 {subsi3}
     (expr_list:REG_DEAD (reg:SI 1361)
        (expr_list:REG_EQUAL (minus:SI (const_int 64 [0x40])
                (reg:SI 261 [ D.3797 ]))
            (nil))))
(insn 1996 1995 1997 119 (set (reg:DI 1362 [ x ])
        (ior:DI (reg:DI 535 [ D.3802 ])
            (reg:DI 537 [ D.3802 ]))) generator/graph_generator.c:124 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 537 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 535 [ D.3802 ])
            (nil))))
(insn 1997 1996 1998 119 (set (reg/v:DI 540 [ v ])
        (lshiftrt:DI (reg:DI 1362 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1362 [ x ])
        (nil)))
(debug_insn 1998 1997 1999 119 (var_location:DI v (reg/v:DI 540 [ v ])) generator/graph_generator.c:124 -1
     (nil))
(insn 1999 1998 2000 119 (set (reg:DI 1363 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 540 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2000 1999 2001 119 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1363 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1363 [ D.3802 ])
        (nil)))
(jump_insn 2001 2000 2099 119 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2009)
            (pc))) generator/graph_generator.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2009)
;;  succ:       120 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              121 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 540 576 1863
;; live  out 	 435 443 519 521 539 540 576

;; basic block 120, loop depth 0, count 0, freq 0
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              123 [0.0%]  (LOOP_EXIT)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u1838(29){ }u1839(31){ }u1840(64){ }u1841(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2099 2001 2002 120 92 "" [1 uses])
(note 2002 2099 2003 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2003 2002 2004 120 (var_location:DI D#12 (debug_expr:DI D#52)) -1
     (nil))
(debug_insn 2004 2003 2005 120 (var_location:SI D#13 (debug_expr:SI D#53)) -1
     (nil))
(debug_insn 2005 2004 2006 120 (var_location:DI D#14 (debug_expr:DI D#54)) -1
     (nil))
(debug_insn 2006 2005 2007 120 (var_location:DI D#15 (debug_expr:DI D#55)) -1
     (nil))
(call_insn/c/i 2007 2006 2009 120 (parallel [
            (call (mem:DI (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>) [0 scramble.part.1 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("scramble.part.1.lto_priv.19") [flags 0x43]  <function_decl 0x7f3c5e252000 scramble.part.1>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 121, loop depth 1, count 0, freq 16
;;  prev block 120, next block 122, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 [100.0%] 
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1843(29){ }u1844(31){ }u1845(64){ }u1846(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 540 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 539 540 1906 1907
;; lr  def 	 66 [cc] 542 544 546 548 549 551 553 554 556 558 560 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373
;; live  in  	 435 443 519 521 539 540 576
;; live  gen 	 66 [cc] 542 544 546 548 549 551 553 554 556 558 560 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373
;; live  kill	
(code_label 2009 2007 2010 121 90 "" [1 uses])
(note 2010 2009 4408 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 4408 2010 4409 121 (set (reg:DI 1364)
        (reg:DI 1906)) generator/graph_generator.c:126 -1
     (nil))
(insn 4409 4408 2013 121 (set (reg:DI 542 [ D.3802 ])
        (reg:DI 1907 [ D.3802 ])) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2013 4409 2014 121 (var_location:DI v (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2014 2013 2015 121 (var_location:DI x (mult:DI (reg/v:DI 540 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(insn 2015 2014 2016 121 (set (reg:DI 1365 [ v ])
        (mult:DI (reg/v:DI 540 [ v ])
            (reg:DI 1907 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg/v:DI 540 [ v ])
        (nil)))
(insn 2016 2015 2017 121 (set (reg/v:DI 544 [ x ])
        (bswap:DI (reg:DI 1365 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1365 [ v ])
        (nil)))
(debug_insn 2017 2016 2018 121 (var_location:DI x (reg/v:DI 544 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2018 2017 2019 121 (set (reg:DI 1366 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 544 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2019 2018 2020 121 (set (reg:DI 546 [ D.3802 ])
        (and:DI (reg:DI 1366 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1366 [ D.3802 ])
        (nil)))
(insn 2020 2019 2021 121 (set (reg:DI 1367 [ D.3802 ])
        (and:DI (reg/v:DI 544 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 544 [ x ])
        (nil)))
(insn 2021 2020 2022 121 (set (reg:DI 548 [ D.3802 ])
        (ashift:DI (reg:DI 1367 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1367 [ D.3802 ])
        (nil)))
(insn 2022 2021 2023 121 (set (reg/v:DI 549 [ x ])
        (ior:DI (reg:DI 546 [ D.3802 ])
            (reg:DI 548 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 548 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 546 [ D.3802 ])
            (nil))))
(debug_insn 2023 2022 2024 121 (var_location:DI x (reg/v:DI 549 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2024 2023 2025 121 (set (reg:DI 1368 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 549 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2025 2024 2026 121 (set (reg:DI 551 [ D.3802 ])
        (and:DI (reg:DI 1368 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1368 [ D.3802 ])
        (nil)))
(insn 2026 2025 2027 121 (set (reg:DI 1369 [ D.3802 ])
        (and:DI (reg/v:DI 549 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 549 [ x ])
        (nil)))
(insn 2027 2026 2028 121 (set (reg:DI 553 [ D.3802 ])
        (ashift:DI (reg:DI 1369 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1369 [ D.3802 ])
        (nil)))
(insn 2028 2027 2029 121 (set (reg/v:DI 554 [ x ])
        (ior:DI (reg:DI 551 [ D.3802 ])
            (reg:DI 553 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 553 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 551 [ D.3802 ])
            (nil))))
(debug_insn 2029 2028 2030 121 (var_location:DI x (reg/v:DI 554 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2030 2029 2031 121 (set (reg:DI 1370 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 554 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2031 2030 2032 121 (set (reg:DI 556 [ D.3802 ])
        (and:DI (reg:DI 1370 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1370 [ D.3802 ])
        (nil)))
(insn 2032 2031 2033 121 (set (reg:DI 1371 [ D.3802 ])
        (and:DI (reg/v:DI 554 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 554 [ x ])
        (nil)))
(insn 2033 2032 2035 121 (set (reg:DI 558 [ D.3802 ])
        (ashift:DI (reg:DI 1371 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1371 [ D.3802 ])
        (nil)))
(debug_insn 2035 2033 2036 121 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2036 2035 2037 121 (set (reg:DI 1372 [ x ])
        (ior:DI (reg:DI 556 [ D.3802 ])
            (reg:DI 558 [ D.3802 ]))) generator/graph_generator.c:127 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 558 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 556 [ D.3802 ])
            (nil))))
(insn 2037 2036 2038 121 (set (reg/v:DI 560 [ v ])
        (lshiftrt:DI (reg:DI 1372 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1372 [ x ])
        (nil)))
(debug_insn 2038 2037 2039 121 (var_location:DI v (reg/v:DI 560 [ v ])) generator/graph_generator.c:127 -1
     (nil))
(insn 2039 2038 2040 121 (set (reg:DI 1373 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 560 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2040 2039 2041 121 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1373 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1373 [ D.3802 ])
        (nil)))
(jump_insn 2041 2040 2130 121 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2055)
            (pc))) generator/graph_generator.c:128 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2055)
;;  succ:       122 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              123 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 542 560 576 1863
;; live  out 	 435 443 519 521 539 542 560 576

;; basic block 122, loop depth 0, count 0, freq 0
;;  prev block 121, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       121 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              124 [0.0%]  (LOOP_EXIT)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u1884(29){ }u1885(31){ }u1886(64){ }u1887(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1374 1375 1376 1377 1378 1379
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1374 1375 1376 1377 1378 1379
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2130 2041 2042 122 93 "" [1 uses])
(note 2042 2130 2043 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 2043 2042 2044 122 (set (reg/f:DI 1375)
        (high:DI (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (nil))
(insn 2044 2043 2045 122 (set (reg/f:DI 1374)
        (lo_sum:DI (reg/f:DI 1375)
            (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>))) generator/graph_generator.c:128 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1375)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>)
            (nil))))
(insn 2045 2044 2046 122 (set (reg/f:DI 1377)
        (high:DI (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (nil))
(insn 2046 2045 2047 122 (set (reg/f:DI 1376)
        (lo_sum:DI (reg/f:DI 1377)
            (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>))) generator/graph_generator.c:128 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1377)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
            (nil))))
(insn 2047 2046 2048 122 (set (reg/f:DI 1379)
        (high:DI (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (nil))
(insn 2048 2047 2049 122 (set (reg/f:DI 1378)
        (lo_sum:DI (reg/f:DI 1379)
            (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>))) generator/graph_generator.c:128 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1379)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>)
            (nil))))
(insn 2049 2048 2050 122 (set (reg:DI 3 x3)
        (reg/f:DI 1374)) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1374)
        (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.3549.lto_priv.17") [flags 0xc2]  <var_decl 0x7f3c5e254990 __PRETTY_FUNCTION__>)
            (nil))))
(insn 2050 2049 2051 122 (set (reg:SI 2 x2)
        (const_int 128 [0x80])) generator/graph_generator.c:128 47 {*movsi_aarch64}
     (nil))
(insn 2051 2050 2052 122 (set (reg:DI 1 x1)
        (reg/f:DI 1376)) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1376)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x82]  <var_decl 0x7f3c5d840ea0 *.LC37>)
            (nil))))
(insn 2052 2051 2053 122 (set (reg:DI 0 x0)
        (reg/f:DI 1378)) generator/graph_generator.c:128 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1378)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x82]  <var_decl 0x7f3c5d82ef30 *.LC39>)
            (nil))))
(call_insn 2053 2052 2055 122 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/graph_generator.c:128 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 123, loop depth 1, count 0, freq 16
;;  prev block 122, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       121 [100.0%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1899(29){ }u1900(31){ }u1901(64){ }u1902(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 443 447 519 521 539 542 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 443 519 539 1905
;; lr  def 	 66 [cc] 478 480 482 484 485 487 489 490 492 494 496 1380 1381 1382 1383 1384 1385 1386 1387 1388
;; live  in  	 435 443 519 521 539 542 560 576
;; live  gen 	 66 [cc] 478 480 482 484 485 487 489 490 492 494 496 1380 1381 1382 1383 1384 1385 1386 1387 1388
;; live  kill	
(code_label 2055 2053 2056 123 91 "" [1 uses])
(note 2056 2055 2058 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2058 2056 2059 123 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2059 2058 2060 123 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2060 2059 2061 123 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2061 2060 2062 123 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2062 2061 2063 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2063 2062 2064 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2064 2063 2065 123 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2065 2064 2066 123 (var_location:DI v0 (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2066 2065 2067 123 (var_location:SI lgN (debug_expr:SI D#53)) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2067 2066 2068 123 (var_location:DI val0 (debug_expr:DI D#54)) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2068 2067 2070 123 (var_location:DI val1 (debug_expr:DI D#55)) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2070 2068 2071 123 (var_location:DI v (reg/v:DI 443 [ base_tgt ])) generator/graph_generator.c:121 -1
     (nil))
(insn 2071 2070 2073 123 (set (reg/v:DI 478 [ v ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 519 [ D.3802 ]))) generator/graph_generator.c:122 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 519 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 443 [ base_tgt ])
            (nil))))
(debug_insn 2073 2071 2074 123 (var_location:DI v (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(debug_insn 2074 2073 2075 123 (var_location:DI x (mult:DI (reg/v:DI 478 [ v ])
        (reg:DI 521 [ D.3802 ]))) generator/graph_generator.c:123 -1
     (nil))
(insn 2075 2074 2076 123 (set (reg:DI 1380 [ v ])
        (mult:DI (reg/v:DI 478 [ v ])
            (reg:DI 1905 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 521 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 478 [ v ])
            (nil))))
(insn 2076 2075 2077 123 (set (reg/v:DI 480 [ x ])
        (bswap:DI (reg:DI 1380 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1380 [ v ])
        (nil)))
(debug_insn 2077 2076 2078 123 (var_location:DI x (reg/v:DI 480 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2078 2077 2079 123 (set (reg:DI 1381 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 480 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2079 2078 2080 123 (set (reg:DI 482 [ D.3802 ])
        (and:DI (reg:DI 1381 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1381 [ D.3802 ])
        (nil)))
(insn 2080 2079 2081 123 (set (reg:DI 1382 [ D.3802 ])
        (and:DI (reg/v:DI 480 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 480 [ x ])
        (nil)))
(insn 2081 2080 2082 123 (set (reg:DI 484 [ D.3802 ])
        (ashift:DI (reg:DI 1382 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1382 [ D.3802 ])
        (nil)))
(insn 2082 2081 2083 123 (set (reg/v:DI 485 [ x ])
        (ior:DI (reg:DI 482 [ D.3802 ])
            (reg:DI 484 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 484 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 482 [ D.3802 ])
            (nil))))
(debug_insn 2083 2082 2084 123 (var_location:DI x (reg/v:DI 485 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2084 2083 2085 123 (set (reg:DI 1383 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 485 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2085 2084 2086 123 (set (reg:DI 487 [ D.3802 ])
        (and:DI (reg:DI 1383 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1383 [ D.3802 ])
        (nil)))
(insn 2086 2085 2087 123 (set (reg:DI 1384 [ D.3802 ])
        (and:DI (reg/v:DI 485 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 485 [ x ])
        (nil)))
(insn 2087 2086 2088 123 (set (reg:DI 489 [ D.3802 ])
        (ashift:DI (reg:DI 1384 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1384 [ D.3802 ])
        (nil)))
(insn 2088 2087 2089 123 (set (reg/v:DI 490 [ x ])
        (ior:DI (reg:DI 487 [ D.3802 ])
            (reg:DI 489 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 489 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 487 [ D.3802 ])
            (nil))))
(debug_insn 2089 2088 2090 123 (var_location:DI x (reg/v:DI 490 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2090 2089 2091 123 (set (reg:DI 1385 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 490 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2091 2090 2092 123 (set (reg:DI 492 [ D.3802 ])
        (and:DI (reg:DI 1385 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1385 [ D.3802 ])
        (nil)))
(insn 2092 2091 2093 123 (set (reg:DI 1386 [ D.3802 ])
        (and:DI (reg/v:DI 490 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 490 [ x ])
        (nil)))
(insn 2093 2092 2095 123 (set (reg:DI 494 [ D.3802 ])
        (ashift:DI (reg:DI 1386 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1386 [ D.3802 ])
        (nil)))
(debug_insn 2095 2093 2096 123 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:124 -1
     (nil))
(insn 2096 2095 2097 123 (set (reg:DI 1387 [ x ])
        (ior:DI (reg:DI 492 [ D.3802 ])
            (reg:DI 494 [ D.3802 ]))) generator/graph_generator.c:124 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 494 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 492 [ D.3802 ])
            (nil))))
(insn 2097 2096 2098 123 (set (reg/v:DI 496 [ v ])
        (lshiftrt:DI (reg:DI 1387 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:124 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1387 [ x ])
        (nil)))
(debug_insn 2098 2097 2100 123 (var_location:DI v (reg/v:DI 496 [ v ])) generator/graph_generator.c:124 -1
     (nil))
(insn 2100 2098 2101 123 (set (reg:DI 1388 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 496 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:125 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2101 2100 2102 123 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1388 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1388 [ D.3802 ])
        (nil)))
(jump_insn 2102 2101 2103 123 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2099)
            (pc))) generator/graph_generator.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2099)
;;  succ:       120 [0.0%]  (LOOP_EXIT)
;;              124 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 496 539 542 560 576 1863
;; live  out 	 435 496 539 542 560 576

;; basic block 124, loop depth 1, count 0, freq 16
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 [100.0%]  (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1944(29){ }u1945(31){ }u1946(64){ }u1947(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 496 539 542 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 261 496 539 1907
;; lr  def 	 66 [cc] 499 501 503 504 506 508 509 511 513 515 1389 1390 1391 1392 1393 1394 1395 1396 1397
;; live  in  	 435 496 539 542 560 576
;; live  gen 	 66 [cc] 499 501 503 504 506 508 509 511 513 515 1389 1390 1391 1392 1393 1394 1395 1396 1397
;; live  kill	
(note 2103 2102 2104 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2104 2103 2105 124 (var_location:DI v (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(debug_insn 2105 2104 2106 124 (var_location:DI x (mult:DI (reg/v:DI 496 [ v ])
        (reg:DI 542 [ D.3802 ]))) generator/graph_generator.c:126 -1
     (nil))
(insn 2106 2105 2107 124 (set (reg:DI 1389 [ v ])
        (mult:DI (reg/v:DI 496 [ v ])
            (reg:DI 1907 [ D.3802 ]))) generator/graph_generator.c:82 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 542 [ D.3802 ])
        (expr_list:REG_DEAD (reg/v:DI 496 [ v ])
            (nil))))
(insn 2107 2106 2108 124 (set (reg/v:DI 499 [ x ])
        (bswap:DI (reg:DI 1389 [ v ]))) generator/graph_generator.c:82 711 {bswapdi2}
     (expr_list:REG_DEAD (reg:DI 1389 [ v ])
        (nil)))
(debug_insn 2108 2107 2109 124 (var_location:DI x (reg/v:DI 499 [ x ])) generator/graph_generator.c:82 -1
     (nil))
(insn 2109 2108 2110 124 (set (reg:DI 1390 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 499 [ x ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2110 2109 2111 124 (set (reg:DI 501 [ D.3802 ])
        (and:DI (reg:DI 1390 [ D.3802 ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1390 [ D.3802 ])
        (nil)))
(insn 2111 2110 2112 124 (set (reg:DI 1391 [ D.3802 ])
        (and:DI (reg/v:DI 499 [ x ])
            (const_int 1085102592571150095 [0xf0f0f0f0f0f0f0f]))) generator/graph_generator.c:88 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 499 [ x ])
        (nil)))
(insn 2112 2111 2113 124 (set (reg:DI 503 [ D.3802 ])
        (ashift:DI (reg:DI 1391 [ D.3802 ])
            (const_int 4 [0x4]))) generator/graph_generator.c:88 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1391 [ D.3802 ])
        (nil)))
(insn 2113 2112 2114 124 (set (reg/v:DI 504 [ x ])
        (ior:DI (reg:DI 501 [ D.3802 ])
            (reg:DI 503 [ D.3802 ]))) generator/graph_generator.c:88 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 503 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 501 [ D.3802 ])
            (nil))))
(debug_insn 2114 2113 2115 124 (var_location:DI x (reg/v:DI 504 [ x ])) generator/graph_generator.c:88 -1
     (nil))
(insn 2115 2114 2116 124 (set (reg:DI 1392 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 504 [ x ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2116 2115 2117 124 (set (reg:DI 506 [ D.3802 ])
        (and:DI (reg:DI 1392 [ D.3802 ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1392 [ D.3802 ])
        (nil)))
(insn 2117 2116 2118 124 (set (reg:DI 1393 [ D.3802 ])
        (and:DI (reg/v:DI 504 [ x ])
            (const_int 3689348814741910323 [0x3333333333333333]))) generator/graph_generator.c:89 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 504 [ x ])
        (nil)))
(insn 2118 2117 2119 124 (set (reg:DI 508 [ D.3802 ])
        (ashift:DI (reg:DI 1393 [ D.3802 ])
            (const_int 2 [0x2]))) generator/graph_generator.c:89 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1393 [ D.3802 ])
        (nil)))
(insn 2119 2118 2120 124 (set (reg/v:DI 509 [ x ])
        (ior:DI (reg:DI 506 [ D.3802 ])
            (reg:DI 508 [ D.3802 ]))) generator/graph_generator.c:89 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 508 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 506 [ D.3802 ])
            (nil))))
(debug_insn 2120 2119 2121 124 (var_location:DI x (reg/v:DI 509 [ x ])) generator/graph_generator.c:89 -1
     (nil))
(insn 2121 2120 2122 124 (set (reg:DI 1394 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 509 [ x ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2122 2121 2123 124 (set (reg:DI 511 [ D.3802 ])
        (and:DI (reg:DI 1394 [ D.3802 ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1394 [ D.3802 ])
        (nil)))
(insn 2123 2122 2124 124 (set (reg:DI 1395 [ D.3802 ])
        (and:DI (reg/v:DI 509 [ x ])
            (const_int 6148914691236517205 [0x5555555555555555]))) generator/graph_generator.c:90 468 {anddi3}
     (expr_list:REG_DEAD (reg/v:DI 509 [ x ])
        (nil)))
(insn 2124 2123 2126 124 (set (reg:DI 513 [ D.3802 ])
        (ashift:DI (reg:DI 1395 [ D.3802 ])
            (const_int 1 [0x1]))) generator/graph_generator.c:90 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1395 [ D.3802 ])
        (nil)))
(debug_insn 2126 2124 2127 124 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:127 -1
     (nil))
(insn 2127 2126 2128 124 (set (reg:DI 1396 [ x ])
        (ior:DI (reg:DI 511 [ D.3802 ])
            (reg:DI 513 [ D.3802 ]))) generator/graph_generator.c:127 469 {iordi3}
     (expr_list:REG_DEAD (reg:DI 513 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 511 [ D.3802 ])
            (nil))))
(insn 2128 2127 2129 124 (set (reg/v:DI 515 [ v ])
        (lshiftrt:DI (reg:DI 1396 [ x ])
            (subreg:QI (reg:SI 539 [ D.3797 ]) 0))) generator/graph_generator.c:127 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1396 [ x ])
        (expr_list:REG_DEAD (reg:SI 539 [ D.3797 ])
            (nil))))
(debug_insn 2129 2128 2131 124 (var_location:DI v (reg/v:DI 515 [ v ])) generator/graph_generator.c:127 -1
     (nil))
(insn 2131 2129 2132 124 (set (reg:DI 1397 [ D.3802 ])
        (lshiftrt:DI (reg/v:DI 515 [ v ])
            (subreg:QI (reg:SI 261 [ D.3797 ]) 0))) generator/graph_generator.c:128 637 {*aarch64_lshr_sisd_or_int_di3}
     (nil))
(insn 2132 2131 2133 124 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1397 [ D.3802 ])
            (const_int 0 [0]))) generator/graph_generator.c:128 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1397 [ D.3802 ])
        (nil)))
(jump_insn 2133 2132 2134 124 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2130)
            (pc))) generator/graph_generator.c:128 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2130)
;;  succ:       122 [0.0%]  (LOOP_EXIT)
;;              125 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 515 560 576 1863
;; live  out 	 435 515 560 576

;; basic block 125, loop depth 1, count 0, freq 16
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       124 [100.0%]  (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1983(29){ }u1984(31){ }u1985(64){ }u1986(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 515 560 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 435 515 560 576
;; lr  def 	 435 576
;; live  in  	 435 515 560 576
;; live  gen 	 435 576
;; live  kill	
(note 2134 2133 2135 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2135 2134 2136 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2136 2135 2137 125 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2137 2136 2138 125 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2138 2137 2139 125 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2139 2138 2140 125 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2140 2139 2141 125 (var_location:DI x (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2141 2140 2142 125 (var_location:DI v (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2142 2141 2143 125 (var_location:DI p (debug_expr:DI D#36)) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2143 2142 2144 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2144 2143 2146 125 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(insn 2146 2144 2147 125 (set (mem:DI (reg:DI 576 [ ivtmp.134 ]) [4 MEM[base: _513, offset: 0B]+0 S8 A64])
        (reg/v:DI 560 [ v ])) generator/graph_generator.h:65 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 560 [ v ])
        (nil)))
(insn 2147 2146 2148 125 (set (mem:DI (plus:DI (reg:DI 576 [ ivtmp.134 ])
                (const_int 8 [0x8])) [4 MEM[base: _513, offset: 8B]+0 S8 A64])
        (reg/v:DI 515 [ v ])) generator/graph_generator.h:66 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 515 [ v ])
        (nil)))
(debug_insn 2148 2147 2149 125 (var_location:DI p (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2149 2148 2150 125 (var_location:DI v0 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2150 2149 2151 125 (var_location:DI v1 (clobber (const_int 0 [0]))) generator/graph_generator.c:154 -1
     (nil))
(debug_insn 2151 2150 2152 125 (var_location:DI nverts (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2152 2151 2153 125 (var_location:SI lgN (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2153 2152 2154 125 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2154 2153 2155 125 (var_location:DI result (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2155 2154 2156 125 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2156 2155 2157 125 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2157 2156 2158 125 (var_location:DI base_src (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2158 2157 2159 125 (var_location:DI base_tgt (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2159 2158 2160 125 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(debug_insn 2160 2159 2161 125 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:196 -1
     (nil))
(insn 2161 2160 2162 125 (set (reg/v:DI 435 [ start_edge ])
        (plus:DI (reg/v:DI 435 [ start_edge ])
            (const_int 1 [0x1]))) generator/graph_generator.c:193 95 {*adddi3_aarch64}
     (nil))
(debug_insn 2162 2161 2163 125 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) generator/graph_generator.c:193 -1
     (nil))
(insn 2163 2162 2164 125 (set (reg:DI 576 [ ivtmp.134 ])
        (plus:DI (reg:DI 576 [ ivtmp.134 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;;  succ:       126 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576

;; basic block 126, loop depth 1, count 0, freq 21
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 [100.0%]  (FALLTHRU)
;;              125 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1995(29){ }u1996(31){ }u1997(64){ }u1998(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 435
;; lr  def 	 66 [cc]
;; live  in  	 435 576
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2164 2163 2165 126 69 "" [0 uses])
(note 2165 2164 2166 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2166 2165 2168 126 (var_location:DI ei (reg/v:DI 435 [ start_edge ])) -1
     (nil))
(insn 2168 2166 2169 126 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 245 [ desired_nedge ])
            (reg/v:DI 435 [ start_edge ]))) generator/graph_generator.c:193 391 {*cmpdi}
     (nil))
(jump_insn 2169 2168 2170 126 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2167)
            (pc))) generator/graph_generator.c:193 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2167)
;;  succ:       87 [91.0%] 
;;              127 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 447 576 1863
;; live  out 	 435 576

;; basic block 127, loop depth 0, count 0, freq 2
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u2003(29){ }u2004(31){ }u2005(64){ }u2006(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 263 1398
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 32 [v0] 263 1398
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2170 2169 2171 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2171 2170 2172 127 (var_location:DI D#18 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2172 2171 2173 127 (var_location:DI state$z1 (debug_expr:DI D#18)) -1
     (nil))
(debug_insn 2173 2172 2174 127 (var_location:DI D#19 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2174 2173 2175 127 (var_location:DI state$z2 (debug_expr:DI D#19)) -1
     (nil))
(debug_insn 2175 2174 2176 127 (var_location:DI D#20 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2176 2175 2177 127 (var_location:DI state$z3 (debug_expr:DI D#20)) -1
     (nil))
(debug_insn 2177 2176 2178 127 (var_location:DI D#21 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2178 2177 2179 127 (var_location:DI state$z4 (debug_expr:DI D#21)) -1
     (nil))
(debug_insn 2179 2178 2180 127 (var_location:DI D#22 (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 2180 2179 2181 127 (var_location:DI state$z5 (debug_expr:DI D#22)) -1
     (nil))
(debug_insn 2181 2180 2182 127 (var_location:DI seed (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2182 2181 2183 127 (var_location:SI logN (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2183 2182 2184 127 (var_location:DI end_edge (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2184 2183 2185 127 (var_location:DI edges (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2185 2184 2186 127 (var_location:DI nverts (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2186 2185 2187 127 (var_location:DI val0 (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2187 2186 2188 127 (var_location:DI val1 (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2188 2187 2189 127 (var_location:DI start_edge (clobber (const_int 0 [0]))) generator/make_graph.c:58 -1
     (nil))
(debug_insn 2189 2188 2190 127 (var_location:SI log_numverts (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2190 2189 2191 127 (var_location:DI M (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2191 2190 2192 127 (var_location:DI userseed1 (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2192 2191 2193 127 (var_location:DI userseed2 (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2193 2192 2194 127 (var_location:DI edges (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2194 2193 2195 127 (var_location:DI nedges_ptr_in (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(debug_insn 2195 2194 2196 127 (var_location:DI result_ptr_in (clobber (const_int 0 [0]))) graph500.c:89 -1
     (nil))
(call_insn 2196 2195 2197 127 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:89 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 2197 2196 2199 127 (set (reg:DF 263 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:89 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 2199 2197 2200 127 (set (reg/f:DI 1398)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:89 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2200 2199 2201 127 (set (mem/c:DF (plus:DI (reg/f:DI 1398)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])
        (reg:DF 263 [ D.3804 ])) graph500.c:89 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1398)
        (expr_list:REG_DEAD (reg:DF 263 [ D.3804 ])
            (nil))))
;;  succ:       128 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 128, loop depth 0, count 0, freq 7
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       85 [100.0%]  (FALLTHRU)
;;              127 [100.0%]  (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u2012(29){ }u2013(31){ }u2014(64){ }u2015(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 66 [cc] 1402
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 66 [cc] 1402
;; live  kill	
(code_label 2201 2200 2202 128 68 "" [0 uses])
(note 2202 2201 2205 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 2205 2202 2206 128 (set (reg:SI 1402 [ VERBOSE ])
        (mem/c:SI (lo_sum:DI (reg/f:DI 1853)
                (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) [3 VERBOSE+0 S4 A32])) graph500.c:91 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]) [3 VERBOSE+0 S4 A32])
        (nil)))
(insn 2206 2205 2207 128 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1402 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:91 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1402 [ VERBOSE ])
        (nil)))
(jump_insn 2207 2206 2211 128 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2211)
            (pc))) graph500.c:91 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 2211)
;;  succ:       129 [29.0%] 
;;              137 [71.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 129, loop depth 0, count 0, freq 2
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128 [29.0%] 
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u2020(29){ }u2021(31){ }u2022(64){ }u2023(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1403 1404 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1403 1404 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2211 2207 2212 129 95 "" [1 uses])
(note 2212 2211 2213 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2213 2212 2214 129 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:91 -1
     (nil))
(debug_insn 2214 2213 2215 129 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)) graph500.c:91 -1
     (nil))
(insn 2215 2214 2216 129 (set (reg/f:DI 1404)
        (high:DI (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2216 2215 2217 129 (set (reg/f:DI 1403)
        (lo_sum:DI (reg/f:DI 1404)
            (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1404)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)
            (nil))))
(insn 2217 2216 2219 129 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:91 48 {*movdi_aarch64}
     (nil))
(insn 2219 2217 2220 129 (set (reg:DI 2 x2)
        (reg/f:DI 1403)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1403)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC40") [flags 0x82]  <var_decl 0x7f3c5d881000 *.LC40>)
            (nil))))
(insn 2220 2219 2221 129 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2221 2220 2222 129 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2222 2221 2225 129 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       135 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 130, loop depth 0, count 0, freq 22
;;  prev block 129, next block 131, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [69.8%] 
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u2032(29){ }u2033(31){ }u2034(64){ }u2035(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 246 1143 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 246
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 283
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 246 1143 1853 1854 1862
;; live  gen 	 0 [x0] 1 [x1] 66 [cc] 283
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2225 2222 2226 130 65 "" [1 uses])
(note 2226 2225 2227 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2227 2226 2228 130 (var_location:DI __path (reg/f:DI 246 [ D.3800 ])) graph500.c:95 -1
     (nil))
(debug_insn 2228 2227 2229 130 (var_location:SI __oflag (const_int 0 [0])) graph500.c:95 -1
     (nil))
(insn 2229 2228 2230 130 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 47 {*movsi_aarch64}
     (nil))
(insn 2230 2229 2231 130 (set (reg:DI 0 x0)
        (reg/f:DI 246 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 246 [ D.3800 ])
        (nil)))
(call_insn 2231 2230 2232 130 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 x1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 2232 2231 2233 130 (set (reg:SI 283 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 47 {*movsi_aarch64}
     (nil))
(debug_insn 2233 2232 2234 130 (var_location:DI __path (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(debug_insn 2234 2233 2235 130 (var_location:SI __oflag (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(debug_insn 2235 2234 2236 130 (var_location:SI fd (clobber (const_int 0 [0]))) graph500.c:95 -1
     (nil))
(insn 2236 2235 2237 130 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 283 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:95 390 {*cmpsi}
     (nil))
(jump_insn 2237 2236 2238 130 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2245)
            (pc))) graph500.c:95 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9119 (nil)))
 -> 2245)
;;  succ:       131 [8.8%]  (FALLTHRU)
;;              132 [91.2%] 
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1143 1710 1853 1854 1862
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1143 1853 1854 1862

;; basic block 131, loop depth 0, count 0, freq 2
;;  prev block 130, next block 132, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 [8.8%]  (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u2044(29){ }u2045(31){ }u2046(64){ }u2047(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 240 1407 1408
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 240 1407 1408
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2238 2237 2239 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 2239 2238 2240 131 (set (reg/f:DI 1408)
        (high:DI (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 48 {*movdi_aarch64}
     (nil))
(insn 2240 2239 2241 131 (set (reg/f:DI 1407)
        (lo_sum:DI (reg/f:DI 1408)
            (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>))) graph500.c:96 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1408)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>)
            (nil))))
(insn 2241 2240 2242 131 (set (reg:DI 0 x0)
        (reg/f:DI 1407)) graph500.c:96 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1407)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC41") [flags 0x82]  <var_decl 0x7f3c5d881090 *.LC41>)
            (nil))))
(call_insn 2242 2241 265 131 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:96 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 265 2242 2245 131 (set (reg:SI 240 [ D.3797 ])
        (const_int 1 [0x1])) graph500.c:97 47 {*movsi_aarch64}
     (nil))
;;  succ:       291 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240

;; basic block 132, loop depth 0, count 0, freq 20
;;  prev block 131, next block 133, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 [91.2%] 
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u2052(29){ }u2053(31){ }u2054(64){ }u2055(65){ }}
;; lr  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1143 1710 1853 1854 1862
;; lr  use 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1143
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 269 285 1411
;; live  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1143 1853 1854 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 269 285 1411
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2245 265 2246 132 98 "" [1 uses])
(note 2246 2245 2249 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 2249 2246 2250 132 (set (reg:DI 1411 [ nedge ])
        (mem/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:99 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [4 nedge+0 S8 A64])
        (nil)))
(insn 2250 2249 2251 132 (set (reg:DI 269 [ D.3802 ])
        (ashift:DI (reg:DI 1411 [ nedge ])
            (const_int 4 [0x4]))) graph500.c:99 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1411 [ nedge ])
        (nil)))
(debug_insn 2251 2250 2252 132 (var_location:DI sz (reg:DI 269 [ D.3802 ])) graph500.c:99 -1
     (nil))
(debug_insn 2252 2251 2253 132 (var_location:SI __fd (reg:SI 283 [ D.3797 ])) graph500.c:100 -1
     (nil))
(debug_insn 2253 2252 2254 132 (var_location:DI __buf (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:100 -1
     (nil))
(debug_insn 2254 2253 2257 132 (var_location:DI __nbytes (reg:DI 269 [ D.3802 ])) graph500.c:100 -1
     (nil))
(insn 2257 2254 2258 132 (set (reg:DI 2 x2)
        (reg:DI 269 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 48 {*movdi_aarch64}
     (nil))
(insn 2258 2257 2260 132 (set (reg:DI 1 x1)
        (mem/f/c:DI (plus:DI (reg/f:DI 1143)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1143)
        (expr_list:REG_EQUAL (mem/f/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                        (const_int 88 [0x58]))) [2 IJ+0 S8 A64])
            (nil))))
(call_insn 2260 2258 2261 132 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>) [0 __read_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x7f3c5e24c100 __read_alias>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2261 2260 2262 132 (set (reg:DI 285 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:44 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 2262 2261 2263 132 (var_location:SI __fd (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(debug_insn 2263 2262 2264 132 (var_location:DI __buf (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(debug_insn 2264 2263 2265 132 (var_location:DI __nbytes (clobber (const_int 0 [0]))) graph500.c:100 -1
     (nil))
(insn 2265 2264 2266 132 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 269 [ D.3802 ])
            (reg:DI 285 [ D.3798 ]))) graph500.c:100 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 285 [ D.3798 ])
        (expr_list:REG_DEAD (reg:DI 269 [ D.3802 ])
            (nil))))
(jump_insn 2266 2265 2267 132 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2274)
            (pc))) graph500.c:100 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3782 (nil)))
 -> 2274)
;;  succ:       133 [62.2%]  (FALLTHRU)
;;              134 [37.8%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1710 1853 1854 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1853 1854 1862

;; basic block 133, loop depth 0, count 0, freq 13
;;  prev block 132, next block 134, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       132 [62.2%]  (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u2076(29){ }u2077(31){ }u2078(64){ }u2079(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 240 1414 1415
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 240 1414 1415
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2267 2266 2268 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 2268 2267 2269 133 (set (reg/f:DI 1415)
        (high:DI (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 48 {*movdi_aarch64}
     (nil))
(insn 2269 2268 2270 133 (set (reg/f:DI 1414)
        (lo_sum:DI (reg/f:DI 1415)
            (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>))) graph500.c:101 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1415)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>)
            (nil))))
(insn 2270 2269 2271 133 (set (reg:DI 0 x0)
        (reg/f:DI 1414)) graph500.c:101 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1414)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC42") [flags 0x82]  <var_decl 0x7f3c5d881120 *.LC42>)
            (nil))))
(call_insn 2271 2270 266 133 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:101 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 266 2271 2274 133 (set (reg:SI 240 [ D.3797 ])
        (const_int 1 [0x1])) graph500.c:102 47 {*movsi_aarch64}
     (nil))
;;  succ:       291 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240

;; basic block 134, loop depth 0, count 0, freq 8
;;  prev block 133, next block 135, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       132 [37.8%] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u2084(29){ }u2085(31){ }u2086(64){ }u2087(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1710 1853 1854 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1859
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 283 1853 1854 1862
;; live  gen 	 0 [x0] 1859
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2274 266 2275 134 100 "" [1 uses])
(note 2275 2274 2276 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 2276 2275 2277 134 (set (reg:SI 0 x0)
        (reg:SI 283 [ D.3797 ])) graph500.c:104 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 283 [ D.3797 ])
        (nil)))
(call_insn 2277 2276 4200 134 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:104 42 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
(insn 4200 2277 2278 134 (set (reg/f:DI 1859)
        (high:DI (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) -1
     (nil))
;;  succ:       135 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 135, loop depth 0, count 0, freq 9
;;  prev block 134, next block 136, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134 [100.0%]  (FALLTHRU)
;;              129 [100.0%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u2091(29){ }u2092(31){ }u2093(64){ }u2094(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 66 [cc] 1418
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 66 [cc] 1418
;; live  kill	
(code_label 2278 4200 2279 135 97 "" [0 uses])
(note 2279 2278 2283 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 2283 2279 2284 135 (set (reg:SI 1418 [ VERBOSE ])
        (mem/c:SI (lo_sum:DI (reg/f:DI 1853)
                (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) [3 VERBOSE+0 S4 A32])) graph500.c:124 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]) [3 VERBOSE+0 S4 A32])
        (nil)))
(insn 2284 2283 2285 135 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1418 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:124 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1418 [ VERBOSE ])
        (nil)))
(jump_insn 2285 2284 2286 135 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2297)
            (pc))) graph500.c:124 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5504 (nil)))
 -> 2297)
;;  succ:       136 [45.0%]  (FALLTHRU)
;;              137 [55.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 136, loop depth 0, count 0, freq 4
;;  prev block 135, next block 137, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135 [45.0%]  (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u2099(29){ }u2100(31){ }u2101(64){ }u2102(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1419 1420 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1419 1420 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2286 2285 2287 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2287 2286 2288 136 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:124 -1
     (nil))
(debug_insn 2288 2287 2289 136 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)) graph500.c:124 -1
     (nil))
(insn 2289 2288 2290 136 (set (reg/f:DI 1420)
        (high:DI (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2290 2289 2291 136 (set (reg/f:DI 1419)
        (lo_sum:DI (reg/f:DI 1420)
            (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1420)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)
            (nil))))
(insn 2291 2290 2293 136 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:124 48 {*movdi_aarch64}
     (nil))
(insn 2293 2291 2294 136 (set (reg:DI 2 x2)
        (reg/f:DI 1419)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1419)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC43") [flags 0x82]  <var_decl 0x7f3c5d8811b0 *.LC43>)
            (nil))))
(insn 2294 2293 2295 136 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2295 2294 2296 136 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2296 2295 2297 136 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       137 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 137, loop depth 0, count 0, freq 14
;;  prev block 136, next block 138, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136 [100.0%]  (FALLTHRU)
;;              128 [71.0%]  (FALLTHRU)
;;              135 [55.0%] 
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u2111(29){ }u2112(31){ }u2113(64){ }u2114(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1859
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 566 567 1423 1425 1433
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 0 [x0] 1 [x1] 32 [v0] 66 [cc] 566 567 1423 1425 1433
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2297 2296 2298 137 96 "" [1 uses])
(note 2298 2297 2300 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 2300 2298 2301 137 (set (reg/f:DI 1423)
        (lo_sum:DI (reg/f:DI 1859)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2301 2300 2302 137 (set (reg:DI 1 x1)
        (reg/f:DI 1423)) timer.c:43 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1423)
        (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
            (nil))))
(insn 2302 2301 2303 137 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 47 {*movsi_aarch64}
     (nil))
(call_insn 2303 2302 2305 137 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2305 2303 2308 137 (set (reg/f:DI 1425)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:125 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2308 2305 2309 137 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1425)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:125 48 {*movdi_aarch64}
     (nil))
(insn 2309 2308 2310 137 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1425)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:125 48 {*movdi_aarch64}
     (nil))
(call_insn 2310 2309 2311 137 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>) [0 create_graph_from_edgelist S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("create_graph_from_edgelist") [flags 0x43]  <function_decl 0x7f3c5e24ca00 create_graph_from_edgelist>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2311 2310 2312 137 (set (reg/v:SI 566 [ err ])
        (reg:SI 0 x0)) graph500.c:125 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (nil)))
(debug_insn 2312 2311 2313 137 (var_location:SI err (reg/v:SI 566 [ err ])) graph500.c:125 -1
     (nil))
(call_insn 2313 2312 2314 137 (parallel [
            (set (reg:DF 32 v0)
                (call (mem:DI (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>) [0 toc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:125 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("toc") [flags 0x43]  <function_decl 0x7f3c5e239700 toc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(insn 2314 2313 2317 137 (set (reg:DF 567 [ D.3804 ])
        (reg:DF 32 v0)) graph500.c:125 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg:DF 32 v0)
        (nil)))
(insn 2317 2314 2320 137 (set (mem/c:DF (plus:DI (reg/f:DI 1425)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])
        (reg:DF 567 [ D.3804 ])) graph500.c:125 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1425)
        (expr_list:REG_DEAD (reg:DF 567 [ D.3804 ])
            (nil))))
(insn 2320 2317 2321 137 (set (reg:SI 1433 [ VERBOSE ])
        (mem/c:SI (lo_sum:DI (reg/f:DI 1853)
                (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])) [3 VERBOSE+0 S4 A32])) graph500.c:126 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (mem/c:SI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]) [3 VERBOSE+0 S4 A32])
        (nil)))
(insn 2321 2320 2322 137 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1433 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:126 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1433 [ VERBOSE ])
        (nil)))
(jump_insn 2322 2321 2323 137 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2334)
            (pc))) graph500.c:126 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 2334)
;;  succ:       138 [29.0%]  (FALLTHRU)
;;              139 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1853 1854 1859 1862

;; basic block 138, loop depth 0, count 0, freq 4
;;  prev block 137, next block 139, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137 [29.0%]  (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u2141(29){ }u2142(31){ }u2143(64){ }u2144(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1434 1435 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1853 1854 1859 1862
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1434 1435 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2323 2322 2324 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2324 2323 2325 138 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:126 -1
     (nil))
(debug_insn 2325 2324 2326 138 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)) graph500.c:126 -1
     (nil))
(insn 2326 2325 2327 138 (set (reg/f:DI 1435)
        (high:DI (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2327 2326 2328 138 (set (reg/f:DI 1434)
        (lo_sum:DI (reg/f:DI 1435)
            (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1435)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)
            (nil))))
(insn 2328 2327 2330 138 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:126 48 {*movdi_aarch64}
     (nil))
(insn 2330 2328 2331 138 (set (reg:DI 2 x2)
        (reg/f:DI 1434)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1434)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC44") [flags 0x82]  <var_decl 0x7f3c5d881240 *.LC44>)
            (nil))))
(insn 2331 2330 2332 138 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2332 2331 2333 138 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2333 2332 2334 138 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       139 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1853 1854 1859 1862

;; basic block 139, loop depth 0, count 0, freq 14
;;  prev block 138, next block 140, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137 [71.0%] 
;;              138 [100.0%]  (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u2153(29){ }u2154(31){ }u2155(64){ }u2156(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 566 1853 1854 1859 1862
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2334 2333 2335 139 102 "" [1 uses])
(note 2335 2334 2336 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 2336 2335 2337 139 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 566 [ err ])
            (const_int 0 [0]))) graph500.c:127 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 566 [ err ])
        (nil)))
(jump_insn 2337 2336 2338 139 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2354)
            (pc))) graph500.c:127 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2354)
;;  succ:       140 [0.0%]  (FALLTHRU)
;;              141 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862

;; basic block 140, loop depth 0, count 0, freq 0
;;  prev block 139, next block 141, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       139 [0.0%]  (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u2159(29){ }u2160(31){ }u2161(64){ }u2162(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1438 1439 1441
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1438 1439 1441
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2338 2337 2339 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2339 2338 2340 140 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:128 -1
     (nil))
(debug_insn 2340 2339 2341 140 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)) graph500.c:128 -1
     (nil))
(insn 2341 2340 2342 140 (set (reg/f:DI 1439)
        (high:DI (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2342 2341 2343 140 (set (reg/f:DI 1438)
        (lo_sum:DI (reg/f:DI 1439)
            (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1439)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)
            (nil))))
(insn 2343 2342 2345 140 (set (reg/f:DI 1441)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:128 48 {*movdi_aarch64}
     (nil))
(insn 2345 2343 2346 140 (set (reg:DI 2 x2)
        (reg/f:DI 1438)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1438)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC45") [flags 0x82]  <var_decl 0x7f3c5d8812d0 *.LC45>)
            (nil))))
(insn 2346 2345 2347 140 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2347 2346 2348 140 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1441)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1441)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2348 2347 2349 140 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 2349 2348 2350 140 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:128 -1
     (nil))
(debug_insn 2350 2349 2351 140 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:128 -1
     (nil))
(insn 2351 2350 2352 140 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:129 47 {*movsi_aarch64}
     (nil))
(call_insn 2352 2351 2354 140 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:129 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 141, loop depth 0, count 0, freq 14
;;  prev block 140, next block 142, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       139 [100.0%] 
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u2173(29){ }u2174(31){ }u2175(64){ }u2176(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 66 [cc] 571 1442
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859 1862
;; live  gen 	 66 [cc] 571 1442
;; live  kill	
(code_label 2354 2352 2355 141 103 "" [1 uses])
(note 2355 2354 2357 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 2357 2355 2358 141 (set (reg/f:DI 1442)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:137 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2358 2357 2359 141 (set (reg/f:DI 571 [ D.3800 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1442)
                (const_int 16 [0x10])) [2 rootname+0 S8 A64])) graph500.c:137 48 {*movdi_aarch64}
     (nil))
(insn 2359 2358 2360 141 (set (reg:CC 66 cc)
        (compare:CC (reg/f:DI 571 [ D.3800 ])
            (const_int 0 [0]))) graph500.c:137 391 {*cmpdi}
     (nil))
(jump_insn 2360 2359 2361 141 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2788)
            (pc))) graph500.c:137 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 2788)
;;  succ:       142 [15.0%]  (FALLTHRU)
;;              175 [85.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 571 1442 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 571 1442 1853 1854 1859 1862

;; basic block 142, loop depth 0, count 0, freq 2
;;  prev block 141, next block 143, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 [15.0%]  (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u2181(29){ }u2182(31){ }u2183(64){ }u2184(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1442 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1442
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 291 572 575 1446
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1442 1853 1854 1859 1862
;; live  gen 	 0 [x0] 291 572 575 1446
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2361 2360 2364 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 2364 2361 2366 142 (set (reg:DI 572 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1442)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:138 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1442)
        (expr_list:REG_EQUAL (mem/c:DI (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                        (const_int 24 [0x18]))) [4 nvtx_scale+0 S8 A64])
            (nil))))
(debug_insn 2366 2364 2367 142 (var_location:DI sz (ashift:DI (reg:DI 572 [ D.3798 ])
        (const_int 2 [0x2]))) graph500.c:138 -1
     (nil))
(insn 2367 2366 2368 142 (set (reg:DI 1446 [ D.3802 ])
        (ashift:DI (reg:DI 572 [ D.3798 ])
            (const_int 2 [0x2]))) xalloc.c:104 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 2368 2367 2369 142 (set (reg:DI 0 x0)
        (reg:DI 1446 [ D.3802 ])) xalloc.c:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1446 [ D.3802 ])
        (nil)))
(call_insn 2369 2368 2370 142 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>) [0 xmalloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:104 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc") [flags 0x43]  <function_decl 0x7f3c5e239600 xmalloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2370 2369 2371 142 (set (reg/f:DI 291 [ D.3806 ])
        (reg:DI 0 x0)) xalloc.c:104 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 2371 2370 2372 142 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:138 -1
     (nil))
(debug_insn 2372 2371 2373 142 (var_location:DI has_adj (clobber (const_int 0 [0]))) graph500.c:138 -1
     (nil))
(debug_insn 2373 2372 216 142 (var_location:DI k (const_int 0 [0])) graph500.c:141 -1
     (nil))
(insn 216 2373 2383 142 (set (reg/v:DI 575 [ k ])
        (const_int 0 [0])) graph500.c:141 48 {*movdi_aarch64}
     (nil))
;;  succ:       144 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575 1853 1854 1859 1862

;; basic block 143, loop depth 1, count 0, freq 22
;;  prev block 142, next block 144, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       144 [91.0%] 
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u2195(29){ }u2196(31){ }u2197(64){ }u2198(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 575
;; lr  def 	 575
;; live  in  	 575
;; live  gen 	 575
;; live  kill	
(code_label 2383 216 2376 143 106 "" [1 uses])
(note 2376 2383 2377 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 2377 2376 2378 143 (set (mem:SI (plus:DI (mult:DI (reg/v:DI 575 [ k ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: _512, step: 4, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) graph500.c:142 47 {*movsi_aarch64}
     (nil))
(insn 2378 2377 2379 143 (set (reg/v:DI 575 [ k ])
        (plus:DI (reg/v:DI 575 [ k ])
            (const_int 1 [0x1]))) graph500.c:141 95 {*adddi3_aarch64}
     (nil))
(debug_insn 2379 2378 2380 143 (var_location:DI k (reg/v:DI 575 [ k ])) graph500.c:141 -1
     (nil))
;;  succ:       144 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; live  out 	 575

;; basic block 144, loop depth 1, count 0, freq 24
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       142 [100.0%]  (FALLTHRU)
;;              143 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u2203(29){ }u2204(31){ }u2205(64){ }u2206(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 575
;; lr  def 	 66 [cc]
;; live  in  	 575
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2380 2379 2381 144 105 "" [0 uses])
(note 2381 2380 2382 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2382 2381 2384 144 (var_location:DI k (reg/v:DI 575 [ k ])) -1
     (nil))
(insn 2384 2382 2385 144 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg/v:DI 575 [ k ]))) graph500.c:141 391 {*cmpdi}
     (nil))
(jump_insn 2385 2384 2386 144 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2383)
            (pc))) graph500.c:141 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2383)
;;  succ:       143 [91.0%] 
;;              145 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 575
;; live  out 	 575

;; basic block 145, loop depth 0, count 0, freq 2
;;  prev block 144, next block 146, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       144 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u2211(29){ }u2212(31){ }u2213(64){ }u2214(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 578 590 592 1447 1888
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 1853 1854 1859 1862
;; live  gen 	 578 590 592 1447 1888
;; live  kill	
(note 2386 2385 2388 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 2388 2386 2389 145 (set (reg/f:DI 1447)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:144 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2389 2388 2392 145 (set (reg:DI 590 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1447)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:144 48 {*movdi_aarch64}
     (nil))
(insn 2392 2389 217 145 (set (reg:DI 592 [ ivtmp.110 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1447)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1447)
        (nil)))
(insn 217 2392 2409 145 (set (reg/v:DI 578 [ k ])
        (const_int 0 [0])) graph500.c:145 48 {*movdi_aarch64}
     (nil))
(insn 2409 217 2421 145 (set (reg:SI 1888)
        (const_int 1 [0x1])) graph500.c:148 47 {*movsi_aarch64}
     (nil))
;;  succ:       149 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 578 590 592 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 578 590 592 1853 1854 1859 1862

;; basic block 146, loop depth 1, count 0, freq 22
;;  prev block 145, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 [91.0%] 
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u2220(29){ }u2221(31){ }u2222(64){ }u2223(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 592
;; lr  def 	 66 [cc] 582 583
;; live  in  	 578 592
;; live  gen 	 66 [cc] 582 583
;; live  kill	
(code_label 2421 2409 2395 146 109 "" [1 uses])
(note 2395 2421 2396 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2396 2395 2398 146 (var_location:DI D#43 (reg:DI 592 [ ivtmp.110 ])) -1
     (nil))
(insn 2398 2396 2399 146 (set (reg:DI 582 [ D.3798 ])
        (mem:DI (reg:DI 592 [ ivtmp.110 ]) [4 MEM[base: _1250, offset: 0B]+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(debug_insn 2399 2398 2400 146 (var_location:DI D#16 (debug_expr:DI D#43)) graph500.c:145 -1
     (nil))
(debug_insn 2400 2399 2401 146 (var_location:DI p (debug_expr:DI D#16)) -1
     (nil))
(debug_insn 2401 2400 2402 146 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:145 -1
     (nil))
(insn 2402 2401 2403 146 (set (reg:DI 583 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 592 [ ivtmp.110 ])
                (const_int 8 [0x8])) [4 MEM[base: _1250, offset: 8B]+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(debug_insn 2403 2402 2404 146 (var_location:DI D#17 (debug_expr:DI D#43)) graph500.c:146 -1
     (nil))
(debug_insn 2404 2403 2405 146 (var_location:DI p (debug_expr:DI D#17)) -1
     (nil))
(debug_insn 2405 2404 2406 146 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:146 -1
     (nil))
(insn 2406 2405 2407 146 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 582 [ D.3798 ])
            (reg:DI 583 [ D.3798 ]))) graph500.c:147 391 {*cmpdi}
     (nil))
(jump_insn 2407 2406 2408 146 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2413)
            (pc))) graph500.c:147 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 2413)
;;  succ:       147 [72.0%]  (FALLTHRU)
;;              148 [28.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 582 583 590 592
;; live  out 	 578 582 583 592

;; basic block 147, loop depth 1, count 0, freq 16
;;  prev block 146, next block 148, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       146 [72.0%]  (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u2231(29){ }u2232(31){ }u2233(64){ }u2234(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 582 583 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 582 583 1888
;; lr  def 	 1451
;; live  in  	 578 582 583 592
;; live  gen 	 1451
;; live  kill	
(note 2408 2407 4377 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 4377 2408 2410 147 (set (reg:SI 1451)
        (reg:SI 1888)) graph500.c:148 -1
     (nil))
(insn 2410 4377 2412 147 (set (mem:SI (plus:DI (mult:DI (reg:DI 583 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_522+0 S4 A32])
        (reg:SI 1888)) graph500.c:148 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:DI 583 [ D.3798 ])
        (nil)))
(insn 2412 2410 2413 147 (set (mem:SI (plus:DI (mult:DI (reg:DI 582 [ D.3798 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 *_519+0 S4 A32])
        (reg:SI 1888)) graph500.c:148 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 1451)
        (expr_list:REG_DEAD (reg:DI 582 [ D.3798 ])
            (nil))))
;;  succ:       148 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592

;; basic block 148, loop depth 1, count 0, freq 22
;;  prev block 147, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       146 [28.0%] 
;;              147 [100.0%]  (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u2242(29){ }u2243(31){ }u2244(64){ }u2245(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 578 592
;; lr  def 	 578 592
;; live  in  	 578 592
;; live  gen 	 578 592
;; live  kill	
(code_label 2413 2412 2414 148 108 "" [1 uses])
(note 2414 2413 2415 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 2415 2414 2416 148 (set (reg/v:DI 578 [ k ])
        (plus:DI (reg/v:DI 578 [ k ])
            (const_int 1 [0x1]))) graph500.c:144 95 {*adddi3_aarch64}
     (nil))
(debug_insn 2416 2415 2417 148 (var_location:DI k (reg/v:DI 578 [ k ])) graph500.c:144 -1
     (nil))
(insn 2417 2416 2418 148 (set (reg:DI 592 [ ivtmp.110 ])
        (plus:DI (reg:DI 592 [ ivtmp.110 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
;;  succ:       149 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592

;; basic block 149, loop depth 1, count 0, freq 24
;;  prev block 148, next block 150, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145 [100.0%]  (FALLTHRU)
;;              148 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u2249(29){ }u2250(31){ }u2251(64){ }u2252(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 578 590
;; lr  def 	 66 [cc]
;; live  in  	 578 592
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2418 2417 2419 149 107 "" [0 uses])
(note 2419 2418 2420 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2420 2419 2422 149 (var_location:DI k (reg/v:DI 578 [ k ])) -1
     (nil))
(insn 2422 2420 2423 149 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 578 [ k ])
            (reg:DI 590 [ D.3798 ]))) graph500.c:144 391 {*cmpdi}
     (nil))
(jump_insn 2423 2422 2424 149 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) graph500.c:144 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 2421)
;;  succ:       146 [91.0%] 
;;              150 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 578 590 592
;; live  out 	 578 592

;; basic block 150, loop depth 0, count 0, freq 2
;;  prev block 149, next block 151, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u2257(29){ }u2258(31){ }u2259(64){ }u2260(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1862
;; lr  def 	 287 596 600 775 785 788 789 790 791 1453 1455 1879 1880 1881 1882 1883 1884 1885 1886 1887
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 572 1853 1854 1859 1862
;; live  gen 	 287 596 600 775 785 788 789 790 791 1453 1455 1879 1880 1881 1882 1883 1884 1885 1886 1887
;; live  kill	
(note 2424 2423 2426 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 2426 2424 2427 150 (set (reg/f:DI 1453)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:155 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2427 2426 2429 150 (set (reg:SI 600 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1453)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:155 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1453)
        (nil)))
(insn 2429 2427 2430 150 (set (reg/f:DI 1455)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2430 2429 2433 150 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (mem/c:DI (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>) [4 prng_state_store.z1+0 S8 A64])
        (nil)))
(insn 2433 2430 2436 150 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1455)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 2436 2433 2439 150 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1455)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 2439 2436 2442 150 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (mem/c:DI (plus:DI (reg/f:DI 1455)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])) 48 {*movdi_aarch64}
     (nil))
(insn 2442 2439 219 150 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (mem/c:DI (plus:DI (reg/f:DI 1455)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1455)
        (nil)))
(insn 219 2442 220 150 (set (reg:DI 788 [ ivtmp.101 ])
        (const_int 0 [0])) graph500.c:155 48 {*movdi_aarch64}
     (nil))
(insn 220 219 221 150 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (const_int 0 [0])) graph500.c:155 47 {*movsi_aarch64}
     (nil))
(insn 221 220 2452 150 (set (reg/v:SI 596 [ m ])
        (const_int 0 [0])) graph500.c:155 47 {*movsi_aarch64}
     (nil))
(insn 2452 221 2480 150 (set (reg:DI 1879)
        (const_int 2147483646 [0x7ffffffe])) generator/mod_arith_64bit.h:27 48 {*movdi_aarch64}
     (nil))
(insn 2480 2452 2482 150 (set (reg:DI 1880)
        (const_int 107374182 [0x6666666])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 2482 2480 2523 150 (set (reg:DI 1881)
        (const_int 2147483647 [0x7fffffff])) generator/mod_arith_64bit.h:29 48 {*movdi_aarch64}
     (nil))
(insn 2523 2482 2605 150 (set (reg:DI 1882)
        (const_int 104480 [0x19820])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (nil))
(insn 2605 2523 2608 150 (set (reg:DF 1883)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [1  S8 A64])) graph500.c:157 54 {*movdf_aarch64}
     (nil))
(insn 2608 2605 2624 150 (set (reg:DF 1884)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [1  S8 A64])) graph500.c:157 54 {*movdf_aarch64}
     (nil))
(insn 2624 2608 2626 150 (set (reg/f:DI 1885)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:158 836 {add_losym_di}
     (nil))
(insn 2626 2624 2632 150 (set (reg/f:DI 1886)
        (plus:DI (reg/f:DI 1885)
            (const_int 112 [0x70]))) graph500.c:158 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1545)
        (nil)))
(insn 2632 2626 2641 150 (set (reg:SI 1887 [ prng_state_store_z1_lsm.10 ])
        (const_int 1 [0x1])) 47 {*movsi_aarch64}
     (nil))
;;  succ:       163 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 791 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 791 1853 1854 1859 1862

;; basic block 151, loop depth 1, count 0, freq 22
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 [95.5%] 
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u2277(29){ }u2278(31){ }u2279(64){ }u2280(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 775 1879
;; lr  def 	 66 [cc] 1465
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc] 1465
;; live  kill	
(code_label 2641 2632 2445 151 118 "" [1 uses])
(note 2445 2641 2446 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2446 2445 2447 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) graph500.c:156 -1
     (nil))
(debug_insn 2447 2446 2448 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
(debug_insn 2448 2447 2449 151 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) -1
     (nil))
(debug_insn 2449 2448 2450 151 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2450 2449 2451 151 (var_location:DI a (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) -1
     (nil))
(debug_insn 2451 2450 4368 151 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 4368 2451 2453 151 (set (reg:DI 1465)
        (reg:DI 1879)) generator/mod_arith_64bit.h:27 -1
     (nil))
(insn 2453 4368 2454 151 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1879))) generator/mod_arith_64bit.h:27 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
(jump_insn 2454 2453 2455 151 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2478)
            (pc))) generator/mod_arith_64bit.h:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2478)
;;  succ:       152 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              154 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1465 1853
;; live  out 	 287 596 775 785 788 789 790 1465

;; basic block 152, loop depth 0, count 0, freq 0
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       151 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u2286(29){ }u2287(31){ }u2288(64){ }u2289(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 791 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 791
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 791 1862
;; live  gen 	 66 [cc]
;; live  kill	
(note 2455 2454 2456 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 2456 2455 2457 152 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (nil)))
(jump_insn 2457 2456 2458 152 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1671)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1671)
;;  succ:       95 [100.0%] 
;;              153 (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862

;; basic block 153, loop depth 0, count 0, freq 0
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u2292(29){ }u2293(31){ }u2294(64){ }u2295(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  def 	 1466
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; live  gen 	 1466
;; live  kill	
(note 2458 2457 2460 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 2460 2458 2461 153 (set (reg/f:DI 1466)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2461 2460 2464 153 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1862)
        (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (nil))))
(insn 2464 2461 2467 153 (set (mem/c:DI (plus:DI (reg/f:DI 1466)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2467 2464 2470 153 (set (mem/c:DI (plus:DI (reg/f:DI 1466)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2470 2467 2473 153 (set (mem/c:DI (plus:DI (reg/f:DI 1466)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2473 2470 2478 153 (set (mem/c:DI (plus:DI (reg/f:DI 1466)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1466)
        (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
            (nil))))
;;  succ:       95 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 154, loop depth 1, count 0, freq 22
;;  prev block 153, next block 155, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       151 [100.0%] 
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u2315(29){ }u2316(31){ }u2317(64){ }u2318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1465 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 775 790 1879 1880 1881
;; lr  def 	 66 [cc] 640 1476 1477 1480 1481 1482
;; live  in  	 287 596 775 785 788 789 790 1465
;; live  gen 	 66 [cc] 640 1476 1477 1480 1481 1482
;; live  kill	
(code_label 2478 2473 2479 154 111 "" [1 uses])
(note 2479 2478 4369 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 4369 2479 2481 154 (set (reg:DI 1477)
        (reg:DI 1880)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2481 4369 4370 154 (set (reg:DI 1476 [ D.3802 ])
        (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (reg:DI 1880))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (const_int 107374182 [0x6666666]))
        (nil)))
(insn 4370 2481 2483 154 (set (reg:DI 1481)
        (reg:DI 1881)) generator/mod_arith_64bit.h:29 -1
     (nil))
(insn 2483 4370 2485 154 (set (reg:DI 1480)
        (udiv:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1881))) generator/mod_arith_64bit.h:29 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1476 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 2485 2483 2486 154 (set (reg:DI 1482)
        (mult:DI (reg:DI 1480)
            (reg:DI 1881))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1480)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1480)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 2486 2485 2487 154 (set (reg:DI 640 [ D.3802 ])
        (minus:DI (reg:DI 1476 [ D.3802 ])
            (reg:DI 1482))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1482)
        (expr_list:REG_DEAD (reg:DI 1476 [ D.3802 ])
            (nil))))
(debug_insn 2487 2486 2488 154 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2488 2487 2489 154 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2489 2488 2490 154 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2490 2489 2491 154 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2491 2490 2492 154 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2492 2491 2493 154 (var_location:DI sum (reg:DI 640 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2493 2492 2494 154 (var_location:DI a (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2494 2493 2496 154 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 2496 2494 2497 154 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1879))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_EQUAL (compare:CC (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (const_int 2147483646 [0x7ffffffe]))
        (nil)))
(jump_insn 2497 2496 2498 154 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2521)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2521)
;;  succ:       155 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              157 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 640 775 785 788 789 790 1465 1477 1481 1853
;; live  out 	 287 596 640 775 785 788 789 790 1465 1477 1481

;; basic block 155, loop depth 0, count 0, freq 0
;;  prev block 154, next block 156, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u2335(29){ }u2336(31){ }u2337(64){ }u2338(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 791 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 791
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 791 1862
;; live  gen 	 66 [cc]
;; live  kill	
(note 2498 2497 2499 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 2499 2498 2500 155 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (nil)))
(jump_insn 2500 2499 2501 155 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 1737)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1737)
;;  succ:       99 [100.0%] 
;;              156 (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862

;; basic block 156, loop depth 0, count 0, freq 0
;;  prev block 155, next block 157, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u2341(29){ }u2342(31){ }u2343(64){ }u2344(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  def 	 1485
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; live  gen 	 1485
;; live  kill	
(note 2501 2500 2503 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 2503 2501 2504 156 (set (reg/f:DI 1485)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2504 2503 2507 156 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1862)
        (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (nil))))
(insn 2507 2504 2510 156 (set (mem/c:DI (plus:DI (reg/f:DI 1485)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2510 2507 2513 156 (set (mem/c:DI (plus:DI (reg/f:DI 1485)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2513 2510 2516 156 (set (mem/c:DI (plus:DI (reg/f:DI 1485)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2516 2513 2521 156 (set (mem/c:DI (plus:DI (reg/f:DI 1485)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1485)
        (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
            (nil))))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 157, loop depth 1, count 0, freq 22
;;  prev block 156, next block 158, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u2364(29){ }u2365(31){ }u2366(64){ }u2367(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 640 775 785 788 789 790 1465 1477 1481 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 640 789 790 1879 1880 1881 1882
;; lr  def 	 66 [cc] 638 643 1495 1496 1497 1500 1502 1504 1508 1510
;; live  in  	 287 596 640 775 785 788 789 790 1465 1477 1481
;; live  gen 	 66 [cc] 638 643 1495 1496 1497 1500 1502 1504 1508 1510
;; live  kill	
(code_label 2521 2516 2522 157 113 "" [1 uses])
(note 2522 2521 4371 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 4371 2522 2524 157 (set (reg:DI 1496)
        (reg:DI 1882)) generator/mod_arith_64bit.h:36 -1
     (nil))
(insn 2524 4371 2525 157 (set (reg:DI 1495 [ D.3802 ])
        (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
            (reg:DI 1882))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
                (const_int 104480 [0x19820]))
            (nil))))
(insn 2525 2524 2527 157 (set (reg:DI 1497 [ D.3802 ])
        (plus:DI (reg:DI 1495 [ D.3802 ])
            (reg:DI 640 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1495 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 640 [ D.3802 ])
            (nil))))
(insn 2527 2525 2529 157 (set (reg:DI 1500)
        (udiv:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1881))) generator/mod_arith_64bit.h:36 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1497 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 2529 2527 2530 157 (set (reg:DI 1502)
        (mult:DI (reg:DI 1500)
            (reg:DI 1881))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1500)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1500)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 2530 2529 2531 157 (set (reg:DI 643 [ D.3802 ])
        (minus:DI (reg:DI 1497 [ D.3802 ])
            (reg:DI 1502))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1502)
        (expr_list:REG_DEAD (reg:DI 1497 [ D.3802 ])
            (nil))))
(debug_insn 2531 2530 2532 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2532 2531 2533 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2533 2532 2534 157 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2534 2533 2535 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2535 2534 2536 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2536 2535 2537 157 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2537 2536 2538 157 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 2538 2537 2539 157 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2539 2538 2540 157 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2540 2539 2541 157 (var_location:DI state (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) generator/splittable_mrg.c:274 -1
     (nil))
(debug_insn 2541 2540 2542 157 (var_location:DI a (reg:DI 643 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2542 2541 2543 157 (var_location:DI a (reg:DI 643 [ D.3802 ])) -1
     (nil))
(debug_insn 2543 2542 2545 157 (var_location:DI b (const_int 107374182 [0x6666666])) -1
     (nil))
(insn 2545 2543 2547 157 (set (reg:DI 1504 [ D.3802 ])
        (mult:DI (reg:DI 643 [ D.3802 ])
            (reg:DI 1880))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1477)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 643 [ D.3802 ])
                (const_int 107374182 [0x6666666]))
            (nil))))
(insn 2547 2545 2549 157 (set (reg:DI 1508)
        (udiv:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1881))) generator/mod_arith_64bit.h:29 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1504 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 2549 2547 2550 157 (set (reg:DI 1510)
        (mult:DI (reg:DI 1508)
            (reg:DI 1881))) generator/mod_arith_64bit.h:29 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1508)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1508)
                (const_int 2147483647 [0x7fffffff]))
            (nil))))
(insn 2550 2549 2551 157 (set (reg:DI 638 [ D.3802 ])
        (minus:DI (reg:DI 1504 [ D.3802 ])
            (reg:DI 1510))) generator/mod_arith_64bit.h:29 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1510)
        (expr_list:REG_DEAD (reg:DI 1504 [ D.3802 ])
            (nil))))
(debug_insn 2551 2550 2552 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2552 2551 2553 157 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:78 -1
     (nil))
(debug_insn 2553 2552 2554 157 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2554 2553 2555 157 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2555 2554 2556 157 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2556 2555 2557 157 (var_location:DI sum (reg:DI 638 [ D.3802 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2557 2556 2558 157 (var_location:DI a (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2558 2557 2560 157 (var_location:DI b (const_int 104480 [0x19820])) -1
     (nil))
(insn 2560 2558 2561 157 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1879))) generator/mod_arith_64bit.h:34 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1465)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
                (const_int 2147483646 [0x7ffffffe]))
            (nil))))
(jump_insn 2561 2560 2562 157 (set (pc)
        (if_then_else (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2580)
            (pc))) generator/mod_arith_64bit.h:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2580)
;;  succ:       158 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              159 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 638 643 775 785 788 789 1481 1496 1853
;; live  out 	 287 596 638 643 775 785 788 789 1481 1496

;; basic block 158, loop depth 0, count 0, freq 0
;;  prev block 157, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       157 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u2400(29){ }u2401(31){ }u2402(64){ }u2403(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 643 775 785 789 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 643 775 785 789 1862
;; lr  def 	 1513
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 643 775 785 789 1862
;; live  gen 	 1513
;; live  kill	
(note 2562 2561 2564 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 2564 2562 2565 158 (set (reg/f:DI 1513)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2565 2564 2568 158 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 643 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1862)
        (expr_list:REG_DEAD (reg:DI 643 [ D.3802 ])
            (nil))))
(insn 2568 2565 2571 158 (set (mem/c:DI (plus:DI (reg/f:DI 1513)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2571 2568 2574 158 (set (mem/c:DI (plus:DI (reg/f:DI 1513)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2574 2571 2577 158 (set (mem/c:DI (plus:DI (reg/f:DI 1513)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2577 2574 2580 158 (set (mem/c:DI (plus:DI (reg/f:DI 1513)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1513)
        (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (nil))))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 159, loop depth 1, count 0, freq 22
;;  prev block 158, next block 160, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       157 [100.0%] 
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u2423(29){ }u2424(31){ }u2425(64){ }u2426(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 638 643 775 785 788 789 1481 1496 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 638 788 789 1881 1882
;; lr  def 	 66 [cc] 646 1523 1525 1528 1530 1532
;; live  in  	 287 596 638 643 775 785 788 789 1481 1496
;; live  gen 	 66 [cc] 646 1523 1525 1528 1530 1532
;; live  kill	
(code_label 2580 2577 2581 159 115 "" [1 uses])
(note 2581 2580 2583 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 2583 2581 2584 159 (set (reg:DI 1523 [ D.3802 ])
        (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (reg:DI 1882))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1496)
        (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
            (expr_list:REG_EQUAL (mult:DI (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
                    (const_int 104480 [0x19820]))
                (nil)))))
(insn 2584 2583 2586 159 (set (reg:DI 1525 [ D.3802 ])
        (plus:DI (reg:DI 1523 [ D.3802 ])
            (reg:DI 638 [ D.3802 ]))) generator/mod_arith_64bit.h:36 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1523 [ D.3802 ])
        (expr_list:REG_DEAD (reg:DI 638 [ D.3802 ])
            (nil))))
(insn 2586 2584 2588 159 (set (reg:DI 1528)
        (udiv:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1881))) generator/mod_arith_64bit.h:36 387 {udivdi3}
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 1525 [ D.3802 ])
            (const_int 2147483647 [0x7fffffff]))
        (nil)))
(insn 2588 2586 2589 159 (set (reg:DI 1530)
        (mult:DI (reg:DI 1528)
            (reg:DI 1881))) generator/mod_arith_64bit.h:36 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 1528)
        (expr_list:REG_DEAD (reg:DI 1481)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 1528)
                    (const_int 2147483647 [0x7fffffff]))
                (nil)))))
(insn 2589 2588 2590 159 (set (reg:DI 646 [ D.3802 ])
        (minus:DI (reg:DI 1525 [ D.3802 ])
            (reg:DI 1530))) generator/mod_arith_64bit.h:36 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1530)
        (expr_list:REG_DEAD (reg:DI 1525 [ D.3802 ])
            (nil))))
(debug_insn 2590 2589 2591 159 (var_location:DI sum (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2591 2590 2592 159 (var_location:DI a (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2592 2591 2593 159 (var_location:DI b (clobber (const_int 0 [0]))) generator/mod_arith_64bit.h:86 -1
     (nil))
(debug_insn 2593 2592 2594 159 (var_location:DI sum (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2594 2593 2595 159 (var_location:DI a (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2595 2594 2596 159 (var_location:DI new_elt (clobber (const_int 0 [0]))) generator/splittable_mrg.c:172 -1
     (nil))
(debug_insn 2596 2595 2597 159 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:268 -1
     (nil))
(debug_insn 2597 2596 2598 159 (var_location:DI state (clobber (const_int 0 [0]))) generator/splittable_mrg.c:275 -1
     (nil))
(debug_insn 2598 2597 2599 159 (var_location:DI state (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
(debug_insn 2599 2598 2600 159 (var_location:DF R (clobber (const_int 0 [0]))) graph500.c:156 -1
     (nil))
(insn 2600 2599 2601 159 (set (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
        (mem:SI (plus:DI (mult:DI (reg:DI 788 [ ivtmp.101 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 291 [ D.3806 ])) [3 MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B]+0 S4 A32])) graph500.c:157 47 {*movsi_aarch64}
     (nil))
(insn 2601 2600 2602 159 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
            (const_int 0 [0]))) graph500.c:157 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1532 [ MEM[base: _112, index: ivtmp.101_1291, step: 4, offset: 0B] ])
        (nil)))
(jump_insn 2602 2601 2603 159 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2629)
            (pc))) graph500.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2629)
;;  succ:       162 [50.0%] 
;;              160 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788

;; basic block 160, loop depth 1, count 0, freq 11
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       159 [50.0%]  (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u2444(29){ }u2445(31){ }u2446(64){ }u2447(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 596 600 643 646 788 1883 1884
;; lr  def 	 66 [cc] 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 66 [cc] 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544
;; live  kill	
(note 2603 2602 2604 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 2604 2603 4372 160 (set (reg:DF 1533 [ D.3804 ])
        (float:DF (reg:DI 643 [ D.3802 ]))) graph500.c:157 798 {floatdidf2}
     (nil))
(insn 4372 2604 2606 160 (set (reg:DF 1535)
        (reg:DF 1883)) graph500.c:157 -1
     (nil))
(insn 2606 4372 2607 160 (set (reg:DF 1534 [ D.3804 ])
        (mult:DF (reg:DF 1533 [ D.3804 ])
            (reg:DF 1883))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1535)
        (expr_list:REG_DEAD (reg:DF 1533 [ D.3804 ])
            (nil))))
(insn 2607 2606 4373 160 (set (reg:DF 1536 [ D.3804 ])
        (float:DF (reg:DI 646 [ D.3802 ]))) graph500.c:157 798 {floatdidf2}
     (nil))
(insn 4373 2607 2609 160 (set (reg:DF 1538)
        (reg:DF 1884)) graph500.c:157 -1
     (nil))
(insn 2609 4373 2610 160 (set (reg:DF 1537 [ D.3804 ])
        (mult:DF (reg:DF 1536 [ D.3804 ])
            (reg:DF 1884))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1538)
        (expr_list:REG_DEAD (reg:DF 1536 [ D.3804 ])
            (nil))))
(insn 2610 2609 2611 160 (set (reg:DF 1539 [ D.3804 ])
        (plus:DF (reg:DF 1534 [ D.3804 ])
            (reg:DF 1537 [ D.3804 ]))) graph500.c:157 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1537 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1534 [ D.3804 ])
            (nil))))
(insn 2611 2610 2612 160 (set (reg:DI 1540 [ D.3810 ])
        (minus:DI (reg:DI 572 [ D.3798 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:157 264 {subdi3}
     (nil))
(insn 2612 2611 2613 160 (set (reg:DF 1541 [ D.3804 ])
        (float:DF (reg:DI 1540 [ D.3810 ]))) graph500.c:157 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1540 [ D.3810 ])
        (nil)))
(insn 2613 2612 2614 160 (set (reg:DF 1542 [ D.3804 ])
        (mult:DF (reg:DF 1539 [ D.3804 ])
            (reg:DF 1541 [ D.3804 ]))) graph500.c:157 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1541 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1539 [ D.3804 ])
            (nil))))
(insn 2614 2613 2615 160 (set (reg:SI 1543 [ D.3797 ])
        (minus:SI (reg:SI 600 [ D.3797 ])
            (reg/v:SI 596 [ m ]))) graph500.c:157 262 {subsi3}
     (nil))
(insn 2615 2614 2616 160 (set (reg:DF 1544 [ D.3804 ])
        (float:DF (reg:SI 1543 [ D.3797 ]))) graph500.c:157 802 {floatsidf2}
     (expr_list:REG_DEAD (reg:SI 1543 [ D.3797 ])
        (nil)))
(insn 2616 2615 2617 160 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg:DF 1542 [ D.3804 ])
            (reg:DF 1544 [ D.3804 ]))) graph500.c:157 395 {*cmpedf}
     (expr_list:REG_DEAD (reg:DF 1544 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1542 [ D.3804 ])
            (nil))))
(jump_insn 2617 2616 2618 160 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref 2629)
            (pc))) graph500.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 2629)
;;  succ:       162 [50.0%] 
;;              161 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788

;; basic block 161, loop depth 1, count 0, freq 5
;;  prev block 160, next block 162, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       160 [50.0%]  (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u2467(29){ }u2468(31){ }u2469(64){ }u2470(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596 788 1885 1886
;; lr  def 	 596 599 1545 1548 1549
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 596 599 1545 1548 1549
;; live  kill	
(note 2618 2617 2619 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 2619 2618 2620 161 (set (reg/v:SI 599 [ m ])
        (plus:SI (reg/v:SI 596 [ m ])
            (const_int 1 [0x1]))) graph500.c:158 94 {*addsi3_aarch64}
     (nil))
(debug_insn 2620 2619 2621 161 (var_location:SI m (reg/v:SI 599 [ m ])) graph500.c:158 -1
     (nil))
(debug_insn 2621 2620 2622 161 (var_location:DI D#45 (plus:DI (reg:DI 788 [ ivtmp.101 ])
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 2622 2621 4374 161 (var_location:DI t (debug_expr:DI D#45)) graph500.c:158 -1
     (nil))
(insn 4374 2622 4375 161 (set (reg/f:DI 1545)
        (reg/f:DI 1885)) graph500.c:158 -1
     (nil))
(insn 4375 4374 2627 161 (set (reg/f:DI 1548)
        (reg/f:DI 1886)) graph500.c:158 -1
     (nil))
(insn 2627 4375 2628 161 (set (reg:DI 1549 [ m ])
        (sign_extend:DI (reg/v:SI 596 [ m ]))) graph500.c:158 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 596 [ m ])
        (nil)))
(insn 2628 2627 218 161 (set (mem:DI (plus:DI (mult:DI (reg:DI 1549 [ m ])
                    (const_int 8 [0x8]))
                (reg/f:DI 1886)) [4 bfs_root S8 A64])
        (reg:DI 788 [ ivtmp.101 ])) graph500.c:158 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1549 [ m ])
        (expr_list:REG_DEAD (reg/f:DI 1548)
            (nil))))
(insn 218 2628 2629 161 (set (reg/v:SI 596 [ m ])
        (reg/v:SI 599 [ m ])) graph500.c:158 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 599 [ m ])
        (nil)))
;;  succ:       162 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; live  out 	 287 596 643 646 775 785 788

;; basic block 162, loop depth 1, count 0, freq 21
;;  prev block 161, next block 163, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       159 [50.0%] 
;;              161 [100.0%]  (FALLTHRU)
;;              160 [50.0%] 
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u2481(29){ }u2482(31){ }u2483(64){ }u2484(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 643 646 775 785 788 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 643 646 775 785 788 1887
;; lr  def 	 287 775 785 788 789 790 791
;; live  in  	 287 596 643 646 775 785 788
;; live  gen 	 287 775 785 788 789 790 791
;; live  kill	
(code_label 2629 218 2630 162 116 "" [2 uses])
(note 2630 2629 2631 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 2631 2630 4376 162 (set (reg:DI 788 [ ivtmp.101 ])
        (plus:DI (reg:DI 788 [ ivtmp.101 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
(insn 4376 2631 222 162 (set (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (reg:SI 1887 [ prng_state_store_z1_lsm.10 ])) -1
     (nil))
(insn 222 4376 223 162 (set (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 223 222 224 162 (set (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
        (reg:DI 643 [ D.3802 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 643 [ D.3802 ])
        (nil)))
(insn 224 223 225 162 (set (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 225 224 226 162 (set (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) generator/mod_arith_64bit.h:36 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (nil)))
(insn 226 225 2633 162 (set (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
        (reg:DI 646 [ D.3802 ])) generator/splittable_mrg.c:177 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 646 [ D.3802 ])
        (nil)))
;;  succ:       163 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790

;; basic block 163, loop depth 1, count 0, freq 24
;;  prev block 162, next block 164, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       150 [100.0%]  (FALLTHRU)
;;              162 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u2491(29){ }u2492(31){ }u2493(64){ }u2494(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596 600
;; lr  def 	 66 [cc]
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2633 226 2634 163 110 "" [0 uses])
(note 2634 2633 2636 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2636 2634 2637 163 (var_location:DI t (reg:DI 788 [ ivtmp.101 ])) -1
     (nil))
(debug_insn 2637 2636 2638 163 (var_location:SI m (reg/v:SI 596 [ m ])) -1
     (nil))
(insn 2638 2637 2639 163 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (reg:SI 600 [ D.3797 ]))) graph500.c:155 390 {*cmpsi}
     (nil))
(jump_insn 2639 2638 2640 163 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2704)
            (pc))) graph500.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 2704)
;;  succ:       164 [95.5%]  (FALLTHRU)
;;              170 [4.5%]  (LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790

;; basic block 164, loop depth 1, count 0, freq 23
;;  prev block 163, next block 165, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163 [95.5%]  (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u2501(29){ }u2502(31){ }u2503(64){ }u2504(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 572 788
;; lr  def 	 66 [cc]
;; live  in  	 287 596 775 785 788 789 790
;; live  gen 	 66 [cc]
;; live  kill	
(note 2640 2639 2642 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 2642 2640 2643 164 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 572 [ D.3798 ])
            (reg:DI 788 [ ivtmp.101 ]))) graph500.c:155 391 {*cmpdi}
     (nil))
(jump_insn 2643 2642 2644 164 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2641)
            (pc))) graph500.c:155 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 2641)
;;  succ:       151 [95.5%] 
;;              165 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 572 596 600 775 785 788 789 790 1853
;; live  out 	 287 596 775 785 788 789 790

;; basic block 165, loop depth 0, count 0, freq 1
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u2508(29){ }u2509(31){ }u2510(64){ }u2511(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 791 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 791
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 791 1853 1854 1859 1862
;; live  gen 	 66 [cc]
;; live  kill	
(note 2644 2643 2645 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 2645 2644 2646 165 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (nil)))
(jump_insn 2646 2645 2647 165 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2663)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 2663)
;;  succ:       167 [100.0%] 
;;              166 (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 1853 1854 1859 1862

;; basic block 166, loop depth 0, count 0, freq 0
;;  prev block 165, next block 167, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u2514(29){ }u2515(31){ }u2516(64){ }u2517(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  def 	 1550
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 596 600 775 785 789 790 1853 1854 1859 1862
;; live  gen 	 1550
;; live  kill	
(note 2647 2646 2649 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 2649 2647 2650 166 (set (reg/f:DI 1550)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2650 2649 2653 166 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1862)
        (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (nil))))
(insn 2653 2650 2656 166 (set (mem/c:DI (plus:DI (reg/f:DI 1550)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2656 2653 2659 166 (set (mem/c:DI (plus:DI (reg/f:DI 1550)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2659 2656 2662 166 (set (mem/c:DI (plus:DI (reg/f:DI 1550)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2662 2659 2663 166 (set (mem/c:DI (plus:DI (reg/f:DI 1550)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1550)
        (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
            (nil))))
;;  succ:       167 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1853 1854 1859

;; basic block 167, loop depth 0, count 0, freq 1
;;  prev block 166, next block 168, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 [100.0%] 
;;              166 [100.0%]  (FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u2537(29){ }u2538(31){ }u2539(64){ }u2540(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1853 1854 1859
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2663 2662 2664 167 119 "" [1 uses])
(note 2664 2663 2665 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2665 2664 2666 167 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 596 [ m ])
            (const_int 0 [0]))) graph500.c:161 390 {*cmpsi}
     (nil))
(jump_insn 2666 2665 2667 167 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2687)
            (pc))) graph500.c:161 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 2687)
;;  succ:       168 [100.0%]  (FALLTHRU)
;;              169 [0.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1853 1854 1859

;; basic block 168, loop depth 0, count 0, freq 1
;;  prev block 167, next block 169, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       167 [100.0%]  (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u2543(29){ }u2544(31){ }u2545(64){ }u2546(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 596 600 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1560 1561 1564 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 596 600 1853 1854 1859
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 1560 1561 1564 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2667 2666 2668 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2668 2667 2669 168 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:162 -1
     (nil))
(debug_insn 2669 2668 2670 168 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)) graph500.c:162 -1
     (nil))
(insn 2670 2669 2671 168 (set (reg/f:DI 1561)
        (high:DI (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2671 2670 2672 168 (set (reg/f:DI 1560)
        (lo_sum:DI (reg/f:DI 1561)
            (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1561)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)
            (nil))))
(insn 2672 2671 2674 168 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:162 48 {*movdi_aarch64}
     (nil))
(insn 2674 2672 2675 168 (set (reg:SI 4 x4)
        (reg/v:SI 596 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2675 2674 2676 168 (set (reg:SI 3 x3)
        (reg:SI 600 [ D.3797 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 600 [ D.3797 ])
        (nil)))
(insn 2676 2675 2677 168 (set (reg:DI 2 x2)
        (reg/f:DI 1560)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1560)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC48") [flags 0x82]  <var_decl 0x7f3c5d881360 *.LC48>)
            (nil))))
(insn 2677 2676 2678 168 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2678 2677 2679 168 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2679 2678 2680 168 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 4 x4)
        (expr_list:REG_DEAD (reg:SI 3 x3)
            (expr_list:REG_DEAD (reg:DI 2 x2)
                (expr_list:REG_DEAD (reg:SI 1 x1)
                    (expr_list:REG_UNUSED (reg:SI 0 x0)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                            (nil)))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:SI (use (reg:SI 4 x4))
                                (nil)))))))))
(debug_insn 2680 2679 2681 168 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:162 -1
     (nil))
(debug_insn 2681 2680 2683 168 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:162 -1
     (nil))
(insn 2683 2681 2684 168 (set (reg/f:DI 1564)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:164 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2684 2683 2687 168 (set (mem/c:SI (plus:DI (reg/f:DI 1564)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])
        (reg/v:SI 596 [ m ])) graph500.c:164 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1564)
        (expr_list:REG_DEAD (reg/v:SI 596 [ m ])
            (nil))))
;;  succ:       172 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1853 1854 1859

;; basic block 169, loop depth 0, count 0, freq 0
;;  prev block 168, next block 170, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       167 [0.0%] 
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u2562(29){ }u2563(31){ }u2564(64){ }u2565(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1566 1567 1569
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 1566 1567 1569
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2687 2684 2688 169 120 "" [1 uses])
(note 2688 2687 2689 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2689 2688 2690 169 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:166 -1
     (nil))
(debug_insn 2690 2689 2691 169 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)) graph500.c:166 -1
     (nil))
(insn 2691 2690 2692 169 (set (reg/f:DI 1567)
        (high:DI (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2692 2691 2693 169 (set (reg/f:DI 1566)
        (lo_sum:DI (reg/f:DI 1567)
            (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1567)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)
            (nil))))
(insn 2693 2692 2695 169 (set (reg/f:DI 1569)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:166 48 {*movdi_aarch64}
     (nil))
(insn 2695 2693 2696 169 (set (reg:DI 2 x2)
        (reg/f:DI 1566)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1566)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC49") [flags 0x82]  <var_decl 0x7f3c5d8813f0 *.LC49>)
            (nil))))
(insn 2696 2695 2697 169 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2697 2696 2698 169 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1569)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1569)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 2698 2697 2699 169 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 2699 2698 2700 169 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:166 -1
     (nil))
(debug_insn 2700 2699 2701 169 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:166 -1
     (nil))
(insn 2701 2700 2702 169 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:167 47 {*movsi_aarch64}
     (nil))
(call_insn 2702 2701 2704 169 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:167 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 170, loop depth 0, count 0, freq 1
;;  prev block 169, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163 [4.5%]  (LOOP_EXIT)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u2576(29){ }u2577(31){ }u2578(64){ }u2579(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 791 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 791
;; lr  def 	 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 791 1853 1854 1859 1862
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 2704 2702 2705 170 117 "" [1 uses])
(note 2705 2704 2706 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 2706 2705 2707 170 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
            (const_int 0 [0]))) 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 791 [ prng_state_store_z1_lsm.10 ])
        (nil)))
(jump_insn 2707 2706 2708 170 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2726)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 2726)
;;  succ:       172 [100.0%] 
;;              171 (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 1710 1853 1854 1859 1862
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 1853 1854 1859 1862

;; basic block 171, loop depth 0, count 0, freq 0
;;  prev block 170, next block 172, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       170 (FALLTHRU)
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u2582(29){ }u2583(31){ }u2584(64){ }u2585(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 1710 1853 1854 1859 1862
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 775 785 789 790 1862
;; lr  def 	 1570
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 287 291 775 785 789 790 1853 1854 1859 1862
;; live  gen 	 1570
;; live  kill	
(note 2708 2707 2710 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 2710 2708 2711 171 (set (reg/f:DI 1570)
        (lo_sum:DI (reg/f:DI 1862)
            (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>))) 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)
        (nil)))
(insn 2711 2710 2714 171 (set (mem/c:DI (lo_sum:DI (reg/f:DI 1862)
                (symbol_ref:DI ("prng_state_store.lto_priv.18") [flags 0xc2]  <var_decl 0x7f3c5e254480 prng_state_store>)) [4 prng_state_store.z1+0 S8 A64])
        (reg:DI 775 [ prng_state_store_z3_lsm.15 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1862)
        (expr_list:REG_DEAD (reg:DI 775 [ prng_state_store_z3_lsm.15 ])
            (nil))))
(insn 2714 2711 2717 171 (set (mem/c:DI (plus:DI (reg/f:DI 1570)
                (const_int 32 [0x20])) [4 prng_state_store.z5+0 S8 A64])
        (reg:DI 790 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 790 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2717 2714 2720 171 (set (mem/c:DI (plus:DI (reg/f:DI 1570)
                (const_int 24 [0x18])) [4 prng_state_store.z4+0 S8 A64])
        (reg:DI 789 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 789 [ prng_state_store_z4_lsm.13 ])
        (nil)))
(insn 2720 2717 2723 171 (set (mem/c:DI (plus:DI (reg/f:DI 1570)
                (const_int 16 [0x10])) [4 prng_state_store.z3+0 S8 A64])
        (reg:DI 287 [ prng_state_store_z5_lsm.11 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 287 [ prng_state_store_z5_lsm.11 ])
        (nil)))
(insn 2723 2720 2726 171 (set (mem/c:DI (plus:DI (reg/f:DI 1570)
                (const_int 8 [0x8])) [4 prng_state_store.z2+0 S8 A64])
        (reg:DI 785 [ prng_state_store_z4_lsm.13 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1570)
        (expr_list:REG_DEAD (reg:DI 785 [ prng_state_store_z4_lsm.13 ])
            (nil))))
;;  succ:       172 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1853 1854 1859

;; basic block 172, loop depth 0, count 0, freq 2
;;  prev block 171, next block 173, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       168 [100.0%]  (FALLTHRU)
;;              171 [100.0%]  (FALLTHRU)
;;              170 [100.0%] 
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u2605(29){ }u2606(31){ }u2607(64){ }u2608(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 291 1853 1854 1859
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2726 2723 2727 172 121 "" [1 uses])
(note 2727 2726 2728 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2728 2727 2729 172 (var_location:DI p (reg/f:DI 291 [ D.3806 ])) -1
     (nil))
(insn 2729 2728 2730 172 (set (reg:DI 0 x0)
        (reg/f:DI 291 [ D.3806 ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 291 [ D.3806 ])
        (nil)))
(call_insn 2730 2729 2848 172 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:       173 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859

;; basic block 173, loop depth 0, count 0, freq 14
;;  prev block 172, next block 174, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       179 [100.0%]  (FALLTHRU)
;;              172 [100.0%]  (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u2613(29){ }u2614(31){ }u2615(64){ }u2616(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1854
;; lr  def 	 66 [cc] 777 1580 1582
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859
;; live  gen 	 66 [cc] 777 1580 1582
;; live  kill	
(code_label 2848 2730 2731 173 126 "" [0 uses])
(note 2731 2848 2732 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2732 2731 2734 173 (var_location:SI m (const_int 0 [0])) -1
     (nil))
(insn 2734 2732 2735 173 (set (reg/f:DI 1580)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2735 2734 227 173 (set (reg:SI 1582 [ NBFS ])
        (mem/c:SI (plus:DI (reg/f:DI 1580)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1580)
        (nil)))
(insn 227 2735 2736 173 (set (reg:DI 777 [ ivtmp.94 ])
        (const_int 0 [0])) graph500.c:187 48 {*movdi_aarch64}
     (nil))
(insn 2736 227 2737 173 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1582 [ NBFS ])
            (const_int 0 [0]))) graph500.c:187 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1582 [ NBFS ])
        (nil)))
(jump_insn 2737 2736 3755 173 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3749)
            (pc))) graph500.c:187 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9775 (nil)))
 -> 3749)
;;  succ:       180 [97.8%] 
;;              174 [2.2%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1853 1854 1859

;; basic block 174, loop depth 0, count 0, freq 4
;;  prev block 173, next block 175, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       173 [2.2%]  (FALLTHRU)
;;              266 [2.2%]  (FALLTHRU,LOOP_EXIT)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u2621(29){ }u2622(31){ }u2623(64){ }u2624(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 240 1583 1585
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 240 1583 1585
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3755 2737 2738 174 181 "" [0 uses])
(note 2738 3755 2739 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(call_insn 2739 2738 2740 174 (parallel [
            (call (mem:DI (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>) [0 destroy_graph S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:215 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("destroy_graph") [flags 0x43]  <function_decl 0x7f3c5e24c700 destroy_graph>)
        (nil))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
(debug_insn 2740 2739 2741 174 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2741 2740 2742 174 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2742 2741 2743 174 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2743 2742 2744 174 (var_location:DF R (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2744 2743 2745 174 (var_location:DI t (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2745 2744 2746 174 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2746 2745 2747 174 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2747 2746 2748 174 (var_location:SI m (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2748 2747 2749 174 (var_location:DI has_adj (clobber (const_int 0 [0]))) graph500.c:107 -1
     (nil))
(debug_insn 2749 2748 2751 174 (var_location:DI p (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:109 -1
     (nil))
(insn 2751 2749 2752 174 (set (reg/f:DI 1583)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:109 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1853)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 2752 2751 2753 174 (set (reg:DI 0 x0)
        (mem/f/c:DI (plus:DI (reg/f:DI 1583)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) xalloc.c:132 48 {*movdi_aarch64}
     (nil))
(call_insn 2753 2752 2754 174 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 2754 2753 2756 174 (var_location:DI p (clobber (const_int 0 [0]))) graph500.c:109 -1
     (nil))
(insn 2756 2754 2775 174 (set (reg/f:DI 1585)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:111 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2775 2756 2776 174 (set (reg:SI 3 x3)
        (mem/c:SI (plus:DI (reg/f:DI 1585)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:111 47 {*movsi_aarch64}
     (nil))
(insn 2776 2775 2777 174 (set (reg:DF 37 v5)
        (mem/c:DF (plus:DI (reg/f:DI 1583)
                (const_int 104 [0x68])) [1 construction_time+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2777 2776 2778 174 (set (reg:DF 36 v4)
        (mem/c:DF (plus:DI (reg/f:DI 1583)
                (const_int 96 [0x60])) [1 generation_time+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2778 2777 2779 174 (set (reg:DF 35 v3)
        (mem/c:DF (plus:DI (reg/f:DI 1585)
                (const_int 40 [0x28])) [1 D+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2779 2778 2780 174 (set (reg:DF 34 v2)
        (mem/c:DF (plus:DI (reg/f:DI 1585)
                (const_int 32 [0x20])) [1 C+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2780 2779 2781 174 (set (reg:DF 33 v1)
        (mem/c:DF (plus:DI (reg/f:DI 1585)
                (const_int 24 [0x18])) [1 B+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2781 2780 2782 174 (set (reg:DF 32 v0)
        (mem/c:DF (plus:DI (reg/f:DI 1585)
                (const_int 16 [0x10])) [1 A+0 S8 A64])) graph500.c:111 54 {*movdf_aarch64}
     (nil))
(insn 2782 2781 2783 174 (set (reg:DI 2 x2)
        (mem/c:DI (plus:DI (reg/f:DI 1585)
                (const_int 8 [0x8])) [4 edgefactor+0 S8 A64])) graph500.c:111 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1585)
        (nil)))
(insn 2783 2782 2784 174 (set (reg:DI 1 x1)
        (mem/c:DI (plus:DI (reg/f:DI 1583)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:111 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1583)
        (nil)))
(insn 2784 2783 2785 174 (set (reg:DI 0 x0)
        (mem/c:DI (lo_sum:DI (reg/f:DI 1854)
                (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])) [4 SCALE+0 S8 A64])) graph500.c:111 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1854)
        (expr_list:REG_EQUAL (mem/c:DI (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]) [4 SCALE+0 S8 A64])
            (nil))))
(call_insn 2785 2784 267 174 (parallel [
            (call (mem:DI (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>) [0 output_results.constprop S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:111 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DF 37 v5)
        (expr_list:REG_DEAD (reg:DF 36 v4)
            (expr_list:REG_DEAD (reg:DF 35 v3)
                (expr_list:REG_DEAD (reg:DF 34 v2)
                    (expr_list:REG_DEAD (reg:DF 33 v1)
                        (expr_list:REG_DEAD (reg:DF 32 v0)
                            (expr_list:REG_DEAD (reg:SI 3 x3)
                                (expr_list:REG_DEAD (reg:DI 2 x2)
                                    (expr_list:REG_DEAD (reg:DI 1 x1)
                                        (expr_list:REG_DEAD (reg:DI 0 x0)
                                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("output_results.constprop.5") [flags 0x43]  <function_decl 0x7f3c5e23cc00 output_results.constprop>)
                                                (expr_list:REG_EH_REGION (const_int 0 [0])
                                                    (nil)))))))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DF (use (reg:DF 32 v0))
                            (expr_list:DF (use (reg:DF 33 v1))
                                (expr_list:DF (use (reg:DF 34 v2))
                                    (expr_list:DF (use (reg:DF 35 v3))
                                        (expr_list:DF (use (reg:DF 36 v4))
                                            (expr_list:DF (use (reg:DF 37 v5))
                                                (expr_list:SI (use (reg:SI 3 x3))
                                                    (nil))))))))))))))
(insn 267 2785 2788 174 (set (reg:SI 240 [ D.3797 ])
        (const_int 0 [0])) graph500.c:114 47 {*movsi_aarch64}
     (nil))
;;  succ:       291 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240

;; basic block 175, loop depth 0, count 0, freq 12
;;  prev block 174, next block 176, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 [85.0%] 
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u2670(29){ }u2671(31){ }u2672(64){ }u2673(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 571 1442 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 571
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 603
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 571 1442 1853 1854 1859
;; live  gen 	 0 [x0] 1 [x1] 66 [cc] 603
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2788 267 2789 175 104 "" [1 uses])
(note 2789 2788 2790 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2790 2789 2791 175 (var_location:DI __path (reg/f:DI 571 [ D.3800 ])) graph500.c:175 -1
     (nil))
(debug_insn 2791 2790 2792 175 (var_location:SI __oflag (const_int 0 [0])) graph500.c:175 -1
     (nil))
(insn 2792 2791 2793 175 (set (reg:SI 1 x1)
        (const_int 0 [0])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 47 {*movsi_aarch64}
     (nil))
(insn 2793 2792 2794 175 (set (reg:DI 0 x0)
        (reg/f:DI 571 [ D.3800 ])) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 571 [ D.3800 ])
        (nil)))
(call_insn 2794 2793 2795 175 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>) [0 __open_alias S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 1 x1)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open64") [flags 0x41]  <function_decl 0x7f3c5e24c300 __open_alias>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (nil))))))
(insn 2795 2794 2796 175 (set (reg:SI 603 [ D.3797 ])
        (reg:SI 0 x0)) /usr/aarch64-linux-gnu/include/bits/fcntl2.h:53 47 {*movsi_aarch64}
     (nil))
(debug_insn 2796 2795 2797 175 (var_location:DI __path (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(debug_insn 2797 2796 2798 175 (var_location:SI __oflag (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(debug_insn 2798 2797 2799 175 (var_location:SI fd (clobber (const_int 0 [0]))) graph500.c:175 -1
     (nil))
(insn 2799 2798 2800 175 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 603 [ D.3797 ])
            (const_int 0 [0]))) graph500.c:175 390 {*cmpsi}
     (nil))
(jump_insn 2800 2799 2801 175 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2809)
            (pc))) graph500.c:175 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2809)
;;  succ:       176 [0.0%]  (FALLTHRU)
;;              177 [100.0%] 
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1442 1710 1853 1854 1859
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1442 1853 1854 1859

;; basic block 176, loop depth 0, count 0, freq 0
;;  prev block 175, next block 177, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       175 [0.0%]  (FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u2682(29){ }u2683(31){ }u2684(64){ }u2685(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1605 1606
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1605 1606
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2801 2800 2802 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 2802 2801 2803 176 (set (reg/f:DI 1606)
        (high:DI (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 48 {*movdi_aarch64}
     (nil))
(insn 2803 2802 2804 176 (set (reg/f:DI 1605)
        (lo_sum:DI (reg/f:DI 1606)
            (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>))) graph500.c:176 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1606)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>)
            (nil))))
(insn 2804 2803 2805 176 (set (reg:DI 0 x0)
        (reg/f:DI 1605)) graph500.c:176 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1605)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC50") [flags 0x82]  <var_decl 0x7f3c5d881480 *.LC50>)
            (nil))))
(call_insn 2805 2804 2806 176 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:176 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2806 2805 2807 176 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:177 47 {*movsi_aarch64}
     (nil))
(call_insn 2807 2806 2809 176 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:177 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 177, loop depth 0, count 0, freq 12
;;  prev block 176, next block 178, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       175 [100.0%] 
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u2692(29){ }u2693(31){ }u2694(64){ }u2695(65){ }}
;; lr  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1442 1710 1853 1854 1859
;; lr  use 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1442 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 604 606 608 1607 1609 1613
;; live  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1442 1853 1854 1859
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 66 [cc] 604 606 608 1607 1609 1613
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2809 2807 2810 177 124 "" [1 uses])
(note 2810 2809 2812 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 2812 2810 2813 177 (set (reg/f:DI 1607)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:179 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 2813 2812 2815 177 (set (reg:SI 604 [ D.3797 ])
        (mem/c:SI (plus:DI (reg/f:DI 1607)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:179 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1607)
        (nil)))
(insn 2815 2813 2816 177 (set (reg:DI 1609 [ D.3797 ])
        (sign_extend:DI (reg:SI 604 [ D.3797 ]))) graph500.c:179 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 604 [ D.3797 ])
        (nil)))
(insn 2816 2815 2817 177 (set (reg:DI 606 [ D.3802 ])
        (ashift:DI (reg:DI 1609 [ D.3797 ])
            (const_int 3 [0x3]))) graph500.c:179 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1609 [ D.3797 ])
        (nil)))
(debug_insn 2817 2816 2818 177 (var_location:DI sz (reg:DI 606 [ D.3802 ])) graph500.c:179 -1
     (nil))
(debug_insn 2818 2817 2819 177 (var_location:SI __fd (reg:SI 603 [ D.3797 ])) graph500.c:180 -1
     (nil))
(debug_insn 2819 2818 2820 177 (var_location:DI __buf (symbol_ref:DI ("bfs_root") [flags 0x82]  <var_decl 0x7f3c5e2545a0 bfs_root>)) graph500.c:180 -1
     (nil))
(debug_insn 2820 2819 2824 177 (var_location:DI __nbytes (reg:DI 606 [ D.3802 ])) graph500.c:180 -1
     (nil))
(insn 2824 2820 2825 177 (set (reg/f:DI 1613)
        (plus:DI (reg/f:DI 1442)
            (const_int 112 [0x70]))) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1442)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70])))
            (nil))))
(insn 2825 2824 2826 177 (set (reg:DI 3 x3)
        (const_int 512 [0x200])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 48 {*movdi_aarch64}
     (nil))
(insn 2826 2825 2827 177 (set (reg:DI 2 x2)
        (reg:DI 606 [ D.3802 ])) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 48 {*movdi_aarch64}
     (nil))
(insn 2827 2826 2829 177 (set (reg:DI 1 x1)
        (reg/f:DI 1613)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1613)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70])))
            (nil))))
(call_insn 2829 2827 2830 177 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>) [0 __read_chk_warn S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__read_chk") [flags 0x41]  <function_decl 0x7f3c5e24c200 __read_chk_warn>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
(insn 2830 2829 2831 177 (set (reg:DI 608 [ D.3798 ])
        (reg:DI 0 x0)) /usr/aarch64-linux-gnu/include/bits/unistd.h:39 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (nil)))
(debug_insn 2831 2830 2832 177 (var_location:SI __fd (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(debug_insn 2832 2831 2833 177 (var_location:DI __buf (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(debug_insn 2833 2832 2834 177 (var_location:DI __nbytes (clobber (const_int 0 [0]))) graph500.c:180 -1
     (nil))
(insn 2834 2833 2835 177 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 606 [ D.3802 ])
            (reg:DI 608 [ D.3798 ]))) graph500.c:180 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 608 [ D.3798 ])
        (expr_list:REG_DEAD (reg:DI 606 [ D.3802 ])
            (nil))))
(jump_insn 2835 2834 2836 177 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2844)
            (pc))) graph500.c:180 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2844)
;;  succ:       178 [0.0%]  (FALLTHRU)
;;              179 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1853 1854 1859

;; basic block 178, loop depth 0, count 0, freq 0
;;  prev block 177, next block 179, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       177 [0.0%]  (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u2718(29){ }u2719(31){ }u2720(64){ }u2721(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1614 1615
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1614 1615
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2836 2835 2837 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 2837 2836 2838 178 (set (reg/f:DI 1615)
        (high:DI (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 48 {*movdi_aarch64}
     (nil))
(insn 2838 2837 2839 178 (set (reg/f:DI 1614)
        (lo_sum:DI (reg/f:DI 1615)
            (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>))) graph500.c:181 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1615)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>)
            (nil))))
(insn 2839 2838 2840 178 (set (reg:DI 0 x0)
        (reg/f:DI 1614)) graph500.c:181 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1614)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC51") [flags 0x82]  <var_decl 0x7f3c5d881510 *.LC51>)
            (nil))))
(call_insn 2840 2839 2841 178 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:181 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2841 2840 2842 178 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) graph500.c:182 47 {*movsi_aarch64}
     (nil))
(call_insn 2842 2841 2844 178 (parallel [
            (call (mem:DI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>) [0 __builtin_exit S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:182 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f3c5e24c900 exit>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 179, loop depth 0, count 0, freq 12
;;  prev block 178, next block 180, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       177 [100.0%] 
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u2728(29){ }u2729(31){ }u2730(64){ }u2731(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 603 1853 1854 1859
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2844 2842 2845 179 125 "" [1 uses])
(note 2845 2844 2846 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 2846 2845 2847 179 (set (reg:SI 0 x0)
        (reg:SI 603 [ D.3797 ])) graph500.c:184 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 603 [ D.3797 ])
        (nil)))
(call_insn 2847 2846 3749 179 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>) [0 close S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:184 42 {*call_value_symbol}
     (expr_list:REG_UNUSED (reg:SI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x7f3c5e239900 close>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (nil)))))
;;  succ:       173 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853 1854 1859

;; basic block 180, loop depth 0, count 0, freq 14
;;  prev block 179, next block 292, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       173 [97.8%] 
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u2739(29){ }u2740(31){ }u2741(64){ }u2742(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1853
;; lr  def 	 1616 1875 1876 1877 1878
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  gen 	 1616 1875 1876 1877 1878
;; live  kill	
(code_label 3749 2847 2853 180 180 "" [1 uses])
(note 2853 3749 2857 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 2857 2853 2883 180 (set (reg/f:DI 1616)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:191 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
        (nil)))
(insn 2883 2857 2911 180 (set (reg/f:DI 1875)
        (plus:DI (reg/f:DI 1616)
            (const_int 112 [0x70]))) graph500.c:192 95 {*adddi3_aarch64}
     (nil))
(insn 2911 2883 2912 180 (set (reg/f:DI 1876)
        (high:DI (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2912 2911 2951 180 (set (reg/f:DI 1877)
        (lo_sum:DI (reg/f:DI 1876)
            (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1635)
        (nil)))
(insn 2951 2912 4332 180 (set (reg:DF 1878)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC54") [flags 0x2]) [1  S8 A64])) timer.c:69 54 {*movdf_aarch64}
     (nil))
;;  succ:       292 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 613 647 752 777 1616 1710 1853 1854 1859
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 613 647 752 777 1616 1710 1853 1854 1859

;; basic block 292, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 180, next block 181, flags: (NEW, RTL, MODIFIED)
;;  pred:       180 [100.0%]  (FALLTHRU)
;;              294 [100.0%]  (FALLTHRU)
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1616
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 611 613 647 752
;; live  in  	 777 1710
;; live  gen 	 0 [x0] 66 [cc] 611 613 647 752
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 4332 2951 4331 292 275 "" [0 uses])
(note 4331 4332 2854 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 2854 4331 2855 292 (set (reg/v:SI 752 [ m ])
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) 47 {*movsi_aarch64}
     (nil))
(debug_insn 2855 2854 2858 292 (var_location:SI m (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) -1
     (nil))
(insn 2858 2855 2859 292 (set (reg:DI 611 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 24 [0x18])) [4 nvtx_scale+0 S8 A64])) graph500.c:191 48 {*movdi_aarch64}
     (nil))
(insn 2859 2858 2860 292 (set (reg:DI 613 [ D.3802 ])
        (ashift:DI (reg:DI 611 [ D.3798 ])
            (const_int 3 [0x3]))) graph500.c:191 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(debug_insn 2860 2859 2861 292 (var_location:DI sz (reg:DI 613 [ D.3802 ])) graph500.c:191 -1
     (nil))
(debug_insn 2861 2860 2862 292 (var_location:DI n (reg:DI 613 [ D.3802 ])) -1
     (nil))
(insn 2862 2861 2863 292 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) generator/utils.c:32 48 {*movdi_aarch64}
     (nil))
(call_insn 2863 2862 2864 292 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 2864 2863 2866 292 (set (reg/v/f:DI 647 [ bfs_tree ])
        (reg:DI 0 x0)) generator/utils.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 1618)
            (nil))))
(debug_insn 2866 2864 2867 292 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) generator/utils.c:32 -1
     (nil))
(insn 2867 2866 2868 292 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 647 [ bfs_tree ])
            (const_int 0 [0]))) generator/utils.c:33 391 {*cmpdi}
     (nil))
(jump_insn 2868 2867 2869 292 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2873)
            (pc))) generator/utils.c:33 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2873)
;;  succ:       181 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              182 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 647 752 777 1616 1710 1853 1854 1859
;; live  out 	 611 647 752 777 1616 1710

;; basic block 181, loop depth 0, count 0, freq 0
;;  prev block 292, next block 182, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       292 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u2758(29){ }u2759(31){ }u2760(64){ }u2761(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 613
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 613
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 613
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2869 2868 2870 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 2870 2869 2871 181 (set (reg:DI 0 x0)
        (reg:DI 613 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 613 [ D.3802 ])
        (nil)))
(call_insn/c/i 2871 2870 2873 181 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 182, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 181, next block 183, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       292 [100.0%] 
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u2765(29){ }u2766(31){ }u2767(64){ }u2768(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 647 752 777 1616 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 611 777 1875
;; lr  def 	 66 [cc] 811 1622 1623
;; live  in  	 611 647 752 777 1616 1710
;; live  gen 	 66 [cc] 811 1622 1623
;; live  kill	
(code_label 2873 2871 2874 182 127 "" [1 uses])
(note 2874 2873 2875 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2875 2874 2876 182 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 2876 2875 2877 182 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 2877 2876 2878 182 (var_location:DI sz (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
(debug_insn 2878 2877 2879 182 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) graph500.c:191 -1
     (nil))
(insn 2879 2878 4357 182 (set (reg:DI 811 [ D.3805 ])
        (ashift:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 4357 2879 2884 182 (set (reg/f:DI 1622)
        (reg/f:DI 1875)) graph500.c:192 -1
     (nil))
(insn 2884 4357 2885 182 (set (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1875)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1622)
        (nil)))
(insn 2885 2884 2886 182 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 611 [ D.3798 ])
            (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ]))) graph500.c:192 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1623 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (expr_list:REG_DEAD (reg:DI 611 [ D.3798 ])
            (nil))))
(jump_insn 2886 2885 2887 182 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2901)
            (pc))) graph500.c:192 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2901)
;;  succ:       183 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              184 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1616 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1616 1710

;; basic block 183, loop depth 0, count 0, freq 0
;;  prev block 182, next block 184, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       182 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u2778(29){ }u2779(31){ }u2780(64){ }u2781(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1624 1625 1626 1627 1628 1629 1630
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1624 1625 1626 1627 1628 1629 1630
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2887 2886 2888 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 2888 2887 2889 183 (set (reg/f:DI 1625)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 48 {*movdi_aarch64}
     (nil))
(insn 2889 2888 2890 183 (set (reg/f:DI 1624)
        (lo_sum:DI (reg/f:DI 1625)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) graph500.c:192 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1625)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 2890 2889 2891 183 (set (reg/f:DI 1626)
        (plus:DI (reg/f:DI 1624)
            (const_int 32 [0x20]))) graph500.c:192 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1624)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 32 [0x20])))
            (nil))))
(insn 2891 2890 2892 183 (set (reg/f:DI 1628)
        (high:DI (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 48 {*movdi_aarch64}
     (nil))
(insn 2892 2891 2893 183 (set (reg/f:DI 1627)
        (lo_sum:DI (reg/f:DI 1628)
            (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>))) graph500.c:192 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1628)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 2893 2892 2894 183 (set (reg/f:DI 1630)
        (high:DI (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 48 {*movdi_aarch64}
     (nil))
(insn 2894 2893 2895 183 (set (reg/f:DI 1629)
        (lo_sum:DI (reg/f:DI 1630)
            (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>))) graph500.c:192 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1630)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>)
            (nil))))
(insn 2895 2894 2896 183 (set (reg:DI 3 x3)
        (reg/f:DI 1626)) graph500.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1626)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 32 [0x20])))
            (nil))))
(insn 2896 2895 2897 183 (set (reg:SI 2 x2)
        (const_int 192 [0xc0])) graph500.c:192 47 {*movsi_aarch64}
     (nil))
(insn 2897 2896 2898 183 (set (reg:DI 1 x1)
        (reg/f:DI 1627)) graph500.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1627)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC31") [flags 0x82]  <var_decl 0x7f3c5d840ab0 *.LC31>)
            (nil))))
(insn 2898 2897 2899 183 (set (reg:DI 0 x0)
        (reg/f:DI 1629)) graph500.c:192 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1629)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC52") [flags 0x82]  <var_decl 0x7f3c5d8815a0 *.LC52>)
            (nil))))
(call_insn 2899 2898 2901 183 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:192 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 184, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 183, next block 185, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       182 [100.0%] 
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u2794(29){ }u2795(31){ }u2796(64){ }u2797(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1616 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1616
;; lr  def 	 66 [cc] 1633
;; live  in  	 647 752 777 811 1616 1710
;; live  gen 	 66 [cc] 1633
;; live  kill	
(code_label 2901 2899 2902 184 128 "" [1 uses])
(note 2902 2901 2905 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 2905 2902 2906 184 (set (reg:SI 1633 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:194 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1616)
        (nil)))
(insn 2906 2905 2907 184 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1633 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:194 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1633 [ VERBOSE ])
        (nil)))
(jump_insn 2907 2906 2908 184 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 2921)
            (pc))) graph500.c:194 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 2921)
;;  succ:       185 [29.0%]  (FALLTHRU)
;;              186 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1710

;; basic block 185, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 184, next block 186, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       184 [29.0%]  (FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u2803(29){ }u2804(31){ }u2805(64){ }u2806(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1876 1877
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1634 1635 1636 1638 1856
;; live  in  	 647 752 777 811 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1634 1635 1636 1638 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2908 2907 2909 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2909 2908 2910 185 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:194 -1
     (nil))
(debug_insn 2910 2909 4358 185 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)) graph500.c:194 -1
     (nil))
(insn 4358 2910 4359 185 (set (reg/f:DI 1635)
        (reg/f:DI 1876)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 4359 4358 2913 185 (set (reg/f:DI 1634)
        (reg/f:DI 1877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 -1
     (nil))
(insn 2913 4359 2914 185 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 48 {*movdi_aarch64}
     (nil))
(insn 2914 2913 2915 185 (set (reg/f:DI 1636)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:194 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 2915 2914 2916 185 (set (reg/f:DI 1638 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1636) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1636)
        (nil)))
(insn 2916 2915 2917 185 (set (reg:SI 3 x3)
        (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2917 2916 2918 185 (set (reg:DI 2 x2)
        (reg/f:DI 1877)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1634)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC53") [flags 0x82]  <var_decl 0x7f3c5d881630 *.LC53>)
            (nil))))
(insn 2918 2917 2919 185 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2919 2918 2920 185 (set (reg:DI 0 x0)
        (reg/f:DI 1638 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1638 [ stderr ])
        (nil)))
(call_insn 2920 2919 2921 185 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;;  succ:       186 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1710

;; basic block 186, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 185, next block 187, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       185 [100.0%]  (FALLTHRU)
;;              184 [71.0%] 
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u2818(29){ }u2819(31){ }u2820(64){ }u2821(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 811 1616 1859 1875 1878
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 618 653 659 1639 1641 1644 1645 1646 1647 1648 1649 1652 1653 1654 1655 1656 1657 1660 1661 1662 1663 1664 1665 1668
;; live  in  	 647 752 777 811 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 618 653 659 1639 1641 1644 1645 1646 1647 1648 1649 1652 1653 1654 1655 1656 1657 1660 1661 1662 1663 1664 1665 1668
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 2921 2920 2922 186 129 "" [1 uses])
(note 2922 2921 2924 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 2924 2922 2925 186 (set (reg/f:DI 1639)
        (lo_sum:DI (reg/f:DI 1859)
            (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>))) timer.c:43 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2925 2924 2926 186 (set (reg:DI 1 x1)
        (reg/f:DI 1639)) timer.c:43 48 {*movdi_aarch64}
     (expr_list:REG_EQUAL (symbol_ref:DI ("tic_ts.lto_priv.16") [flags 0xc2]  <var_decl 0x7f3c5e254750 tic_ts>)
        (nil)))
(insn 2926 2925 2927 186 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:43 47 {*movsi_aarch64}
     (nil))
(call_insn 2927 2926 4360 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:43 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 4360 2927 4361 186 (set (reg/f:DI 1641)
        (reg/f:DI 1616)) graph500.c:195 -1
     (nil))
(insn 4361 4360 2932 186 (set (reg/f:DI 1644)
        (reg/f:DI 1875)) graph500.c:195 -1
     (nil))
(insn 2932 4361 2933 186 (set (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1875)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1644)
        (nil)))
(insn 2933 2932 2934 186 (set (reg/f:DI 1646)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -48 [0xffffffffffffffd0]))) graph500.c:195 95 {*adddi3_aarch64}
     (nil))
(insn 2934 2933 2935 186 (set (reg:DI 2 x2)
        (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1645 [ MEM[symbol: bfs_root, index: _1361, offset: 0B] ])
        (nil)))
(insn 2935 2934 2936 186 (set (reg:DI 1 x1)
        (reg/f:DI 1646)) graph500.c:195 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1646)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 2936 2935 2937 186 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:195 48 {*movdi_aarch64}
     (nil))
(call_insn 2937 2936 2938 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>) [0 make_bfs_tree S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:195 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:DI 1 x1)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("make_bfs_tree") [flags 0x43]  <function_decl 0x7f3c5e24c800 make_bfs_tree>)
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2938 2937 2939 186 (set (reg/v:SI 618 [ err ])
        (reg:SI 0 x0)) graph500.c:195 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 0 x0)
        (nil)))
(debug_insn 2939 2938 2940 186 (var_location:SI err (reg/v:SI 618 [ err ])) graph500.c:195 -1
     (nil))
(insn 2940 2939 2941 186 (set (reg/f:DI 1647)
        (plus:DI (reg/f:DI 64 sfp)
            (const_int -40 [0xffffffffffffffd8]))) timer.c:68 95 {*adddi3_aarch64}
     (nil))
(insn 2941 2940 2942 186 (set (reg:DI 1 x1)
        (reg/f:DI 1647)) timer.c:68 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1647)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8]))
            (nil))))
(insn 2942 2941 2943 186 (set (reg:SI 0 x0)
        (const_int 1 [0x1])) timer.c:68 47 {*movsi_aarch64}
     (nil))
(call_insn 2943 2942 2944 186 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>) [0 clock_gettime S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) timer.c:68 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 1 x1)
        (expr_list:REG_UNUSED (reg:SI 0 x0)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("clock_gettime") [flags 0x41]  <function_decl 0x7f3c5e24cd00 clock_gettime>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:SI (use (reg:SI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (nil))))))
(insn 2944 2943 2945 186 (set (reg:DI 1649 [ ts.tv_nsec ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 ts.tv_nsec+0 S8 A64])) timer.c:69 48 {*movdi_aarch64}
     (nil))
(insn 2945 2944 2948 186 (set (reg:DF 1648 [ D.3804 ])
        (float:DF (reg:DI 1649 [ ts.tv_nsec ]))) timer.c:69 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1649 [ ts.tv_nsec ])
        (nil)))
(insn 2948 2945 2949 186 (set (reg:DI 1653 [ tic_ts.tv_nsec ])
        (mem/c:DI (plus:DI (reg/f:DI 1639)
                (const_int 8 [0x8])) [4 tic_ts.tv_nsec+0 S8 A64])) timer.c:69 48 {*movdi_aarch64}
     (nil))
(insn 2949 2948 2950 186 (set (reg:DF 1652 [ D.3804 ])
        (float:DF (reg:DI 1653 [ tic_ts.tv_nsec ]))) timer.c:69 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1653 [ tic_ts.tv_nsec ])
        (nil)))
(insn 2950 2949 4362 186 (set (reg:DF 1654 [ D.3804 ])
        (minus:DF (reg:DF 1648 [ D.3804 ])
            (reg:DF 1652 [ D.3804 ]))) timer.c:69 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1652 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1648 [ D.3804 ])
            (nil))))
(insn 4362 2950 2952 186 (set (reg:DF 1655)
        (reg:DF 1878)) timer.c:69 -1
     (nil))
(insn 2952 4362 2953 186 (set (reg/v:DF 653 [ out ])
        (mult:DF (reg:DF 1654 [ D.3804 ])
            (reg:DF 1878))) timer.c:69 809 {muldf3}
     (expr_list:REG_DEAD (reg:DF 1655)
        (expr_list:REG_DEAD (reg:DF 1654 [ D.3804 ])
            (nil))))
(debug_insn 2953 2952 2954 186 (var_location:DF out (reg/v:DF 653 [ out ])) timer.c:69 -1
     (nil))
(insn 2954 2953 2955 186 (set (reg:DI 1657 [ ts.tv_sec ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 ts.tv_sec+0 S8 A64])) timer.c:70 48 {*movdi_aarch64}
     (nil))
(insn 2955 2954 2958 186 (set (reg:DF 1656 [ D.3804 ])
        (float:DF (reg:DI 1657 [ ts.tv_sec ]))) timer.c:70 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1657 [ ts.tv_sec ])
        (nil)))
(insn 2958 2955 2959 186 (set (reg:DI 1661 [ tic_ts.tv_sec ])
        (mem/c:DI (reg/f:DI 1639) [4 tic_ts.tv_sec+0 S8 A64])) timer.c:70 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1639)
        (nil)))
(insn 2959 2958 2960 186 (set (reg:DF 1660 [ D.3804 ])
        (float:DF (reg:DI 1661 [ tic_ts.tv_sec ]))) timer.c:70 798 {floatdidf2}
     (expr_list:REG_DEAD (reg:DI 1661 [ tic_ts.tv_sec ])
        (nil)))
(insn 2960 2959 2961 186 (set (reg:DF 1662 [ D.3804 ])
        (minus:DF (reg:DF 1656 [ D.3804 ])
            (reg:DF 1660 [ D.3804 ]))) timer.c:70 807 {subdf3}
     (expr_list:REG_DEAD (reg:DF 1660 [ D.3804 ])
        (expr_list:REG_DEAD (reg:DF 1656 [ D.3804 ])
            (nil))))
(insn 2961 2960 2963 186 (set (reg/v:DF 659 [ out ])
        (plus:DF (reg:DF 1662 [ D.3804 ])
            (reg/v:DF 653 [ out ]))) timer.c:70 805 {adddf3}
     (expr_list:REG_DEAD (reg:DF 1662 [ D.3804 ])
        (expr_list:REG_DEAD (reg/v:DF 653 [ out ])
            (nil))))
(debug_insn 2963 2961 2964 186 (var_location:DF out (clobber (const_int 0 [0]))) graph500.c:195 -1
     (nil))
(insn 2964 2963 2965 186 (set (reg/f:DI 1665)
        (high:DI (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 48 {*movdi_aarch64}
     (nil))
(insn 2965 2964 2966 186 (set (reg/f:DI 1664)
        (lo_sum:DI (reg/f:DI 1665)
            (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>))) graph500.c:195 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1665)
        (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_time.lto_priv.14") [flags 0xc2]  <var_decl 0x7f3c5e254240 bfs_time>)
            (nil))))
(insn 2966 2965 2967 186 (set (reg/f:DI 1663)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1664))) graph500.c:195 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1664)
        (nil)))
(insn 2967 2966 2970 186 (set (mem:DF (reg/f:DI 1663) [1 MEM[symbol: bfs_time, index: _1361, offset: 0B]+0 S8 A64])
        (reg/v:DF 659 [ out ])) graph500.c:195 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1663)
        (expr_list:REG_DEAD (reg/v:DF 659 [ out ])
            (nil))))
(insn 2970 2967 2971 186 (set (reg:SI 1668 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:196 47 {*movsi_aarch64}
     (nil))
(insn 2971 2970 2972 186 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1668 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:196 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1668 [ VERBOSE ])
        (nil)))
(jump_insn 2972 2971 2973 186 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3847)
            (pc))) graph500.c:196 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 3847)
;;  succ:       187 [29.0%]  (FALLTHRU)
;;              279 [71.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 752 777 811 1641 1710 1853 1854 1859
;; live  out 	 618 647 752 777 811 1641 1710

;; basic block 187, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 186, next block 188, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       186 [29.0%]  (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u2879(29){ }u2880(31){ }u2881(64){ }u2882(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 752 777 811 1641 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1669 1670 1671 1673 1856
;; live  in  	 618 647 752 777 811 1641 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 1669 1670 1671 1673 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 2973 2972 2974 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(debug_insn 2974 2973 2975 187 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:196 -1
     (nil))
(debug_insn 2975 2974 2976 187 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:196 -1
     (nil))
(insn 2976 2975 2977 187 (set (reg/f:DI 1670)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2977 2976 2978 187 (set (reg/f:DI 1669)
        (lo_sum:DI (reg/f:DI 1670)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1670)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
(insn 2978 2977 2979 187 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 48 {*movdi_aarch64}
     (nil))
(insn 2979 2978 2980 187 (set (reg/f:DI 1671)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:196 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
            (nil))))
(insn 2980 2979 2981 187 (set (reg/f:DI 1673 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 2981 2980 2982 187 (set (reg:DI 2 x2)
        (reg/f:DI 1669)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1669)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
(insn 2982 2981 2983 187 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 2983 2982 2984 187 (set (reg:DI 0 x0)
        (reg/f:DI 1673 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1673 [ stderr ])
        (nil)))
(call_insn 2984 2983 2985 187 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 2985 2984 2986 187 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 618 [ err ])
        (nil)))
(jump_insn 2986 2985 3849 187 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 2994)
            (pc))) graph500.c:198 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 2994)
;;  succ:       188 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              189 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1641 1671 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1641 1671 1710

;; basic block 188, loop depth 0, count 0, freq 0
;;  prev block 187, next block 189, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       187 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              279 [0.0%]  (LOOP_EXIT)
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u2894(29){ }u2895(31){ }u2896(64){ }u2897(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1674 1675
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1674 1675
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3849 2986 2987 188 186 "" [1 uses])
(note 2987 3849 2988 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 2988 2987 2989 188 (set (reg/f:DI 1675)
        (high:DI (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 48 {*movdi_aarch64}
     (nil))
(insn 2989 2988 2990 188 (set (reg/f:DI 1674)
        (lo_sum:DI (reg/f:DI 1675)
            (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>))) graph500.c:199 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1675)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>)
            (nil))))
(insn 2990 2989 2991 188 (set (reg:DI 0 x0)
        (reg/f:DI 1674)) graph500.c:199 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1674)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC56") [flags 0x82]  <var_decl 0x7f3c5d881750 *.LC56>)
            (nil))))
(call_insn 2991 2990 2992 188 (parallel [
            (call (mem:DI (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>) [0 perror S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:199 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("perror") [flags 0x41]  <function_decl 0x7f3c5e24c000 perror>)
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(call_insn 2992 2991 2994 188 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:200 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 189, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 188, next block 190, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       187 [100.0%] 
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u2903(29){ }u2904(31){ }u2905(64){ }u2906(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1641 1671 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1616
;; lr  def 	 66 [cc] 1678
;; live  in  	 647 752 777 811 1641 1671 1710
;; live  gen 	 66 [cc] 1678
;; live  kill	
(code_label 2994 2992 2995 189 131 "" [1 uses])
(note 2995 2994 2998 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 2998 2995 2999 189 (set (reg:SI 1678 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:203 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1641)
        (nil)))
(insn 2999 2998 3000 189 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1678 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:203 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1678 [ VERBOSE ])
        (nil)))
(jump_insn 3000 2999 3004 189 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3004)
            (pc))) graph500.c:203 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9990 (nil)))
 -> 3004)
;;  succ:       190 [99.9%] 
;;              191 [0.1%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1671 1710 1853 1854 1859
;; live  out 	 647 752 777 811 1671 1710

;; basic block 190, loop depth 1, count 0, freq 56, maybe hot
;;  prev block 189, next block 191, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       189 [99.9%] 
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u2912(29){ }u2913(31){ }u2914(64){ }u2915(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 752 777 811 1671 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 752 1671
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1679 1680 1683
;; live  in  	 647 752 777 811 1671 1710
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1679 1680 1683
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3004 3000 3005 190 132 "" [1 uses])
(note 3005 3004 3006 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3006 3005 3007 190 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:203 -1
     (nil))
(debug_insn 3007 3006 3008 190 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)) graph500.c:203 -1
     (nil))
(insn 3008 3007 3009 190 (set (reg/f:DI 1680)
        (high:DI (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 3009 3008 3012 190 (set (reg/f:DI 1679)
        (lo_sum:DI (reg/f:DI 1680)
            (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1680)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
            (nil))))
(insn 3012 3009 3013 190 (set (reg/f:DI 1683 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1671) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1671)
        (nil)))
(insn 3013 3012 3014 190 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 3014 3013 3015 190 (set (reg:DI 2 x2)
        (reg/f:DI 1679)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1679)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC57") [flags 0x82]  <var_decl 0x7f3c5d8817e0 *.LC57>)
            (nil))))
(insn 3015 3014 3016 190 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 3016 3015 3017 190 (set (reg:DI 0 x0)
        (reg/f:DI 1683 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1683 [ stderr ])
        (nil)))
(call_insn 3017 3016 3018 190 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:SI 3 x3)
        (expr_list:REG_DEAD (reg:DI 2 x2)
            (expr_list:REG_DEAD (reg:SI 1 x1)
                (expr_list:REG_UNUSED (reg:SI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (nil))))))))
;;  succ:       191 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; live  out 	 647 777 811 1710

;; basic block 191, loop depth 1, count 0, freq 193, maybe hot
;;  prev block 190, next block 192, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       189 [0.1%]  (FALLTHRU)
;;              190 [100.0%]  (FALLTHRU)
;;              279 [100.0%]  (FALLTHRU)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u2928(29){ }u2929(31){ }u2930(64){ }u2931(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1616 1875
;; lr  def 	 66 [cc] 623 624 1684 1687 1861
;; live  in  	 647 777 811 1710
;; live  gen 	 66 [cc] 623 624 1684 1687 1861
;; live  kill	
(code_label 3018 3017 3019 191 133 "" [0 uses])
(note 3019 3018 3020 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 3020 3019 4363 191 (set (reg:DI 623 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -48 [0xffffffffffffffd0])) [4 max_bfsvtx+0 S8 A128])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 4363 3020 4364 191 (set (reg/f:DI 1684)
        (reg/f:DI 1616)) graph500.c:204 -1
     (nil))
(insn 4364 4363 3025 191 (set (reg/f:DI 1687)
        (reg/f:DI 1875)) graph500.c:204 -1
     (nil))
(insn 3025 4364 3026 191 (set (reg:DI 624 [ D.3798 ])
        (mem:DI (plus:DI (reg:DI 811 [ D.3805 ])
                (reg/f:DI 1875)) [4 MEM[symbol: bfs_root, index: _1361, offset: 0B]+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1687)
        (nil)))
(debug_insn 3026 3025 3027 191 (var_location:DI D#35 (mem/f/c:DI (symbol_ref:DI ("IJ") [flags 0x82]  <var_decl 0x7f3c5e2541b0 IJ>) [2 IJ+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3027 3026 3028 191 (var_location:DI D#34 (mem/c:DI (symbol_ref:DI ("nedge") [flags 0x82]  <var_decl 0x7f3c5e254120 nedge>) [4 nedge+0 S8 A64])) graph500.c:204 -1
     (nil))
(debug_insn 3028 3027 3029 191 (var_location:DI bfs_tree_in (reg/v/f:DI 647 [ bfs_tree ])) graph500.c:204 -1
     (nil))
(debug_insn 3029 3028 3030 191 (var_location:DI max_bfsvtx (reg:DI 623 [ D.3798 ])) graph500.c:204 -1
     (nil))
(debug_insn 3030 3029 3031 191 (var_location:DI root (reg:DI 624 [ D.3798 ])) graph500.c:204 -1
     (nil))
(debug_insn 3031 3030 3032 191 (var_location:DI IJ_in (debug_expr:DI D#35)) graph500.c:204 -1
     (nil))
(debug_insn 3032 3031 3033 191 (var_location:DI nedge (debug_expr:DI D#34)) graph500.c:204 -1
     (nil))
(debug_insn 3033 3032 3034 191 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:83 -1
     (nil))
(debug_insn 3034 3033 3035 191 (var_location:DI IJ (debug_expr:DI D#35)) verify.c:84 -1
     (nil))
(insn 3035 3034 3036 191 (set (reg:DI 1861 [ D.3798 ])
        (plus:DI (reg:DI 623 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:89 95 {*adddi3_aarch64}
     (nil))
(debug_insn 3036 3035 3037 191 (var_location:DI nv (reg:DI 1861 [ D.3798 ])) verify.c:89 -1
     (nil))
(insn 3037 3036 3038 191 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 624 [ D.3798 ]))) verify.c:96 391 {*cmpdi}
     (nil))
(jump_insn 3038 3037 3039 191 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 3923)
;;  succ:       288 [4.0%] 
;;              192 [96.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; live  out 	 623 624 647 777 811 1684 1710 1861

;; basic block 192, loop depth 1, count 0, freq 185, maybe hot
;;  prev block 191, next block 193, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       191 [96.0%]  (FALLTHRU)
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u2946(29){ }u2947(31){ }u2948(64){ }u2949(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647
;; lr  def 	 66 [cc] 1688
;; live  in  	 623 624 647 777 811 1684 1710 1861
;; live  gen 	 66 [cc] 1688
;; live  kill	
(note 3039 3038 3040 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 3040 3039 3041 192 (set (reg:DI 1688 [ *_638 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 624 [ D.3798 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_638+0 S8 A64])) verify.c:96 48 {*movdi_aarch64}
     (nil))
(insn 3041 3040 3042 192 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg:DI 1688 [ *_638 ]))) verify.c:96 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1688 [ *_638 ])
        (nil)))
(jump_insn 3042 3041 3043 192 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3923)
            (pc))) verify.c:96 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2078 (nil)))
 -> 3923)
;;  succ:       288 [20.8%] 
;;              193 [79.2%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; live  out 	 623 624 647 777 811 1684 1710 1861

;; basic block 193, loop depth 1, count 0, freq 147, maybe hot
;;  prev block 192, next block 194, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       192 [79.2%]  (FALLTHRU)
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u2955(29){ }u2956(31){ }u2957(64){ }u2958(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 647 777 811 1684 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1616 1861
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 625 626 666 746
;; live  in  	 623 624 647 777 811 1684 1710 1861
;; live  gen 	 0 [x0] 66 [cc] 625 626 666 746
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3043 3042 3046 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 3046 3043 3049 193 (set (reg/f:DI 625 [ D.3803 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 88 [0x58])) [2 IJ+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 3049 3046 3050 193 (set (reg:DI 626 [ D.3798 ])
        (mem/c:DI (plus:DI (reg/f:DI 1616)
                (const_int 80 [0x50])) [4 nedge+0 S8 A64])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1684)
        (nil)))
(debug_insn 3050 3049 3051 193 (var_location:SI err (const_int 0 [0])) verify.c:99 -1
     (nil))
(debug_insn 3051 3050 3053 193 (var_location:SI nedge_traversed (const_int 0 [0])) verify.c:100 -1
     (nil))
(insn 3053 3051 3054 193 (set (reg:DI 666 [ D.3802 ])
        (ashift:DI (reg:DI 1861 [ D.3798 ])
            (const_int 4 [0x4]))) verify.c:101 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(debug_insn 3054 3053 3055 193 (var_location:DI sz (reg:DI 666 [ D.3802 ])) verify.c:101 -1
     (nil))
(debug_insn 3055 3054 3056 193 (var_location:DI n (reg:DI 666 [ D.3802 ])) -1
     (nil))
(insn 3056 3055 3057 193 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) generator/utils.c:32 48 {*movdi_aarch64}
     (nil))
(call_insn 3057 3056 3058 193 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>) [0 __builtin_malloc S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) generator/utils.c:32 42 {*call_value_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f3c5e24cb00 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(insn 3058 3057 3060 193 (set (reg/v/f:DI 746 [ seen_edge ])
        (reg:DI 0 x0)) generator/utils.c:32 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_NOALIAS (reg/f:DI 1693)
            (nil))))
(debug_insn 3060 3058 3061 193 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) generator/utils.c:32 -1
     (nil))
(insn 3061 3060 3062 193 (set (reg:CC 66 cc)
        (compare:CC (reg/v/f:DI 746 [ seen_edge ])
            (const_int 0 [0]))) generator/utils.c:33 391 {*cmpdi}
     (nil))
(jump_insn 3062 3061 3063 193 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3067)
            (pc))) generator/utils.c:33 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3067)
;;  succ:       194 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              195 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 746 777 811 1710 1861

;; basic block 194, loop depth 0, count 0, freq 0
;;  prev block 193, next block 195, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       193 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u2977(29){ }u2978(31){ }u2979(64){ }u2980(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 666
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 666
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 666
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3063 3062 3064 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 3064 3063 3065 194 (set (reg:DI 0 x0)
        (reg:DI 666 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 666 [ D.3802 ])
        (nil)))
(call_insn/c/i 3065 3064 3067 194 (parallel [
            (call (mem:DI (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>) [0 xmalloc.part.0 S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("xmalloc.part.0.lto_priv.11") [flags 0x43]  <function_decl 0x7f3c5e24cc00 xmalloc.part.0>)
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 195, loop depth 1, count 0, freq 147, maybe hot
;;  prev block 194, next block 196, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       193 [100.0%] 
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u2984(29){ }u2985(31){ }u2986(64){ }u2987(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746 1861
;; lr  def 	 66 [cc] 668 1694
;; live  in  	 623 624 625 626 647 746 777 811 1710 1861
;; live  gen 	 66 [cc] 668 1694
;; live  kill	
(code_label 3067 3065 3068 195 135 "" [1 uses])
(note 3068 3067 3069 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3069 3068 3070 195 (var_location:DI n (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 3070 3069 3071 195 (var_location:DI p (clobber (const_int 0 [0]))) xalloc.c:104 -1
     (nil))
(debug_insn 3071 3070 3072 195 (var_location:DI sz (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
(debug_insn 3072 3071 3073 195 (var_location:DI seen_edge (clobber (const_int 0 [0]))) verify.c:101 -1
     (nil))
(insn 3073 3072 3074 195 (set (reg:DI 1694 [ D.3802 ])
        (ashift:DI (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:102 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3074 3073 3075 195 (set (reg/v/f:DI 668 [ level ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1694 [ D.3802 ]))) verify.c:102 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1694 [ D.3802 ])
        (nil)))
(debug_insn 3075 3074 3076 195 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
(debug_insn 3076 3075 3077 195 (var_location:DI level (reg/v/f:DI 668 [ level ])) verify.c:102 -1
     (nil))
(debug_insn 3077 3076 3078 195 (var_location:DI nv (reg:DI 1861 [ D.3798 ])) verify.c:102 -1
     (nil))
(debug_insn 3078 3077 3079 195 (var_location:DI bfs_tree (reg/v/f:DI 647 [ bfs_tree ])) verify.c:102 -1
     (nil))
(debug_insn 3079 3078 3080 195 (var_location:DI root (reg:DI 624 [ D.3798 ])) verify.c:102 -1
     (nil))
(debug_insn 3080 3079 3081 195 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3081 3080 3082 195 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:27 391 {*cmpdi}
     (nil))
(jump_insn 3082 3081 3083 195 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3416)
            (pc))) verify.c:27 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 3416)
;;  succ:       196 [91.0%]  (FALLTHRU)
;;              235 [9.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 746 777 811 1710 1861

;; basic block 196, loop depth 1, count 0, freq 134, maybe hot
;;  prev block 195, next block 197, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       195 [91.0%]  (FALLTHRU)
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u2998(29){ }u2999(31){ }u3000(64){ }u3001(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 1861
;; lr  def 	 66 [cc] 672 742 1695 1696 1697 1698
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 66 [cc] 672 742 1695 1696 1697 1698
;; live  kill	
(note 3083 3082 3086 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 3086 3083 3087 196 (set (reg:DI 672 [ ivtmp.84 ])
        (reg/v/f:DI 668 [ level ])) 48 {*movdi_aarch64}
     (nil))
(insn 3087 3086 3088 196 (set (reg:DI 1695 [ D.3810 ])
        (and:DI (reg/v/f:DI 668 [ level ])
            (const_int 15 [0xf]))) 468 {anddi3}
     (nil))
(insn 3088 3087 3089 196 (set (reg:DI 1696 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1695 [ D.3810 ])
            (const_int 3 [0x3]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1695 [ D.3810 ])
        (nil)))
(insn 3089 3088 3090 196 (set (reg:DI 1697 [ D.3810 ])
        (neg:DI (reg:DI 1696 [ D.3810 ]))) 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1696 [ D.3810 ])
        (nil)))
(insn 3090 3089 3091 196 (set (reg:DI 1698 [ D.3810 ])
        (and:DI (reg:DI 1697 [ D.3810 ])
            (const_int 1 [0x1]))) 468 {anddi3}
     (expr_list:REG_DEAD (reg:DI 1697 [ D.3810 ])
        (nil)))
(insn 3091 3090 3092 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1698 [ D.3810 ])
            (reg:DI 1861 [ D.3798 ]))) 391 {*cmpdi}
     (nil))
(insn 3092 3091 3093 196 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (leu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 1698 [ D.3810 ])
            (reg:DI 1861 [ D.3798 ]))) 443 {*cmovdi_insn}
     (expr_list:REG_DEAD (reg:DI 1698 [ D.3810 ])
        (expr_list:REG_DEAD (reg:CC 66 cc)
            (nil))))
(insn 3093 3092 4319 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) 391 {*cmpdi}
     (nil))
(insn 4319 3093 4320 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:27 391 {*cmpdi}
     (nil))
(insn 4320 4319 3098 196 (set (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (if_then_else:DI (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (reg:DI 1861 [ D.3798 ]))) verify.c:27 443 {*cmovdi_insn}
     (nil))
(insn 3098 4320 3099 196 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 0 [0]))) 391 {*cmpdi}
     (nil))
(jump_insn 3099 3098 3100 196 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3994)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3994)
;;  succ:       197 [66.7%]  (FALLTHRU)
;;              203 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861

;; basic block 197, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 196, next block 198, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       196 [66.7%]  (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u3027(29){ }u3028(31){ }u3029(64){ }u3030(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 742
;; lr  def 	 66 [cc] 1699 1700 1701
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1699 1700 1701
;; live  kill	
(note 3100 3099 3101 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3101 3100 3102 197 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3102 3101 3103 197 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 0 [0]))) verify.c:28 391 {*cmpdi}
     (nil))
(insn 3103 3102 3104 197 (set (reg:SI 1700)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3104 3103 3105 197 (set (reg:DI 1699 [ D.3809 ])
        (zero_extend:DI (reg:SI 1700))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1700)
        (nil)))
(insn 3105 3104 3106 197 (set (reg:DI 1701 [ D.3798 ])
        (neg:DI (reg:DI 1699 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1699 [ D.3809 ])
        (nil)))
(insn 3106 3105 3108 197 (set (mem:DI (reg/v/f:DI 668 [ level ]) [4 *level_644+0 S8 A64])
        (reg:DI 1701 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1701 [ D.3798 ])
        (nil)))
(debug_insn 3108 3106 3109 197 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
(insn 3109 3108 3110 197 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 1 [0x1]))) 391 {*cmpdi}
     (nil))
(jump_insn 3110 3109 3111 197 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3998)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3333 (nil)))
 -> 3998)
;;  succ:       198 [66.7%]  (FALLTHRU)
;;              200 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861

;; basic block 198, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 197, next block 199, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       197 [66.7%]  (FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u3039(29){ }u3040(31){ }u3041(64){ }u3042(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 742
;; lr  def 	 66 [cc] 1702 1703 1704
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1702 1703 1704
;; live  kill	
(note 3111 3110 3112 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3112 3111 3113 198 (var_location:DI k (const_int 1 [0x1])) -1
     (nil))
(insn 3113 3112 3114 198 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:28 391 {*cmpdi}
     (nil))
(insn 3114 3113 3115 198 (set (reg:SI 1703)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3115 3114 3116 198 (set (reg:DI 1702 [ D.3809 ])
        (zero_extend:DI (reg:SI 1703))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1703)
        (nil)))
(insn 3116 3115 3117 198 (set (reg:DI 1704 [ D.3798 ])
        (neg:DI (reg:DI 1702 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1702 [ D.3809 ])
        (nil)))
(insn 3117 3116 3119 198 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 8 [0x8])) [4 MEM[(int64_t *)level_644 + 8B]+0 S8 A64])
        (reg:DI 1704 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1704 [ D.3798 ])
        (nil)))
(debug_insn 3119 3117 3120 198 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
(insn 3120 3119 3121 198 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 742 [ prologue_after_cost_adjust.32 ])
            (const_int 3 [0x3]))) 391 {*cmpdi}
     (nil))
(jump_insn 3121 3120 3122 198 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4002)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3333 (nil)))
 -> 4002)
;;  succ:       199 [66.7%]  (FALLTHRU)
;;              201 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 811 1710 1861

;; basic block 199, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 198, next block 200, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       198 [66.7%]  (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u3051(29){ }u3052(31){ }u3053(64){ }u3054(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668
;; lr  def 	 66 [cc] 806 1705 1706 1707
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 66 [cc] 806 1705 1706 1707
;; live  kill	
(note 3122 3121 3123 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3123 3122 3124 199 (var_location:DI k (const_int 2 [0x2])) -1
     (nil))
(insn 3124 3123 3125 199 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (const_int 2 [0x2]))) verify.c:28 391 {*cmpdi}
     (nil))
(insn 3125 3124 3126 199 (set (reg:SI 1706)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3126 3125 3127 199 (set (reg:DI 1705 [ D.3809 ])
        (zero_extend:DI (reg:SI 1706))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1706)
        (nil)))
(insn 3127 3126 3128 199 (set (reg:DI 1707 [ D.3798 ])
        (neg:DI (reg:DI 1705 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1705 [ D.3809 ])
        (nil)))
(insn 3128 3127 3130 199 (set (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (const_int 16 [0x10])) [4 MEM[(int64_t *)level_644 + 16B]+0 S8 A64])
        (reg:DI 1707 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1707 [ D.3798 ])
        (nil)))
(debug_insn 3130 3128 4071 199 (var_location:DI k (const_int 3 [0x3])) -1
     (nil))
(debug_insn 4071 3130 229 199 (var_location:DI D#51 (const_int 3 [0x3])) -1
     (nil))
(insn 229 4071 3998 199 (set (reg/v:DI 806 [ k ])
        (const_int 3 [0x3])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;  succ:       202 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861

;; basic block 200, loop depth 1, count 0, freq 30
;;  prev block 199, next block 201, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       197 [33.3%] 
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u3062(29){ }u3063(31){ }u3064(64){ }u3065(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
(code_label 3998 229 3997 200 200 "" [1 uses])
(note 3997 3998 4070 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(debug_insn 4070 3997 230 200 (var_location:DI D#51 (const_int 1 [0x1])) -1
     (nil))
(insn 230 4070 4002 200 (set (reg/v:DI 806 [ k ])
        (const_int 1 [0x1])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;  succ:       202 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861

;; basic block 201, loop depth 1, count 0, freq 30
;;  prev block 200, next block 202, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       198 [33.3%] 
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u3067(29){ }u3068(31){ }u3069(64){ }u3070(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
(code_label 4002 230 4001 201 201 "" [1 uses])
(note 4001 4002 4069 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(debug_insn 4069 4001 231 201 (var_location:DI D#51 (const_int 2 [0x2])) -1
     (nil))
(insn 231 4069 3131 201 (set (reg/v:DI 806 [ k ])
        (const_int 2 [0x2])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;  succ:       202 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861

;; basic block 202, loop depth 1, count 0, freq 89, maybe hot
;;  prev block 201, next block 203, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       201 [100.0%]  (FALLTHRU)
;;              199 [100.0%]  (FALLTHRU)
;;              200 [100.0%]  (FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u3071(29){ }u3072(31){ }u3073(64){ }u3074(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 742 1861
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3131 231 3132 202 139 "" [0 uses])
(note 3132 3131 3133 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 3133 3132 3134 202 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 391 {*cmpdi}
     (nil))
(jump_insn 3134 3133 3994 202 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3192)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3192)
;;  succ:       204 [66.7%]  (FALLTHRU)
;;              209 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861

;; basic block 203, loop depth 1, count 0, freq 45, maybe hot
;;  prev block 202, next block 204, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       196 [33.3%] 
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u3078(29){ }u3079(31){ }u3080(64){ }u3081(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 806
;; live  in  	 623 624 625 626 647 668 672 742 746 777 811 1710 1861
;; live  gen 	 806
;; live  kill	
(code_label 3994 3134 3993 203 199 "" [1 uses])
(note 3993 3994 4068 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(debug_insn 4068 3993 232 203 (var_location:DI D#51 (const_int 0 [0])) -1
     (nil))
(insn 232 4068 3135 203 (set (reg/v:DI 806 [ k ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;  succ:       204 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861

;; basic block 204, loop depth 1, count 0, freq 104, maybe hot
;;  prev block 203, next block 205, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       203 [100.0%]  (FALLTHRU)
;;              202 [66.7%]  (FALLTHRU)
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u3082(29){ }u3083(31){ }u3084(64){ }u3085(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 742 1861
;; lr  def 	 66 [cc] 753 754 799 1708 1709
;; live  in  	 623 624 625 626 647 668 672 742 746 777 806 811 1710 1861
;; live  gen 	 66 [cc] 753 754 799 1708 1709
;; live  kill	
(code_label 3135 232 3136 204 138 "" [0 uses])
(note 3136 3135 3137 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 3137 3136 3138 204 (set (reg:DI 754 [ niters.33 ])
        (minus:DI (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 264 {subdi3}
     (nil))
(insn 3138 3137 3139 204 (set (reg:DI 1708 [ D.3810 ])
        (plus:DI (reg:DI 754 [ niters.33 ])
            (const_int -2 [0xfffffffffffffffe]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3139 3138 3140 204 (set (reg:DI 1709 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1708 [ D.3810 ])
            (const_int 1 [0x1]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1708 [ D.3810 ])
        (nil)))
(insn 3140 3139 3141 204 (set (reg:DI 753 [ bnd.34 ])
        (plus:DI (reg:DI 1709 [ D.3810 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1709 [ D.3810 ])
        (nil)))
(insn 3141 3140 3142 204 (set (reg:DI 799 [ ratio_mult_vf.35 ])
        (ashift:DI (reg:DI 753 [ bnd.34 ])
            (const_int 1 [0x1]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3142 3141 3143 204 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 391 {*cmpdi}
     (nil))
(jump_insn 3143 3142 3144 204 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3179)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3179)
;;  succ:       205 [66.7%]  (FALLTHRU)
;;              208 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1861

;; basic block 205, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 204, next block 206, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       204 [66.7%]  (FALLTHRU)
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u3095(29){ }u3096(31){ }u3097(64){ }u3098(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 742 746 806 1710 1861
;; lr  def 	 770 776 782 800 1710 1711 1716 1717 1857 1858
;; live  in  	 623 624 625 626 647 668 672 742 746 753 754 777 799 806 811 1710 1861
;; live  gen 	 770 776 782 800 1710 1711 1716 1717 1857 1858
;; live  kill	
(note 3144 3143 3145 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 3145 3144 3147 205 (set (reg:DI 1711 [ stmp_var_.37 ])
        (plus:DI (reg/v:DI 806 [ k ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3147 3145 3149 205 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg/v:DI 806 [ k ]))
            (reg:V2DI 1710)
            (const_int 1 [0x1]))) 1119 {aarch64_simd_vec_setv2di}
     (nil))
(insn 3149 3147 3150 205 (set (reg:V2DI 1710)
        (vec_merge:V2DI (vec_duplicate:V2DI (reg:DI 1711 [ stmp_var_.37 ]))
            (reg:V2DI 1710)
            (const_int 2 [0x2]))) 1119 {aarch64_simd_vec_setv2di}
     (expr_list:REG_DEAD (reg:DI 1711 [ stmp_var_.37 ])
        (nil)))
(insn 3150 3149 3152 205 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 1710)) 915 {*aarch64_simd_movv2di}
     (nil))
(insn 3152 3150 3154 205 (set (reg:V2DI 800 [ vect_cst_.42 ])
        (vec_duplicate:V2DI (reg:DI 624 [ D.3798 ]))) 877 {aarch64_simd_dupv2di}
     (nil))
(insn 3154 3152 3155 205 (set (reg:DI 1716 [ D.3802 ])
        (plus:DI (reg:DI 1861 [ D.3798 ])
            (reg:DI 742 [ prologue_after_cost_adjust.32 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 742 [ prologue_after_cost_adjust.32 ])
        (nil)))
(insn 3155 3154 3156 205 (set (reg:DI 1717 [ D.3802 ])
        (ashift:DI (reg:DI 1716 [ D.3802 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1716 [ D.3802 ])
        (nil)))
(insn 3156 3155 233 205 (set (reg/f:DI 782 [ vectp.48 ])
        (plus:DI (reg/v/f:DI 746 [ seen_edge ])
            (reg:DI 1717 [ D.3802 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1717 [ D.3802 ])
        (nil)))
(insn 233 3156 4201 205 (set (reg:DI 776 [ D.3810 ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
(insn 4201 233 4202 205 (set (reg:V2DI 1857)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC58") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 2 [0x2])
                (const_int 2 [0x2])
            ])
        (nil)))
(insn 4202 4201 3172 205 (set (reg:V2DI 1858)
        (mem/u/c:V2DI (symbol_ref/u:DI ("*.LC59") [flags 0x2]) [4  S16 A128])) -1
     (expr_list:REG_EQUAL (const_vector:V2DI [
                (const_int 1 [0x1])
                (const_int 1 [0x1])
            ])
        (nil)))
;;  succ:       206 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861

;; basic block 206, loop depth 2, count 0, freq 345, maybe hot
;;  prev block 205, next block 298, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       205 [100.0%]  (FALLTHRU)
;;              298 [100.0%]  (FALLTHRU)
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u3115(29){ }u3116(31){ }u3117(64){ }u3118(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 753 770 776 782 800 1857 1858
;; lr  def 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  in  	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; live  gen 	 66 [cc] 770 776 795 1719 1720 1722 1724
;; live  kill	
(code_label 3172 4202 3157 206 142 "" [0 uses])
(note 3157 3172 3159 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 3159 3157 3160 206 (set (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (plus:V2DI (reg:V2DI 770 [ vect_vec_iv_.40 ])
            (reg:V2DI 1857))) 963 {addv2di3}
     (nil))
(debug_insn 3160 3159 3161 206 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
(insn 3161 3160 3163 206 (set (reg:DI 1719 [ D.3805 ])
        (ashift:DI (reg:DI 776 [ D.3810 ])
            (const_int 4 [0x4]))) verify.c:28 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3163 3161 3165 206 (set (reg:V2DI 1722)
        (neg:V2DI (eq:V2DI (reg:V2DI 800 [ vect_cst_.42 ])
                (reg:V2DI 770 [ vect_vec_iv_.40 ])))) 2198 {aarch64_cmeqv2di}
     (expr_list:REG_DEAD (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (nil)))
(insn 3165 3163 3166 206 (set (reg:V2DI 1720 [ vect_patt_839.41 ])
        (and:V2DI (not:V2DI (reg:V2DI 1722))
            (reg:V2DI 1858))) 956 {bicv2di3}
     (expr_list:REG_DEAD (reg:V2DI 1722)
        (expr_list:REG_EQUAL (and:V2DI (not:V2DI (reg:V2DI 1722))
                (const_vector:V2DI [
                        (const_int 1 [0x1])
                        (const_int 1 [0x1])
                    ]))
            (nil))))
(insn 3166 3165 3167 206 (set (reg:V2DI 1724 [ vect__599.46 ])
        (neg:V2DI (reg:V2DI 1720 [ vect_patt_839.41 ]))) verify.c:28 1005 {negv2di2}
     (expr_list:REG_DEAD (reg:V2DI 1720 [ vect_patt_839.41 ])
        (nil)))
(insn 3167 3166 3169 206 (set (mem:V2DI (plus:DI (reg/f:DI 782 [ vectp.48 ])
                (reg:DI 1719 [ D.3805 ])) [4 MEM[base: vectp.48_1271, index: _743, offset: 0B]+0 S16 A128])
        (reg:V2DI 1724 [ vect__599.46 ])) verify.c:28 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 1724 [ vect__599.46 ])
        (expr_list:REG_DEAD (reg:DI 1719 [ D.3805 ])
            (nil))))
(debug_insn 3169 3167 3170 206 (var_location:DI k (debug_expr:DI D#41)) -1
     (nil))
(insn 3170 3169 3171 206 (set (reg:DI 776 [ D.3810 ])
        (plus:DI (reg:DI 776 [ D.3810 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3171 3170 3173 206 (set (reg:V2DI 770 [ vect_vec_iv_.40 ])
        (reg:V2DI 795 [ vect_vec_iv_.40 ])) 915 {*aarch64_simd_movv2di}
     (expr_list:REG_DEAD (reg:V2DI 795 [ vect_vec_iv_.40 ])
        (nil)))
(insn 3173 3171 3174 206 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 753 [ bnd.34 ])
            (reg:DI 776 [ D.3810 ]))) 391 {*cmpdi}
     (nil))
(jump_insn 3174 3173 4344 206 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4344)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 4344)
;;  succ:       298 [80.0%]  (DFS_BACK)
;;              207 [20.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861

;; basic block 298, loop depth 2, count 0, freq 276, maybe hot
;;  prev block 206, next block 207, flags: (NEW, RTL, MODIFIED)
;;  pred:       206 [80.0%]  (DFS_BACK)
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861
;; live  gen 	
;; live  kill	
(code_label 4344 3174 4343 298 281 "" [1 uses])
(note 4343 4344 3175 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
;;  succ:       206 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1853 1854 1857 1858 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 753 754 770 776 777 782 799 800 806 811 1710 1857 1858 1861

;; basic block 207, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 298, next block 208, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       206 [20.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u3137(29){ }u3138(31){ }u3139(64){ }u3140(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 754 777 799 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 754 799 806
;; lr  def 	 66 [cc] 806
;; live  in  	 623 624 625 626 647 668 672 746 754 777 799 806 811 1710 1861
;; live  gen 	 66 [cc] 806
;; live  kill	
(note 3175 4343 4067 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(debug_insn 4067 3175 3176 207 (var_location:DI D#51 (plus:DI (reg/v:DI 806 [ k ])
        (reg:DI 799 [ ratio_mult_vf.35 ]))) -1
     (nil))
(insn 3176 4067 3177 207 (set (reg/v:DI 806 [ k ])
        (plus:DI (reg/v:DI 806 [ k ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3177 3176 3178 207 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 754 [ niters.33 ])
            (reg:DI 799 [ ratio_mult_vf.35 ]))) 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 799 [ ratio_mult_vf.35 ])
        (expr_list:REG_DEAD (reg:DI 754 [ niters.33 ])
            (nil))))
(jump_insn 3178 3177 3179 207 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3192)
            (pc))) 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3334 (nil)))
 -> 3192)
;;  succ:       208 [66.7%]  (FALLTHRU)
;;              209 [33.3%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 806 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 777 806 811 1710 1861

;; basic block 208, loop depth 1, count 0, freq 162, maybe hot
;;  prev block 207, next block 209, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       207 [66.7%]  (FALLTHRU)
;;              204 [33.3%] 
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u3148(29){ }u3149(31){ }u3150(64){ }u3151(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 806 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 668 806
;; lr  def 	 66 [cc] 1725 1726 1727
;; live  in  	 623 624 625 626 647 668 672 746 777 806 811 1710 1861
;; live  gen 	 66 [cc] 1725 1726 1727
;; live  kill	
(code_label 3179 3178 3180 208 141 "" [1 uses])
(note 3180 3179 3181 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3181 3180 3182 208 (var_location:DI k (debug_expr:DI D#51)) -1
     (nil))
(insn 3182 3181 3183 208 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 806 [ k ]))) verify.c:28 391 {*cmpdi}
     (nil))
(insn 3183 3182 3184 208 (set (reg:SI 1726)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:28 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3184 3183 3185 208 (set (reg:DI 1725 [ D.3809 ])
        (zero_extend:DI (reg:SI 1726))) verify.c:28 82 {*zero_extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1726)
        (nil)))
(insn 3185 3184 3186 208 (set (reg:DI 1727 [ D.3798 ])
        (neg:DI (reg:DI 1725 [ D.3809 ]))) verify.c:28 336 {negdi2}
     (expr_list:REG_DEAD (reg:DI 1725 [ D.3809 ])
        (nil)))
(insn 3186 3185 3187 208 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 806 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 668 [ level ])) [4 *_1336+0 S8 A64])
        (reg:DI 1727 [ D.3798 ])) verify.c:28 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1727 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 806 [ k ])
            (nil))))
(debug_insn 3187 3186 3189 208 (var_location:DI D#44 (plus:DI (debug_expr:DI D#51)
        (const_int 1 [0x1]))) verify.c:27 -1
     (nil))
(debug_insn 3189 3187 3192 208 (var_location:DI k (debug_expr:DI D#44)) -1
     (nil))
;;  succ:       209 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 746 777 811 1710 1861

;; basic block 209, loop depth 1, count 0, freq 134, maybe hot
;;  prev block 208, next block 210, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       208 [100.0%]  (FALLTHRU)
;;              202 [33.3%] 
;;              207 [33.3%] 
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u3160(29){ }u3161(31){ }u3162(64){ }u3163(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715 745
;; live  in  	 623 624 625 626 647 668 672 746 777 811 1710 1861
;; live  gen 	 715 745
;; live  kill	
(code_label 3192 3189 3193 209 140 "" [2 uses])
(note 3193 3192 234 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 234 3193 235 209 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:27 47 {*movsi_aarch64}
     (nil))
(insn 235 234 3410 209 (set (reg/v:DI 745 [ parent ])
        (const_int 0 [0])) verify.c:27 48 {*movdi_aarch64}
     (nil))
;;  succ:       210 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 210, loop depth 2, count 0, freq 6736, maybe hot
;;  prev block 209, next block 211, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       209 [100.0%]  (FALLTHRU)
;;              297 [100.0%]  (FALLTHRU)
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u3165(29){ }u3166(31){ }u3167(64){ }u3168(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 1728
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1728
;; live  kill	
(code_label 3410 235 3195 210 157 "" [0 uses])
(note 3195 3410 3196 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3196 3195 3197 210 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
(debug_insn 3197 3196 3199 210 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3199 3197 3200 210 (set (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:32 48 {*movdi_aarch64}
     (nil))
(insn 3200 3199 3201 210 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
            (const_int 0 [0]))) verify.c:32 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1728 [ MEM[base: _745, offset: 0B] ])
        (nil)))
(jump_insn 3201 3200 3202 210 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3402)
            (pc))) verify.c:32 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7300 (nil)))
 -> 3402)
;;  succ:       234 [73.0%] 
;;              211 [27.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 211, loop depth 2, count 0, freq 1819, maybe hot
;;  prev block 210, next block 212, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       210 [27.0%]  (FALLTHRU)
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u3175(29){ }u3176(31){ }u3177(64){ }u3178(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3202 3201 3203 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3203 3202 3204 211 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:33 -1
     (nil))
(insn 3204 3203 3205 211 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (nil))
(jump_insn 3205 3204 3206 211 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3402)
;;  succ:       212 [50.0%]  (FALLTHRU)
;;              234 [50.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 212, loop depth 2, count 0, freq 909, maybe hot
;;  prev block 211, next block 213, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       211 [50.0%]  (FALLTHRU)
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u3182(29){ }u3183(31){ }u3184(64){ }u3185(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 745
;; lr  def 	 66 [cc] 809 1730 1731
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 809 1730 1731
;; live  kill	
(note 3206 3205 3208 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3208 3206 3209 212 (var_location:SI terr (const_int 0 [0])) verify.c:33 -1
     (nil))
(insn 3209 3208 3210 212 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 745 [ parent ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _592, step: 8, offset: 0B]+0 S8 A64])) verify.c:34 48 {*movdi_aarch64}
     (nil))
(insn 3210 3209 3211 212 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 624 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:34 391 {*cmpdi}
     (nil))
(insn 3211 3210 3212 212 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DNE 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 809 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:34 4 {ccmp_anddi}
     (nil))
(insn 3212 3211 3214 212 (set:SI (reg:SI 1730)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:34 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
(insn 3214 3212 3215 212 (set (reg:SI 1731 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1730) 0))) verify.c:34 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1730)
        (nil)))
(insn 3215 3214 3216 212 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1731 [ D.3809 ])
            (const_int 0 [0]))) verify.c:34 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1731 [ D.3809 ])
        (nil)))
(jump_insn 3216 3215 3217 212 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:34 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2 (nil)))
 -> 3402)
;;  succ:       213 [100.0%]  (FALLTHRU)
;;              234 [0.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 213, loop depth 2, count 0, freq 909, maybe hot
;;  prev block 212, next block 214, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       212 [100.0%]  (FALLTHRU)
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u3197(29){ }u3198(31){ }u3199(64){ }u3200(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 745 809
;; lr  def 	 456 581 609
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 456 581 609
;; live  kill	
(note 3217 3216 237 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 237 3217 238 213 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 745 [ parent ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
(insn 238 237 239 213 (set (reg/v:DI 609 [ nhop ])
        (const_int 0 [0])) verify.c:34 48 {*movdi_aarch64}
     (nil))
(insn 239 238 3261 213 (set (reg/v:DI 581 [ parent ])
        (reg:DI 809 [ D.3798 ])) verify.c:34 48 {*movdi_aarch64}
     (nil))
;;  succ:       215 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 214, loop depth 3, count 0, freq 8646, maybe hot
;;  prev block 213, next block 215, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       218 [97.5%] 
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u3204(29){ }u3205(31){ }u3206(64){ }u3207(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 727 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 647 727
;; lr  def 	 456 581
;; live  in  	 581 609 623 624 625 626 647 668 672 715 727 745 746 777 809 811 1710 1861
;; live  gen 	 456 581
;; live  kill	
(code_label 3261 239 3220 214 149 "" [1 uses])
(note 3220 3261 3221 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 3221 3220 3222 214 (set (reg/v:DI 456 [ parent ])
        (reg/v:DI 581 [ parent ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 581 [ parent ])
        (nil)))
(insn 3222 3221 3223 214 (set (reg/v:DI 581 [ parent ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 727 [ D.3802 ])) [4 MEM[(const int64_t *)_1332]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 727 [ D.3802 ])
        (nil)))
;;  succ:       215 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 215, loop depth 3, count 0, freq 9340, maybe hot
;; Invalid sum of incoming frequencies 9555, should be 9340
;;  prev block 214, next block 216, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       213 [100.0%]  (FALLTHRU)
;;              214 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u3211(29){ }u3212(31){ }u3213(64){ }u3214(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 456 581
;; lr  def 	 66 [cc]
;; live  in  	 456 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3223 3222 3224 215 147 "" [0 uses])
(note 3224 3223 3225 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3225 3224 3226 215 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3226 3225 3227 215 (var_location:DI parent (reg/v:DI 456 [ parent ])) -1
     (nil))
(debug_insn 3227 3226 3228 215 (var_location:DI D#28 (mem:DI (debug_expr:DI D#40) [0 +0 S8 A64])) verify.c:39 -1
     (nil))
(insn 3228 3227 3229 215 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 456 [ parent ])
            (reg/v:DI 581 [ parent ]))) verify.c:39 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 456 [ parent ])
        (nil)))
(jump_insn 3229 3228 3230 215 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3245)
            (pc))) verify.c:39 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3245)
;;  succ:       216 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              217 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 216, loop depth 0, count 0, freq 4
;;  prev block 215, next block 217, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       215 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u3220(29){ }u3221(31){ }u3222(64){ }u3223(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1732 1733 1735 1736 1737 1738 1739
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1732 1733 1735 1736 1737 1738 1739
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3230 3229 3231 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 3231 3230 3232 216 (set (reg/f:DI 1733)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 48 {*movdi_aarch64}
     (nil))
(insn 3232 3231 3234 216 (set (reg/f:DI 1732)
        (lo_sum:DI (reg/f:DI 1733)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:39 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1733)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 3234 3232 3235 216 (set (reg/f:DI 1735)
        (plus:DI (reg/f:DI 1732)
            (const_int 48 [0x30]))) verify.c:39 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1732)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3235 3234 3236 216 (set (reg/f:DI 1737)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 48 {*movdi_aarch64}
     (nil))
(insn 3236 3235 3237 216 (set (reg/f:DI 1736)
        (lo_sum:DI (reg/f:DI 1737)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:39 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1737)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3237 3236 3238 216 (set (reg/f:DI 1739)
        (high:DI (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 48 {*movdi_aarch64}
     (nil))
(insn 3238 3237 3239 216 (set (reg/f:DI 1738)
        (lo_sum:DI (reg/f:DI 1739)
            (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>))) verify.c:39 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1739)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>)
            (nil))))
(insn 3239 3238 3240 216 (set (reg:DI 3 x3)
        (reg/f:DI 1735)) verify.c:39 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1735)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3240 3239 3241 216 (set (reg:SI 2 x2)
        (const_int 39 [0x27])) verify.c:39 47 {*movsi_aarch64}
     (nil))
(insn 3241 3240 3242 216 (set (reg:DI 1 x1)
        (reg/f:DI 1736)) verify.c:39 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1736)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3242 3241 3243 216 (set (reg:DI 0 x0)
        (reg/f:DI 1738)) verify.c:39 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1738)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC61") [flags 0x82]  <var_decl 0x7f3c5d881900 *.LC61>)
            (nil))))
(call_insn 3243 3242 3245 216 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:39 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 217, loop depth 3, count 0, freq 9336, maybe hot
;;  prev block 216, next block 218, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       215 [100.0%] 
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u3236(29){ }u3237(31){ }u3238(64){ }u3239(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609
;; lr  def 	 66 [cc] 609
;; live  in  	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 609
;; live  kill	
(code_label 3245 3243 3246 217 148 "" [1 uses])
(note 3246 3245 3247 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3247 3246 3248 217 (var_location:DI parent (debug_expr:DI D#28)) verify.c:40 -1
     (nil))
(insn 3248 3247 3250 217 (set (reg/v:DI 609 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (const_int 1 [0x1]))) verify.c:41 95 {*adddi3_aarch64}
     (nil))
(debug_insn 3250 3248 3251 217 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3251 3250 3252 217 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
(insn 3252 3251 3253 217 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 581 [ parent ])
            (const_int 0 [0]))) verify.c:38 391 {*cmpdi}
     (nil))
(jump_insn 3253 3252 3254 217 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4004)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 241 (nil)))
 -> 4004)
;;  succ:       218 [97.6%]  (FALLTHRU)
;;              268 [2.4%]  (LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 218, loop depth 3, count 0, freq 8866, maybe hot
;; Invalid sum of incoming frequencies 9111, should be 8866
;;  prev block 217, next block 219, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       217 [97.6%]  (FALLTHRU)
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u3244(29){ }u3245(31){ }u3246(64){ }u3247(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 668 1861
;; lr  def 	 66 [cc] 727 731 1741 1742
;; live  in  	 581 609 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 727 731 1741 1742
;; live  kill	
(note 3254 3253 3257 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3257 3254 3258 218 (var_location:DI nhop (reg/v:DI 609 [ nhop ])) -1
     (nil))
(debug_insn 3258 3257 3259 218 (var_location:DI parent (debug_expr:DI D#28)) -1
     (nil))
(insn 3259 3258 3260 218 (set (reg:DI 727 [ D.3802 ])
        (ashift:DI (reg/v:DI 581 [ parent ])
            (const_int 3 [0x3]))) verify.c:38 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3260 3259 3262 218 (set (reg:DI 731 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 727 [ D.3802 ])) [4 *_757+0 S8 A64])) verify.c:38 48 {*movdi_aarch64}
     (nil))
(insn 3262 3260 3263 218 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:38 391 {*cmpdi}
     (nil))
(insn 3263 3262 3264 218 (set (reg:CC_DLT 66 cc)
        (compare (and:SI (ne (reg:CC_DGT 66 cc)
                    (const_int 0 [0]))
                (lt (reg:DI 731 [ D.3798 ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:38 4 {ccmp_anddi}
     (nil))
(insn 3264 3263 3266 218 (set:SI (reg:SI 1741)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:38 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
(insn 3266 3264 3267 218 (set (reg:SI 1742 [ D.3809 ])
        (zero_extend:SI (subreg:QI (reg:SI 1741) 0))) verify.c:38 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1741)
        (nil)))
(insn 3267 3266 3268 218 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1742 [ D.3809 ])
            (const_int 0 [0]))) verify.c:38 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1742 [ D.3809 ])
        (nil)))
(jump_insn 3268 3267 3269 218 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3261)
            (pc))) verify.c:38 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9752 (nil)))
 -> 3261)
;;  succ:       214 [97.5%] 
;;              219 [2.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 581 609 623 624 625 626 647 668 672 715 727 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 581 609 623 624 625 626 647 668 672 715 727 731 745 746 777 809 811 1710 1861

;; basic block 219, loop depth 2, count 0, freq 482, maybe hot
;; Invalid sum of incoming frequencies 220, should be 482
;;  prev block 218, next block 220, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       218 [2.5%]  (FALLTHRU,LOOP_EXIT)
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u3261(29){ }u3262(31){ }u3263(64){ }u3264(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 1861
;; lr  def 	 66 [cc]
;; live  in  	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3269 3268 3270 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3270 3269 3271 219 (var_location:QI D#49 (le:QI (reg:DI 1861 [ D.3798 ])
        (reg/v:DI 609 [ nhop ]))) verify.c:43 -1
     (nil))
(debug_insn 3271 3270 3272 219 (var_location:SI D#48 (zero_extend:SI (debug_expr:QI D#49))) verify.c:43 -1
     (nil))
(debug_insn 3272 3271 3274 219 (var_location:SI D#47 (neg:SI (debug_expr:SI D#48))) verify.c:43 -1
     (nil))
(debug_insn 3274 3272 3275 219 (var_location:SI terr (debug_expr:SI D#47)) -1
     (nil))
(insn 3275 3274 3276 219 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 609 [ nhop ]))) verify.c:46 391 {*cmpdi}
     (nil))
(jump_insn 3276 3275 3277 219 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4008)
            (pc))) verify.c:46 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 3154 (nil)))
 -> 4008)
;;  succ:       220 [68.5%]  (FALLTHRU)
;;              269 [31.5%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861

;; basic block 220, loop depth 2, count 0, freq 330, maybe hot
;;  prev block 219, next block 221, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       219 [68.5%]  (FALLTHRU)
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u3270(29){ }u3271(31){ }u3272(64){ }u3273(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 609 731
;; lr  def 	 66 [cc] 733
;; live  in  	 609 623 624 625 626 647 668 672 715 731 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 733
;; live  kill	
(note 3277 3276 3278 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 3278 3277 3281 220 (set (reg/v:DI 733 [ nhop ])
        (plus:DI (reg/v:DI 609 [ nhop ])
            (reg:DI 731 [ D.3798 ]))) verify.c:49 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 731 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 609 [ nhop ])
            (nil))))
(debug_insn 3281 3278 3282 220 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
(debug_insn 3282 3281 3283 220 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3283 3282 3284 220 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 733 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
(jump_insn 3284 3283 3285 220 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;;  succ:       222 [0.0%]  (LOOP_EXIT)
;;              221 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1861

;; basic block 221, loop depth 2, count 0, freq 330, maybe hot
;;  prev block 220, next block 222, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       220 [100.0%]  (FALLTHRU)
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u3280(29){ }u3281(31){ }u3282(64){ }u3283(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 809
;; lr  def 	 461 805
;; live  in  	 623 624 625 626 647 668 672 715 733 745 746 777 809 811 1710 1861
;; live  gen 	 461 805
;; live  kill	
(note 3285 3284 240 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 240 3285 241 221 (set (reg:DI 805 [ D.3798 ])
        (reg:DI 809 [ D.3798 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
(insn 241 240 3288 221 (set (reg/f:DI 461 [ D.3812 ])
        (reg:DI 672 [ ivtmp.84 ])) verify.c:52 48 {*movdi_aarch64}
     (nil))
;;  succ:       225 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861

;; basic block 222, loop depth 0, count 0, freq 3
;;  prev block 221, next block 223, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       220 [0.0%]  (LOOP_EXIT)
;;              223 [0.0%]  (LOOP_EXIT)
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u3286(29){ }u3287(31){ }u3288(64){ }u3289(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1743 1744 1746 1747 1748 1749 1750
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1743 1744 1746 1747 1748 1749 1750
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3288 241 3289 222 150 "" [2 uses])
(note 3289 3288 3290 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 3290 3289 3291 222 (set (reg/f:DI 1744)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 48 {*movdi_aarch64}
     (nil))
(insn 3291 3290 3293 222 (set (reg/f:DI 1743)
        (lo_sum:DI (reg/f:DI 1744)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:52 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1744)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 3293 3291 3294 222 (set (reg/f:DI 1746)
        (plus:DI (reg/f:DI 1743)
            (const_int 48 [0x30]))) verify.c:52 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1743)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3294 3293 3295 222 (set (reg/f:DI 1748)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 48 {*movdi_aarch64}
     (nil))
(insn 3295 3294 3296 222 (set (reg/f:DI 1747)
        (lo_sum:DI (reg/f:DI 1748)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:52 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1748)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3296 3295 3297 222 (set (reg/f:DI 1750)
        (high:DI (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 48 {*movdi_aarch64}
     (nil))
(insn 3297 3296 3298 222 (set (reg/f:DI 1749)
        (lo_sum:DI (reg/f:DI 1750)
            (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>))) verify.c:52 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1750)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>)
            (nil))))
(insn 3298 3297 3299 222 (set (reg:DI 3 x3)
        (reg/f:DI 1746)) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1746)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3299 3298 3300 222 (set (reg:SI 2 x2)
        (const_int 52 [0x34])) verify.c:52 47 {*movsi_aarch64}
     (nil))
(insn 3300 3299 3301 222 (set (reg:DI 1 x1)
        (reg/f:DI 1747)) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1747)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3301 3300 3302 222 (set (reg:DI 0 x0)
        (reg/f:DI 1749)) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1749)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC62") [flags 0x82]  <var_decl 0x7f3c5d881990 *.LC62>)
            (nil))))
(call_insn 3302 3301 3323 222 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:52 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 223, loop depth 3, count 0, freq 6632, maybe hot
;;  prev block 222, next block 224, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       225 [95.5%] 
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u3302(29){ }u3303(31){ }u3304(64){ }u3305(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734
;; lr  def 	 66 [cc]
;; live  in  	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3323 3302 3304 223 152 "" [1 uses])
(note 3304 3323 3305 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 3305 3304 3306 223 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (const_int 0 [0]))) verify.c:52 391 {*cmpdi}
     (nil))
(jump_insn 3306 3305 3307 223 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3288)
            (pc))) verify.c:52 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3288)
;;  succ:       222 [0.0%]  (LOOP_EXIT)
;;              224 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861

;; basic block 224, loop depth 3, count 0, freq 6629, maybe hot
;;  prev block 223, next block 225, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       223 [100.0%]  (FALLTHRU)
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u3308(29){ }u3309(31){ }u3310(64){ }u3311(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 734 735
;; lr  def 	 733 805
;; live  in  	 461 623 624 625 626 647 668 672 715 734 735 745 746 777 809 811 1710 1861
;; live  gen 	 733 805
;; live  kill	
(note 3307 3306 3308 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 3308 3307 242 224 (set (reg:DI 805 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 735 [ D.3802 ])) [4 MEM[(const int64_t *)_1346]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 735 [ D.3802 ])
        (nil)))
(insn 242 3308 3309 224 (set (reg/v:DI 733 [ nhop ])
        (reg/v:DI 734 [ nhop ])) verify.c:52 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
        (nil)))
;;  succ:       225 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861

;; basic block 225, loop depth 3, count 0, freq 6944, maybe hot
;;  prev block 224, next block 226, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       221 [100.0%]  (FALLTHRU)
;;              224 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u3315(29){ }u3316(31){ }u3317(64){ }u3318(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 668 733 805
;; lr  def 	 66 [cc] 461 734 735 737
;; live  in  	 461 623 624 625 626 647 668 672 715 733 745 746 777 805 809 811 1710 1861
;; live  gen 	 66 [cc] 461 734 735 737
;; live  kill	
(code_label 3309 242 3310 225 151 "" [0 uses])
(note 3310 3309 3311 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3311 3310 3312 225 (var_location:DI nhop (reg/v:DI 733 [ nhop ])) -1
     (nil))
(debug_insn 3312 3311 3313 225 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3313 3312 3314 225 (set (reg/v:DI 734 [ nhop ])
        (plus:DI (reg/v:DI 733 [ nhop ])
            (const_int -1 [0xffffffffffffffff]))) verify.c:53 95 {*adddi3_aarch64}
     (nil))
(debug_insn 3314 3313 3315 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) verify.c:53 -1
     (nil))
(insn 3315 3314 3316 225 (set (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_363+0 S8 A64])
        (reg/v:DI 733 [ nhop ])) verify.c:53 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 733 [ nhop ])
        (expr_list:REG_DEAD (reg/f:DI 461 [ D.3812 ])
            (nil))))
(debug_insn 3316 3315 3318 225 (var_location:DI D#27 (mem:DI (debug_expr:DI D#39) [0 +0 S8 A64])) verify.c:54 -1
     (nil))
(debug_insn 3318 3316 3319 225 (var_location:DI nhop (reg/v:DI 734 [ nhop ])) -1
     (nil))
(debug_insn 3319 3318 3320 225 (var_location:DI parent (debug_expr:DI D#27)) -1
     (nil))
(insn 3320 3319 3321 225 (set (reg:DI 735 [ D.3802 ])
        (ashift:DI (reg:DI 805 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:51 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 805 [ D.3798 ])
        (nil)))
(insn 3321 3320 3322 225 (set (reg/f:DI 461 [ D.3812 ])
        (plus:DI (reg/v/f:DI 668 [ level ])
            (reg:DI 735 [ D.3802 ]))) verify.c:51 95 {*adddi3_aarch64}
     (nil))
(insn 3322 3321 3324 225 (set (reg:DI 737 [ D.3798 ])
        (mem:DI (reg/f:DI 461 [ D.3812 ]) [4 *_767+0 S8 A64])) verify.c:51 48 {*movdi_aarch64}
     (nil))
(insn 3324 3322 3325 225 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 737 [ D.3798 ])
            (const_int 0 [0]))) verify.c:51 391 {*cmpdi}
     (nil))
(jump_insn 3325 3324 3326 225 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3323)
            (pc))) verify.c:51 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3323)
;;  succ:       223 [95.5%] 
;;              226 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 461 623 624 625 626 647 668 672 715 734 735 737 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 461 623 624 625 626 647 668 672 715 734 735 737 745 746 777 809 811 1710 1861

;; basic block 226, loop depth 2, count 0, freq 327, maybe hot
;;  prev block 225, next block 227, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       225 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u3332(29){ }u3333(31){ }u3334(64){ }u3335(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 734 737 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 734 737
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 672 715 734 737 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3326 3325 3327 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 3327 3326 3328 226 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 734 [ nhop ])
            (reg:DI 737 [ D.3798 ]))) verify.c:56 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 737 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 734 [ nhop ])
            (nil))))
(jump_insn 3328 3327 3329 226 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3344)
            (pc))) verify.c:56 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 3344)
;;  succ:       227 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              228 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861

;; basic block 227, loop depth 0, count 0, freq 0
;;  prev block 226, next block 228, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       226 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u3339(29){ }u3340(31){ }u3341(64){ }u3342(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1751 1752 1754 1755 1756 1757 1758
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1751 1752 1754 1755 1756 1757 1758
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3329 3328 3330 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 3330 3329 3331 227 (set (reg/f:DI 1752)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 48 {*movdi_aarch64}
     (nil))
(insn 3331 3330 3333 227 (set (reg/f:DI 1751)
        (lo_sum:DI (reg/f:DI 1752)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:56 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1752)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 3333 3331 3334 227 (set (reg/f:DI 1754)
        (plus:DI (reg/f:DI 1751)
            (const_int 48 [0x30]))) verify.c:56 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1751)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3334 3333 3335 227 (set (reg/f:DI 1756)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 48 {*movdi_aarch64}
     (nil))
(insn 3335 3334 3336 227 (set (reg/f:DI 1755)
        (lo_sum:DI (reg/f:DI 1756)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:56 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1756)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3336 3335 3337 227 (set (reg/f:DI 1758)
        (high:DI (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 48 {*movdi_aarch64}
     (nil))
(insn 3337 3336 3338 227 (set (reg/f:DI 1757)
        (lo_sum:DI (reg/f:DI 1758)
            (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>))) verify.c:56 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1758)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>)
            (nil))))
(insn 3338 3337 3339 227 (set (reg:DI 3 x3)
        (reg/f:DI 1754)) verify.c:56 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1754)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3339 3338 3340 227 (set (reg:SI 2 x2)
        (const_int 56 [0x38])) verify.c:56 47 {*movsi_aarch64}
     (nil))
(insn 3340 3339 3341 227 (set (reg:DI 1 x1)
        (reg/f:DI 1755)) verify.c:56 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1755)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3341 3340 3342 227 (set (reg:DI 0 x0)
        (reg/f:DI 1757)) verify.c:56 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1757)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC63") [flags 0x82]  <var_decl 0x7f3c5d881a20 *.LC63>)
            (nil))))
(call_insn 3342 3341 3344 227 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:56 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 228, loop depth 2, count 0, freq 327, maybe hot
;;  prev block 227, next block 229, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       226 [100.0%] 
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u3355(29){ }u3356(31){ }u3357(64){ }u3358(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672
;; lr  def 	 66 [cc] 738
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 738
;; live  kill	
(code_label 3344 3342 3345 228 153 "" [1 uses])
(note 3345 3344 3346 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3346 3345 3347 228 (var_location:DI nhop (const_int 0 [0])) verify.c:60 -1
     (nil))
(debug_insn 3347 3346 3348 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) verify.c:61 -1
     (nil))
(insn 3348 3347 3349 228 (set (reg/v:DI 738 [ lastlvl ])
        (mem:DI (reg:DI 672 [ ivtmp.84 ]) [4 MEM[base: _745, offset: 0B]+0 S8 A64])) verify.c:62 48 {*movdi_aarch64}
     (nil))
(debug_insn 3349 3348 3351 228 (var_location:DI D#23 (plus:DI (reg/v:DI 738 [ lastlvl ])
        (const_int 1 [0x1]))) verify.c:62 -1
     (nil))
(debug_insn 3351 3349 3352 228 (var_location:DI lastlvl (debug_expr:DI D#23)) -1
     (nil))
(debug_insn 3352 3351 3353 228 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3353 3352 3354 228 (var_location:DI parent (reg/v:DI 745 [ parent ])) -1
     (nil))
(insn 3354 3353 3355 228 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 738 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
(jump_insn 3355 3354 3356 228 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3402)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 3402)
;;  succ:       229 [95.5%]  (FALLTHRU)
;;              234 [4.5%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861

;; basic block 229, loop depth 2, count 0, freq 312, maybe hot
;;  prev block 228, next block 230, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       228 [95.5%]  (FALLTHRU)
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u3365(29){ }u3366(31){ }u3367(64){ }u3368(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; live  gen 	
;; live  kill	
(note 3356 3355 3396 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
;;  succ:       233 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861

;; basic block 230, loop depth 3, count 0, freq 6572, maybe hot
;;  prev block 229, next block 231, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       233 [95.5%] 
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u3369(29){ }u3370(31){ }u3371(64){ }u3372(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 738 739
;; lr  def 	 66 [cc] 1759
;; live  in  	 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 1759
;; live  kill	
(code_label 3396 3356 3359 230 156 "" [1 uses])
(note 3359 3396 3360 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 3360 3359 3361 230 (set (reg:DI 1759 [ D.3798 ])
        (plus:DI (reg/v:DI 739 [ lastlvl ])
            (const_int 1 [0x1]))) verify.c:64 95 {*adddi3_aarch64}
     (nil))
(insn 3361 3360 3362 230 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1759 [ D.3798 ])
            (reg/v:DI 738 [ lastlvl ]))) verify.c:64 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1759 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 738 [ lastlvl ])
            (nil))))
(jump_insn 3362 3361 3363 230 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3367)
            (pc))) verify.c:64 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3367)
;;  succ:       232 [0.0%]  (LOOP_EXIT)
;;              231 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1861

;; basic block 231, loop depth 3, count 0, freq 6569, maybe hot
;;  prev block 230, next block 232, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       230 [100.0%]  (FALLTHRU)
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u3377(29){ }u3378(31){ }u3379(64){ }u3380(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 739 741
;; lr  def 	 738 809
;; live  in  	 623 624 625 626 647 668 672 715 739 741 745 746 777 811 1710 1861
;; live  gen 	 738 809
;; live  kill	
(note 3363 3362 3364 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 3364 3363 243 231 (set (reg:DI 809 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 741 [ D.3802 ])) [4 MEM[(const int64_t *)_1354]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 741 [ D.3802 ])
        (nil)))
(insn 243 3364 3367 231 (set (reg/v:DI 738 [ lastlvl ])
        (reg/v:DI 739 [ lastlvl ])) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 739 [ lastlvl ])
        (nil)))
;;  succ:       233 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861

;; basic block 232, loop depth 0, count 0, freq 3
;;  prev block 231, next block 233, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       230 [0.0%]  (LOOP_EXIT)
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u3384(29){ }u3385(31){ }u3386(64){ }u3387(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1760 1761 1763 1764 1765 1766 1767
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 1760 1761 1763 1764 1765 1766 1767
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3367 243 3368 232 155 "" [1 uses])
(note 3368 3367 3369 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 3369 3368 3370 232 (set (reg/f:DI 1761)
        (high:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 48 {*movdi_aarch64}
     (nil))
(insn 3370 3369 3372 232 (set (reg/f:DI 1760)
        (lo_sum:DI (reg/f:DI 1761)
            (symbol_ref:DI ("*.LANCHOR2") [flags 0x182]))) verify.c:64 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1761)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
            (nil))))
(insn 3372 3370 3373 232 (set (reg/f:DI 1763)
        (plus:DI (reg/f:DI 1760)
            (const_int 48 [0x30]))) verify.c:64 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1760)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3373 3372 3374 232 (set (reg/f:DI 1765)
        (high:DI (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 48 {*movdi_aarch64}
     (nil))
(insn 3374 3373 3375 232 (set (reg/f:DI 1764)
        (lo_sum:DI (reg/f:DI 1765)
            (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>))) verify.c:64 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1765)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3375 3374 3376 232 (set (reg/f:DI 1767)
        (high:DI (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 48 {*movdi_aarch64}
     (nil))
(insn 3376 3375 3377 232 (set (reg/f:DI 1766)
        (lo_sum:DI (reg/f:DI 1767)
            (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>))) verify.c:64 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1767)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>)
            (nil))))
(insn 3377 3376 3378 232 (set (reg:DI 3 x3)
        (reg/f:DI 1763)) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1763)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR2") [flags 0x182])
                    (const_int 48 [0x30])))
            (nil))))
(insn 3378 3377 3379 232 (set (reg:SI 2 x2)
        (const_int 64 [0x40])) verify.c:64 47 {*movsi_aarch64}
     (nil))
(insn 3379 3378 3380 232 (set (reg:DI 1 x1)
        (reg/f:DI 1764)) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1764)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC60") [flags 0x82]  <var_decl 0x7f3c5d881870 *.LC60>)
            (nil))))
(insn 3380 3379 3381 232 (set (reg:DI 0 x0)
        (reg/f:DI 1766)) verify.c:64 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1766)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC64") [flags 0x82]  <var_decl 0x7f3c5d881ab0 *.LC64>)
            (nil))))
(call_insn 3381 3380 3383 232 (parallel [
            (call (mem:DI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>) [0 __assert_fail S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) verify.c:64 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 3 x3)
        (expr_list:REG_DEAD (reg:SI 2 x2)
            (expr_list:REG_DEAD (reg:DI 1 x1)
                (expr_list:REG_DEAD (reg:DI 0 x0)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f3c5e24c500 __assert_fail>)
                        (expr_list:REG_NORETURN (const_int 0 [0])
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:DI (use (reg:DI 1 x1))
                    (expr_list:SI (use (reg:SI 2 x2))
                        (expr_list:DI (use (reg:DI 3 x3))
                            (nil))))))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 233, loop depth 3, count 0, freq 6883, maybe hot
;;  prev block 232, next block 234, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       229 [100.0%]  (FALLTHRU)
;;              231 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u3400(29){ }u3401(31){ }u3402(64){ }u3403(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 809
;; lr  def 	 66 [cc] 739 741
;; live  in  	 623 624 625 626 647 668 672 715 738 745 746 777 809 811 1710 1861
;; live  gen 	 66 [cc] 739 741
;; live  kill	
(code_label 3383 3381 3384 233 154 "" [0 uses])
(note 3384 3383 3388 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3388 3384 3391 233 (var_location:DI D#26 (mem:DI (debug_expr:DI D#38) [0 +0 S8 A64])) verify.c:66 -1
     (nil))
(debug_insn 3391 3388 3392 233 (var_location:DI lastlvl (reg/v:DI 738 [ lastlvl ])) -1
     (nil))
(debug_insn 3392 3391 3393 233 (var_location:DI nhop (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3393 3392 3394 233 (var_location:DI parent (debug_expr:DI D#26)) -1
     (nil))
(insn 3394 3393 3395 233 (set (reg:DI 741 [ D.3802 ])
        (ashift:DI (reg:DI 809 [ D.3798 ])
            (const_int 3 [0x3]))) verify.c:63 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 809 [ D.3798 ])
        (nil)))
(insn 3395 3394 3397 233 (set (reg/v:DI 739 [ lastlvl ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 741 [ D.3802 ])) [4 *_784+0 S8 A64])) verify.c:63 48 {*movdi_aarch64}
     (nil))
(insn 3397 3395 3398 233 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 739 [ lastlvl ])
            (const_int 0 [0]))) verify.c:63 391 {*cmpdi}
     (nil))
(jump_insn 3398 3397 3402 233 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3396)
            (pc))) verify.c:63 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 3396)
;;  succ:       230 [95.5%] 
;;              234 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 738 739 741 745 746 777 811 1710 1861

;; basic block 234, loop depth 2, count 0, freq 6729, maybe hot
;; Invalid sum of incoming frequencies 6529, should be 6729
;;  prev block 233, next block 297, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       210 [73.0%] 
;;              233 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              269 [100.0%]  (FALLTHRU)
;;              211 [50.0%] 
;;              212 [0.0%] 
;;              228 [4.5%] 
;;              268 [100.0%]  (FALLTHRU)
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u3410(29){ }u3411(31){ }u3412(64){ }u3413(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 672 745 1861
;; lr  def 	 66 [cc] 672 745
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	 66 [cc] 672 745
;; live  kill	
(code_label 3402 3398 3403 234 144 "" [4 uses])
(note 3403 3402 3404 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3404 3403 3405 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3405 3404 3407 234 (set (reg/v:DI 745 [ parent ])
        (plus:DI (reg/v:DI 745 [ parent ])
            (const_int 1 [0x1]))) verify.c:31 95 {*adddi3_aarch64}
     (nil))
(debug_insn 3407 3405 3408 234 (var_location:DI k (reg/v:DI 745 [ parent ])) -1
     (nil))
(debug_insn 3408 3407 3409 234 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3409 3408 3411 234 (set (reg:DI 672 [ ivtmp.84 ])
        (plus:DI (reg:DI 672 [ ivtmp.84 ])
            (const_int 8 [0x8]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3411 3409 3412 234 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (reg/v:DI 745 [ parent ]))) verify.c:31 391 {*cmpdi}
     (nil))
(jump_insn 3412 3411 4342 234 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4342)
            (pc))) verify.c:31 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 4342)
;;  succ:       297 [98.0%]  (DFS_BACK)
;;              280 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 297, loop depth 2, count 0, freq 6594, maybe hot
;;  prev block 234, next block 235, flags: (NEW, RTL, MODIFIED)
;;  pred:       234 [98.0%]  (DFS_BACK)
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861
;; live  gen 	
;; live  kill	
(code_label 4342 3412 4341 297 280 "" [1 uses])
(note 4341 4342 3416 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
;;  succ:       210 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 235, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 297, next block 236, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       195 [9.0%] 
;;              236 [100.0%]  (FALLTHRU)
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u3422(29){ }u3423(31){ }u3424(64){ }u3425(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 626
;; lr  def 	 66 [cc] 763
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 66 [cc] 763
;; live  kill	
(code_label 3416 4341 3417 235 136 "" [1 uses])
(note 3417 3416 3418 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3418 3417 3419 235 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3419 3418 3420 235 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3420 3419 3421 235 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3421 3420 3422 235 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 3422 3421 3423 235 (set (reg:DI 763 [ D.3798 ])
        (ashift:DI (reg:DI 626 [ D.3798 ])
            (const_int 1 [0x1]))) verify.c:117 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 626 [ D.3798 ])
        (nil)))
(insn 3423 3422 3424 235 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 763 [ D.3798 ])
            (const_int 0 [0]))) verify.c:117 391 {*cmpdi}
     (nil))
(jump_insn 3424 3423 3428 235 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3464)
            (pc))) verify.c:117 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3464)
;;  succ:       237 [91.0%] 
;;              287 [9.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 647 668 746 763 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 647 668 746 763 777 811 1710 1861

;; basic block 236, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 235, next block 237, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       280 [46.7%]  (FALLTHRU)
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u3429(29){ }u3430(31){ }u3431(64){ }u3432(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1768 1770 1771
;; live  in  	 623 624 625 626 647 668 746 777 811 1710 1861
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 1768 1770 1771
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3428 3424 3439 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3439 3428 3440 236 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3440 3439 3441 236 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3441 3440 3442 236 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3442 3441 3443 236 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3443 3442 3444 236 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3444 3443 3445 236 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3445 3444 3446 236 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3446 3445 3447 236 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3447 3446 3448 236 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3448 3447 3449 236 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3449 3448 3451 236 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(insn 3451 3449 3452 236 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) 391 {*cmpdi}
     (nil))
(insn 3452 3451 3453 236 (set (reg:DI 1768 [ D.3798 ])
        (if_then_else:DI (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:DI 623 [ D.3798 ])
            (const_int 0 [0]))) 443 {*cmovdi_insn}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3453 3452 3454 236 (set (reg:DI 1770 [ D.3805 ])
        (plus:DI (reg:DI 1768 [ D.3798 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1768 [ D.3798 ])
        (nil)))
(insn 3454 3453 3457 236 (set (reg:DI 1771 [ D.3805 ])
        (ashift:DI (reg:DI 1770 [ D.3805 ])
            (const_int 3 [0x3]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1770 [ D.3805 ])
        (nil)))
(insn 3457 3454 3458 236 (set (reg:DI 2 x2)
        (reg:DI 1771 [ D.3805 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1771 [ D.3805 ])
        (nil)))
(insn 3458 3457 3459 236 (set (reg:SI 1 x1)
        (const_int 0 [0])) 47 {*movsi_aarch64}
     (nil))
(insn 3459 3458 3460 236 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) 48 {*movdi_aarch64}
     (nil))
(call_insn 3460 3459 3464 236 (parallel [
            (set (reg:DI 0 x0)
                (call (mem:DI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>) [0 memset S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:DI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f3c5d823900 memset>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
;;  succ:       235 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 746 777 811 1710 1861

;; basic block 237, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 236, next block 238, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       235 [91.0%] 
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u3446(29){ }u3447(31){ }u3448(64){ }u3449(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 647 668 746 763 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 625 763
;; lr  def 	 610 708 715 720 1775 1776 1777 1778 1872 1873 1874
;; live  in  	 623 624 625 647 668 746 763 777 811 1710 1861
;; live  gen 	 610 708 715 720 1775 1776 1777 1778 1872 1873 1874
;; live  kill	
(code_label 3464 3460 3465 237 159 "" [1 uses])
(note 3465 3464 3466 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 3466 3465 3467 237 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (const_int 8 [0x8]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3467 3466 3468 237 (set (reg:DI 1775 [ D.3810 ])
        (plus:DI (reg:DI 763 [ D.3798 ])
            (const_int -1 [0xffffffffffffffff]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 763 [ D.3798 ])
        (nil)))
(insn 3468 3467 3469 237 (set (reg:DI 1776 [ D.3810 ])
        (lshiftrt:DI (reg:DI 1775 [ D.3810 ])
            (const_int 1 [0x1]))) 637 {*aarch64_lshr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1775 [ D.3810 ])
        (nil)))
(insn 3469 3468 3470 237 (set (reg:DI 1777 [ D.3810 ])
        (ashift:DI (reg:DI 1776 [ D.3810 ])
            (const_int 4 [0x4]))) 635 {*aarch64_ashl_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg:DI 1776 [ D.3810 ])
        (nil)))
(insn 3470 3469 3471 237 (set (reg:DI 1778 [ D.3805 ])
        (plus:DI (reg:DI 1777 [ D.3810 ])
            (const_int 24 [0x18]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1777 [ D.3810 ])
        (nil)))
(insn 3471 3470 244 237 (set (reg:DI 720 [ D.3810 ])
        (plus:DI (reg/f:DI 625 [ D.3803 ])
            (reg:DI 1778 [ D.3805 ]))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1778 [ D.3805 ])
        (expr_list:REG_DEAD (reg/f:DI 625 [ D.3803 ])
            (nil))))
(insn 244 3471 245 237 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:117 47 {*movsi_aarch64}
     (nil))
(insn 245 244 248 237 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:117 47 {*movsi_aarch64}
     (nil))
(insn 248 245 252 237 (set (reg:SI 1872 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
(insn 252 248 3550 237 (set (reg:SI 1873 [ err ])
        (const_int -14 [0xfffffffffffffff2])) verify.c:153 47 {*movsi_aarch64}
     (nil))
(insn 3550 252 3573 237 (set (reg:DI 1874)
        (const_int 1 [0x1])) verify.c:148 48 {*movdi_aarch64}
     (nil))
;;  succ:       238 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 238, loop depth 2, count 0, freq 695, maybe hot
;;  prev block 237, next block 239, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       237 [100.0%]  (FALLTHRU)
;;              296 [100.0%]  (FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u3457(29){ }u3458(31){ }u3459(64){ }u3460(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 715
;; lr  def 	 66 [cc] 674 675 716 1780 1781
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 674 675 716 1780 1781
;; live  kill	
(code_label 3573 3550 3472 238 170 "" [0 uses])
(note 3472 3573 3473 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3473 3472 3474 238 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3474 3473 3475 238 (var_location:DI k (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3475 3474 3476 238 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3476 3475 3478 238 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3478 3476 3479 238 (set (reg/v:DI 674 [ i ])
        (mem:DI (plus:DI (reg:DI 708 [ ivtmp.64 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _1398, offset: -8B]+0 S8 A64])) verify.c:118 48 {*movdi_aarch64}
     (nil))
(debug_insn 3479 3478 3480 238 (var_location:DI i (reg/v:DI 674 [ i ])) verify.c:118 -1
     (nil))
(insn 3480 3479 3481 238 (set (reg/v:DI 675 [ j ])
        (mem:DI (reg:DI 708 [ ivtmp.64 ]) [4 MEM[base: _1398, offset: 0B]+0 S8 A64])) verify.c:119 48 {*movdi_aarch64}
     (nil))
(debug_insn 3481 3480 3482 238 (var_location:DI j (reg/v:DI 675 [ j ])) verify.c:119 -1
     (nil))
(debug_insn 3482 3481 3483 238 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:121 -1
     (nil))
(insn 3483 3482 3484 238 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (const_int 0 [0]))) verify.c:123 391 {*cmpdi}
     (nil))
(insn 3484 3483 3485 238 (set (reg:CC_DLT 66 cc)
        (compare (ior:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (lt (reg/v:DI 675 [ j ])
                    (const_int 0 [0])))
            (const_int 0 [0]))) verify.c:123 6 {ccmp_iordi}
     (nil))
(insn 3485 3484 3487 238 (set:SI (reg:SI 1780)
        (ne:SI (reg:CC_DLT 66 cc)
            (const_int 0 [0]))) verify.c:123 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DLT 66 cc)
        (nil)))
(insn 3487 3485 246 238 (set (reg:SI 1781 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1780) 0))) verify.c:123 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1780)
        (nil)))
(insn 246 3487 3488 238 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:123 47 {*movsi_aarch64}
     (nil))
(insn 3488 246 3489 238 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1781 [ D.3813 ])
            (const_int 0 [0]))) verify.c:123 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1781 [ D.3813 ])
        (nil)))
(jump_insn 3489 3488 3490 238 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:123 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3562)
;;  succ:       251 [50.0%] 
;;              239 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 239, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 238, next block 240, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       238 [50.0%]  (FALLTHRU)
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u3477(29){ }u3478(31){ }u3479(64){ }u3480(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 679 1783 1785 1786 1788
;; live  in  	 610 623 624 647 668 674 675 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 679 1783 1785 1786 1788
;; live  kill	
(note 3490 3489 3491 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 3491 3490 3492 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 674 [ i ]))) verify.c:124 391 {*cmpdi}
     (nil))
(insn 3492 3491 3494 239 (set (reg:SI 1783)
        (lt:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3494 3492 3495 239 (set (reg:SI 679 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1783) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1783)
        (nil)))
(insn 3495 3494 3496 239 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:124 391 {*cmpdi}
     (nil))
(insn 3496 3495 3498 239 (set (reg:SI 1785)
        (ge:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3498 3496 3500 239 (set (reg:SI 1786)
        (and:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1785))) verify.c:124 465 {andsi3}
     (expr_list:REG_DEAD (reg:SI 1785)
        (nil)))
(insn 3500 3498 3501 239 (set (reg:SI 1788)
        (zero_extend:SI (subreg:QI (reg:SI 1786) 0))) verify.c:124 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1786)
        (nil)))
(insn 3501 3500 3502 239 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1788)
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1788)
        (nil)))
(jump_insn 3502 3501 3503 239 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3782)
            (pc))) verify.c:124 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3782)
;;  succ:       270 [50.0%] 
;;              240 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 240, loop depth 2, count 0, freq 173, maybe hot
;;  prev block 239, next block 241, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       239 [50.0%]  (FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u3496(29){ }u3497(31){ }u3498(64){ }u3499(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 1790 1791
;; live  in  	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 1790 1791
;; live  kill	
(note 3503 3502 3504 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3504 3503 3505 240 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3505 3504 3506 240 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (nil))
(insn 3506 3505 3507 240 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (nil))
(insn 3507 3506 3509 240 (set:SI (reg:SI 1790)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
(insn 3509 3507 3510 240 (set (reg:SI 1791 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1790) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1790)
        (nil)))
(insn 3510 3509 3511 240 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1791 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1791 [ D.3813 ])
        (nil)))
(jump_insn 3511 3510 3512 240 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4014)
            (pc))) verify.c:125 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4014)
;;  succ:       281 [50.0%] 
;;              241 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 241, loop depth 2, count 0, freq 86, maybe hot
;;  prev block 240, next block 242, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       240 [50.0%]  (FALLTHRU)
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u3511(29){ }u3512(31){ }u3513(64){ }u3514(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 679 715
;; lr  def 	 66 [cc] 716 1793 1794 1796
;; live  in  	 610 623 624 647 668 674 675 679 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 716 1793 1794 1796
;; live  kill	
(note 3512 3511 3513 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3513 3512 3514 241 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3514 3513 3515 241 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (nil))
(insn 3515 3514 3517 241 (set (reg:SI 1793)
        (ne:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:127 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (nil)))
(insn 3517 3515 3519 241 (set (reg:SI 1794)
        (ior:SI (reg:SI 679 [ D.3813 ])
            (reg:SI 1793))) verify.c:127 466 {iorsi3}
     (expr_list:REG_DEAD (reg:SI 1793)
        (expr_list:REG_DEAD (reg:SI 679 [ D.3813 ])
            (nil))))
(insn 3519 3517 247 241 (set (reg:SI 1796)
        (zero_extend:SI (subreg:QI (reg:SI 1794) 0))) verify.c:127 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1794)
        (nil)))
(insn 247 3519 3520 241 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:127 47 {*movsi_aarch64}
     (nil))
(insn 3520 247 3521 241 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1796)
            (const_int 0 [0]))) verify.c:127 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1796)
        (nil)))
(jump_insn 3521 3520 3522 241 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3562)
            (pc))) verify.c:127 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 3562)
;;  succ:       251
;;              242 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 242, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 241, next block 243, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       241 [100.0%]  (FALLTHRU)
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u3525(29){ }u3526(31){ }u3527(64){ }u3528(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 674
;; lr  def 	 66 [cc] 688 690
;; live  in  	 610 623 624 647 668 674 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 688 690
;; live  kill	
(note 3522 3521 3523 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 3523 3522 3524 242 (set (reg:DI 688 [ D.3802 ])
        (ashift:DI (reg/v:DI 674 [ i ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3524 3523 3525 242 (set (reg:DI 690 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 688 [ D.3802 ])) [4 *_674+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
(insn 3525 3524 3526 242 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 690 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
(jump_insn 3526 3525 3527 242 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3894)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 3894)
;;  succ:       243 [73.0%]  (FALLTHRU)
;;              284 [27.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 243, loop depth 2, count 0, freq 127, maybe hot
;;  prev block 242, next block 244, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       242 [73.0%]  (FALLTHRU)
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u3534(29){ }u3535(31){ }u3536(64){ }u3537(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 692 694
;; live  in  	 610 623 624 647 668 674 675 688 690 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 692 694
;; live  kill	
(note 3527 3526 3528 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 3528 3527 3529 243 (set (reg:DI 692 [ D.3802 ])
        (ashift:DI (reg/v:DI 675 [ j ])
            (const_int 3 [0x3]))) verify.c:131 635 {*aarch64_ashl_sisd_or_int_di3}
     (nil))
(insn 3529 3528 3530 243 (set (reg:DI 694 [ D.3798 ])
        (mem:DI (plus:DI (reg/v/f:DI 647 [ bfs_tree ])
                (reg:DI 692 [ D.3802 ])) [4 *_678+0 S8 A64])) verify.c:131 48 {*movdi_aarch64}
     (nil))
(insn 3530 3529 3531 243 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 694 [ D.3798 ])
            (const_int 0 [0]))) verify.c:131 391 {*cmpdi}
     (nil))
(jump_insn 3531 3530 3887 243 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4020)
            (pc))) verify.c:131 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4020)
;;  succ:       271 [27.0%] 
;;              283 [73.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 244, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 243, next block 245, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       283 [72.0%] 
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u3543(29){ }u3544(31){ }u3545(64){ }u3546(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 675 690
;; lr  def 	 66 [cc]
;; live  in  	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3887 3531 3535 244 190 "" [1 uses])
(note 3535 3887 3536 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 3536 3535 3537 244 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 675 [ j ])
            (reg:DI 690 [ D.3798 ]))) verify.c:145 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 690 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
            (nil))))
(jump_insn 3537 3536 3538 244 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3541)
            (pc))) verify.c:145 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3541)
;;  succ:       245 [28.0%]  (FALLTHRU)
;;              246 [72.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 245, loop depth 2, count 0, freq 13
;;  prev block 244, next block 246, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       244 [28.0%]  (FALLTHRU)
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u3550(29){ }u3551(31){ }u3552(64){ }u3553(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 688 746 1874
;; lr  def 	 1797
;; live  in  	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 1797
;; live  kill	
(note 3538 3537 4356 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 4356 3538 3540 245 (set (reg:DI 1797)
        (reg:DI 1874)) verify.c:146 -1
     (nil))
(insn 3540 4356 3541 245 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 688 [ D.3802 ])) [4 *_687+0 S8 A64])
        (reg:DI 1874)) verify.c:146 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1797)
        (nil)))
;;  succ:       246 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 246, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 245, next block 247, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       244 [72.0%] 
;;              245 [100.0%]  (FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u3557(29){ }u3558(31){ }u3559(64){ }u3560(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 674 694
;; lr  def 	 66 [cc]
;; live  in  	 610 623 624 647 668 674 688 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3541 3540 3542 246 167 "" [1 uses])
(note 3542 3541 3543 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 3543 3542 3544 246 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg:DI 694 [ D.3798 ]))) verify.c:147 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 694 [ D.3798 ])
        (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
            (nil))))
(jump_insn 3544 3543 3548 246 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3548)
            (pc))) verify.c:147 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 3548)
;;  succ:       247 [28.0%] 
;;              248 [72.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 247, loop depth 2, count 0, freq 13
;;  prev block 246, next block 248, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       246 [28.0%] 
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u3564(29){ }u3565(31){ }u3566(64){ }u3567(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 692 746 1874
;; lr  def 	 1798
;; live  in  	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 1798
;; live  kill	
(code_label 3548 3544 3549 247 168 "" [1 uses])
(note 3549 3548 4355 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 4355 3549 3551 247 (set (reg:DI 1798)
        (reg:DI 1874)) verify.c:148 -1
     (nil))
(insn 3551 4355 3552 247 (set (mem:DI (plus:DI (reg/v/f:DI 746 [ seen_edge ])
                (reg:DI 692 [ D.3802 ])) [4 *_689+0 S8 A64])
        (reg:DI 1874)) verify.c:148 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1798)
        (nil)))
;;  succ:       248 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 248, loop depth 2, count 0, freq 63, maybe hot
;;  prev block 247, next block 249, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       247 [100.0%]  (FALLTHRU)
;;              246 [72.0%]  (FALLTHRU)
;;              283 [28.0%]  (FALLTHRU)
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u3571(29){ }u3572(31){ }u3573(64){ }u3574(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 688 692 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 668 688 692
;; lr  def 	 66 [cc] 1799 1800 1801 1802
;; live  in  	 610 623 624 647 668 688 692 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 1799 1800 1801 1802
;; live  kill	
(code_label 3552 3551 3553 248 169 "" [0 uses])
(note 3553 3552 3554 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3554 3553 3555 248 (var_location:DI lvldiff (minus:DI (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [0 *_690+0 S8 A64])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [0 *_692+0 S8 A64]))) verify.c:150 -1
     (nil))
(insn 3555 3554 3556 248 (set (reg:DI 1800 [ *_690 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 688 [ D.3802 ])) [4 *_690+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 688 [ D.3802 ])
        (nil)))
(insn 3556 3555 3557 248 (set (reg:DI 1801 [ *_692 ])
        (mem:DI (plus:DI (reg/v/f:DI 668 [ level ])
                (reg:DI 692 [ D.3802 ])) [4 *_692+0 S8 A64])) verify.c:152 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 692 [ D.3802 ])
        (nil)))
(insn 3557 3556 3558 248 (set (reg:DI 1799 [ lvldiff ])
        (minus:DI (reg:DI 1800 [ *_690 ])
            (reg:DI 1801 [ *_692 ]))) verify.c:152 264 {subdi3}
     (expr_list:REG_DEAD (reg:DI 1801 [ *_692 ])
        (expr_list:REG_DEAD (reg:DI 1800 [ *_690 ])
            (nil))))
(insn 3558 3557 3559 248 (set (reg:DI 1802 [ D.3810 ])
        (plus:DI (reg:DI 1799 [ lvldiff ])
            (const_int 1 [0x1]))) verify.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1799 [ lvldiff ])
        (nil)))
(insn 3559 3558 3560 248 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1802 [ D.3810 ])
            (const_int 2 [0x2]))) verify.c:152 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1802 [ D.3810 ])
        (nil)))
(jump_insn 3560 3559 3561 248 (set (pc)
        (if_then_else (gtu (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4024)
            (pc))) verify.c:152 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 4024)
;;  succ:       250 [50.0%] 
;;              249 [50.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 249, loop depth 2, count 0, freq 32
;;  prev block 248, next block 250, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       248 [50.0%]  (FALLTHRU)
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u3588(29){ }u3589(31){ }u3590(64){ }u3591(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1872
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
(note 3561 3560 4354 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 4354 3561 251 249 (set (reg/v:SI 716 [ err ])
        (reg:SI 1872 [ err ])) verify.c:152 -1
     (nil))
(insn 251 4354 4024 249 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:152 47 {*movsi_aarch64}
     (nil))
;;  succ:       251 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 250, loop depth 2, count 0, freq 32
;;  prev block 249, next block 251, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       248 [50.0%] 
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u3602(29){ }u3603(31){ }u3604(64){ }u3605(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1873
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
(code_label 4024 251 4023 250 208 "" [1 uses])
(note 4023 4024 4353 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 4353 4023 253 250 (set (reg/v:SI 716 [ err ])
        (reg:SI 1873 [ err ])) verify.c:153 -1
     (nil))
(insn 253 4353 3562 250 (set (reg/v:SI 715 [ err ])
        (reg:SI 1873 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (expr_list:REG_EQUAL (const_int -14 [0xfffffffffffffff2])
        (nil)))
;;  succ:       251 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 251, loop depth 2, count 0, freq 695, maybe hot
;;  prev block 250, next block 296, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       249 [100.0%]  (FALLTHRU)
;;              238 [50.0%] 
;;              282 [100.0%]  (FALLTHRU)
;;              285 [100.0%]  (FALLTHRU)
;;              250 [100.0%]  (FALLTHRU)
;;              272 [100.0%]  (FALLTHRU)
;;              241
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u3607(29){ }u3608(31){ }u3609(64){ }u3610(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 708 720
;; lr  def 	 66 [cc] 708
;; live  in  	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 708
;; live  kill	
(code_label 3562 253 3563 251 161 "" [2 uses])
(note 3563 3562 3568 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3568 3563 3569 251 (var_location:SI terr (reg/v:SI 716 [ err ])) -1
     (nil))
(debug_insn 3569 3568 3570 251 (var_location:DI k (debug_expr:DI D#42)) -1
     (nil))
(debug_insn 3570 3569 3571 251 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3571 3570 3572 251 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3572 3571 3574 251 (set (reg:DI 708 [ ivtmp.64 ])
        (plus:DI (reg:DI 708 [ ivtmp.64 ])
            (const_int 16 [0x10]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3574 3572 3575 251 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 708 [ ivtmp.64 ])
            (reg:DI 720 [ D.3810 ]))) verify.c:117 391 {*cmpdi}
     (nil))
(jump_insn 3575 3574 4340 251 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4340)
            (pc))) verify.c:117 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4340)
;;  succ:       296 [91.0%]  (DFS_BACK)
;;              252 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 296, loop depth 2, count 0, freq 632, maybe hot
;;  prev block 251, next block 252, flags: (NEW, RTL, MODIFIED)
;;  pred:       251 [91.0%]  (DFS_BACK)
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	
;; live  kill	
(code_label 4340 3575 4339 296 279 "" [1 uses])
(note 4339 4340 3576 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
;;  succ:       238 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 252, loop depth 1, count 0, freq 63, maybe hot
;;  prev block 296, next block 253, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       251 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u3618(29){ }u3619(31){ }u3620(64){ }u3621(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 716 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 716
;; lr  def 	 66 [cc]
;; live  in  	 610 624 647 715 716 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3576 4339 3577 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 3577 3576 3578 252 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 716 [ err ])
            (const_int 0 [0]))) verify.c:157 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 716 [ err ])
        (nil)))
(jump_insn 3578 3577 3579 252 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:157 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5495 (nil)))
 -> 3626)
;;  succ:       253 [45.0%]  (FALLTHRU)
;;              260 [55.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861

;; basic block 253, loop depth 1, count 0, freq 29
;;  prev block 252, next block 254, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       252 [45.0%]  (FALLTHRU)
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u3624(29){ }u3625(31){ }u3626(64){ }u3627(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1861
;; lr  def 	 66 [cc]
;; live  in  	 610 624 647 715 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3579 3578 3580 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3580 3579 3581 253 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3581 3580 3582 253 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3582 3581 3583 253 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:160 391 {*cmpdi}
     (nil))
(jump_insn 3583 3582 3916 253 (set (pc)
        (if_then_else (le (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3626)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 3626)
;;  succ:       254 [91.0%]  (FALLTHRU)
;;              260 [9.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861

;; basic block 254, loop depth 1, count 0, freq 32
;;  prev block 253, next block 255, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       287 [91.0%] 
;;              253 [91.0%]  (FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u3635(29){ }u3636(31){ }u3637(64){ }u3638(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 436 1869 1870 1871
;; live  in  	 610 624 647 715 746 777 811 1710 1861
;; live  gen 	 436 1869 1870 1871
;; live  kill	
(code_label 3916 3583 3584 254 192 "" [1 uses])
(note 3584 3916 258 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 258 3584 4321 254 (set (reg/v:DI 436 [ k ])
        (const_int 0 [0])) verify.c:160 48 {*movdi_aarch64}
     (nil))
(insn 4321 258 4322 254 (set (reg:SI 1869)
        (const_int -15 [0xfffffffffffffff1])) verify.c:163 47 {*movsi_aarch64}
     (nil))
(insn 4322 4321 4328 254 (set (reg:SI 1870)
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
(insn 4328 4322 3623 254 (set (reg:SI 1871)
        (const_int -16 [0xfffffffffffffff0])) verify.c:166 47 {*movsi_aarch64}
     (nil))
;;  succ:       255 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 255, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 254, next block 256, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       254 [100.0%]  (FALLTHRU)
;;              295 [100.0%]  (FALLTHRU)
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u3640(29){ }u3641(31){ }u3642(64){ }u3643(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 624 715
;; lr  def 	 66 [cc] 1804 1805
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 1804 1805
;; live  kill	
(code_label 3623 4328 3586 255 175 "" [0 uses])
(note 3586 3623 3587 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3587 3586 3588 255 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
(debug_insn 3588 3587 3589 255 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3589 3588 3590 255 (var_location:SI terr (reg/v:SI 715 [ err ])) verify.c:161 -1
     (nil))
(insn 3590 3589 3591 255 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (nil))
(insn 3591 3590 3592 255 (set (reg:CC_DNE 66 cc)
        (compare (and:SI (ne (reg:CC_DEQ 66 cc)
                    (const_int 0 [0]))
                (ne (reg/v:DI 436 [ k ])
                    (reg:DI 624 [ D.3798 ])))
            (const_int 0 [0]))) verify.c:162 4 {ccmp_anddi}
     (nil))
(insn 3592 3591 3594 255 (set:SI (reg:SI 1804)
        (ne:SI (reg:CC_DNE 66 cc)
            (const_int 0 [0]))) verify.c:162 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DNE 66 cc)
        (nil)))
(insn 3594 3592 3595 255 (set (reg:SI 1805 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1804) 0))) verify.c:162 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1804)
        (nil)))
(insn 3595 3594 3596 255 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1805 [ D.3813 ])
            (const_int 0 [0]))) verify.c:162 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1805 [ D.3813 ])
        (nil)))
(jump_insn 3596 3595 3597 255 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3616)
            (pc))) verify.c:162 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 3616)
;;  succ:       256 [50.0%]  (FALLTHRU)
;;              259 [50.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 256, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 255, next block 257, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       255 [50.0%]  (FALLTHRU)
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u3656(29){ }u3657(31){ }u3658(64){ }u3659(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 647
;; lr  def 	 66 [cc] 710
;; live  in  	 436 610 624 647 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 710
;; live  kill	
(note 3597 3596 3599 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 3599 3597 3600 256 (set (reg:DI 710 [ D.3798 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 MEM[base: bfs_tree_622, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
(insn 3600 3599 3601 256 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 710 [ D.3798 ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
(jump_insn 3601 3600 3602 256 (set (pc)
        (if_then_else (lt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4029)
            (pc))) verify.c:163 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2700 (nil)))
 -> 4029)
;;  succ:       257 [73.0%]  (FALLTHRU)
;;              258 [27.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 710 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 710 746 777 811 1710 1861 1869 1870 1871

;; basic block 257, loop depth 2, count 0, freq 127, maybe hot
;;  prev block 256, next block 258, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       256 [73.0%]  (FALLTHRU)
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u3665(29){ }u3666(31){ }u3667(64){ }u3668(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 710 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 710 746 1869 1870 1871
;; lr  def 	 66 [cc] 715 1806 1865 1866 1868
;; live  in  	 436 610 624 647 710 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 715 1806 1865 1866 1868
;; live  kill	
(note 3602 3601 3603 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 3603 3602 3604 257 (set (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 436 [ k ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 746 [ seen_edge ])) [4 MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B]+0 S8 A64])) verify.c:163 48 {*movdi_aarch64}
     (nil))
(insn 3604 3603 4349 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
        (nil)))
(insn 4349 3604 4350 257 (set (reg:SI 1865)
        (reg:SI 1869)) verify.c:163 -1
     (nil))
(insn 4350 4349 4323 257 (set (reg:SI 1866)
        (reg:SI 1870)) verify.c:163 -1
     (nil))
(insn 4323 4350 4324 257 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1806 [ MEM[base: seen_edge_794, index: _1276, step: 8, offset: 0B] ])
            (const_int 0 [0]))) verify.c:163 391 {*cmpdi}
     (nil))
(insn 4324 4323 3609 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg:SI 1869)
            (reg:SI 1870))) verify.c:163 442 {*cmovsi_insn}
     (nil))
(debug_insn 3609 4324 3610 257 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3610 3609 4351 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:165 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 710 [ D.3798 ])
        (nil)))
(insn 4351 3610 4329 257 (set (reg:SI 1868)
        (reg:SI 1871)) verify.c:166 -1
     (nil))
(insn 4329 4351 4330 257 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 710 [ D.3798 ]))) verify.c:166 391 {*cmpdi}
     (nil))
(insn 4330 4329 4029 257 (set (reg/v:SI 715 [ err ])
        (if_then_else:SI (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (reg/v:SI 715 [ err ])
            (reg:SI 1871))) verify.c:166 442 {*cmovsi_insn}
     (nil))
;;  succ:       259 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 258, loop depth 2, count 0, freq 47, maybe hot
;;  prev block 257, next block 259, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       256 [27.0%] 
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u3689(29){ }u3690(31){ }u3691(64){ }u3692(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 436 610 624 647 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 715
;; live  kill	
(code_label 4029 4330 4028 258 209 "" [1 uses])
(note 4028 4029 261 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 261 4028 3615 258 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:163 47 {*movsi_aarch64}
     (nil))
(debug_insn 3615 261 3616 258 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
;;  succ:       259 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 259, loop depth 2, count 0, freq 347, maybe hot
;;  prev block 258, next block 295, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       255 [50.0%] 
;;              258 [100.0%]  (FALLTHRU)
;;              257 [100.0%]  (FALLTHRU)
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u3698(29){ }u3699(31){ }u3700(64){ }u3701(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 1861
;; lr  def 	 66 [cc] 436
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	 66 [cc] 436
;; live  kill	
(code_label 3616 3615 3617 259 172 "" [1 uses])
(note 3617 3616 3618 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3618 3617 3619 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3619 3618 3621 259 (set (reg/v:DI 436 [ k ])
        (plus:DI (reg/v:DI 436 [ k ])
            (const_int 1 [0x1]))) verify.c:160 95 {*adddi3_aarch64}
     (nil))
(debug_insn 3621 3619 3622 259 (var_location:DI k (reg/v:DI 436 [ k ])) -1
     (nil))
(debug_insn 3622 3621 3624 259 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 3624 3622 3625 259 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 436 [ k ])
            (reg:DI 1861 [ D.3798 ]))) verify.c:160 391 {*cmpdi}
     (nil))
(jump_insn 3625 3624 4338 259 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4338)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 4338)
;;  succ:       295 [91.0%]  (DFS_BACK)
;;              260 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 295, loop depth 2, count 0, freq 316, maybe hot
;;  prev block 259, next block 260, flags: (NEW, RTL, MODIFIED)
;;  pred:       259 [91.0%]  (DFS_BACK)
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871
;; live  gen 	
;; live  kill	
(code_label 4338 3625 4337 295 278 "" [1 uses])
(note 4337 4338 3626 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
;;  succ:       255 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 436 610 624 647 715 746 777 811 1710 1853 1854 1859 1861 1869 1870 1871
;; live  out 	 436 610 624 647 715 746 777 811 1710 1861 1869 1870 1871

;; basic block 260, loop depth 1, count 0, freq 67, maybe hot
;;  prev block 295, next block 261, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       259 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              252 [55.0%] 
;;              253 [9.0%] 
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u3709(29){ }u3710(31){ }u3711(64){ }u3712(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 715 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 610 647 715 746 777 811 1710
;; live  gen 	 0 [x0] 66 [cc]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3626 4337 3627 260 171 ("done") [2 uses])
(note 3627 3626 3628 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3628 3627 3629 260 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) -1
     (nil))
(debug_insn 3629 3628 3630 260 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3630 3629 3631 260 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3631 3630 3632 260 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
(call_insn 3632 3631 3633 260 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3633 3632 3634 260 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 3634 3633 3635 260 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:175 390 {*cmpsi}
     (nil))
(jump_insn 3635 3634 3820 260 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3667)
            (pc))) verify.c:175 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3667)
;;  succ:       261 (FALLTHRU)
;;              263 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 715 777 811 1710 1853 1854 1859
;; live  out 	 610 647 715 777 811 1710

;; basic block 261, loop depth 1, count 0, freq 54, maybe hot
;;  prev block 260, next block 262, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       260 (FALLTHRU)
;;              273 [100.0%]  (FALLTHRU)
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u3721(29){ }u3722(31){ }u3723(64){ }u3724(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715 811 1616
;; lr  def 	 66 [cc] 712 1807 1808 1810 1812 1860
;; live  in  	 647 715 777 811 1710
;; live  gen 	 66 [cc] 712 1807 1808 1810 1812 1860
;; live  kill	
(code_label 3820 3635 3636 261 183 "" [0 uses])
(note 3636 3820 3637 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3637 3636 3638 261 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3638 3637 3639 261 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3639 3638 3640 261 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 3640 3639 3641 261 (set (reg:DI 712 [ D.3798 ])
        (sign_extend:DI (reg/v:SI 715 [ err ]))) verify.c:175 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 715 [ err ])
        (nil)))
(debug_insn 3641 3640 3642 261 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3642 3641 3643 261 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3643 3642 3644 261 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3644 3643 3645 261 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3645 3644 3646 261 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3646 3645 3647 261 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3647 3646 3648 261 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3648 3647 3649 261 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3649 3648 3650 261 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3650 3649 3651 261 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3651 3650 3652 261 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3652 3651 3653 261 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3653 3652 3654 261 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3654 3653 3655 261 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3655 3654 3656 261 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 3656 3655 3657 261 (set (reg/f:DI 1808)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3657 3656 3658 261 (set (reg/f:DI 1807)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1808))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1808)
        (nil)))
(insn 3658 3657 4366 261 (set (mem:DI (reg/f:DI 1807) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 712 [ D.3798 ])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1807)
        (nil)))
(insn 4366 3658 3661 261 (set (reg/f:DI 1810)
        (reg/f:DI 1616)) graph500.c:205 -1
     (nil))
(insn 3661 4366 3662 261 (set (reg:SI 1812 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1810)
        (nil)))
(insn 3662 3661 3663 261 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1812 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1812 [ VERBOSE ])
        (nil)))
(jump_insn 3663 3662 4259 261 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3696)
;;  succ:       264 [100.0%] 
;;              262 (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860

;; basic block 262, loop depth 0, count 0, freq 0
;;  prev block 261, next block 263, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       261 (FALLTHRU,LOOP_EXIT)
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853
;; live  gen 	 1856
;; live  kill	
(note 4259 3663 4203 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 4203 4259 3667 262 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) -1
     (nil))
;;  succ:       265 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856

;; basic block 263, loop depth 1, count 0, freq 84, maybe hot
;;  prev block 262, next block 264, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       260 [100.0%] 
;;              286 [100.0%]  (FALLTHRU)
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u3736(29){ }u3737(31){ }u3738(64){ }u3739(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 811 1616
;; lr  def 	 66 [cc] 1813 1814 1816 1817 1819 1860
;; live  in  	 610 647 777 811 1710
;; live  gen 	 66 [cc] 1813 1814 1816 1817 1819 1860
;; live  kill	
(code_label 3667 4203 3668 263 176 "" [1 uses])
(note 3668 3667 3671 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3671 3668 3672 263 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(debug_insn 3672 3671 3673 263 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3673 3672 3674 263 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3674 3673 3675 263 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3675 3674 3676 263 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3676 3675 3677 263 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3677 3676 3678 263 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3678 3677 3679 263 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3679 3678 3680 263 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3680 3679 3681 263 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3681 3680 3682 263 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3682 3681 3683 263 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3683 3682 3684 263 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3684 3683 3685 263 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3685 3684 3686 263 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3686 3685 3687 263 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 3687 3686 3688 263 (set (reg/f:DI 1814)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3688 3687 3689 263 (set (reg/f:DI 1813)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1814))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1814)
        (nil)))
(insn 3689 3688 3690 263 (set (reg:DI 1816 [ nedge_traversed ])
        (sign_extend:DI (reg/v:SI 610 [ nedge_traversed ]))) graph500.c:204 80 {*extendsidi2_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 610 [ nedge_traversed ])
        (nil)))
(insn 3690 3689 4367 263 (set (mem:DI (reg/f:DI 1813) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1816 [ nedge_traversed ])) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1816 [ nedge_traversed ])
        (expr_list:REG_DEAD (reg/f:DI 1813)
            (nil))))
(insn 4367 3690 3693 263 (set (reg/f:DI 1817)
        (reg/f:DI 1616)) graph500.c:205 -1
     (nil))
(insn 3693 4367 3694 263 (set (reg:SI 1819 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1817)
        (nil)))
(insn 3694 3693 3695 263 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1819 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1819 [ VERBOSE ])
        (nil)))
(jump_insn 3695 3694 3696 263 (set (pc)
        (if_then_else (eq (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3739)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3739)
;;  succ:       264 (FALLTHRU)
;;              266 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860

;; basic block 264, loop depth 1, count 0, freq 100, maybe hot
;;  prev block 263, next block 265, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       263 (FALLTHRU)
;;              288 [99.8%] 
;;              261 [100.0%] 
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u3750(29){ }u3751(31){ }u3752(64){ }u3753(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1860
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 712 1820 1821 1822 1824 1825 1826 1856
;; live  in  	 647 777 811 1710 1860
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 66 [cc] 712 1820 1821 1822 1824 1825 1826 1856
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3696 3695 3697 264 177 "" [2 uses])
(note 3697 3696 3698 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3698 3697 3699 264 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:205 -1
     (nil))
(debug_insn 3699 3698 3700 264 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)) graph500.c:205 -1
     (nil))
(insn 3700 3699 3701 264 (set (reg/f:DI 1821)
        (high:DI (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 3701 3700 3702 264 (set (reg/f:DI 1820)
        (lo_sum:DI (reg/f:DI 1821)
            (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1821)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
(insn 3702 3701 3703 264 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 48 {*movdi_aarch64}
     (nil))
(insn 3703 3702 3704 264 (set (reg/f:DI 1822)
        (lo_sum:DI (reg/f:DI 1856)
            (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:205 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)
        (nil)))
(insn 3704 3703 3705 264 (set (reg/f:DI 1824 [ stderr ])
        (mem/f/c:DI (reg/f:DI 1822) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1822)
        (nil)))
(insn 3705 3704 3706 264 (set (reg:DI 2 x2)
        (reg/f:DI 1820)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1820)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC55") [flags 0x82]  <var_decl 0x7f3c5d8816c0 *.LC55>)
            (nil))))
(insn 3706 3705 3707 264 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 3707 3706 3708 264 (set (reg:DI 0 x0)
        (reg/f:DI 1824 [ stderr ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1824 [ stderr ])
        (nil)))
(call_insn 3708 3707 3710 264 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(insn 3710 3708 3711 264 (set (reg/f:DI 1826)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1860)
        (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
            (nil))))
(insn 3711 3710 3712 264 (set (reg/f:DI 1825)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1826))) 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1826)
        (expr_list:REG_DEAD (reg:DI 811 [ D.3805 ])
            (nil))))
(insn 3712 3711 3713 264 (set (reg:DI 712 [ D.3798 ])
        (mem:DI (reg/f:DI 1825) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1825)
        (nil)))
(insn 3713 3712 3714 264 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 712 [ D.3798 ])
            (const_int 0 [0]))) graph500.c:206 391 {*cmpdi}
     (nil))
(jump_insn 3714 3713 3715 264 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3739)
            (pc))) graph500.c:206 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3739)
;;  succ:       265 (FALLTHRU,LOOP_EXIT)
;;              266 [100.0%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1710 1853 1854 1859
;; live  out 	 647 777 1710

;; basic block 265, loop depth 0, count 0, freq 0
;;  prev block 264, next block 266, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       264 (FALLTHRU,LOOP_EXIT)
;;              262 [100.0%]  (FALLTHRU)
;;              289 [100.0%]  (FALLTHRU)
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u3769(29){ }u3770(31){ }u3771(64){ }u3772(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 1828 1831 1832 1833 1834
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 1828 1831 1832 1833 1834
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3715 3714 3716 265 178 "" [0 uses])
(note 3716 3715 3717 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3717 3716 3718 265 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:207 -1
     (nil))
(debug_insn 3718 3717 3720 265 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)) graph500.c:207 -1
     (nil))
(insn 3720 3718 3722 265 (set (reg/f:DI 1828)
        (lo_sum:DI (reg/f:DI 1853)
            (symbol_ref:DI ("*.LANCHOR0") [flags 0x182]))) graph500.c:207 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1853)
        (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
            (nil))))
(insn 3722 3720 3723 265 (set (reg/f:DI 1831)
        (plus:DI (reg/f:DI 1828)
            (const_int 112 [0x70]))) graph500.c:207 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1828)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref:DI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70])))
            (nil))))
(insn 3723 3722 3724 265 (set (reg:DI 1832 [ m ])
        (sign_extend:DI (reg/v:SI 752 [ m ]))) graph500.c:207 80 {*extendsidi2_aarch64}
     (nil))
(insn 3724 3723 3725 265 (set (reg/f:DI 1834)
        (high:DI (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 3725 3724 3728 265 (set (reg/f:DI 1833)
        (lo_sum:DI (reg/f:DI 1834)
            (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 1834)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)
            (nil))))
(insn 3728 3725 3729 265 (set (reg:DI 5 x5)
        (reg:DI 712 [ D.3798 ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 712 [ D.3798 ])
        (nil)))
(insn 3729 3728 3730 265 (set (reg:DI 4 x4)
        (mem:DI (plus:DI (mult:DI (reg:DI 1832 [ m ])
                    (const_int 8 [0x8]))
                (reg/f:DI 1831)) [4 bfs_root S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1832 [ m ])
        (expr_list:REG_DEAD (reg/f:DI 1831)
            (nil))))
(insn 3730 3729 3731 265 (set (reg:SI 3 x3)
        (reg/v:SI 752 [ m ])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/v:SI 752 [ m ])
        (nil)))
(insn 3731 3730 3732 265 (set (reg:DI 2 x2)
        (reg/f:DI 1833)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1833)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC65") [flags 0x82]  <var_decl 0x7f3c5d881c60 *.LC65>)
            (nil))))
(insn 3732 3731 3733 265 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 3733 3732 3734 265 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 1856)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1856)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 3734 3733 3735 265 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 5 x5)
        (expr_list:REG_DEAD (reg:DI 4 x4)
            (expr_list:REG_DEAD (reg:SI 3 x3)
                (expr_list:REG_DEAD (reg:DI 2 x2)
                    (expr_list:REG_DEAD (reg:SI 1 x1)
                        (expr_list:REG_UNUSED (reg:SI 0 x0)
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                                (nil))))))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (expr_list:SI (use (reg:SI 3 x3))
                            (expr_list:DI (use (reg:DI 4 x4))
                                (expr_list:DI (use (reg:DI 5 x5))
                                    (nil))))))))))
(debug_insn 3735 3734 3736 265 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:207 -1
     (nil))
(debug_insn 3736 3735 3737 265 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:207 -1
     (nil))
(call_insn 3737 3736 3739 265 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:209 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 266, loop depth 1, count 0, freq 184, maybe hot
;;  prev block 265, next block 294, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       264 [100.0%] 
;;              263 [100.0%] 
;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u3792(29){ }u3793(31){ }u3794(64){ }u3795(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 1854
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 732 777 1837 1839
;; live  in  	 647 777 1710
;; live  gen 	 0 [x0] 66 [cc] 732 777 1837 1839
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3739 3737 3740 266 179 "" [2 uses])
(note 3740 3739 3741 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3741 3740 3742 266 (var_location:DI p (reg/v/f:DI 647 [ bfs_tree ])) -1
     (nil))
(insn 3742 3741 3743 266 (set (reg:DI 0 x0)
        (reg/v/f:DI 647 [ bfs_tree ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 647 [ bfs_tree ])
        (nil)))
(call_insn 3743 3742 3744 266 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3744 3743 3745 266 (var_location:DI p (clobber (const_int 0 [0]))) graph500.c:212 -1
     (nil))
(insn 3745 3744 3747 266 (set (reg:SI 732 [ D.3797 ])
        (plus:SI (subreg:SI (reg:DI 777 [ ivtmp.94 ]) 0)
            (const_int 1 [0x1]))) 94 {*addsi3_aarch64}
     (nil))
(debug_insn 3747 3745 3748 266 (var_location:SI m (reg:SI 732 [ D.3797 ])) -1
     (nil))
(insn 3748 3747 3751 266 (set (reg:DI 777 [ ivtmp.94 ])
        (plus:DI (reg:DI 777 [ ivtmp.94 ])
            (const_int 1 [0x1]))) 95 {*adddi3_aarch64}
     (nil))
(insn 3751 3748 3752 266 (set (reg/f:DI 1837)
        (lo_sum:DI (reg/f:DI 1854)
            (symbol_ref:DI ("*.LANCHOR1") [flags 0x182]))) graph500.c:187 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("*.LANCHOR1") [flags 0x182])
        (nil)))
(insn 3752 3751 3753 266 (set (reg:SI 1839 [ NBFS ])
        (mem/c:SI (plus:DI (reg/f:DI 1837)
                (const_int 48 [0x30])) [3 NBFS+0 S4 A32])) graph500.c:187 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1837)
        (nil)))
(insn 3753 3752 3754 266 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1839 [ NBFS ])
            (reg:SI 732 [ D.3797 ]))) graph500.c:187 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1839 [ NBFS ])
        (expr_list:REG_DEAD (reg:SI 732 [ D.3797 ])
            (nil))))
(jump_insn 3754 3753 4336 266 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 4336)
            (pc))) graph500.c:187 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9775 (nil)))
 -> 4336)
;;  succ:       294 [97.8%]  (DFS_BACK)
;;              174 [2.2%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  out 	 777 1710

;; basic block 294, loop depth 1, count 0, freq 180, maybe hot
;;  prev block 266, next block 267, flags: (NEW, RTL, MODIFIED)
;;  pred:       266 [97.8%]  (DFS_BACK)
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(29){ }u-1(31){ }u-1(64){ }u-1(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	
;; live  in  	 777 1710
;; live  gen 	
;; live  kill	
(code_label 4336 3754 4335 294 277 "" [1 uses])
(note 4335 4336 3766 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
;;  succ:       292 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 777 1710 1853 1854 1859
;; live  out 	 777 1710

;; basic block 267, loop depth 0, count 0, freq 21
;;  prev block 294, next block 268, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [50.0%] 
;;              76
;;              74 [30.2%] 
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u3813(29){ }u3814(31){ }u3815(64){ }u3816(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1710 1853 1854
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 416
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 1853 1854
;; live  gen 	 416
;; live  kill	
(code_label 3766 4335 3767 267 62 "" [3 uses])
(note 3767 3766 3768 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3768 3767 194 267 (var_location:DI seed (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(insn 194 3768 4004 267 (set (reg/v:DI 416 [ seed ])
        (const_int 3737844653 [0xdecafbad])) prng.c:36 48 {*movdi_aarch64}
     (nil))
;;  succ:       77 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1710 1853 1854
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 243 416 1853 1854

;; basic block 268, loop depth 2, count 0, freq 225, maybe hot
;;  prev block 267, next block 269, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       217 [2.4%]  (LOOP_EXIT)
;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u3817(29){ }u3818(31){ }u3819(64){ }u3820(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 623 624 625 626 647 668 672 745 746 777 811 1710 1861
;; live  gen 	 715
;; live  kill	
(code_label 4004 194 4003 268 202 "" [1 uses])
(note 4003 4004 268 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 268 4003 4008 268 (set (reg/v:SI 715 [ err ])
        (const_int -2 [0xfffffffffffffffe])) verify.c:44 47 {*movsi_aarch64}
     (nil))
;;  succ:       234 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 269, loop depth 2, count 0, freq 152, maybe hot
;;  prev block 268, next block 270, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       219 [31.5%] 
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u3821(29){ }u3822(31){ }u3823(64){ }u3824(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 745 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 623 624 625 626 647 668 672 745 746 777 811 1710 1861
;; live  gen 	 715
;; live  kill	
(code_label 4008 268 4007 269 203 "" [1 uses])
(note 4007 4008 269 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 269 4007 3779 269 (set (reg/v:SI 715 [ err ])
        (const_int -1 [0xffffffffffffffff])) verify.c:46 47 {*movsi_aarch64}
     (nil))
(debug_insn 3779 269 3782 269 (var_location:SI terr (const_int -1 [0xffffffffffffffff])) -1
     (nil))
;;  succ:       234 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 672 715 745 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 672 715 745 746 777 811 1710 1861

;; basic block 270, loop depth 2, count 0, freq 174, maybe hot
;;  prev block 269, next block 271, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       239 [50.0%] 
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u3826(29){ }u3827(31){ }u3828(64){ }u3829(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 674 675
;; lr  def 	 66 [cc] 715 1842 1843 1867
;; live  in  	 610 623 624 647 668 674 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 715 1842 1843 1867
;; live  kill	
(code_label 3782 3779 3783 270 162 "" [1 uses])
(note 3783 3782 3785 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3785 3783 3786 270 (var_location:SI terr (const_int -10 [0xfffffffffffffff6])) -1
     (nil))
(insn 3786 3785 3787 270 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 623 [ D.3798 ])
            (reg/v:DI 675 [ j ]))) verify.c:125 391 {*cmpdi}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
(insn 3787 3786 3788 270 (set (reg:CC_DGE 66 cc)
        (compare (and:SI (ne (reg:CC_DLT 66 cc)
                    (const_int 0 [0]))
                (ge (reg:DI 623 [ D.3798 ])
                    (reg/v:DI 674 [ i ])))
            (const_int 0 [0]))) verify.c:125 4 {ccmp_anddi}
     (expr_list:REG_DEAD (reg/v:DI 674 [ i ])
        (nil)))
(insn 3788 3787 3790 270 (set:SI (reg:SI 1842)
        (ne:SI (reg:CC_DGE 66 cc)
            (const_int 0 [0]))) verify.c:125 428 {aarch64_cstoresi}
     (expr_list:REG_DEAD (reg:CC_DGE 66 cc)
        (nil)))
(insn 3790 3788 3791 270 (set (reg:SI 1843 [ D.3813 ])
        (zero_extend:SI (subreg:QI (reg:SI 1842) 0))) verify.c:125 88 {*zero_extendqisi2_aarch64}
     (expr_list:REG_DEAD (reg:SI 1842)
        (nil)))
(insn 3791 3790 4325 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:125 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1843 [ D.3813 ])
        (nil)))
(insn 4325 3791 4326 270 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1843 [ D.3813 ])
            (const_int 0 [0]))) verify.c:124 390 {*cmpsi}
     (nil))
(insn 4326 4325 4327 270 (set (reg:SI 1867)
        (eq:SI (reg:CC 66 cc)
            (const_int 0 [0]))) verify.c:124 428 {aarch64_cstoresi}
     (nil))
(insn 4327 4326 4020 270 (set (reg/v:SI 715 [ err ])
        (plus:SI (reg:SI 1867)
            (const_int -11 [0xfffffffffffffff5]))) verify.c:124 94 {*addsi3_aarch64}
     (nil))
;;  succ:       282 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 271, loop depth 2, count 0, freq 34
;;  prev block 270, next block 272, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       243 [27.0%] 
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u3844(29){ }u3845(31){ }u3846(64){ }u3847(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715
;; live  kill	
(code_label 4020 4327 4019 271 207 "" [1 uses])
(note 4019 4020 270 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 270 4019 3796 271 (set (reg/v:SI 715 [ err ])
        (const_int -12 [0xfffffffffffffff4])) verify.c:131 47 {*movsi_aarch64}
     (nil))
;;  succ:       272 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 272, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 271, next block 273, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       284 [100.0%] 
;;              271 [100.0%]  (FALLTHRU)
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u3852(29){ }u3853(31){ }u3854(64){ }u3855(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 716
;; live  kill	
(code_label 3796 270 3797 272 165 "" [1 uses])
(note 3797 3796 3798 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3798 3797 3800 272 (var_location:SI terr (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3800 3798 254 272 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 254 3800 3868 272 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;;  succ:       251 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 273, loop depth 1, count 0, freq 69, maybe hot
;;  prev block 272, next block 274, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       280 [53.3%] 
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u3859(29){ }u3860(31){ }u3861(64){ }u3862(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;; live  in  	 647 715 746 777 811 1710
;; live  gen 	 0 [x0]
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(code_label 3868 254 3803 273 188 "" [1 uses])
(note 3803 3868 3804 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3804 3803 3805 273 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3805 3804 3806 273 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3806 3805 3807 273 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3807 3806 3808 273 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3808 3807 3809 273 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3809 3808 3810 273 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3810 3809 3811 273 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3811 3810 3812 273 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3812 3811 3814 273 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3814 3812 3815 273 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3815 3814 3816 273 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(debug_insn 3816 3815 3817 273 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3817 3816 3818 273 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
(call_insn 3818 3817 3819 273 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3819 3818 3985 273 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
;;  succ:       261 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 715 777 811 1710 1853 1854 1859
;; live  out 	 647 715 777 811 1710

;; basic block 274, loop depth 2, count 0, freq 135, maybe hot
;;  prev block 273, next block 275, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 [39.0%] 
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u3868(29){ }u3869(31){ }u3870(64){ }u3871(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1897 1898
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
(code_label 3985 3819 3984 274 197 "" [1 uses])
(note 3984 3985 4389 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 4389 3984 4390 274 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:58 -1
     (nil))
(insn 4390 4389 3989 274 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1898 [ D.3798 ])) generator/graph_generator.c:58 -1
     (nil))
;;  succ:       276 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 275, loop depth 2, count 0, freq 46, maybe hot
;;  prev block 274, next block 276, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       110 [67.0%] 
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u3872(29){ }u3873(31){ }u3874(64){ }u3875(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1897 1900
;; lr  def 	 828 829
;; live  in  	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 828 829
;; live  kill	
(code_label 3989 4390 3988 275 198 "" [1 uses])
(note 3988 3989 4395 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 4395 3988 4396 275 (set (reg:DI 829 [ D.3798 ])
        (reg:DI 1897 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
(insn 4396 4395 3823 275 (set (reg:DI 828 [ D.3798 ])
        (reg:DI 1900 [ D.3798 ])) generator/graph_generator.c:63 -1
     (nil))
;;  succ:       276 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 276, loop depth 2, count 0, freq 205, maybe hot
;;  prev block 275, next block 277, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       275 [100.0%]  (FALLTHRU)
;;              111 [100.0%]  (FALLTHRU)
;;              274 [100.0%]  (FALLTHRU)
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u3877(29){ }u3878(31){ }u3879(64){ }u3880(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 443 747
;; lr  def 	 66 [cc]
;; live  in  	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3823 4396 3824 276 85 "" [0 uses])
(note 3824 3823 3825 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3825 3824 3826 276 (var_location:DI st (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3826 3825 3827 276 (var_location:SI val (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3827 3826 3828 276 (var_location:SI square (clobber (const_int 0 [0]))) generator/graph_generator.c:137 -1
     (nil))
(debug_insn 3828 3827 3829 276 (var_location:SI src_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:138 -1
     (nil))
(debug_insn 3829 3828 3830 276 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) generator/graph_generator.c:139 -1
     (nil))
(insn 3830 3829 3831 276 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 443 [ base_tgt ])
            (reg/v:DI 747 [ base_src ]))) generator/graph_generator.c:140 391 {*cmpdi}
     (nil))
(jump_insn 3831 3830 3832 276 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3841)
            (pc))) generator/graph_generator.c:140 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 2374 (nil)))
 -> 3841)
;;  succ:       277 [76.3%]  (FALLTHRU,LOOP_EXIT)
;;              278 [23.7%] 
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 277, loop depth 0, count 0, freq 156, maybe hot
;;  prev block 276, next block 278, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       276 [76.3%]  (FALLTHRU,LOOP_EXIT)
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u3884(29){ }u3885(31){ }u3886(64){ }u3887(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 695 714 750 751 826
;; live  gen 	
;; live  kill	
(note 3832 3831 3833 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 3833 3832 3834 277 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -8 [0xfffffffffffffff8])) [4 new_state.z5+0 S8 A64])
        (reg:DI 751 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 751 [ D.3802 ])
        (nil)))
(insn 3834 3833 3835 277 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -16 [0xfffffffffffffff0])) [4 new_state.z4+0 S8 A64])
        (reg:DI 714 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 714 [ D.3802 ])
        (nil)))
(insn 3835 3834 3836 277 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -24 [0xffffffffffffffe8])) [4 new_state.z3+0 S8 A64])
        (reg:DI 826 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 826 [ D.3802 ])
        (nil)))
(insn 3836 3835 3837 277 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -32 [0xffffffffffffffe0])) [4 new_state.z2+0 S8 A64])
        (reg:DI 695 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 695 [ D.3802 ])
        (nil)))
(insn 3837 3836 3841 277 (set (mem/c:DI (plus:DI (reg/f:DI 64 sfp)
                (const_int -40 [0xffffffffffffffd8])) [4 new_state.z1+0 S8 A64])
        (reg:DI 750 [ D.3802 ])) 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 750 [ D.3802 ])
        (nil)))
;;  succ:       114 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

;; basic block 278, loop depth 2, count 0, freq 49, maybe hot
;;  prev block 277, next block 279, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       276 [23.7%] 
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u3898(29){ }u3899(31){ }u3900(64){ }u3901(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 828 829 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 828
;; lr  def 	 442 830 831
;; live  in  	 435 442 443 576 695 714 747 750 751 826 828 829 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 442 830 831
;; live  kill	
(code_label 3841 3837 3842 278 184 "" [1 uses])
(note 3842 3841 3843 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 3843 3842 3844 278 (set (reg:DI 830 [ D.3798 ])
        (ashiftrt:DI (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) 639 {*aarch64_ashr_sisd_or_int_di3}
     (expr_list:REG_DEAD (reg/v:DI 442 [ nverts ])
        (nil)))
(insn 3844 3843 281 278 (set (reg:DI 831 [ D.3798 ])
        (mult:DI (reg:DI 828 [ D.3798 ])
            (reg:DI 830 [ D.3798 ]))) 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 828 [ D.3798 ])
        (nil)))
(insn 281 3844 3847 278 (set (reg/v:DI 442 [ nverts ])
        (reg:DI 830 [ D.3798 ])) generator/graph_generator.c:140 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 830 [ D.3798 ])
        (nil)))
;;  succ:       290 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 279, loop depth 1, count 0, freq 137, maybe hot
;;  prev block 278, next block 280, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       186 [71.0%] 
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u3906(29){ }u3907(31){ }u3908(64){ }u3909(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 618
;; lr  def 	 66 [cc]
;; live  in  	 618 647 777 811 1710
;; live  gen 	 66 [cc]
;; live  kill	
(code_label 3847 281 3848 279 130 "" [1 uses])
(note 3848 3847 3850 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 3850 3848 3851 279 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 618 [ err ])
            (const_int 0 [0]))) graph500.c:198 390 {*cmpsi}
     (expr_list:REG_DEAD (reg/v:SI 618 [ err ])
        (nil)))
(jump_insn 3851 3850 3857 279 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3849)
            (pc))) graph500.c:198 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 3849)
;;  succ:       188 [0.0%]  (LOOP_EXIT)
;;              191 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; live  out 	 647 777 811 1710

;; basic block 280, loop depth 1, count 0, freq 135, maybe hot
;;  prev block 279, next block 281, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       234 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u3912(29){ }u3913(31){ }u3914(64){ }u3915(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 715 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 66 [cc]
;; live  in  	 623 624 625 626 647 668 715 746 777 811 1710 1861
;; live  gen 	 66 [cc]
;; live  kill	
(note 3857 3851 3858 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3858 3857 3859 280 (var_location:DI level (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3859 3858 3860 280 (var_location:DI nv (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3860 3859 3861 280 (var_location:DI bfs_tree (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3861 3860 3862 280 (var_location:DI root (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3862 3861 3863 280 (var_location:DI lastlvl (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3863 3862 3864 280 (var_location:DI nhop (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3864 3863 3865 280 (var_location:DI parent (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3865 3864 3866 280 (var_location:DI k (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3866 3865 3867 280 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(debug_insn 3867 3866 3869 280 (var_location:SI err (clobber (const_int 0 [0]))) verify.c:104 -1
     (nil))
(insn 3869 3867 3870 280 (set (reg:CC 66 cc)
        (compare:CC (reg/v:SI 715 [ err ])
            (const_int 0 [0]))) verify.c:106 390 {*cmpsi}
     (nil))
(jump_insn 3870 3869 4014 280 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) verify.c:106 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 5334 (nil)))
 -> 3868)
;;  succ:       273 [53.3%] 
;;              236 [46.7%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 623 624 625 626 647 668 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 623 624 625 626 647 668 715 746 777 811 1710 1861

;; basic block 281, loop depth 2, count 0, freq 87, maybe hot
;;  prev block 280, next block 282, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       240 [50.0%] 
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u3918(29){ }u3919(31){ }u3920(64){ }u3921(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 715
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715
;; live  kill	
(code_label 4014 3870 4013 281 205 "" [1 uses])
(note 4013 4014 280 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 280 4013 3875 281 (set (reg/v:SI 715 [ err ])
        (const_int -11 [0xfffffffffffffff5])) verify.c:125 47 {*movsi_aarch64}
     (nil))
;;  succ:       282 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 282, loop depth 2, count 0, freq 261, maybe hot
;;  prev block 281, next block 283, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       281 [100.0%]  (FALLTHRU)
;;              270 [100.0%]  (FALLTHRU)
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u3926(29){ }u3927(31){ }u3928(64){ }u3929(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 715
;; lr  def 	 716
;; live  in  	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 716
;; live  kill	
(code_label 3875 280 3876 282 163 "" [0 uses])
(note 3876 3875 3877 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3877 3876 255 282 (var_location:SI err (reg/v:SI 715 [ err ])) -1
     (nil))
(insn 255 3877 3881 282 (set (reg/v:SI 716 [ err ])
        (reg/v:SI 715 [ err ])) verify.c:153 47 {*movsi_aarch64}
     (nil))
;;  succ:       251 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 283, loop depth 2, count 0, freq 93, maybe hot
;;  prev block 282, next block 284, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       243 [73.0%]  (FALLTHRU)
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u3932(29){ }u3933(31){ }u3934(64){ }u3935(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 674 675
;; lr  def 	 66 [cc] 610
;; live  in  	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 610
;; live  kill	
(note 3881 255 3883 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3883 3881 3884 283 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(debug_insn 3884 3883 3885 283 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 3885 3884 3886 283 (set (reg/v:SI 610 [ nedge_traversed ])
        (plus:SI (reg/v:SI 610 [ nedge_traversed ])
            (const_int 1 [0x1]))) verify.c:142 94 {*addsi3_aarch64}
     (nil))
(debug_insn 3886 3885 3888 283 (var_location:SI nedge_traversed (reg/v:SI 610 [ nedge_traversed ])) verify.c:142 -1
     (nil))
(insn 3888 3886 3889 283 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 674 [ i ])
            (reg/v:DI 675 [ j ]))) verify.c:144 391 {*cmpdi}
     (nil))
(jump_insn 3889 3888 3894 283 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3887)
            (pc))) verify.c:144 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 3887)
;;  succ:       244 [72.0%] 
;;              248 [28.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 674 675 688 690 692 694 708 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 284, loop depth 2, count 0, freq 47, maybe hot
;;  prev block 283, next block 285, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       242 [27.0%] 
;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u3941(29){ }u3942(31){ }u3943(64){ }u3944(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 675 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 675
;; lr  def 	 66 [cc] 715 1844
;; live  in  	 610 623 624 647 668 675 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 66 [cc] 715 1844
;; live  kill	
(code_label 3894 3889 3895 284 164 "" [1 uses])
(note 3895 3894 3896 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3896 3895 3897 284 (var_location:SI terr (const_int 0 [0])) -1
     (nil))
(insn 3897 3896 271 284 (set (reg:DI 1844 [ *_1073 ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 675 [ j ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 647 [ bfs_tree ])) [4 *_1073+0 S8 A64])) verify.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v:DI 675 [ j ])
        (nil)))
(insn 271 3897 3898 284 (set (reg/v:SI 715 [ err ])
        (const_int -13 [0xfffffffffffffff3])) verify.c:132 47 {*movsi_aarch64}
     (nil))
(insn 3898 271 3899 284 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1844 [ *_1073 ])
            (const_int 0 [0]))) verify.c:132 391 {*cmpdi}
     (expr_list:REG_DEAD (reg:DI 1844 [ *_1073 ])
        (nil)))
(jump_insn 3899 3898 3902 284 (set (pc)
        (if_then_else (ge (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3796)
            (pc))) verify.c:132 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 3796)
;;  succ:       272 [100.0%] 
;;              285 (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 285, loop depth 2, count 0, freq 0
;;  prev block 284, next block 286, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       284 (FALLTHRU)
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u3949(29){ }u3950(31){ }u3951(64){ }u3952(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1872
;; lr  def 	 715 716
;; live  in  	 610 623 624 647 668 708 720 746 777 811 1710 1861 1872 1873 1874
;; live  gen 	 715 716
;; live  kill	
(note 3902 3899 4352 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 4352 3902 249 285 (set (reg/v:SI 716 [ err ])
        (reg:SI 1872 [ err ])) verify.c:132 -1
     (nil))
(insn 249 4352 3903 285 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:132 47 {*movsi_aarch64}
     (nil))
;;  succ:       251 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 623 624 647 668 708 715 716 720 746 777 811 1710 1853 1854 1859 1861 1872 1873 1874
;; live  out 	 610 623 624 647 668 708 715 716 720 746 777 811 1710 1861 1872 1873 1874

;; basic block 286, loop depth 1, count 0, freq 1
;;  prev block 285, next block 287, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       287 [9.0%]  (FALLTHRU)
;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u3953(29){ }u3954(31){ }u3955(64){ }u3956(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 746 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 746
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 610
;; live  in  	 647 746 777 811 1710
;; live  gen 	 0 [x0] 610
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 3903 249 3904 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3904 3903 3905 286 (var_location:SI nedge_traversed (const_int 0 [0])) -1
     (nil))
(debug_insn 3905 3904 3906 286 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(debug_insn 3906 3905 3907 286 (var_location:DI p (reg/v/f:DI 746 [ seen_edge ])) -1
     (nil))
(insn 3907 3906 3908 286 (set (reg:DI 0 x0)
        (reg/v/f:DI 746 [ seen_edge ])) xalloc.c:132 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 746 [ seen_edge ])
        (nil)))
(call_insn 3908 3907 3909 286 (parallel [
            (call (mem:DI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>) [0 __builtin_free S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) xalloc.c:132 40 {*call_symbol}
     (expr_list:REG_DEAD (reg:DI 0 x0)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f3c5e24c600 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (nil)))))
(debug_insn 3909 3908 263 286 (var_location:DI p (clobber (const_int 0 [0]))) verify.c:174 -1
     (nil))
(insn 263 3909 3913 286 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) xalloc.c:132 47 {*movsi_aarch64}
     (nil))
;;  succ:       263 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 647 777 811 1710 1853 1854 1859
;; live  out 	 610 647 777 811 1710

;; basic block 287, loop depth 1, count 0, freq 6
;;  prev block 286, next block 288, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       235 [9.0%]  (FALLTHRU)
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u3961(29){ }u3962(31){ }u3963(64){ }u3964(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 624 647 746 777 811 1710 1853 1854 1859 1861
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 1861
;; lr  def 	 66 [cc] 610 715
;; live  in  	 624 647 746 777 811 1710 1861
;; live  gen 	 66 [cc] 610 715
;; live  kill	
(note 3913 263 3914 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3914 3913 3915 287 (var_location:DI k (const_int 0 [0])) -1
     (nil))
(debug_insn 3915 3914 256 287 (var_location:SI err (const_int 0 [0])) -1
     (nil))
(insn 256 3915 257 287 (set (reg/v:SI 610 [ nedge_traversed ])
        (const_int 0 [0])) verify.c:160 47 {*movsi_aarch64}
     (nil))
(insn 257 256 3917 287 (set (reg/v:SI 715 [ err ])
        (const_int 0 [0])) verify.c:160 47 {*movsi_aarch64}
     (nil))
(insn 3917 257 3918 287 (set (reg:CC 66 cc)
        (compare:CC (reg:DI 1861 [ D.3798 ])
            (const_int 0 [0]))) verify.c:160 391 {*cmpdi}
     (nil))
(jump_insn 3918 3917 3923 287 (set (pc)
        (if_then_else (gt (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 3916)
            (pc))) verify.c:160 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 3916)
;;  succ:       254 [91.0%] 
;;              286 [9.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 610 624 647 715 746 777 811 1710 1853 1854 1859 1861
;; live  out 	 610 624 647 715 746 777 811 1710 1861

;; basic block 288, loop depth 1, count 0, freq 46, maybe hot
;;  prev block 287, next block 289, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       191 [4.0%] 
;;              192 [20.8%] 
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u3967(29){ }u3968(31){ }u3969(64){ }u3970(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 811 1616
;; lr  def 	 66 [cc] 1845 1846 1848 1849 1851 1860
;; live  in  	 647 777 811 1710
;; live  gen 	 66 [cc] 1845 1846 1848 1849 1851 1860
;; live  kill	
(code_label 3923 3918 3924 288 134 "" [2 uses])
(note 3924 3923 3925 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3925 3924 3926 288 (var_location:DI bfs_tree_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3926 3925 3927 288 (var_location:DI max_bfsvtx (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3927 3926 3928 288 (var_location:DI root (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3928 3927 3929 288 (var_location:DI IJ_in (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3929 3928 3930 288 (var_location:DI nedge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3930 3929 3931 288 (var_location:DI lvldiff (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3931 3930 3932 288 (var_location:DI j (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3932 3931 3933 288 (var_location:DI i (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3933 3932 3934 288 (var_location:DI k (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3934 3933 3935 288 (var_location:DI nv (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3935 3934 3936 288 (var_location:DI level (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3936 3935 3937 288 (var_location:DI seen_edge (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3937 3936 3938 288 (var_location:SI nedge_traversed (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(debug_insn 3938 3937 3939 288 (var_location:SI err (clobber (const_int 0 [0]))) graph500.c:204 -1
     (nil))
(insn 3939 3938 3940 288 (set (reg/f:DI 1860)
        (high:DI (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 3940 3939 3941 288 (set (reg/f:DI 1846)
        (lo_sum:DI (reg/f:DI 1860)
            (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>))) graph500.c:204 836 {add_losym_di}
     (expr_list:REG_EQUAL (symbol_ref:DI ("bfs_nedge.lto_priv.15") [flags 0xc2]  <var_decl 0x7f3c5e2542d0 bfs_nedge>)
        (nil)))
(insn 3941 3940 3942 288 (set (reg/f:DI 1845)
        (plus:DI (reg:DI 811 [ D.3805 ])
            (reg/f:DI 1846))) graph500.c:204 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1846)
        (nil)))
(insn 3942 3941 3943 288 (set (reg:DI 1848)
        (const_int -999 [0xfffffffffffffc19])) graph500.c:204 48 {*movdi_aarch64}
     (nil))
(insn 3943 3942 4365 288 (set (mem:DI (reg/f:DI 1845) [4 MEM[symbol: bfs_nedge, index: _1361, offset: 0B]+0 S8 A64])
        (reg:DI 1848)) graph500.c:204 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1848)
        (expr_list:REG_DEAD (reg/f:DI 1845)
            (nil))))
(insn 4365 3943 3946 288 (set (reg/f:DI 1849)
        (reg/f:DI 1616)) graph500.c:205 -1
     (nil))
(insn 3946 4365 3947 288 (set (reg:SI 1851 [ VERBOSE ])
        (mem/c:SI (reg/f:DI 1616) [3 VERBOSE+0 S4 A32])) graph500.c:205 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 1849)
        (nil)))
(insn 3947 3946 3948 288 (set (reg:CC 66 cc)
        (compare:CC (reg:SI 1851 [ VERBOSE ])
            (const_int 0 [0]))) graph500.c:205 390 {*cmpsi}
     (expr_list:REG_DEAD (reg:SI 1851 [ VERBOSE ])
        (nil)))
(jump_insn 3948 3947 3951 288 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3696)
            (pc))) graph500.c:205 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9984 (nil)))
 -> 3696)
;;  succ:       264 [99.8%] 
;;              289 [0.2%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 647 777 811 1710 1853 1854 1859 1860
;; live  out 	 647 777 811 1710 1860

;; basic block 289, loop depth 0, count 0, freq 0
;;  prev block 288, next block 290, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       288 [0.2%]  (FALLTHRU,LOOP_EXIT)
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u3980(29){ }u3981(31){ }u3982(64){ }u3983(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 752 1853
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 712 1856
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 752 1853
;; live  gen 	 712 1856
;; live  kill	
(note 3951 3948 264 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 264 3951 4204 289 (set (reg:DI 712 [ D.3798 ])
        (const_int -999 [0xfffffffffffffc19])) graph500.c:205 48 {*movdi_aarch64}
     (nil))
(insn 4204 264 3952 289 (set (reg/f:DI 1856)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) -1
     (nil))
;;  succ:       265 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 712 752 1853 1856

;; basic block 290, loop depth 2, count 0, freq 97, maybe hot
;;  prev block 289, next block 291, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       278 [100.0%]  (FALLTHRU)
;;              117 [100.0%]  (FALLTHRU)
;;              116 [100.0%]  (FALLTHRU)
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u3985(29){ }u3986(31){ }u3987(64){ }u3988(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 829 831 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 442 443 747 829 831
;; lr  def 	 66 [cc] 443 747 1852
;; live  in  	 435 442 443 576 695 714 747 750 751 826 829 831 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  gen 	 66 [cc] 443 747 1852
;; live  kill	
(code_label 3952 4204 3953 290 89 "" [0 uses])
(note 3953 3952 3954 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(debug_insn 3954 3953 3955 290 (var_location:SI tgt_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3955 3954 3956 290 (var_location:SI src_offset (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3956 3955 3957 290 (var_location:DI D#31 (ashiftrt:DI (reg/v:DI 442 [ nverts ])
        (const_int 1 [0x1]))) generator/graph_generator.c:149 -1
     (nil))
(debug_insn 3957 3956 3958 290 (var_location:DI nverts (debug_expr:DI D#31)) generator/graph_generator.c:149 -1
     (nil))
(debug_insn 3958 3957 4072 290 (var_location:SI level (clobber (const_int 0 [0]))) generator/graph_generator.c:150 -1
     (nil))
(debug_insn 4072 3958 3959 290 (var_location:DI D#52 (plus:DI (reg/v:DI 747 [ base_src ])
        (reg:DI 831 [ D.3798 ]))) -1
     (nil))
(insn 3959 4072 3960 290 (set (reg/v:DI 747 [ base_src ])
        (plus:DI (reg/v:DI 747 [ base_src ])
            (reg:DI 831 [ D.3798 ]))) generator/graph_generator.c:151 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 831 [ D.3798 ])
        (nil)))
(debug_insn 3960 3959 3961 290 (var_location:DI base_src (debug_expr:DI D#52)) generator/graph_generator.c:151 -1
     (nil))
(insn 3961 3960 3962 290 (set (reg:DI 1852 [ D.3798 ])
        (mult:DI (reg:DI 829 [ D.3798 ])
            (reg/v:DI 442 [ nverts ]))) generator/graph_generator.c:152 363 {muldi3}
     (expr_list:REG_DEAD (reg:DI 829 [ D.3798 ])
        (nil)))
(insn 3962 3961 3964 290 (set (reg/v:DI 443 [ base_tgt ])
        (plus:DI (reg/v:DI 443 [ base_tgt ])
            (reg:DI 1852 [ D.3798 ]))) generator/graph_generator.c:152 95 {*adddi3_aarch64}
     (expr_list:REG_DEAD (reg:DI 1852 [ D.3798 ])
        (nil)))
(debug_insn 3964 3962 3965 290 (var_location:DI base_tgt (reg/v:DI 443 [ base_tgt ])) -1
     (nil))
(debug_insn 3965 3964 3966 290 (var_location:DI base_src (debug_expr:DI D#52)) -1
     (nil))
(debug_insn 3966 3965 3967 290 (var_location:SI level (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 3967 3966 3969 290 (var_location:DI nverts (debug_expr:DI D#31)) -1
     (nil))
(insn 3969 3967 3970 290 (set (reg:CC 66 cc)
        (compare:CC (reg/v:DI 442 [ nverts ])
            (const_int 1 [0x1]))) generator/graph_generator.c:136 391 {*cmpdi}
     (nil))
(jump_insn 3970 3969 3979 290 (set (pc)
        (if_then_else (ne (reg:CC 66 cc)
                (const_int 0 [0]))
            (label_ref 3968)
            (pc))) generator/graph_generator.c:136 7 {condjump}
     (expr_list:REG_DEAD (reg:CC 66 cc)
        (int_list:REG_BR_PROB 9551 (nil)))
 -> 3968)
;;  succ:       96 [95.5%] 
;;              118 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 245 261 290 432 434 435 438 441 442 443 447 576 695 714 747 750 751 826 1303 1306 1313 1863 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900
;; live  out 	 435 442 443 576 695 714 747 750 751 826 1303 1306 1313 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900

;; basic block 291, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 290, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174 [100.0%]  (FALLTHRU)
;;              131 [100.0%]  (FALLTHRU)
;;              133 [100.0%]  (FALLTHRU)
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u4001(29){ }u4002(31){ }u4003(64){ }u4004(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 240
;; live  gen 	 0 [x0]
;; live  kill	
(note 3979 3970 3977 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 3977 3979 3978 291 (set (reg/i:SI 0 x0)
        (reg:SI 240 [ D.3797 ])) graph500.c:115 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 240 [ D.3797 ])
        (nil)))
(insn 3978 3977 0 291 (use (reg/i:SI 0 x0)) graph500.c:115 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

