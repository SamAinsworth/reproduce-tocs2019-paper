
;; Function dcmp (dcmp.lto_priv.13, funcdef_no=8, decl_uid=2793, cgraph_uid=0, symbol_order=94)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)


dcmp

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 16[x16] 17[x17] 30[x30] 31[sp] 66[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={3d} r29={1d,8u} r30={3d} r31={1d,10u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,8u} r65={1d,7u} r66={4d,3u} r73={3d,1u} r74={1d,3u} r75={1d,3u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r83={1d,1u} 
;;    total ref usage 190{133d,57u,0e} in 36{34 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122
;;  reg->defs[] map:	0[0,4] 1[5,8] 2[9,12] 3[13,15] 4[16,18] 5[19,21] 6[22,24] 7[25,27] 8[28,30] 9[31,32] 10[33,34] 11[35,36] 12[37,38] 13[39,40] 14[41,42] 15[43,44] 16[45,48] 17[49,52] 18[53,55] 29[56,56] 30[57,59] 31[60,60] 32[61,63] 33[64,66] 34[67,69] 35[70,72] 36[73,75] 37[76,78] 38[79,81] 39[82,84] 48[85,86] 49[87,88] 50[89,90] 51[91,92] 52[93,94] 53[95,96] 54[97,98] 55[99,100] 56[101,102] 57[103,104] 58[105,106] 59[107,108] 60[109,110] 61[111,112] 62[113,114] 63[115,116] 64[117,117] 65[118,118] 66[119,122] 73[123,125] 74[126,126] 75[127,127] 78[128,128] 79[129,129] 80[130,130] 81[131,131] 83[132,132] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d15(3){ }d18(4){ }d21(5){ }d24(6){ }d27(7){ }d30(8){ }d55(18){ }d56(29){ }d59(30){ }d60(31){ }d63(32){ }d66(33){ }d69(34){ }d72(35){ }d75(36){ }d78(37){ }d81(38){ }d84(39){ }d117(64){ }d118(65){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  in  	
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(23) 0[4],1[8],2[12],3[15],4[18],5[21],6[24],7[27],8[30],18[55],29[56],30[59],31[60],32[63],33[66],34[69],35[72],36[75],37[78],38[81],39[84],64[117],65[118]
;; rd  kill	(65) 0[0,1,2,3,4],1[5,6,7,8],2[9,10,11,12],3[13,14,15],4[16,17,18],5[19,20,21],6[22,23,24],7[25,26,27],8[28,29,30],18[53,54,55],29[56],30[57,58,59],31[60],32[61,62,63],33[64,65,66],34[67,68,69],35[70,71,72],36[73,74,75],37[76,77,78],38[79,80,81],39[82,83,84],64[117],65[118]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(6) 0[4],1[8],29[56],31[60],64[117],65[118]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(29){ d56(bb 0 insn -1) }u1(31){ d60(bb 0 insn -1) }u2(64){ d117(bb 0 insn -1) }u3(65){ d118(bb 0 insn -1) }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 74 75 78 79
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 66 [cc] 74 75 78 79
;; live  kill	
;; rd  in  	(6) 0[4],1[8],29[56],31[60],64[117],65[118]
;; rd  gen 	(5) 66[122],74[126],75[127],78[128],79[129]
;; rd  kill	(8) 66[119,120,121,122],74[126],75[127],78[128],79[129]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; rd  out 	(7) 29[56],31[60],64[117],65[118],66[122],74[126],75[127]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(29){ d56(bb 0 insn -1) }u16(31){ d60(bb 0 insn -1) }u17(64){ d117(bb 0 insn -1) }u18(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc]
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  gen 	
;; live  kill	
;; rd  in  	(7) 29[56],31[60],64[117],65[118],66[122],74[126],75[127]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; rd  out 	(6) 29[56],31[60],64[117],65[118],74[126],75[127]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 3 )->[4]->( 8 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(29){ d56(bb 0 insn -1) }u21(31){ d60(bb 0 insn -1) }u22(64){ d117(bb 0 insn -1) }u23(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  def 	 66 [cc] 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  gen 	 66 [cc] 73
;; live  kill	
;; rd  in  	(6) 29[56],31[60],64[117],65[118],74[126],75[127]
;; rd  gen 	(2) 66[121],73[123]
;; rd  kill	(7) 66[119,120,121,122],73[123,124,125]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; rd  out 	(5) 29[56],31[60],64[117],65[118],73[123]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(29){ d56(bb 0 insn -1) }u28(31){ d60(bb 0 insn -1) }u29(64){ d117(bb 0 insn -1) }u30(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 80 81 83
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 80 81 83
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
;; rd  in  	(5) 29[56],31[60],64[117],65[118],73[123]
;; rd  gen 	(3) 80[130],81[131],83[132]
;; rd  kill	(6) 30[57,58,59],80[130],81[131],83[132]
;;  UD chains for artificial uses at top
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(3) 31[60],64[117],65[118]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 2 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(29){ d56(bb 0 insn -1) }u40(31){ d60(bb 0 insn -1) }u41(64){ d117(bb 0 insn -1) }u42(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
;; rd  in  	(7) 29[56],31[60],64[117],65[118],66[122],74[126],75[127]
;; rd  gen 	(1) 73[125]
;; rd  kill	(3) 73[123,124,125]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; rd  out 	(5) 29[56],31[60],64[117],65[118],73[125]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 3 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(29){ d56(bb 0 insn -1) }u44(31){ d60(bb 0 insn -1) }u45(64){ d117(bb 0 insn -1) }u46(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
;; rd  in  	(6) 29[56],31[60],64[117],65[118],74[126],75[127]
;; rd  gen 	(1) 73[124]
;; rd  kill	(3) 73[123,124,125]
;;  UD chains for artificial uses at top
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; rd  out 	(5) 29[56],31[60],64[117],65[118],73[124]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 4 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(29){ d56(bb 0 insn -1) }u48(31){ d60(bb 0 insn -1) }u49(64){ d117(bb 0 insn -1) }u50(65){ d118(bb 0 insn -1) }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  gen 	 0 [x0]
;; live  kill	
;; rd  in  	(7) 29[56],31[60],64[117],65[118],73[123,124,125]
;; rd  gen 	(1) 0[1]
;; rd  kill	(5) 0[0,1,2,3,4]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; rd  out 	(5) 0[1],29[56],31[60],64[117],65[118]
;;  UD chains for artificial uses at bottom
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }
;;   reg 65 { d118(bb 0 insn -1) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ d1(bb 8 insn 49) }u54(29){ d56(bb 0 insn -1) }u55(31){ d60(bb 0 insn -1) }u56(64){ d117(bb 0 insn -1) }}
;; lr  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; lr  use 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; lr  def 	
;; live  in  	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[1],29[56],31[60],64[117],65[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d1(bb 8 insn 49) }
;;   reg 29 { d56(bb 0 insn -1) }
;;   reg 31 { d60(bb 0 insn -1) }
;;   reg 64 { d117(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 18 to worklist
  Adding insn 21 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 50 to worklist
Finished finding needed instructions:
  Adding insn 49 to worklist
Processing use of (reg 73 [ D.3115 ]) in insn 49:
  Adding insn 5 to worklist
  Adding insn 6 to worklist
  Adding insn 7 to worklist
Processing use of (reg 0 x0) in insn 50:
Processing use of (reg 31 sp) in insn 38:
Processing use of (reg 0 x0) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 1 x1) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 2 x2) in insn 38:
  Adding insn 35 to worklist
Processing use of (reg 80) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 81) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 83) in insn 37:
  Adding insn 33 to worklist
Processing use of (reg 31 sp) in insn 41:
Processing use of (reg 66 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 74 [ da ]) in insn 20:
  Adding insn 10 to worklist
Processing use of (reg 75 [ db ]) in insn 20:
  Adding insn 12 to worklist
Processing use of (reg 79 [ b ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 1 x1) in insn 3:
Processing use of (reg 78 [ a ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 0 x0) in insn 2:
Processing use of (reg 66 cc) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 74 [ da ]) in insn 14:
Processing use of (reg 75 [ db ]) in insn 14:
Processing use of (reg 66 cc) in insn 15:
starting the processing of deferred insns
ending the processing of deferred insns


dcmp

Dataflow summary:
;;  invalidated by call 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc]
;;  hardware regs used 	 31 [sp] 64 [sfp] 65 [ap]
;;  regular block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  eh block artificial uses 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;;  entry block defs 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 18 [x18] 29 [x29] 30 [x30] 31 [sp] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 64 [sfp] 65 [ap]
;;  exit block uses 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp]
;;  regs ever live 	 0[x0] 1[x1] 2[x2] 16[x16] 17[x17] 30[x30] 31[sp] 66[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,1u} r3={3d} r4={3d} r5={3d} r6={3d} r7={3d} r8={3d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={4d} r17={4d} r18={3d} r29={1d,8u} r30={3d} r31={1d,10u} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={1d,8u} r65={1d,7u} r66={4d,3u} r73={3d,1u} r74={1d,3u} r75={1d,3u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r83={1d,1u} 
;;    total ref usage 190{133d,57u,0e} in 36{34 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(29){ }u1(31){ }u2(64){ }u3(65){ }}
;; lr  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 66 [cc] 74 75 78 79
;; live  in  	 0 [x0] 1 [x1] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 66 [cc] 74 75 78 79
;; live  kill	
(note 8 0 62 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(debug_insn 62 8 2 2 (var_location:DI D#6 (reg:DI 0 x0 [ a ])) -1
     (nil))
(insn 2 62 63 2 (set (reg/v/f:DI 78 [ a ])
        (reg:DI 0 x0 [ a ])) graph500.c:238 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 0 x0 [ a ])
        (nil)))
(debug_insn 63 2 3 2 (var_location:DI D#7 (reg:DI 1 x1 [ b ])) -1
     (nil))
(insn 3 63 4 2 (set (reg/v/f:DI 79 [ b ])
        (reg:DI 1 x1 [ b ])) graph500.c:238 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg:DI 1 x1 [ b ])
        (nil)))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg/v:DF 74 [ da ])
        (mem:DF (reg/v/f:DI 78 [ a ]) [1 MEM[(const double *)a_3(D)]+0 S8 A64])) graph500.c:239 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 78 [ a ])
        (nil)))
(debug_insn 11 10 12 2 (var_location:DF da (reg/v:DF 74 [ da ])) graph500.c:239 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:DF 75 [ db ])
        (mem:DF (reg/v/f:DI 79 [ b ]) [1 MEM[(const double *)b_5(D)]+0 S8 A64])) graph500.c:240 54 {*movdf_aarch64}
     (expr_list:REG_DEAD (reg/v/f:DI 79 [ b ])
        (nil)))
(debug_insn 13 12 14 2 (var_location:DF db (reg/v:DF 75 [ db ])) graph500.c:240 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCFPE 66 cc)
        (compare:CCFPE (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:241 395 {*cmpedf}
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (gt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) graph500.c:241 7 {condjump}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
;;  succ:       6 [39.0%] 
;;              3 [61.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(29){ }u16(31){ }u17(64){ }u18(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc]
;; lr  def 	
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 66 [cc] 74 75
;; live  gen 	
;; live  kill	
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 16 19 3 (set (pc)
        (if_then_else (lt (reg:CCFPE 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) graph500.c:242 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFPE 66 cc)
        (int_list:REG_BR_PROB 400 (nil)))
 -> 57)
;;  succ:       7 [4.0%] 
;;              4 [96.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75

;; basic block 4, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [96.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(29){ }u21(31){ }u22(64){ }u23(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; lr  def 	 66 [cc] 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 74 75
;; live  gen 	 66 [cc] 73
;; live  kill	
(note 19 18 7 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 7 19 20 4 (set (reg:SI 73 [ D.3115 ])
        (const_int 0 [0])) graph500.c:243 47 {*movsi_aarch64}
     (nil))
(insn 20 7 21 4 (set (reg:CCFP 66 cc)
        (compare:CCFP (reg/v:DF 74 [ da ])
            (reg/v:DF 75 [ db ]))) graph500.c:243 393 {*cmpdf}
     (expr_list:REG_DEAD (reg/v:DF 75 [ db ])
        (expr_list:REG_DEAD (reg/v:DF 74 [ da ])
            (nil))))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCFP 66 cc)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) graph500.c:243 7 {condjump}
     (expr_list:REG_DEAD (reg:CCFP 66 cc)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 43)
;;  succ:       8 [100.0%] 
;;              5 [0.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 5, loop depth 0, count 0, freq 2
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(29){ }u28(31){ }u29(64){ }u30(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 0 [x0] 1 [x1] 2 [x2] 3 [x3] 4 [x4] 5 [x5] 6 [x6] 7 [x7] 8 [x8] 9 [x9] 10 [x10] 11 [x11] 12 [x12] 13 [x13] 14 [x14] 15 [x15] 16 [x16] 17 [x17] 18 [x18] 30 [x30] 32 [v0] 33 [v1] 34 [v2] 35 [v3] 36 [v4] 37 [v5] 38 [v6] 39 [v7] 48 [v16] 49 [v17] 50 [v18] 51 [v19] 52 [v20] 53 [v21] 54 [v22] 55 [v23] 56 [v24] 57 [v25] 58 [v26] 59 [v27] 60 [v28] 61 [v29] 62 [v30] 63 [v31] 66 [cc] 80 81 83
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 0 [x0] 1 [x1] 2 [x2] 80 81 83
;; live  kill	 16 [x16] 17 [x17] 30 [x30]
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 23 22 24 5 (var_location:DI D#2 (debug_expr:DI D#6)) -1
     (nil))
(debug_insn 24 23 25 5 (var_location:DI D#3 (debug_expr:DI D#7)) -1
     (nil))
(debug_insn 25 24 26 5 (var_location:DI D#4 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 26 25 27 5 (var_location:DI b (debug_expr:DI D#4)) -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI D#5 (clobber (const_int 0 [0])) [uninit]) -1
     (nil))
(debug_insn 28 27 29 5 (var_location:DI a (debug_expr:DI D#5)) -1
     (nil))
(debug_insn 29 28 30 5 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])) graph500.c:244 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)) graph500.c:244 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 81)
        (high:DI (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 80)
        (lo_sum:DI (reg/f:DI 81)
            (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>))) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 836 {add_losym_di}
     (expr_list:REG_DEAD (reg/f:DI 81)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
            (nil))))
(insn 33 32 35 5 (set (reg/f:DI 83)
        (high:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>))) graph500.c:244 48 {*movdi_aarch64}
     (nil))
(insn 35 33 36 5 (set (reg:DI 2 x2)
        (reg/f:DI 80)) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 80)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x82]  <var_decl 0x7f3c5d9e0e10 *.LC0>)
            (nil))))
(insn 36 35 37 5 (set (reg:SI 1 x1)
        (const_int 1 [0x1])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 47 {*movsi_aarch64}
     (nil))
(insn 37 36 38 5 (set (reg:DI 0 x0)
        (mem/f/c:DI (lo_sum:DI (reg/f:DI 83)
                (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>)) [2 stderr+0 S8 A64])) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 48 {*movdi_aarch64}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0xc0]  <var_decl 0x7f3c5e254360 stderr>) [2 stderr+0 S8 A64])
            (nil))))
(call_insn 38 37 39 5 (parallel [
            (set (reg:SI 0 x0)
                (call (mem:DI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>) [0 __fprintf_chk S8 A8])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) /usr/aarch64-linux-gnu/include/bits/stdio2.h:97 42 {*call_value_symbol}
     (expr_list:REG_DEAD (reg:DI 2 x2)
        (expr_list:REG_DEAD (reg:SI 1 x1)
            (expr_list:REG_UNUSED (reg:SI 0 x0)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f3c5e23cd00 __fprintf_chk>)
                    (nil)))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (expr_list:DI (use (reg:DI 0 x0))
                (expr_list:SI (use (reg:SI 1 x1))
                    (expr_list:DI (use (reg:DI 2 x2))
                        (nil)))))))
(debug_insn 39 38 40 5 (var_location:DI __stream (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(debug_insn 40 39 41 5 (var_location:DI __fmt (clobber (const_int 0 [0]))) graph500.c:244 -1
     (nil))
(call_insn 41 40 53 5 (parallel [
            (call (mem:DI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>) [0 __builtin_abort S8 A8])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:DI 30 x30))
        ]) graph500.c:245 40 {*call_symbol}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x7f3c5e23ce00 abort>)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list (clobber (reg:DI 17 x17))
        (expr_list (clobber (reg:DI 16 x16))
            (nil))))
;;  succ:      
;; lr  out 	 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 31 [sp] 64 [sfp] 65 [ap]

;; basic block 6, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(29){ }u40(31){ }u41(64){ }u42(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 53 41 52 6 3 "" [1 uses])
(note 52 53 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 52 57 6 (set (reg:SI 73 [ D.3115 ])
        (const_int 1 [0x1])) graph500.c:241 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 7, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [4.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(29){ }u44(31){ }u45(64){ }u46(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; lr  def 	 73
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  gen 	 73
;; live  kill	
(code_label 57 5 56 7 4 "" [1 uses])
(note 56 57 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 56 43 7 (set (reg:SI 73 [ D.3115 ])
        (const_int -1 [0xffffffffffffffff])) graph500.c:242 47 {*movsi_aarch64}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  out 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73

;; basic block 8, loop depth 0, count 0, freq 9998, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(29){ }u48(31){ }u49(64){ }u50(65){ }}
;; lr  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  use 	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; lr  def 	 0 [x0]
;; live  in  	 29 [x29] 31 [sp] 64 [sfp] 65 [ap] 73
;; live  gen 	 0 [x0]
;; live  kill	
(code_label 43 6 44 8 2 "" [1 uses])
(note 44 43 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 44 50 8 (set (reg/i:SI 0 x0)
        (reg:SI 73 [ D.3115 ])) graph500.c:247 47 {*movsi_aarch64}
     (expr_list:REG_DEAD (reg:SI 73 [ D.3115 ])
        (nil)))
(insn 50 49 0 8 (use (reg/i:SI 0 x0)) graph500.c:247 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]
;; live  out 	 0 [x0] 29 [x29] 31 [sp] 64 [sfp] 65 [ap]

